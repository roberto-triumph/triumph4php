!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Roberto Perpuly	/roberto@triumph4php.com/
!_TAG_PROGRAM_NAME	PhD - PHP DocBook	//
!_TAG_PROGRAM_URL	http://doc.php.net/phd/	/official site/
!_TAG_PROGRAM_VERSION	1.1.3 forked see https://github.com/robertop/phd	//
$GLOBALS		0;"	v
$_SERVER		0;"	v
$_GET		0;"	v
$_POST		0;"	v
$_FILES		0;"	v
$_COOKIE		0;"	v
$_SESSION		0;"	v
$_REQUEST		0;"	v
$_ENV		0;"	v
Exception		0;"	c
message		0;"	p	class:Exception	a:protected	S:protected Exception::message
code		0;"	p	class:Exception	a:protected	S:protected Exception::code
file		0;"	p	class:Exception	a:protected	S:protected Exception::file
line		0;"	p	class:Exception	a:protected	S:protected Exception::line
__construct		0;"	f	S: function __construct($message = "", $code, $previous)	class:Exception
getMessage		0;"	f	S:string function getMessage()	class:Exception	a:final
getPrevious		0;"	f	S:Exception function getPrevious()	class:Exception	a:final
getCode		0;"	f	S:mixed function getCode()	class:Exception	a:final
getFile		0;"	f	S:string function getFile()	class:Exception	a:final
getLine		0;"	f	S:int function getLine()	class:Exception	a:final
getTrace		0;"	f	S:array function getTrace()	class:Exception	a:final
getTraceAsString		0;"	f	S:string function getTraceAsString()	class:Exception	a:final
__toString		0;"	f	S:string function __toString()	class:Exception
__clone		0;"	f	S:void function __clone()	class:Exception	a:final,private
ErrorException		0;"	c	i:Exception
severity		0;"	p	class:ErrorException	a:protected	S:protected ErrorException::severity
message		0;"	p	class:ErrorException	a:protected	S:protected ErrorException::message
code		0;"	p	class:ErrorException	a:protected	S:protected ErrorException::code
file		0;"	p	class:ErrorException	a:protected	S:protected ErrorException::file
line		0;"	p	class:ErrorException	a:protected	S:protected ErrorException::line
__construct		0;"	f	S: function __construct($message = "", $code, $severity = 1, $filename = __FILE__, $lineno = __LINE__, $previous)	class:ErrorException
getSeverity		0;"	f	S:int function getSeverity()	class:ErrorException	a:final
Traversable		0;"	c
Iterator		0;"	c	i:Traversable
IteratorAggregate		0;"	c	i:Traversable
ArrayAccess		0;"	c
Serializable		0;"	c
Closure		0;"	c
Generator		0;"	c
APC_BIN_VERIFY_CRC32		0;"	d
APC_BIN_VERIFY_MD5		0;"	d
APC_ITER_ALL		0;"	d
APC_ITER_ATIME		0;"	d
APC_ITER_CTIME		0;"	d
APC_ITER_DEVICE		0;"	d
APC_ITER_DTIME		0;"	d
APC_ITER_FILENAME		0;"	d
APC_ITER_INODE		0;"	d
APC_ITER_KEY		0;"	d
APC_ITER_MD5		0;"	d
APC_ITER_MEM_SIZE		0;"	d
APC_ITER_MTIME		0;"	d
APC_ITER_NONE		0;"	d
APC_ITER_NUM_HITS		0;"	d
APC_ITER_REFCOUNT		0;"	d
APC_ITER_TTL		0;"	d
APC_ITER_TYPE		0;"	d
APC_ITER_VALUE		0;"	d
APC_LIST_ACTIVE		0;"	d
APC_LIST_DELETED		0;"	d
apc_add		0;"	f	S:array function apc_add($key, $var, $ttl, $values, $unused = NULL)
apc_bin_dump		0;"	f	S:string function apc_bin_dump($files = NULL, $user_vars = NULL)
apc_bin_dumpfile		0;"	f	S:int function apc_bin_dumpfile($files, $user_vars, $filename, $flags, $context = NULL)
apc_bin_load		0;"	f	S:bool function apc_bin_load($data, $flags)
apc_bin_loadfile		0;"	f	S:bool function apc_bin_loadfile($filename, $context = NULL, $flags)
apc_cache_info		0;"	f	S:array function apc_cache_info($cache_type = "", $limited = false)
apc_cas		0;"	f	S:bool function apc_cas($key, $old, $new)
apc_clear_cache		0;"	f	S:bool function apc_clear_cache($cache_type = "")
apc_compile_file		0;"	f	S:mixed function apc_compile_file($filename, $atomic = true)
apc_dec		0;"	f	S:int function apc_dec($key, $step = 1, &$success)
apc_define_constants		0;"	f	S:bool function apc_define_constants($key, $constants, $case_sensitive = true)
apc_delete_file		0;"	f	S:mixed function apc_delete_file($keys)
apc_delete		0;"	f	S:mixed function apc_delete($key)
apc_exists		0;"	f	S:mixed function apc_exists($keys)
apc_fetch		0;"	f	S:mixed function apc_fetch($key, &$success)
apc_inc		0;"	f	S:int function apc_inc($key, $step = 1, &$success)
apc_load_constants		0;"	f	S:bool function apc_load_constants($key, $case_sensitive = true)
apc_sma_info		0;"	f	S:array function apc_sma_info($limited = false)
apc_store		0;"	f	S:array function apc_store($key, $var, $ttl, $values, $unused = NULL)
APCIterator		0;"	c
__construct		0;"	f	S:object function __construct($cache, $search = null, $format = APC_ITER_ALL, $chunk_size = 100, $list = APC_LIST_ACTIVE)	class:APCIterator
current		0;"	f	S:mixed function current()	class:APCIterator
getTotalCount		0;"	f	S:int function getTotalCount()	class:APCIterator
getTotalHits		0;"	f	S:int function getTotalHits()	class:APCIterator
getTotalSize		0;"	f	S:int function getTotalSize()	class:APCIterator
key		0;"	f	S:string function key()	class:APCIterator
next		0;"	f	S:void function next()	class:APCIterator
rewind		0;"	f	S:void function rewind()	class:APCIterator
valid		0;"	f	S:void function valid()	class:APCIterator
apd_breakpoint		0;"	f	S:bool function apd_breakpoint($debug_level)
apd_callstack		0;"	f	S:array function apd_callstack()
apd_clunk		0;"	f	S:void function apd_clunk($warning, $delimiter = "<BR />")
apd_continue		0;"	f	S:bool function apd_continue($debug_level)
apd_croak		0;"	f	S:void function apd_croak($warning, $delimiter = "<BR />")
apd_dump_function_table		0;"	f	S:void function apd_dump_function_table()
apd_dump_persistent_resources		0;"	f	S:array function apd_dump_persistent_resources()
apd_dump_regular_resources		0;"	f	S:array function apd_dump_regular_resources()
apd_echo		0;"	f	S:bool function apd_echo($output)
apd_get_active_symbols		0;"	f	S:array function apd_get_active_symbols()
apd_set_pprof_trace		0;"	f	S:string function apd_set_pprof_trace($dump_directory = ini_get("apd.dumpdir"), $fragment = "pprof")
apd_set_session_trace_socket		0;"	f	S:bool function apd_set_session_trace_socket($tcp_server, $socket_type, $port, $debug_level)
apd_set_session_trace		0;"	f	S:void function apd_set_session_trace($debug_level, $dump_directory = ini_get("apd.dumpdir"))
apd_set_session		0;"	f	S:void function apd_set_session($debug_level)
override_function		0;"	f	S:bool function override_function($function_name, $function_args, $function_code)
rename_function		0;"	f	S:bool function rename_function($original_name, $new_name)
bcompiler_load_exe		0;"	f	S:bool function bcompiler_load_exe($filename)
bcompiler_load		0;"	f	S:bool function bcompiler_load($filename)
bcompiler_parse_class		0;"	f	S:bool function bcompiler_parse_class($class, $callback)
bcompiler_read		0;"	f	S:bool function bcompiler_read($filehandle)
bcompiler_write_class		0;"	f	S:bool function bcompiler_write_class($filehandle, $className, $extends)
bcompiler_write_constant		0;"	f	S:bool function bcompiler_write_constant($filehandle, $constantName)
bcompiler_write_exe_footer		0;"	f	S:bool function bcompiler_write_exe_footer($filehandle, $startpos)
bcompiler_write_file		0;"	f	S:bool function bcompiler_write_file($filehandle, $filename)
bcompiler_write_footer		0;"	f	S:bool function bcompiler_write_footer($filehandle)
bcompiler_write_function		0;"	f	S:bool function bcompiler_write_function($filehandle, $functionName)
bcompiler_write_functions_from_file		0;"	f	S:bool function bcompiler_write_functions_from_file($filehandle, $fileName)
bcompiler_write_header		0;"	f	S:bool function bcompiler_write_header($filehandle, $write_ver)
bcompiler_write_included_filename		0;"	f	S:bool function bcompiler_write_included_filename($filehandle, $filename)
BLENC_EXT_VERSION		0;"	d
blenc_encrypt		0;"	f	S:string function blenc_encrypt($plaintext, $encodedfile, $encryption_key)
debug_backtrace		0;"	f	S:array function debug_backtrace($options = DEBUG_BACKTRACE_PROVIDE_OBJECT, $limit)
debug_print_backtrace		0;"	f	S:void function debug_print_backtrace($options, $limit)
error_get_last		0;"	f	S:array function error_get_last()
error_log		0;"	f	S:bool function error_log($message, $message_type, $destination, $extra_headers)
error_reporting		0;"	f	S:int function error_reporting($level)
restore_error_handler		0;"	f	S:bool function restore_error_handler()
restore_exception_handler		0;"	f	S:bool function restore_exception_handler()
set_error_handler		0;"	f	S:mixed function set_error_handler($error_handler, $error_types = E_ALL | E_STRICT)
set_exception_handler		0;"	f	S:callable function set_exception_handler($exception_handler)
trigger_error		0;"	f	S:bool function trigger_error($error_msg, $error_type = E_USER_NOTICE)
user_error		0;"	f	S: function user_error()
inclued_get_data		0;"	f	S:array function inclued_get_data()
opcache_compile_file		0;"	f	S:boolean function opcache_compile_file($file)
opcache_get_configuration		0;"	f	S:array function opcache_get_configuration()
opcache_get_status		0;"	f	S:array function opcache_get_status($get_scripts)
opcache_invalidate		0;"	f	S:boolean function opcache_invalidate($script, $force)
opcache_reset		0;"	f	S:boolean function opcache_reset()
PHP_OUTPUT_HANDLER_START		0;"	d
PHP_OUTPUT_HANDLER_WRITE		0;"	d
PHP_OUTPUT_HANDLER_FLUSH		0;"	d
PHP_OUTPUT_HANDLER_CLEAN		0;"	d
PHP_OUTPUT_HANDLER_FINAL		0;"	d
PHP_OUTPUT_HANDLER_CONT		0;"	d
PHP_OUTPUT_HANDLER_END		0;"	d
PHP_OUTPUT_HANDLER_CLEANABLE		0;"	d
PHP_OUTPUT_HANDLER_FLUSHABLE		0;"	d
PHP_OUTPUT_HANDLER_REMOVABLE		0;"	d
PHP_OUTPUT_HANDLER_STDFLAGS		0;"	d
flush		0;"	f	S:void function flush()
ob_clean		0;"	f	S:void function ob_clean()
ob_end_clean		0;"	f	S:bool function ob_end_clean()
ob_end_flush		0;"	f	S:bool function ob_end_flush()
ob_flush		0;"	f	S:void function ob_flush()
ob_get_clean		0;"	f	S:string function ob_get_clean()
ob_get_contents		0;"	f	S:string function ob_get_contents()
ob_get_flush		0;"	f	S:string function ob_get_flush()
ob_get_length		0;"	f	S:int function ob_get_length()
ob_get_level		0;"	f	S:int function ob_get_level()
ob_get_status		0;"	f	S:array function ob_get_status($full_status = FALSE)
ob_gzhandler		0;"	f	S:string function ob_gzhandler($buffer, $mode)
ob_implicit_flush		0;"	f	S:void function ob_implicit_flush($flag = true)
ob_list_handlers		0;"	f	S:array function ob_list_handlers()
ob_start		0;"	f	S:bool function ob_start($output_callback, $chunk_size, $flags)
output_add_rewrite_var		0;"	f	S:bool function output_add_rewrite_var($name, $value)
output_reset_rewrite_vars		0;"	f	S:bool function output_reset_rewrite_vars()
assert_options		0;"	f	S:mixed function assert_options($what, $value)
assert		0;"	f	S:bool function assert($assertion, $description)
cli_get_process_title		0;"	f	S:string function cli_get_process_title()
cli_set_process_title		0;"	f	S:bool function cli_set_process_title($title)
dl		0;"	f	S:bool function dl($library)
extension_loaded		0;"	f	S:bool function extension_loaded($name)
gc_collect_cycles		0;"	f	S:int function gc_collect_cycles()
gc_disable		0;"	f	S:void function gc_disable()
gc_enable		0;"	f	S:void function gc_enable()
gc_enabled		0;"	f	S:bool function gc_enabled()
get_cfg_var		0;"	f	S:string function get_cfg_var($option)
get_current_user		0;"	f	S:string function get_current_user()
get_defined_constants		0;"	f	S:array function get_defined_constants($categorize = false)
get_extension_funcs		0;"	f	S:array function get_extension_funcs($module_name)
get_include_path		0;"	f	S:string function get_include_path()
get_included_files		0;"	f	S:array function get_included_files()
get_loaded_extensions		0;"	f	S:array function get_loaded_extensions($zend_extensions = false)
get_magic_quotes_gpc		0;"	f	S:bool function get_magic_quotes_gpc()
get_magic_quotes_runtime		0;"	f	S:bool function get_magic_quotes_runtime()
get_required_files		0;"	f	S: function get_required_files()
getenv		0;"	f	S:string function getenv($varname)
getlastmod		0;"	f	S:int function getlastmod()
getmygid		0;"	f	S:int function getmygid()
getmyinode		0;"	f	S:int function getmyinode()
getmypid		0;"	f	S:int function getmypid()
getmyuid		0;"	f	S:int function getmyuid()
getopt		0;"	f	S:array function getopt($options, $longopts)
getrusage		0;"	f	S:array function getrusage($who)
ini_alter		0;"	f	S: function ini_alter()
ini_get_all		0;"	f	S:array function ini_get_all($extension, $details = true)
ini_get		0;"	f	S:string function ini_get($varname)
ini_restore		0;"	f	S:void function ini_restore($varname)
ini_set		0;"	f	S:string function ini_set($varname, $newvalue)
magic_quotes_runtime		0;"	f	S: function magic_quotes_runtime()
main		0;"	f	S: function main()
memory_get_peak_usage		0;"	f	S:int function memory_get_peak_usage($real_usage = false)
memory_get_usage		0;"	f	S:int function memory_get_usage($real_usage = false)
php_ini_loaded_file		0;"	f	S:string function php_ini_loaded_file()
php_ini_scanned_files		0;"	f	S:string function php_ini_scanned_files()
php_logo_guid		0;"	f	S:string function php_logo_guid()
php_sapi_name		0;"	f	S:string function php_sapi_name()
php_uname		0;"	f	S:string function php_uname($mode = "a")
phpcredits		0;"	f	S:bool function phpcredits($flag = CREDITS_ALL)
phpinfo		0;"	f	S:bool function phpinfo($what = INFO_ALL)
phpversion		0;"	f	S:string function phpversion($extension)
putenv		0;"	f	S:bool function putenv($setting)
restore_include_path		0;"	f	S:void function restore_include_path()
set_include_path		0;"	f	S:string function set_include_path($new_include_path)
set_magic_quotes_runtime		0;"	f	S:bool function set_magic_quotes_runtime($new_setting)
set_time_limit		0;"	f	S:bool function set_time_limit($seconds)
sys_get_temp_dir		0;"	f	S:string function sys_get_temp_dir()
version_compare		0;"	f	S:mixed function version_compare($version1, $version2, $operator)
zend_logo_guid		0;"	f	S:string function zend_logo_guid()
zend_thread_id		0;"	f	S:int function zend_thread_id()
zend_version		0;"	f	S:string function zend_version()
RUNKIT_IMPORT_FUNCTIONS		0;"	d
RUNKIT_IMPORT_CLASS_METHODS		0;"	d
RUNKIT_IMPORT_CLASS_CONSTS		0;"	d
RUNKIT_IMPORT_CLASS_PROPS		0;"	d
RUNKIT_IMPORT_CLASSES		0;"	d
RUNKIT_IMPORT_OVERRIDE		0;"	d
RUNKIT_ACC_PUBLIC		0;"	d
RUNKIT_ACC_PROTECTED		0;"	d
RUNKIT_ACC_PRIVATE		0;"	d
CLASSKIT_ACC_PUBLIC		0;"	d
CLASSKIT_ACC_PROTECTED		0;"	d
CLASSKIT_ACC_PRIVATE		0;"	d
CLASSKIT_AGGREGATE_OVERRIDE		0;"	d
RUNKIT_VERSION		0;"	d
CLASSKIT_VERSION		0;"	d
Runkit_Sandbox		0;"	f	S: function Runkit_Sandbox()
Runkit_Sandbox_Parent		0;"	f	S:void function Runkit_Sandbox_Parent()
runkit_class_adopt		0;"	f	S:bool function runkit_class_adopt($classname, $parentname)
runkit_class_emancipate		0;"	f	S:bool function runkit_class_emancipate($classname)
runkit_constant_add		0;"	f	S:bool function runkit_constant_add($constname, $value)
runkit_constant_redefine		0;"	f	S:bool function runkit_constant_redefine($constname, $newvalue)
runkit_constant_remove		0;"	f	S:bool function runkit_constant_remove($constname)
runkit_function_add		0;"	f	S:bool function runkit_function_add($funcname, $arglist, $code)
runkit_function_copy		0;"	f	S:bool function runkit_function_copy($funcname, $targetname)
runkit_function_redefine		0;"	f	S:bool function runkit_function_redefine($funcname, $arglist, $code)
runkit_function_remove		0;"	f	S:bool function runkit_function_remove($funcname)
runkit_function_rename		0;"	f	S:bool function runkit_function_rename($funcname, $newname)
runkit_import		0;"	f	S:bool function runkit_import($filename, $flags = RUNKIT_IMPORT_CLASS_METHODS)
runkit_lint_file		0;"	f	S:bool function runkit_lint_file($filename)
runkit_lint		0;"	f	S:bool function runkit_lint($code)
runkit_method_add		0;"	f	S:bool function runkit_method_add($classname, $methodname, $args, $code, $flags = RUNKIT_ACC_PUBLIC)
runkit_method_copy		0;"	f	S:bool function runkit_method_copy($dClass, $dMethod, $sClass, $sMethod)
runkit_method_redefine		0;"	f	S:bool function runkit_method_redefine($classname, $methodname, $args, $code, $flags = RUNKIT_ACC_PUBLIC)
runkit_method_remove		0;"	f	S:bool function runkit_method_remove($classname, $methodname)
runkit_method_rename		0;"	f	S:bool function runkit_method_rename($classname, $methodname, $newname)
runkit_return_value_used		0;"	f	S:bool function runkit_return_value_used()
runkit_sandbox_output_handler		0;"	f	S:mixed function runkit_sandbox_output_handler($sandbox, $callback)
runkit_superglobals		0;"	f	S:array function runkit_superglobals()
ZEND_EXIT		0;"	d
ZEND_NEW		0;"	d
ZEND_THROW		0;"	d
ZEND_FETCH_CLASS		0;"	d
ZEND_ADD_TRAIT		0;"	d
ZEND_ADD_INTERFACE		0;"	d
ZEND_INSTANCEOF		0;"	d
ZEND_USER_OPCODE_CONTINUE		0;"	d
ZEND_USER_OPCODE_ENTER		0;"	d
ZEND_USER_OPCODE_LEAVE		0;"	d
ZEND_USER_OPCODE_DISPATCH		0;"	d
ZEND_USER_OPCODE_DISPATCH_TO		0;"	d
ZEND_USER_OPCODE_RETURN		0;"	d
ZEND_ACC_PUBLIC		0;"	d
ZEND_ACC_PROTECTED		0;"	d
ZEND_ACC_PRIVATE		0;"	d
ZEND_ACC_STATIC		0;"	d
ZEND_ACC_FINAL		0;"	d
ZEND_ACC_ABSTRACT		0;"	d
ZEND_ACC_CLASS		0;"	d
ZEND_ACC_INTERFACE		0;"	d
ZEND_ACC_TRAIT		0;"	d
ZEND_ACC_FETCH		0;"	d
uopz_backup		0;"	f	S:void function uopz_backup($class, $function)
uopz_compose		0;"	f	S:void function uopz_compose($name, $classes, $methods, $properties, $flags)
uopz_copy		0;"	f	S:Closure function uopz_copy($class, $function)
uopz_delete		0;"	f	S:void function uopz_delete($class, $function)
uopz_extend		0;"	f	S:void function uopz_extend($class, $parent)
uopz_flags		0;"	f	S:int function uopz_flags($class, $function, $flags)
uopz_function		0;"	f	S:void function uopz_function($class, $function, $handler, $modifiers)
uopz_implement		0;"	f	S:void function uopz_implement($class, $interface)
uopz_overload		0;"	f	S:void function uopz_overload($opcode, $callable)
uopz_redefine		0;"	f	S:void function uopz_redefine($class, $constant, $value)
uopz_rename		0;"	f	S:void function uopz_rename($class, $function, $rename)
uopz_restore		0;"	f	S:void function uopz_restore($class, $function)
uopz_undefine		0;"	f	S:void function uopz_undefine($class, $constant)
WeakRef		0;"	c
acquire		0;"	f	S:bool function acquire()	class:Weakref
__construct		0;"	f	S: function __construct($object)	class:Weakref
get		0;"	f	S:object function get()	class:Weakref
release		0;"	f	S:bool function release()	class:Weakref
valid		0;"	f	S:bool function valid()	class:Weakref
WeakMap		0;"	c
__construct		0;"	f	S: function __construct()	class:WeakMap
count		0;"	f	S:int function count()	class:WeakMap
current		0;"	f	S:mixed function current()	class:WeakMap
key		0;"	f	S:object function key()	class:WeakMap
next		0;"	f	S:void function next()	class:WeakMap
offsetExists		0;"	f	S:bool function offsetExists($object)	class:WeakMap
offsetGet		0;"	f	S:mixed function offsetGet($object)	class:WeakMap
offsetSet		0;"	f	S:void function offsetSet($object, $value)	class:WeakMap
offsetUnset		0;"	f	S:void function offsetUnset($object)	class:WeakMap
rewind		0;"	f	S:void function rewind()	class:WeakMap
valid		0;"	f	S:bool function valid()	class:WeakMap
wincache_fcache_fileinfo		0;"	f	S:array function wincache_fcache_fileinfo($summaryonly = false)
wincache_fcache_meminfo		0;"	f	S:array function wincache_fcache_meminfo()
wincache_lock		0;"	f	S:bool function wincache_lock($key, $isglobal = false)
wincache_ocache_fileinfo		0;"	f	S:array function wincache_ocache_fileinfo($summaryonly = false)
wincache_ocache_meminfo		0;"	f	S:array function wincache_ocache_meminfo()
wincache_refresh_if_changed		0;"	f	S:bool function wincache_refresh_if_changed($files)
wincache_rplist_fileinfo		0;"	f	S:array function wincache_rplist_fileinfo($summaryonly = false)
wincache_rplist_meminfo		0;"	f	S:array function wincache_rplist_meminfo()
wincache_scache_info		0;"	f	S:array function wincache_scache_info($summaryonly = false)
wincache_scache_meminfo		0;"	f	S:array function wincache_scache_meminfo()
wincache_ucache_add		0;"	f	S:bool function wincache_ucache_add($key, $value, $ttl, $values, $unused)
wincache_ucache_cas		0;"	f	S:bool function wincache_ucache_cas($key, $old_value, $new_value)
wincache_ucache_clear		0;"	f	S:bool function wincache_ucache_clear()
wincache_ucache_dec		0;"	f	S:mixed function wincache_ucache_dec($key, $dec_by = 1, &$success)
wincache_ucache_delete		0;"	f	S:bool function wincache_ucache_delete($key)
wincache_ucache_exists		0;"	f	S:bool function wincache_ucache_exists($key)
wincache_ucache_get		0;"	f	S:mixed function wincache_ucache_get($key, &$success)
wincache_ucache_inc		0;"	f	S:mixed function wincache_ucache_inc($key, $inc_by = 1, &$success)
wincache_ucache_info		0;"	f	S:array function wincache_ucache_info($summaryonly = false, $key)
wincache_ucache_meminfo		0;"	f	S:array function wincache_ucache_meminfo()
wincache_ucache_set		0;"	f	S:bool function wincache_ucache_set($key, $value, $ttl, $values, $unused)
wincache_unlock		0;"	f	S:bool function wincache_unlock($key)
XHPROF_FLAGS_NO_BUILTINS		0;"	d
XHPROF_FLAGS_CPU		0;"	d
XHPROF_FLAGS_MEMORY		0;"	d
xhprof_disable		0;"	f	S:array function xhprof_disable()
xhprof_enable		0;"	f	S:void function xhprof_enable($flags, $options)
xhprof_sample_disable		0;"	f	S:array function xhprof_sample_disable()
xhprof_sample_enable		0;"	f	S:void function xhprof_sample_enable()
ID3_V1_0		0;"	d
ID3_V1_1		0;"	d
ID3_V2_1		0;"	d
ID3_V2_2		0;"	d
ID3_V2_3		0;"	d
ID3_V2_4		0;"	d
ID3_BEST		0;"	d
id3_get_frame_long_name		0;"	f	S:string function id3_get_frame_long_name($frameId)
id3_get_frame_short_name		0;"	f	S:string function id3_get_frame_short_name($frameId)
id3_get_genre_id		0;"	f	S:int function id3_get_genre_id($genre)
id3_get_genre_list		0;"	f	S:array function id3_get_genre_list()
id3_get_genre_name		0;"	f	S:string function id3_get_genre_name($genre_id)
id3_get_tag		0;"	f	S:array function id3_get_tag($filename, $version = ID3_BEST)
id3_get_version		0;"	f	S:int function id3_get_version($filename)
id3_remove_tag		0;"	f	S:bool function id3_remove_tag($filename, $version = ID3_V1_0)
id3_set_tag		0;"	f	S:bool function id3_set_tag($filename, $tag, $version = ID3_V1_0)
Version1		0;"	o	class:KTaglib_MPEG_Header
Version2		0;"	o	class:KTaglib_MPEG_Header
Version2_5		0;"	o	class:KTaglib_MPEG_Header
Other		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
FileIcon		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
OtherFileIcon		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
FrontCover		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
BackCover		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
LeafletPage		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Media		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
LeadArtist		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Artist		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Conductor		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Band		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Composer		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Lyricist		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
RecordingLocation		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
DuringRecording		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
DuringPerformance		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
MovieScreenCapture		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
ColouredFish		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
Illustration		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
BandLogo		0;"	o	class:KTaglib_ID3v2_AttachedPictureFrame
KTaglib_MPEG_File		0;"	c
__construct		0;"	f	S: function __construct($filename)	class:KTaglib_MPEG_File
getAudioProperties		0;"	f	S:KTaglib_MPEG_File function getAudioProperties()	class:KTaglib_MPEG_File
getID3v1Tag		0;"	f	S:KTaglib_ID3v1_Tag function getID3v1Tag($create = false)	class:KTaglib_MPEG_File
getID3v2Tag		0;"	f	S:KTaglib_ID3v2_Tag function getID3v2Tag($create = false)	class:KTaglib_MPEG_File
KTaglib_MPEG_AudioProperties		0;"	c
getBitrate		0;"	f	S:int function getBitrate()	class:KTaglib_MPEG_AudioProperties
getChannels		0;"	f	S:int function getChannels()	class:KTaglib_MPEG_AudioProperties
getLayer		0;"	f	S:int function getLayer()	class:KTaglib_MPEG_AudioProperties
getLength		0;"	f	S:int function getLength()	class:KTaglib_MPEG_AudioProperties
getSampleBitrate		0;"	f	S:int function getSampleBitrate()	class:KTaglib_MPEG_AudioProperties
getVersion		0;"	f	S:int function getVersion()	class:KTaglib_MPEG_AudioProperties
isCopyrighted		0;"	f	S:bool function isCopyrighted()	class:KTaglib_MPEG_AudioProperties
isOriginal		0;"	f	S:bool function isOriginal()	class:KTaglib_MPEG_AudioProperties
isProtectionEnabled		0;"	f	S:bool function isProtectionEnabled()	class:KTaglib_MPEG_AudioProperties
KTaglib_Tag		0;"	c
getAlbum		0;"	f	S:string function getAlbum()	class:KTaglib_Tag
getArtist		0;"	f	S:string function getArtist()	class:KTaglib_Tag
getComment		0;"	f	S:string function getComment()	class:KTaglib_Tag
getGenre		0;"	f	S:string function getGenre()	class:KTaglib_Tag
getTitle		0;"	f	S:string function getTitle()	class:KTaglib_Tag
getTrack		0;"	f	S:int function getTrack()	class:KTaglib_Tag
getYear		0;"	f	S:int function getYear()	class:KTaglib_Tag
isEmpty		0;"	f	S:bool function isEmpty()	class:KTaglib_Tag
0;"	c	i:KTaglib_Tag
addFrame		0;"	f	S:bool function addFrame($frame)	class:KTaglib_ID3v2_Tag
getFrameList		0;"	f	S:array function getFrameList()	class:KTaglib_ID3v2_Tag
0;"	c	i:KTaglib_Tag
getSize		0;"	f	S:int function getSize()	class:KTaglib_ID3v2_Frame
__toString		0;"	f	S:string function __toString()	class:KTaglib_ID3v2_Frame
0;"	c	i:KTaglib_ID3v2_Frame
getDescription		0;"	f	S:string function getDescription()	class:KTaglib_ID3v2_AttachedPictureFrame
getMimeType		0;"	f	S:string function getMimeType()	class:KTaglib_ID3v2_AttachedPictureFrame
getType		0;"	f	S:int function getType()	class:KTaglib_ID3v2_AttachedPictureFrame
savePicture		0;"	f	S:bool function savePicture($filename)	class:KTaglib_ID3v2_AttachedPictureFrame
setMimeType		0;"	f	S:string function setMimeType($type)	class:KTaglib_ID3v2_AttachedPictureFrame
setPicture		0;"	f	S:void function setPicture($filename)	class:KTaglib_ID3v2_AttachedPictureFrame
setType		0;"	f	S:void function setType($type)	class:KTaglib_ID3v2_AttachedPictureFrame
ALC_FREQUENCY		0;"	d
ALC_REFRESH		0;"	d
ALC_SYNC		0;"	d
AL_FREQUENCY		0;"	d
AL_BITS		0;"	d
AL_CHANNELS		0;"	d
AL_SIZE		0;"	d
AL_BUFFER		0;"	d
AL_SOURCE_RELATIVE		0;"	d
AL_SOURCE_STATE		0;"	d
AL_PITCH		0;"	d
AL_GAIN		0;"	d
AL_MIN_GAIN		0;"	d
AL_MAX_GAIN		0;"	d
AL_MAX_DISTANCE		0;"	d
AL_ROLLOFF_FACTOR		0;"	d
AL_CONE_OUTER_GAIN		0;"	d
AL_CONE_INNER_ANGLE		0;"	d
AL_CONE_OUTER_ANGLE		0;"	d
AL_REFERENCE_DISTANCE		0;"	d
AL_POSITION		0;"	d
AL_VELOCITY		0;"	d
AL_DIRECTION		0;"	d
AL_ORIENTATION		0;"	d
AL_FORMAT_MONO8		0;"	d
AL_FORMAT_MONO16		0;"	d
AL_FORMAT_STEREO8		0;"	d
AL_FORMAT_STEREO16		0;"	d
AL_INITIAL		0;"	d
AL_PLAYING		0;"	d
AL_PAUSED		0;"	d
AL_STOPPED		0;"	d
AL_LOOPING		0;"	d
AL_TRUE		0;"	d
AL_FALSE		0;"	d
openal_buffer_create		0;"	f	S:resource function openal_buffer_create()
openal_buffer_data		0;"	f	S:bool function openal_buffer_data($buffer, $format, $data, $freq)
openal_buffer_destroy		0;"	f	S:bool function openal_buffer_destroy($buffer)
openal_buffer_get		0;"	f	S:int function openal_buffer_get($buffer, $property)
openal_buffer_loadwav		0;"	f	S:bool function openal_buffer_loadwav($buffer, $wavfile)
openal_context_create		0;"	f	S:resource function openal_context_create($device)
openal_context_current		0;"	f	S:bool function openal_context_current($context)
openal_context_destroy		0;"	f	S:bool function openal_context_destroy($context)
openal_context_process		0;"	f	S:bool function openal_context_process($context)
openal_context_suspend		0;"	f	S:bool function openal_context_suspend($context)
openal_device_close		0;"	f	S:bool function openal_device_close($device)
openal_device_open		0;"	f	S:resource function openal_device_open($device_desc)
openal_listener_get		0;"	f	S:mixed function openal_listener_get($property)
openal_listener_set		0;"	f	S:bool function openal_listener_set($property, $setting)
openal_source_create		0;"	f	S:resource function openal_source_create()
openal_source_destroy		0;"	f	S:bool function openal_source_destroy($source)
openal_source_get		0;"	f	S:mixed function openal_source_get($source, $property)
openal_source_pause		0;"	f	S:bool function openal_source_pause($source)
openal_source_play		0;"	f	S:bool function openal_source_play($source)
openal_source_rewind		0;"	f	S:bool function openal_source_rewind($source)
openal_source_set		0;"	f	S:bool function openal_source_set($source, $property, $setting)
openal_source_stop		0;"	f	S:bool function openal_source_stop($source)
openal_stream		0;"	f	S:resource function openal_stream($source, $format, $rate)
kadm5_chpass_principal		0;"	f	S:bool function kadm5_chpass_principal($handle, $principal, $password)
kadm5_create_principal		0;"	f	S:bool function kadm5_create_principal($handle, $principal, $password, $options)
kadm5_delete_principal		0;"	f	S:bool function kadm5_delete_principal($handle, $principal)
kadm5_destroy		0;"	f	S:bool function kadm5_destroy($handle)
kadm5_flush		0;"	f	S:bool function kadm5_flush($handle)
kadm5_get_policies		0;"	f	S:array function kadm5_get_policies($handle)
kadm5_get_principal		0;"	f	S:array function kadm5_get_principal($handle, $principal)
kadm5_get_principals		0;"	f	S:array function kadm5_get_principals($handle)
kadm5_init_with_password		0;"	f	S:resource function kadm5_init_with_password($admin_server, $realm, $principal, $password)
kadm5_modify_principal		0;"	f	S:bool function kadm5_modify_principal($handle, $principal, $options)
RADIUS_MPPE_KEY_LEN		0;"	d
RADIUS_OPTION_SALT		0;"	d
RADIUS_OPTION_TAGGED		0;"	d
RADIUS_ACCESS_REQUEST		0;"	d
RADIUS_ACCESS_ACCEPT		0;"	d
RADIUS_ACCESS_REJECT		0;"	d
RADIUS_ACCESS_CHALLENGE		0;"	d
RADIUS_ACCOUNTING_REQUEST		0;"	d
RADIUS_ACCOUNTING_RESPONSE		0;"	d
RADIUS_COA_REQUEST		0;"	d
RADIUS_COA_ACK		0;"	d
RADIUS_COA_NAK		0;"	d
RADIUS_DISCONNECT_REQUEST		0;"	d
RADIUS_DISCONNECT_ACK		0;"	d
RADIUS_DISCONNECT_NAK		0;"	d
RADIUS_USER_NAME		0;"	d
RADIUS_USER_PASSWORD		0;"	d
RADIUS_CHAP_PASSWORD		0;"	d
RADIUS_NAS_IP_ADDRESS		0;"	d
RADIUS_NAS_PORT		0;"	d
RADIUS_SERVICE_TYPE		0;"	d
RADIUS_FRAMED_PROTOCOL		0;"	d
RADIUS_FRAMED_IP_ADDRESS		0;"	d
RADIUS_FRAMED_IP_NETMASK		0;"	d
RADIUS_FRAMED_ROUTING		0;"	d
RADIUS_FILTER_ID		0;"	d
RADIUS_FRAMED_MTU		0;"	d
RADIUS_FRAMED_COMPRESSION		0;"	d
RADIUS_LOGIN_IP_HOST		0;"	d
RADIUS_LOGIN_SERVICE		0;"	d
RADIUS_LOGIN_TCP_PORT		0;"	d
RADIUS_REPLY_MESSAGE		0;"	d
RADIUS_CALLBACK_NUMBER		0;"	d
RADIUS_CALLBACK_ID		0;"	d
RADIUS_FRAMED_ROUTE		0;"	d
RADIUS_FRAMED_IPX_NETWORK		0;"	d
RADIUS_STATE		0;"	d
RADIUS_CLASS		0;"	d
RADIUS_VENDOR_SPECIFIC		0;"	d
RADIUS_SESSION_TIMEOUT		0;"	d
RADIUS_IDLE_TIMEOUT		0;"	d
RADIUS_TERMINATION_ACTION		0;"	d
RADIUS_CALLED_STATION_ID		0;"	d
RADIUS_CALLING_STATION_ID		0;"	d
RADIUS_NAS_IDENTIFIER		0;"	d
RADIUS_PROXY_STATE		0;"	d
RADIUS_LOGIN_LAT_SERVICE		0;"	d
RADIUS_LOGIN_LAT_NODE		0;"	d
RADIUS_LOGIN_LAT_GROUP		0;"	d
RADIUS_FRAMED_APPLETALK_LINK		0;"	d
RADIUS_FRAMED_APPLETALK_NETWORK		0;"	d
RADIUS_FRAMED_APPLETALK_ZONE		0;"	d
RADIUS_CHAP_CHALLENGE		0;"	d
RADIUS_NAS_PORT_TYPE		0;"	d
RADIUS_PORT_LIMIT		0;"	d
RADIUS_LOGIN_LAT_PORT		0;"	d
RADIUS_CONNECT_INFO		0;"	d
RADIUS_ACCT_STATUS_TYPE		0;"	d
RADIUS_ACCT_DELAY_TIME		0;"	d
RADIUS_ACCT_INPUT_OCTETS		0;"	d
RADIUS_ACCT_OUTPUT_OCTETS		0;"	d
RADIUS_ACCT_SESSION_ID		0;"	d
RADIUS_ACCT_AUTHENTIC		0;"	d
RADIUS_ACCT_SESSION_TIME		0;"	d
RADIUS_ACCT_INPUT_PACKETS		0;"	d
RADIUS_ACCT_OUTPUT_PACKETS		0;"	d
RADIUS_ACCT_TERMINATE_CAUSE		0;"	d
RADIUS_ACCT_MULTI_SESSION_ID		0;"	d
RADIUS_ACCT_LINK_COUNT		0;"	d
RADIUS_VENDOR_MICROSOFT		0;"	d
radius_acct_open		0;"	f	S:resource function radius_acct_open()
radius_add_server		0;"	f	S:bool function radius_add_server($radius_handle, $hostname, $port, $secret, $timeout, $max_tries)
radius_auth_open		0;"	f	S:resource function radius_auth_open()
radius_close		0;"	f	S:bool function radius_close($radius_handle)
radius_config		0;"	f	S:bool function radius_config($radius_handle, $file)
radius_create_request		0;"	f	S:bool function radius_create_request($radius_handle, $type)
radius_cvt_addr		0;"	f	S:string function radius_cvt_addr($data)
radius_cvt_int		0;"	f	S:int function radius_cvt_int($data)
radius_cvt_string		0;"	f	S:string function radius_cvt_string($data)
radius_demangle_mppe_key		0;"	f	S:string function radius_demangle_mppe_key($radius_handle, $mangled)
radius_demangle		0;"	f	S:string function radius_demangle($radius_handle, $mangled)
radius_get_attr		0;"	f	S:mixed function radius_get_attr($radius_handle)
radius_get_tagged_attr_data		0;"	f	S:string function radius_get_tagged_attr_data($data)
radius_get_tagged_attr_tag		0;"	f	S:integer function radius_get_tagged_attr_tag($data)
radius_get_vendor_attr		0;"	f	S:array function radius_get_vendor_attr($data)
radius_put_addr		0;"	f	S:bool function radius_put_addr($radius_handle, $type, $addr, $options, $tag)
radius_put_attr		0;"	f	S:bool function radius_put_attr($radius_handle, $type, $value, $options, $tag)
radius_put_int		0;"	f	S:bool function radius_put_int($radius_handle, $type, $value, $options, $tag)
radius_put_string		0;"	f	S:bool function radius_put_string($radius_handle, $type, $value, $options, $tag)
radius_put_vendor_addr		0;"	f	S:bool function radius_put_vendor_addr($radius_handle, $vendor, $type, $addr)
radius_put_vendor_attr		0;"	f	S:bool function radius_put_vendor_attr($radius_handle, $vendor, $type, $value, $options, $tag)
radius_put_vendor_int		0;"	f	S:bool function radius_put_vendor_int($radius_handle, $vendor, $type, $value, $options, $tag)
radius_put_vendor_string		0;"	f	S:bool function radius_put_vendor_string($radius_handle, $vendor, $type, $value, $options, $tag)
radius_request_authenticator		0;"	f	S:string function radius_request_authenticator($radius_handle)
radius_salt_encrypt_attr		0;"	f	S:string function radius_salt_encrypt_attr($radius_handle, $data)
radius_send_request		0;"	f	S:int function radius_send_request($radius_handle)
radius_server_secret		0;"	f	S:string function radius_server_secret($radius_handle)
radius_strerror		0;"	f	S:string function radius_strerror($radius_handle)
ncurses_addch		0;"	f	S:int function ncurses_addch($ch)
ncurses_addchnstr		0;"	f	S:int function ncurses_addchnstr($s, $n)
ncurses_addchstr		0;"	f	S:int function ncurses_addchstr($s)
ncurses_addnstr		0;"	f	S:int function ncurses_addnstr($s, $n)
ncurses_addstr		0;"	f	S:int function ncurses_addstr($text)
ncurses_assume_default_colors		0;"	f	S:int function ncurses_assume_default_colors($fg, $bg)
ncurses_attroff		0;"	f	S:int function ncurses_attroff($attributes)
ncurses_attron		0;"	f	S:int function ncurses_attron($attributes)
ncurses_attrset		0;"	f	S:int function ncurses_attrset($attributes)
ncurses_baudrate		0;"	f	S:int function ncurses_baudrate()
ncurses_beep		0;"	f	S:int function ncurses_beep()
ncurses_bkgd		0;"	f	S:int function ncurses_bkgd($attrchar)
ncurses_bkgdset		0;"	f	S:void function ncurses_bkgdset($attrchar)
ncurses_border		0;"	f	S:int function ncurses_border($left, $right, $top, $bottom, $tl_corner, $tr_corner, $bl_corner, $br_corner)
ncurses_bottom_panel		0;"	f	S:int function ncurses_bottom_panel($panel)
ncurses_can_change_color		0;"	f	S:bool function ncurses_can_change_color()
ncurses_cbreak		0;"	f	S:bool function ncurses_cbreak()
ncurses_clear		0;"	f	S:bool function ncurses_clear()
ncurses_clrtobot		0;"	f	S:bool function ncurses_clrtobot()
ncurses_clrtoeol		0;"	f	S:bool function ncurses_clrtoeol()
ncurses_color_content		0;"	f	S:int function ncurses_color_content($color, &$r, &$g, &$b)
ncurses_color_set		0;"	f	S:int function ncurses_color_set($pair)
ncurses_curs_set		0;"	f	S:int function ncurses_curs_set($visibility)
ncurses_def_prog_mode		0;"	f	S:bool function ncurses_def_prog_mode()
ncurses_def_shell_mode		0;"	f	S:bool function ncurses_def_shell_mode()
ncurses_define_key		0;"	f	S:int function ncurses_define_key($definition, $keycode)
ncurses_del_panel		0;"	f	S:bool function ncurses_del_panel($panel)
ncurses_delay_output		0;"	f	S:int function ncurses_delay_output($milliseconds)
ncurses_delch		0;"	f	S:bool function ncurses_delch()
ncurses_deleteln		0;"	f	S:bool function ncurses_deleteln()
ncurses_delwin		0;"	f	S:bool function ncurses_delwin($window)
ncurses_doupdate		0;"	f	S:bool function ncurses_doupdate()
ncurses_echo		0;"	f	S:bool function ncurses_echo()
ncurses_echochar		0;"	f	S:int function ncurses_echochar($character)
ncurses_end		0;"	f	S:int function ncurses_end()
ncurses_erase		0;"	f	S:bool function ncurses_erase()
ncurses_erasechar		0;"	f	S:string function ncurses_erasechar()
ncurses_filter		0;"	f	S:void function ncurses_filter()
ncurses_flash		0;"	f	S:bool function ncurses_flash()
ncurses_flushinp		0;"	f	S:bool function ncurses_flushinp()
ncurses_getch		0;"	f	S:int function ncurses_getch()
ncurses_getmaxyx		0;"	f	S:void function ncurses_getmaxyx($window, &$y, &$x)
ncurses_getmouse		0;"	f	S:bool function ncurses_getmouse(&$mevent)
ncurses_getyx		0;"	f	S:void function ncurses_getyx($window, &$y, &$x)
ncurses_halfdelay		0;"	f	S:int function ncurses_halfdelay($tenth)
ncurses_has_colors		0;"	f	S:bool function ncurses_has_colors()
ncurses_has_ic		0;"	f	S:bool function ncurses_has_ic()
ncurses_has_il		0;"	f	S:bool function ncurses_has_il()
ncurses_has_key		0;"	f	S:int function ncurses_has_key($keycode)
ncurses_hide_panel		0;"	f	S:int function ncurses_hide_panel($panel)
ncurses_hline		0;"	f	S:int function ncurses_hline($charattr, $n)
ncurses_inch		0;"	f	S:string function ncurses_inch()
ncurses_init_color		0;"	f	S:int function ncurses_init_color($color, $r, $g, $b)
ncurses_init_pair		0;"	f	S:int function ncurses_init_pair($pair, $fg, $bg)
ncurses_init		0;"	f	S:void function ncurses_init()
ncurses_insch		0;"	f	S:int function ncurses_insch($character)
ncurses_insdelln		0;"	f	S:int function ncurses_insdelln($count)
ncurses_insertln		0;"	f	S:int function ncurses_insertln()
ncurses_insstr		0;"	f	S:int function ncurses_insstr($text)
ncurses_instr		0;"	f	S:int function ncurses_instr(&$buffer)
ncurses_isendwin		0;"	f	S:bool function ncurses_isendwin()
ncurses_keyok		0;"	f	S:int function ncurses_keyok($keycode, $enable)
ncurses_keypad		0;"	f	S:int function ncurses_keypad($window, $bf)
ncurses_killchar		0;"	f	S:string function ncurses_killchar()
ncurses_longname		0;"	f	S:string function ncurses_longname()
ncurses_meta		0;"	f	S:int function ncurses_meta($window, $8bit)
ncurses_mouse_trafo		0;"	f	S:bool function ncurses_mouse_trafo(&$y, &$x, $toscreen)
ncurses_mouseinterval		0;"	f	S:int function ncurses_mouseinterval($milliseconds)
ncurses_mousemask		0;"	f	S:int function ncurses_mousemask($newmask, &$oldmask)
ncurses_move_panel		0;"	f	S:int function ncurses_move_panel($panel, $startx, $starty)
ncurses_move		0;"	f	S:int function ncurses_move($y, $x)
ncurses_mvaddch		0;"	f	S:int function ncurses_mvaddch($y, $x, $c)
ncurses_mvaddchnstr		0;"	f	S:int function ncurses_mvaddchnstr($y, $x, $s, $n)
ncurses_mvaddchstr		0;"	f	S:int function ncurses_mvaddchstr($y, $x, $s)
ncurses_mvaddnstr		0;"	f	S:int function ncurses_mvaddnstr($y, $x, $s, $n)
ncurses_mvaddstr		0;"	f	S:int function ncurses_mvaddstr($y, $x, $s)
ncurses_mvcur		0;"	f	S:int function ncurses_mvcur($old_y, $old_x, $new_y, $new_x)
ncurses_mvdelch		0;"	f	S:int function ncurses_mvdelch($y, $x)
ncurses_mvgetch		0;"	f	S:int function ncurses_mvgetch($y, $x)
ncurses_mvhline		0;"	f	S:int function ncurses_mvhline($y, $x, $attrchar, $n)
ncurses_mvinch		0;"	f	S:int function ncurses_mvinch($y, $x)
ncurses_mvvline		0;"	f	S:int function ncurses_mvvline($y, $x, $attrchar, $n)
ncurses_mvwaddstr		0;"	f	S:int function ncurses_mvwaddstr($window, $y, $x, $text)
ncurses_napms		0;"	f	S:int function ncurses_napms($milliseconds)
ncurses_new_panel		0;"	f	S:resource function ncurses_new_panel($window)
ncurses_newpad		0;"	f	S:resource function ncurses_newpad($rows, $cols)
ncurses_newwin		0;"	f	S:resource function ncurses_newwin($rows, $cols, $y, $x)
ncurses_nl		0;"	f	S:bool function ncurses_nl()
ncurses_nocbreak		0;"	f	S:bool function ncurses_nocbreak()
ncurses_noecho		0;"	f	S:bool function ncurses_noecho()
ncurses_nonl		0;"	f	S:bool function ncurses_nonl()
ncurses_noqiflush		0;"	f	S:void function ncurses_noqiflush()
ncurses_noraw		0;"	f	S:bool function ncurses_noraw()
ncurses_pair_content		0;"	f	S:int function ncurses_pair_content($pair, &$f, &$b)
ncurses_panel_above		0;"	f	S:resource function ncurses_panel_above($panel)
ncurses_panel_below		0;"	f	S:resource function ncurses_panel_below($panel)
ncurses_panel_window		0;"	f	S:resource function ncurses_panel_window($panel)
ncurses_pnoutrefresh		0;"	f	S:int function ncurses_pnoutrefresh($pad, $pminrow, $pmincol, $sminrow, $smincol, $smaxrow, $smaxcol)
ncurses_prefresh		0;"	f	S:int function ncurses_prefresh($pad, $pminrow, $pmincol, $sminrow, $smincol, $smaxrow, $smaxcol)
ncurses_putp		0;"	f	S:int function ncurses_putp($text)
ncurses_qiflush		0;"	f	S:void function ncurses_qiflush()
ncurses_raw		0;"	f	S:bool function ncurses_raw()
ncurses_refresh		0;"	f	S:int function ncurses_refresh($ch)
ncurses_replace_panel		0;"	f	S:int function ncurses_replace_panel($panel, $window)
ncurses_reset_prog_mode		0;"	f	S:int function ncurses_reset_prog_mode()
ncurses_reset_shell_mode		0;"	f	S:int function ncurses_reset_shell_mode()
ncurses_resetty		0;"	f	S:bool function ncurses_resetty()
ncurses_savetty		0;"	f	S:bool function ncurses_savetty()
ncurses_scr_dump		0;"	f	S:int function ncurses_scr_dump($filename)
ncurses_scr_init		0;"	f	S:int function ncurses_scr_init($filename)
ncurses_scr_restore		0;"	f	S:int function ncurses_scr_restore($filename)
ncurses_scr_set		0;"	f	S:int function ncurses_scr_set($filename)
ncurses_scrl		0;"	f	S:int function ncurses_scrl($count)
ncurses_show_panel		0;"	f	S:int function ncurses_show_panel($panel)
ncurses_slk_attr		0;"	f	S:int function ncurses_slk_attr()
ncurses_slk_attroff		0;"	f	S:int function ncurses_slk_attroff($intarg)
ncurses_slk_attron		0;"	f	S:int function ncurses_slk_attron($intarg)
ncurses_slk_attrset		0;"	f	S:int function ncurses_slk_attrset($intarg)
ncurses_slk_clear		0;"	f	S:bool function ncurses_slk_clear()
ncurses_slk_color		0;"	f	S:int function ncurses_slk_color($intarg)
ncurses_slk_init		0;"	f	S:bool function ncurses_slk_init($format)
ncurses_slk_noutrefresh		0;"	f	S:bool function ncurses_slk_noutrefresh()
ncurses_slk_refresh		0;"	f	S:int function ncurses_slk_refresh()
ncurses_slk_restore		0;"	f	S:int function ncurses_slk_restore()
ncurses_slk_set		0;"	f	S:bool function ncurses_slk_set($labelnr, $label, $format)
ncurses_slk_touch		0;"	f	S:int function ncurses_slk_touch()
ncurses_standend		0;"	f	S:int function ncurses_standend()
ncurses_standout		0;"	f	S:int function ncurses_standout()
ncurses_start_color		0;"	f	S:int function ncurses_start_color()
ncurses_termattrs		0;"	f	S:bool function ncurses_termattrs()
ncurses_termname		0;"	f	S:string function ncurses_termname()
ncurses_timeout		0;"	f	S:void function ncurses_timeout($millisec)
ncurses_top_panel		0;"	f	S:int function ncurses_top_panel($panel)
ncurses_typeahead		0;"	f	S:int function ncurses_typeahead($fd)
ncurses_ungetch		0;"	f	S:int function ncurses_ungetch($keycode)
ncurses_ungetmouse		0;"	f	S:bool function ncurses_ungetmouse($mevent)
ncurses_update_panels		0;"	f	S:void function ncurses_update_panels()
ncurses_use_default_colors		0;"	f	S:bool function ncurses_use_default_colors()
ncurses_use_env		0;"	f	S:void function ncurses_use_env($flag)
ncurses_use_extended_names		0;"	f	S:int function ncurses_use_extended_names($flag)
ncurses_vidattr		0;"	f	S:int function ncurses_vidattr($intarg)
ncurses_vline		0;"	f	S:int function ncurses_vline($charattr, $n)
ncurses_waddch		0;"	f	S:int function ncurses_waddch($window, $ch)
ncurses_waddstr		0;"	f	S:int function ncurses_waddstr($window, $str, $n)
ncurses_wattroff		0;"	f	S:int function ncurses_wattroff($window, $attrs)
ncurses_wattron		0;"	f	S:int function ncurses_wattron($window, $attrs)
ncurses_wattrset		0;"	f	S:int function ncurses_wattrset($window, $attrs)
ncurses_wborder		0;"	f	S:int function ncurses_wborder($window, $left, $right, $top, $bottom, $tl_corner, $tr_corner, $bl_corner, $br_corner)
ncurses_wclear		0;"	f	S:int function ncurses_wclear($window)
ncurses_wcolor_set		0;"	f	S:int function ncurses_wcolor_set($window, $color_pair)
ncurses_werase		0;"	f	S:int function ncurses_werase($window)
ncurses_wgetch		0;"	f	S:int function ncurses_wgetch($window)
ncurses_whline		0;"	f	S:int function ncurses_whline($window, $charattr, $n)
ncurses_wmouse_trafo		0;"	f	S:bool function ncurses_wmouse_trafo($window, &$y, &$x, $toscreen)
ncurses_wmove		0;"	f	S:int function ncurses_wmove($window, $y, $x)
ncurses_wnoutrefresh		0;"	f	S:int function ncurses_wnoutrefresh($window)
ncurses_wrefresh		0;"	f	S:int function ncurses_wrefresh($window)
ncurses_wstandend		0;"	f	S:int function ncurses_wstandend($window)
ncurses_wstandout		0;"	f	S:int function ncurses_wstandout($window)
ncurses_wvline		0;"	f	S:int function ncurses_wvline($window, $charattr, $n)
newt_bell		0;"	f	S:void function newt_bell()
newt_button_bar		0;"	f	S:resource function newt_button_bar(&$buttons)
newt_button		0;"	f	S:resource function newt_button($left, $top, $text)
newt_centered_window		0;"	f	S:int function newt_centered_window($width, $height, $title)
newt_checkbox_get_value		0;"	f	S:string function newt_checkbox_get_value($checkbox)
newt_checkbox_set_flags		0;"	f	S:void function newt_checkbox_set_flags($checkbox, $flags, $sense)
newt_checkbox_set_value		0;"	f	S:void function newt_checkbox_set_value($checkbox, $value)
newt_checkbox_tree_add_item		0;"	f	S:void function newt_checkbox_tree_add_item($checkboxtree, $text, $data, $flags, $index, $...)
newt_checkbox_tree_find_item		0;"	f	S:array function newt_checkbox_tree_find_item($checkboxtree, $data)
newt_checkbox_tree_get_current		0;"	f	S:mixed function newt_checkbox_tree_get_current($checkboxtree)
newt_checkbox_tree_get_entry_value		0;"	f	S:string function newt_checkbox_tree_get_entry_value($checkboxtree, $data)
newt_checkbox_tree_get_multi_selection		0;"	f	S:array function newt_checkbox_tree_get_multi_selection($checkboxtree, $seqnum)
newt_checkbox_tree_get_selection		0;"	f	S:array function newt_checkbox_tree_get_selection($checkboxtree)
newt_checkbox_tree_multi		0;"	f	S:resource function newt_checkbox_tree_multi($left, $top, $height, $seq, $flags)
newt_checkbox_tree_set_current		0;"	f	S:void function newt_checkbox_tree_set_current($checkboxtree, $data)
newt_checkbox_tree_set_entry_value		0;"	f	S:void function newt_checkbox_tree_set_entry_value($checkboxtree, $data, $value)
newt_checkbox_tree_set_entry		0;"	f	S:void function newt_checkbox_tree_set_entry($checkboxtree, $data, $text)
newt_checkbox_tree_set_width		0;"	f	S:void function newt_checkbox_tree_set_width($checkbox_tree, $width)
newt_checkbox_tree		0;"	f	S:resource function newt_checkbox_tree($left, $top, $height, $flags)
newt_checkbox		0;"	f	S:resource function newt_checkbox($left, $top, $text, $def_value, $seq)
newt_clear_key_buffer		0;"	f	S:void function newt_clear_key_buffer()
newt_cls		0;"	f	S:void function newt_cls()
newt_compact_button		0;"	f	S:resource function newt_compact_button($left, $top, $text)
newt_component_add_callback		0;"	f	S:void function newt_component_add_callback($component, $func_name, $data)
newt_component_takes_focus		0;"	f	S:void function newt_component_takes_focus($component, $takes_focus)
newt_create_grid		0;"	f	S:resource function newt_create_grid($cols, $rows)
newt_cursor_off		0;"	f	S:void function newt_cursor_off()
newt_cursor_on		0;"	f	S:void function newt_cursor_on()
newt_delay		0;"	f	S:void function newt_delay($microseconds)
newt_draw_form		0;"	f	S:void function newt_draw_form($form)
newt_draw_root_text		0;"	f	S:void function newt_draw_root_text($left, $top, $text)
newt_entry_get_value		0;"	f	S:string function newt_entry_get_value($entry)
newt_entry_set_filter		0;"	f	S:void function newt_entry_set_filter($entry, $filter, $data)
newt_entry_set_flags		0;"	f	S:void function newt_entry_set_flags($entry, $flags, $sense)
newt_entry_set		0;"	f	S:void function newt_entry_set($entry, $value, $cursor_at_end)
newt_entry		0;"	f	S:resource function newt_entry($left, $top, $width, $init_value, $flags)
newt_finished		0;"	f	S:int function newt_finished()
newt_form_add_component		0;"	f	S:void function newt_form_add_component($form, $component)
newt_form_add_components		0;"	f	S:void function newt_form_add_components($form, $components)
newt_form_add_hot_key		0;"	f	S:void function newt_form_add_hot_key($form, $key)
newt_form_destroy		0;"	f	S:void function newt_form_destroy($form)
newt_form_get_current		0;"	f	S:resource function newt_form_get_current($form)
newt_form_run		0;"	f	S:void function newt_form_run($form, &$exit_struct)
newt_form_set_background		0;"	f	S:void function newt_form_set_background($from, $background)
newt_form_set_height		0;"	f	S:void function newt_form_set_height($form, $height)
newt_form_set_size		0;"	f	S:void function newt_form_set_size($form)
newt_form_set_timer		0;"	f	S:void function newt_form_set_timer($form, $milliseconds)
newt_form_set_width		0;"	f	S:void function newt_form_set_width($form, $width)
newt_form_watch_fd		0;"	f	S:void function newt_form_watch_fd($form, $stream, $flags)
newt_form		0;"	f	S:resource function newt_form($vert_bar, $help, $flags)
newt_get_screen_size		0;"	f	S:void function newt_get_screen_size(&$cols, &$rows)
newt_grid_add_components_to_form		0;"	f	S:void function newt_grid_add_components_to_form($grid, $form, $recurse)
newt_grid_basic_window		0;"	f	S:resource function newt_grid_basic_window($text, $middle, $buttons)
newt_grid_free		0;"	f	S:void function newt_grid_free($grid, $recurse)
newt_grid_get_size		0;"	f	S:void function newt_grid_get_size($grid, &$width, &$height)
newt_grid_h_close_stacked		0;"	f	S:resource function newt_grid_h_close_stacked($element1_type, $element1, $...)
newt_grid_h_stacked		0;"	f	S:resource function newt_grid_h_stacked($element1_type, $element1, $...)
newt_grid_place		0;"	f	S:void function newt_grid_place($grid, $left, $top)
newt_grid_set_field		0;"	f	S:void function newt_grid_set_field($grid, $col, $row, $type, $val, $pad_left, $pad_top, $pad_right, $pad_bottom, $anchor, $flags)
newt_grid_simple_window		0;"	f	S:resource function newt_grid_simple_window($text, $middle, $buttons)
newt_grid_v_close_stacked		0;"	f	S:resource function newt_grid_v_close_stacked($element1_type, $element1, $...)
newt_grid_v_stacked		0;"	f	S:resource function newt_grid_v_stacked($element1_type, $element1, $...)
newt_grid_wrapped_window_at		0;"	f	S:void function newt_grid_wrapped_window_at($grid, $title, $left, $top)
newt_grid_wrapped_window		0;"	f	S:void function newt_grid_wrapped_window($grid, $title)
newt_init		0;"	f	S:int function newt_init()
newt_label_set_text		0;"	f	S:void function newt_label_set_text($label, $text)
newt_label		0;"	f	S:resource function newt_label($left, $top, $text)
newt_listbox_append_entry		0;"	f	S:void function newt_listbox_append_entry($listbox, $text, $data)
newt_listbox_clear_selection		0;"	f	S:void function newt_listbox_clear_selection($listbox)
newt_listbox_clear		0;"	f	S:void function newt_listbox_clear($listobx)
newt_listbox_delete_entry		0;"	f	S:void function newt_listbox_delete_entry($listbox, $key)
newt_listbox_get_current		0;"	f	S:string function newt_listbox_get_current($listbox)
newt_listbox_get_selection		0;"	f	S:array function newt_listbox_get_selection($listbox)
newt_listbox_insert_entry		0;"	f	S:void function newt_listbox_insert_entry($listbox, $text, $data, $key)
newt_listbox_item_count		0;"	f	S:int function newt_listbox_item_count($listbox)
newt_listbox_select_item		0;"	f	S:void function newt_listbox_select_item($listbox, $key, $sense)
newt_listbox_set_current_by_key		0;"	f	S:void function newt_listbox_set_current_by_key($listbox, $key)
newt_listbox_set_current		0;"	f	S:void function newt_listbox_set_current($listbox, $num)
newt_listbox_set_data		0;"	f	S:void function newt_listbox_set_data($listbox, $num, $data)
newt_listbox_set_entry		0;"	f	S:void function newt_listbox_set_entry($listbox, $num, $text)
newt_listbox_set_width		0;"	f	S:void function newt_listbox_set_width($listbox, $width)
newt_listbox		0;"	f	S:resource function newt_listbox($left, $top, $height, $flags)
newt_listitem_get_data		0;"	f	S:mixed function newt_listitem_get_data($item)
newt_listitem_set		0;"	f	S:void function newt_listitem_set($item, $text)
newt_listitem		0;"	f	S:resource function newt_listitem($left, $top, $text, $is_default, $prev_item, $data, $flags)
newt_open_window		0;"	f	S:int function newt_open_window($left, $top, $width, $height, $title)
newt_pop_help_line		0;"	f	S:void function newt_pop_help_line()
newt_pop_window		0;"	f	S:void function newt_pop_window()
newt_push_help_line		0;"	f	S:void function newt_push_help_line($text)
newt_radio_get_current		0;"	f	S:resource function newt_radio_get_current($set_member)
newt_radiobutton		0;"	f	S:resource function newt_radiobutton($left, $top, $text, $is_default, $prev_button)
newt_redraw_help_line		0;"	f	S:void function newt_redraw_help_line()
newt_reflow_text		0;"	f	S:string function newt_reflow_text($text, $width, $flex_down, $flex_up, &$actual_width, &$actual_height)
newt_refresh		0;"	f	S:void function newt_refresh()
newt_resize_screen		0;"	f	S:void function newt_resize_screen($redraw)
newt_resume		0;"	f	S:void function newt_resume()
newt_run_form		0;"	f	S:resource function newt_run_form($form)
newt_scale_set		0;"	f	S:void function newt_scale_set($scale, $amount)
newt_scale		0;"	f	S:resource function newt_scale($left, $top, $width, $full_value)
newt_scrollbar_set		0;"	f	S:void function newt_scrollbar_set($scrollbar, $where, $total)
newt_set_help_callback		0;"	f	S:void function newt_set_help_callback($function)
newt_set_suspend_callback		0;"	f	S:void function newt_set_suspend_callback($function, $data)
newt_suspend		0;"	f	S:void function newt_suspend()
newt_textbox_get_num_lines		0;"	f	S:int function newt_textbox_get_num_lines($textbox)
newt_textbox_reflowed		0;"	f	S:resource function newt_textbox_reflowed($left, $top, $*text, $width, $flex_down, $flex_up, $flags)
newt_textbox_set_height		0;"	f	S:void function newt_textbox_set_height($textbox, $height)
newt_textbox_set_text		0;"	f	S:void function newt_textbox_set_text($textbox, $text)
newt_textbox		0;"	f	S:resource function newt_textbox($left, $top, $width, $height, $flags)
newt_vertical_scrollbar		0;"	f	S:resource function newt_vertical_scrollbar($left, $top, $height, $normal_colorset, $thumb_colorset)
newt_wait_for_key		0;"	f	S:void function newt_wait_for_key()
newt_win_choice		0;"	f	S:int function newt_win_choice($title, $button1_text, $button2_text, $format, $args, $...)
newt_win_entries		0;"	f	S:int function newt_win_entries($title, $text, $suggested_width, $flex_down, $flex_up, $data_width, &$items, $button1, $...)
newt_win_menu		0;"	f	S:int function newt_win_menu($title, $text, $suggestedWidth, $flexDown, $flexUp, $maxListHeight, $items, &$listItem, $button1, $...)
newt_win_message		0;"	f	S:void function newt_win_message($title, $button_text, $format, $args, $...)
newt_win_messagev		0;"	f	S:void function newt_win_messagev($title, $button_text, $format, $args)
newt_win_ternary		0;"	f	S:int function newt_win_ternary($title, $button1_text, $button2_text, $button3_text, $format, $args, $...)
readline_add_history		0;"	f	S:bool function readline_add_history($line)
readline_callback_handler_install		0;"	f	S:bool function readline_callback_handler_install($prompt, $callback)
readline_callback_handler_remove		0;"	f	S:bool function readline_callback_handler_remove()
readline_callback_read_char		0;"	f	S:void function readline_callback_read_char()
readline_clear_history		0;"	f	S:bool function readline_clear_history()
readline_completion_function		0;"	f	S:bool function readline_completion_function($function)
readline_info		0;"	f	S:mixed function readline_info($varname, $newvalue)
readline_list_history		0;"	f	S:array function readline_list_history()
readline_on_new_line		0;"	f	S:void function readline_on_new_line()
readline_read_history		0;"	f	S:bool function readline_read_history($filename)
readline_redisplay		0;"	f	S:void function readline_redisplay()
readline_write_history		0;"	f	S:bool function readline_write_history($filename)
readline		0;"	f	S:string function readline($prompt)
bzclose		0;"	f	S:int function bzclose($bz)
bzcompress		0;"	f	S:mixed function bzcompress($source, $blocksize = 4, $workfactor)
bzdecompress		0;"	f	S:mixed function bzdecompress($source, $small)
bzerrno		0;"	f	S:int function bzerrno($bz)
bzerror		0;"	f	S:array function bzerror($bz)
bzerrstr		0;"	f	S:string function bzerrstr($bz)
bzflush		0;"	f	S:int function bzflush($bz)
bzopen		0;"	f	S:resource function bzopen($filename, $mode)
bzread		0;"	f	S:string function bzread($bz, $length = 1024)
bzwrite		0;"	f	S:int function bzwrite($bz, $data, $length)
lzf_compress		0;"	f	S:string function lzf_compress($data)
lzf_decompress		0;"	f	S:string function lzf_decompress($data)
lzf_optimized_for		0;"	f	S:int function lzf_optimized_for()
Phar		0;"	c	i:RecursiveDirectoryIterator
addEmptyDir		0;"	f	S:void function addEmptyDir($dirname)	class:Phar
addFile		0;"	f	S:void function addFile($file, $localname)	class:Phar
addFromString		0;"	f	S:void function addFromString($localname, $contents)	class:Phar
apiVersion		0;"	f	S:string function apiVersion()	class:Phar	a:final,static
buildFromDirectory		0;"	f	S:array function buildFromDirectory($base_dir, $regex)	class:Phar
buildFromIterator		0;"	f	S:array function buildFromIterator($iter, $base_directory)	class:Phar
canCompress		0;"	f	S:bool function canCompress($type)	class:Phar	a:final,static
canWrite		0;"	f	S:bool function canWrite()	class:Phar	a:final,static
compress		0;"	f	S:object function compress($compression, $extension)	class:Phar
compressAllFilesBZIP2		0;"	f	S:bool function compressAllFilesBZIP2()	class:Phar
compressAllFilesGZ		0;"	f	S:bool function compressAllFilesGZ()	class:Phar
compressFiles		0;"	f	S:void function compressFiles($compression)	class:Phar
__construct		0;"	f	S: function __construct($fname, $flags, $alias)	class:Phar
convertToData		0;"	f	S:PharData function convertToData($format = 9021976, $compression = 9021976, $extension)	class:Phar
convertToExecutable		0;"	f	S:Phar function convertToExecutable($format = 9021976, $compression = 9021976, $extension)	class:Phar
copy		0;"	f	S:bool function copy($oldfile, $newfile)	class:Phar
count		0;"	f	S:int function count()	class:Phar
createDefaultStub		0;"	f	S:string function createDefaultStub($indexfile, $webindexfile)	class:Phar	a:final,static
decompress		0;"	f	S:object function decompress($extension)	class:Phar
decompressFiles		0;"	f	S:bool function decompressFiles()	class:Phar
delMetadata		0;"	f	S:bool function delMetadata()	class:Phar
delete		0;"	f	S:bool function delete($entry)	class:Phar
extractTo		0;"	f	S:bool function extractTo($pathto, $files, $overwrite = false)	class:Phar
getMetadata		0;"	f	S:mixed function getMetadata()	class:Phar
getModified		0;"	f	S:bool function getModified()	class:Phar
getSignature		0;"	f	S:array function getSignature()	class:Phar
getStub		0;"	f	S:string function getStub()	class:Phar
getSupportedCompression		0;"	f	S:array function getSupportedCompression()	class:Phar	a:final,static
getSupportedSignatures		0;"	f	S:array function getSupportedSignatures()	class:Phar	a:final,static
getVersion		0;"	f	S:string function getVersion()	class:Phar
hasMetadata		0;"	f	S:bool function hasMetadata()	class:Phar
interceptFileFuncs		0;"	f	S:void function interceptFileFuncs()	class:Phar	a:final,static
isBuffering		0;"	f	S:bool function isBuffering()	class:Phar
isCompressed		0;"	f	S:mixed function isCompressed()	class:Phar
isFileFormat		0;"	f	S:bool function isFileFormat($format)	class:Phar
isValidPharFilename		0;"	f	S:bool function isValidPharFilename($filename, $executable = true)	class:Phar	a:final,static
isWritable		0;"	f	S:bool function isWritable()	class:Phar
loadPhar		0;"	f	S:bool function loadPhar($filename, $alias)	class:Phar	a:final,static
mapPhar		0;"	f	S:bool function mapPhar($alias, $dataoffset)	class:Phar	a:final,static
mount		0;"	f	S:void function mount($pharpath, $externalpath)	class:Phar	a:final,static
mungServer		0;"	f	S:void function mungServer($munglist)	class:Phar	a:final,static
offsetExists		0;"	f	S:bool function offsetExists($offset)	class:Phar
offsetGet		0;"	f	S:int function offsetGet($offset)	class:Phar
offsetSet		0;"	f	S:void function offsetSet($offset, $value)	class:Phar
offsetUnset		0;"	f	S:bool function offsetUnset($offset)	class:Phar
running		0;"	f	S:string function running($retphar = true)	class:Phar	a:final,static
setAlias		0;"	f	S:bool function setAlias($alias)	class:Phar
setDefaultStub		0;"	f	S:bool function setDefaultStub($index, $webindex)	class:Phar
setMetadata		0;"	f	S:void function setMetadata($metadata)	class:Phar
setSignatureAlgorithm		0;"	f	S:void function setSignatureAlgorithm($sigtype, $privatekey)	class:Phar
setStub		0;"	f	S:bool function setStub($stub, $len = -1)	class:Phar
startBuffering		0;"	f	S:void function startBuffering()	class:Phar
stopBuffering		0;"	f	S:void function stopBuffering()	class:Phar
uncompressAllFiles		0;"	f	S:bool function uncompressAllFiles()	class:Phar
unlinkArchive		0;"	f	S:bool function unlinkArchive($archive)	class:Phar	a:final,static
webPhar		0;"	f	S:void function webPhar($alias, $index = "index.php", $f404, $mimetypes, $rewrites)	class:Phar	a:final,static
PharData		0;"	c	i:Phar
addEmptyDir		0;"	f	S:bool function addEmptyDir($dirname)	class:PharData
addFile		0;"	f	S:void function addFile($file, $localname)	class:PharData
addFromString		0;"	f	S:bool function addFromString($localname, $contents)	class:PharData
buildFromDirectory		0;"	f	S:array function buildFromDirectory($base_dir, $regex)	class:PharData
buildFromIterator		0;"	f	S:array function buildFromIterator($iter, $base_directory)	class:PharData
compress		0;"	f	S:object function compress($compression, $extension)	class:PharData
compressFiles		0;"	f	S:bool function compressFiles($compression)	class:PharData
__construct		0;"	f	S: function __construct($fname, $flags, $alias, $format)	class:PharData
convertToData		0;"	f	S:PharData function convertToData($format, $compression, $extension)	class:PharData
convertToExecutable		0;"	f	S:Phar function convertToExecutable($format, $compression, $extension)	class:PharData
copy		0;"	f	S:bool function copy($oldfile, $newfile)	class:PharData
decompress		0;"	f	S:object function decompress($extension)	class:PharData
decompressFiles		0;"	f	S:bool function decompressFiles()	class:PharData
delMetadata		0;"	f	S:bool function delMetadata()	class:PharData
delete		0;"	f	S:bool function delete($entry)	class:PharData
extractTo		0;"	f	S:bool function extractTo($pathto, $files, $overwrite = false)	class:PharData
isWritable		0;"	f	S:bool function isWritable()	class:PharData
offsetSet		0;"	f	S:void function offsetSet($offset, $value)	class:PharData
offsetUnset		0;"	f	S:bool function offsetUnset($offset)	class:PharData
setAlias		0;"	f	S:bool function setAlias($alias)	class:PharData
setDefaultStub		0;"	f	S:bool function setDefaultStub($index, $webindex)	class:PharData
setMetadata		0;"	f	S:void function setMetadata($metadata)	class:Phar
setSignatureAlgorithm		0;"	f	S:void function setSignatureAlgorithm($sigtype)	class:Phar
setStub		0;"	f	S:bool function setStub($stub, $len = -1)	class:PharData
PharFileInfo		0;"	c	i:SplFileInfo
chmod		0;"	f	S:void function chmod($permissions)	class:PharFileInfo
compress		0;"	f	S:bool function compress($compression)	class:PharFileInfo
__construct		0;"	f	S: function __construct($entry)	class:PharFileInfo
decompress		0;"	f	S:bool function decompress()	class:PharFileInfo
delMetadata		0;"	f	S:bool function delMetadata()	class:PharFileInfo
getCRC32		0;"	f	S:int function getCRC32()	class:PharFileInfo
getCompressedSize		0;"	f	S:int function getCompressedSize()	class:PharFileInfo
getMetadata		0;"	f	S:mixed function getMetadata()	class:PharFileInfo
getPharFlags		0;"	f	S:int function getPharFlags()	class:PharFileInfo
hasMetadata		0;"	f	S:bool function hasMetadata()	class:PharFileInfo
isCRCChecked		0;"	f	S:bool function isCRCChecked()	class:PharFileInfo
isCompressed		0;"	f	S:bool function isCompressed($compression_type = 9021976)	class:PharFileInfo
isCompressedBZIP2		0;"	f	S:bool function isCompressedBZIP2()	class:PharFileInfo
isCompressedGZ		0;"	f	S:bool function isCompressedGZ()	class:PharFileInfo
setCompressedBZIP2		0;"	f	S:bool function setCompressedBZIP2()	class:PharFileInfo
setCompressedGZ		0;"	f	S:bool function setCompressedGZ()	class:PharFileInfo
setMetadata		0;"	f	S:void function setMetadata($metadata)	class:PharFileInfo
setUncompressed		0;"	f	S:bool function setUncompressed()	class:PharFileInfo
PharException		0;"	c	i:Exception
message		0;"	p	class:PharException	a:protected	S:protected PharException::message
code		0;"	p	class:PharException	a:protected	S:protected PharException::code
file		0;"	p	class:PharException	a:protected	S:protected PharException::file
line		0;"	p	class:PharException	a:protected	S:protected PharException::line
PharException		0;"	f	S: function PharException()
RAR_HOST_MSDOS		0;"	d
RAR_HOST_OS2		0;"	d
RAR_HOST_WIN32		0;"	d
RAR_HOST_UNIX		0;"	d
RAR_HOST_BEOS		0;"	d
rar_wrapper_cache_stats		0;"	f	S:string function rar_wrapper_cache_stats()
RarArchive		0;"	c
close		0;"	f	S:bool function close($rarfile)	class:RarArchive
getComment		0;"	f	S:string function getComment($rarfile)	class:RarArchive
getEntries		0;"	f	S:RarArchive function getEntries($rarfile)	class:RarArchive
getEntry		0;"	f	S:RarEntry function getEntry($entryname, $rarfile)	class:RarArchive
isBroken		0;"	f	S:bool function isBroken($rarfile)	class:RarArchive
isSolid		0;"	f	S:bool function isSolid($rarfile)	class:RarArchive
open		0;"	f	S:RarArchive function open($filename, $password = NULL, $volume_callback = NULL)	class:RarArchive	a:static
setAllowBroken		0;"	f	S:bool function setAllowBroken($allow_broken, $rarfile)	class:RarArchive
__toString		0;"	f	S:RarArchive function __toString()	class:RarArchive
RarEntry		0;"	c
HOST_MSDOS		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_MSDOS
HOST_OS2		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_OS2
HOST_WIN32		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_WIN32
HOST_UNIX		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_UNIX
HOST_MACOS		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_MACOS
HOST_BEOS		0;"	o	class:RarEntry	a:const	S:const RarEntry::HOST_BEOS
ATTRIBUTE_WIN_READONLY		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_READONLY
ATTRIBUTE_WIN_HIDDEN		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_HIDDEN
ATTRIBUTE_WIN_SYSTEM		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_SYSTEM
ATTRIBUTE_WIN_DIRECTORY		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_DIRECTORY
ATTRIBUTE_WIN_ARCHIVE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_ARCHIVE
ATTRIBUTE_WIN_DEVICE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_DEVICE
ATTRIBUTE_WIN_NORMAL		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_NORMAL
ATTRIBUTE_WIN_TEMPORARY		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_TEMPORARY
ATTRIBUTE_WIN_SPARSE_FILE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_SPARSE_FILE
ATTRIBUTE_WIN_REPARSE_POINT		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_REPARSE_POINT
ATTRIBUTE_WIN_COMPRESSED		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_COMPRESSED
ATTRIBUTE_WIN_OFFLINE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_OFFLINE
ATTRIBUTE_WIN_NOT_CONTENT_INDEXED		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_NOT_CONTENT_INDEXED
ATTRIBUTE_WIN_ENCRYPTED		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_ENCRYPTED
ATTRIBUTE_WIN_VIRTUAL		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_WIN_VIRTUAL
ATTRIBUTE_UNIX_WORLD_EXECUTE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_WORLD_EXECUTE
ATTRIBUTE_UNIX_WORLD_WRITE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_WORLD_WRITE
ATTRIBUTE_UNIX_WORLD_READ		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_WORLD_READ
ATTRIBUTE_UNIX_GROUP_EXECUTE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_GROUP_EXECUTE
ATTRIBUTE_UNIX_GROUP_WRITE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_GROUP_WRITE
ATTRIBUTE_UNIX_GROUP_READ		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_GROUP_READ
ATTRIBUTE_UNIX_OWNER_EXECUTE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_OWNER_EXECUTE
ATTRIBUTE_UNIX_OWNER_WRITE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_OWNER_WRITE
ATTRIBUTE_UNIX_OWNER_READ		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_OWNER_READ
ATTRIBUTE_UNIX_STICKY		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_STICKY
ATTRIBUTE_UNIX_SETGID		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_SETGID
ATTRIBUTE_UNIX_SETUID		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_SETUID
ATTRIBUTE_UNIX_FINAL_QUARTET		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_FINAL_QUARTET
ATTRIBUTE_UNIX_FIFO		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_FIFO
ATTRIBUTE_UNIX_CHAR_DEV		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_CHAR_DEV
ATTRIBUTE_UNIX_DIRECTORY		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_DIRECTORY
ATTRIBUTE_UNIX_BLOCK_DEV		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_BLOCK_DEV
ATTRIBUTE_UNIX_REGULAR_FILE		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_REGULAR_FILE
ATTRIBUTE_UNIX_SYM_LINK		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_SYM_LINK
ATTRIBUTE_UNIX_SOCKET		0;"	o	class:RarEntry	a:const	S:const RarEntry::ATTRIBUTE_UNIX_SOCKET
extract		0;"	f	S:bool function extract($dir, $filepath = "", $password = NULL, $extended_data = false)	class:RarEntry
getAttr		0;"	f	S:int function getAttr()	class:RarEntry
getCrc		0;"	f	S:string function getCrc()	class:RarEntry
getFileTime		0;"	f	S:string function getFileTime()	class:RarEntry
getHostOs		0;"	f	S:int function getHostOs()	class:RarEntry
getMethod		0;"	f	S:int function getMethod()	class:RarEntry
getName		0;"	f	S:string function getName()	class:RarEntry
getPackedSize		0;"	f	S:int function getPackedSize()	class:RarEntry
getStream		0;"	f	S:resource function getStream($password)	class:RarEntry
getUnpackedSize		0;"	f	S:int function getUnpackedSize()	class:RarEntry
getVersion		0;"	f	S:int function getVersion()	class:RarEntry
isDirectory		0;"	f	S:bool function isDirectory()	class:RarEntry
isEncrypted		0;"	f	S:bool function isEncrypted()	class:RarEntry
__toString		0;"	f	S:string function __toString()	class:RarEntry
RarException		0;"	c	i:Exception
isUsingExceptions		0;"	f	S:bool function isUsingExceptions()	class:RarException	a:static
setUsingExceptions		0;"	f	S:RarEntry function setUsingExceptions($using_exceptions)	class:RarException	a:static
CREATE		0;"	o	class:ZipArchive
OVERWRITE		0;"	o	class:ZipArchive
EXCL		0;"	o	class:ZipArchive
CHECKCONS		0;"	o	class:ZipArchive
FL_NOCASE		0;"	o	class:ZipArchive
FL_NODIR		0;"	o	class:ZipArchive
FL_COMPRESSED		0;"	o	class:ZipArchive
FL_UNCHANGED		0;"	o	class:ZipArchive
CM_DEFAULT		0;"	o	class:ZipArchive
CM_STORE		0;"	o	class:ZipArchive
CM_SHRINK		0;"	o	class:ZipArchive
CM_REDUCE_1		0;"	o	class:ZipArchive
CM_REDUCE_2		0;"	o	class:ZipArchive
CM_REDUCE_3		0;"	o	class:ZipArchive
CM_REDUCE_4		0;"	o	class:ZipArchive
CM_IMPLODE		0;"	o	class:ZipArchive
CM_DEFLATE		0;"	o	class:ZipArchive
CM_DEFLATE64		0;"	o	class:ZipArchive
CM_PKWARE_IMPLODE		0;"	o	class:ZipArchive
CM_BZIP2		0;"	o	class:ZipArchive
ER_OK		0;"	o	class:ZipArchive
ER_MULTIDISK		0;"	o	class:ZipArchive
ER_RENAME		0;"	o	class:ZipArchive
ER_CLOSE		0;"	o	class:ZipArchive
ER_SEEK		0;"	o	class:ZipArchive
ER_READ		0;"	o	class:ZipArchive
ER_WRITE		0;"	o	class:ZipArchive
ER_CRC		0;"	o	class:ZipArchive
ER_ZIPCLOSED		0;"	o	class:ZipArchive
ER_NOENT		0;"	o	class:ZipArchive
ER_EXISTS		0;"	o	class:ZipArchive
ER_OPEN		0;"	o	class:ZipArchive
ER_TMPOPEN		0;"	o	class:ZipArchive
ER_ZLIB		0;"	o	class:ZipArchive
ER_MEMORY		0;"	o	class:ZipArchive
ER_CHANGED		0;"	o	class:ZipArchive
ER_COMPNOTSUPP		0;"	o	class:ZipArchive
ER_EOF		0;"	o	class:ZipArchive
ER_INVAL		0;"	o	class:ZipArchive
ER_NOZIP		0;"	o	class:ZipArchive
ER_INTERNAL		0;"	o	class:ZipArchive
ER_INCONS		0;"	o	class:ZipArchive
ER_REMOVE		0;"	o	class:ZipArchive
ER_DELETED		0;"	o	class:ZipArchive
OPSYS_DEFAULT		0;"	o	class:ZipArchive
ZipArchive		0;"	c
status		0;"	p	class:ZipArchive	S: ZipArchive::status
statusSys		0;"	p	class:ZipArchive	S: ZipArchive::statusSys
numFiles		0;"	p	class:ZipArchive	S: ZipArchive::numFiles
filename		0;"	p	class:ZipArchive	S: ZipArchive::filename
comment		0;"	p	class:ZipArchive	S: ZipArchive::comment
addEmptyDir		0;"	f	S:bool function addEmptyDir($dirname)	class:ZipArchive
addFile		0;"	f	S:bool function addFile($filename, $localname, $start, $length)	class:ZipArchive
addFromString		0;"	f	S:bool function addFromString($localname, $contents)	class:ZipArchive
addGlob		0;"	f	S:bool function addGlob($pattern, $flags, $options = array())	class:ZipArchive
addPattern		0;"	f	S:bool function addPattern($pattern, $path = ".", $options = array())	class:ZipArchive
close		0;"	f	S:bool function close()	class:ZipArchive
deleteIndex		0;"	f	S:bool function deleteIndex($index)	class:ZipArchive
deleteName		0;"	f	S:bool function deleteName($name)	class:ZipArchive
extractTo		0;"	f	S:bool function extractTo($destination, $entries)	class:ZipArchive
getArchiveComment		0;"	f	S:string function getArchiveComment($flags)	class:ZipArchive
getCommentIndex		0;"	f	S:string function getCommentIndex($index, $flags)	class:ZipArchive
getCommentName		0;"	f	S:string function getCommentName($name, $flags)	class:ZipArchive
getExternalAttributesIndex		0;"	f	S:bool function getExternalAttributesIndex($index, &$opsys, &$attr, $flags)	class:ZipArchive
getExternalAttributesName		0;"	f	S:bool function getExternalAttributesName($name, &$opsys, &$attr, $flags)	class:ZipArchive
getFromIndex		0;"	f	S:string function getFromIndex($index, $length, $flags)	class:ZipArchive
getFromName		0;"	f	S:string function getFromName($name, $length, $flags)	class:ZipArchive
getNameIndex		0;"	f	S:string function getNameIndex($index, $flags)	class:ZipArchive
getStatusString		0;"	f	S:string function getStatusString()	class:ZipArchive
getStream		0;"	f	S:resource function getStream($name)	class:ZipArchive
locateName		0;"	f	S:int function locateName($name, $flags)	class:ZipArchive
open		0;"	f	S:mixed function open($filename, $flags)	class:ZipArchive
renameIndex		0;"	f	S:bool function renameIndex($index, $newname)	class:ZipArchive
renameName		0;"	f	S:bool function renameName($name, $newname)	class:ZipArchive
setArchiveComment		0;"	f	S:bool function setArchiveComment($comment)	class:ZipArchive
setCommentIndex		0;"	f	S:bool function setCommentIndex($index, $comment)	class:ZipArchive
setCommentName		0;"	f	S:bool function setCommentName($name, $comment)	class:ZipArchive
setExternalAttributesIndex		0;"	f	S:bool function setExternalAttributesIndex($index, $opsys, $attr, $flags)	class:ZipArchive
setExternalAttributesName		0;"	f	S:bool function setExternalAttributesName($name, $opsys, $attr, $flags)	class:ZipArchive
setPassword		0;"	f	S:bool function setPassword($password)	class:ZipArchive
statIndex		0;"	f	S:array function statIndex($index, $flags)	class:ZipArchive
statName		0;"	f	S:array function statName($name, $flags)	class:ZipArchive
unchangeAll		0;"	f	S:bool function unchangeAll()	class:ZipArchive
unchangeArchive		0;"	f	S:bool function unchangeArchive()	class:ZipArchive
unchangeIndex		0;"	f	S:bool function unchangeIndex($index)	class:ZipArchive
unchangeName		0;"	f	S:bool function unchangeName($name)	class:ZipArchive
zip_close		0;"	f	S:void function zip_close($zip)
zip_entry_close		0;"	f	S:bool function zip_entry_close($zip_entry)
zip_entry_compressedsize		0;"	f	S:int function zip_entry_compressedsize($zip_entry)
zip_entry_compressionmethod		0;"	f	S:string function zip_entry_compressionmethod($zip_entry)
zip_entry_filesize		0;"	f	S:int function zip_entry_filesize($zip_entry)
zip_entry_name		0;"	f	S:string function zip_entry_name($zip_entry)
zip_entry_open		0;"	f	S:bool function zip_entry_open($zip, $zip_entry, $mode)
zip_entry_read		0;"	f	S:string function zip_entry_read($zip_entry, $length = 1024)
zip_open		0;"	f	S:resource function zip_open($filename)
zip_read		0;"	f	S:resource function zip_read($zip)
FORCE_GZIP		0;"	d
FORCE_DEFLATE		0;"	d
gzclose		0;"	f	S:bool function gzclose($zp)
gzcompress		0;"	f	S:string function gzcompress($data, $level = -1, $encoding = ZLIB_ENCODING_DEFLATE)
gzdecode		0;"	f	S:string function gzdecode($data, $length)
gzdeflate		0;"	f	S:string function gzdeflate($data, $level = -1, $encoding = ZLIB_ENCODING_RAW)
gzencode		0;"	f	S:string function gzencode($data, $level = -1, $encoding_mode = FORCE_GZIP)
gzeof		0;"	f	S:int function gzeof($zp)
gzfile		0;"	f	S:array function gzfile($filename, $use_include_path)
gzgetc		0;"	f	S:string function gzgetc($zp)
gzgets		0;"	f	S:string function gzgets($zp, $length)
gzgetss		0;"	f	S:string function gzgetss($zp, $length, $allowable_tags)
gzinflate		0;"	f	S:string function gzinflate($data, $length)
gzopen		0;"	f	S:resource function gzopen($filename, $mode, $use_include_path)
gzpassthru		0;"	f	S:int function gzpassthru($zp)
gzputs		0;"	f	S: function gzputs()
gzread		0;"	f	S:string function gzread($zp, $length)
gzrewind		0;"	f	S:bool function gzrewind($zp)
gzseek		0;"	f	S:int function gzseek($zp, $offset, $whence = SEEK_SET)
gztell		0;"	f	S:int function gztell($zp)
gzuncompress		0;"	f	S:string function gzuncompress($data, $length)
gzwrite		0;"	f	S:int function gzwrite($zp, $string, $length)
readgzfile		0;"	f	S:int function readgzfile($filename, $use_include_path)
zlib_decode		0;"	f	S:string function zlib_decode($data, $max_decoded_len)
zlib_encode		0;"	f	S:string function zlib_encode($data, $encoding, $level = -1)
zlib_get_coding_type		0;"	f	S:string function zlib_get_coding_type()
M_PENDING		0;"	d
M_DONE		0;"	d
M_ERROR		0;"	d
M_FAIL		0;"	d
M_SUCCESS		0;"	d
m_checkstatus		0;"	f	S:int function m_checkstatus($conn, $identifier)
m_completeauthorizations		0;"	f	S:int function m_completeauthorizations($conn, &$array)
m_connect		0;"	f	S:int function m_connect($conn)
m_connectionerror		0;"	f	S:string function m_connectionerror($conn)
m_deletetrans		0;"	f	S:bool function m_deletetrans($conn, $identifier)
m_destroyconn		0;"	f	S:bool function m_destroyconn($conn)
m_destroyengine		0;"	f	S:void function m_destroyengine()
m_getcell		0;"	f	S:string function m_getcell($conn, $identifier, $column, $row)
m_getcellbynum		0;"	f	S:string function m_getcellbynum($conn, $identifier, $column, $row)
m_getcommadelimited		0;"	f	S:string function m_getcommadelimited($conn, $identifier)
m_getheader		0;"	f	S:string function m_getheader($conn, $identifier, $column_num)
m_initconn		0;"	f	S:resource function m_initconn()
m_initengine		0;"	f	S:int function m_initengine($location)
m_iscommadelimited		0;"	f	S:int function m_iscommadelimited($conn, $identifier)
m_maxconntimeout		0;"	f	S:bool function m_maxconntimeout($conn, $secs)
m_monitor		0;"	f	S:int function m_monitor($conn)
m_numcolumns		0;"	f	S:int function m_numcolumns($conn, $identifier)
m_numrows		0;"	f	S:int function m_numrows($conn, $identifier)
m_parsecommadelimited		0;"	f	S:int function m_parsecommadelimited($conn, $identifier)
m_responsekeys		0;"	f	S:array function m_responsekeys($conn, $identifier)
m_responseparam		0;"	f	S:string function m_responseparam($conn, $identifier, $key)
m_returnstatus		0;"	f	S:int function m_returnstatus($conn, $identifier)
m_setblocking		0;"	f	S:int function m_setblocking($conn, $tf)
m_setdropfile		0;"	f	S:int function m_setdropfile($conn, $directory)
m_setip		0;"	f	S:int function m_setip($conn, $host, $port)
m_setssl_cafile		0;"	f	S:int function m_setssl_cafile($conn, $cafile)
m_setssl_files		0;"	f	S:int function m_setssl_files($conn, $sslkeyfile, $sslcertfile)
m_setssl		0;"	f	S:int function m_setssl($conn, $host, $port)
m_settimeout		0;"	f	S:int function m_settimeout($conn, $seconds)
m_sslcert_gen_hash		0;"	f	S:string function m_sslcert_gen_hash($filename)
m_transactionssent		0;"	f	S:int function m_transactionssent($conn)
m_transinqueue		0;"	f	S:int function m_transinqueue($conn)
m_transkeyval		0;"	f	S:int function m_transkeyval($conn, $identifier, $key, $value)
m_transnew		0;"	f	S:int function m_transnew($conn)
m_transsend		0;"	f	S:int function m_transsend($conn, $identifier)
m_uwait		0;"	f	S:int function m_uwait($microsecs)
m_validateidentifier		0;"	f	S:int function m_validateidentifier($conn, $tf)
m_verifyconnection		0;"	f	S:bool function m_verifyconnection($conn, $tf)
m_verifysslcert		0;"	f	S:bool function m_verifysslcert($conn, $tf)
calcul_hmac		0;"	f	S:string function calcul_hmac($clent, $siretcode, $price, $reference, $validity, $taxation, $devise, $language)
calculhmac		0;"	f	S:string function calculhmac($clent, $data)
nthmac		0;"	f	S:string function nthmac($clent, $data)
signeurlpaiement		0;"	f	S:string function signeurlpaiement($clent, $data)
crack_check		0;"	f	S:bool function crack_check($dictionary, $password)
crack_closedict		0;"	f	S:bool function crack_closedict($dictionary)
crack_getlastmessage		0;"	f	S:string function crack_getlastmessage()
crack_opendict		0;"	f	S:resource function crack_opendict($dictionary)
HASH_HMAC		0;"	d
hash_algos		0;"	f	S:array function hash_algos()
hash_copy		0;"	f	S:resource function hash_copy($context)
hash_equals		0;"	f	S:bool function hash_equals($known_string, $user_string)
hash_file		0;"	f	S:string function hash_file($algo, $filename, $raw_output = false)
hash_final		0;"	f	S:string function hash_final($context, $raw_output = false)
hash_hmac_file		0;"	f	S:string function hash_hmac_file($algo, $filename, $key, $raw_output = false)
hash_hmac		0;"	f	S:string function hash_hmac($algo, $data, $key, $raw_output = false)
hash_init		0;"	f	S:resource function hash_init($algo, $options, $key)
hash_pbkdf2		0;"	f	S:string function hash_pbkdf2($algo, $password, $salt, $iterations, $length, $raw_output = false)
hash_update_file		0;"	f	S:bool function hash_update_file($hcontext, $filename, $scontext)
hash_update_stream		0;"	f	S:int function hash_update_stream($context, $handle, $length = -1)
hash_update		0;"	f	S:bool function hash_update($context, $data)
hash		0;"	f	S:string function hash($algo, $data, $raw_output = false)
MCRYPT_ENCRYPT		0;"	d
MCRYPT_DECRYPT		0;"	d
MCRYPT_DEV_RANDOM		0;"	d
MCRYPT_DEV_URANDOM		0;"	d
MCRYPT_RAND		0;"	d
mcrypt_cbc		0;"	f	S:string function mcrypt_cbc($cipher, $key, $data, $mode, $iv)
mcrypt_cfb		0;"	f	S:string function mcrypt_cfb($cipher, $key, $data, $mode, $iv)
mcrypt_create_iv		0;"	f	S:string function mcrypt_create_iv($size, $source = MCRYPT_DEV_URANDOM)
mcrypt_decrypt		0;"	f	S:string function mcrypt_decrypt($cipher, $key, $data, $mode, $iv)
mcrypt_ecb		0;"	f	S:string function mcrypt_ecb($cipher, $key, $data, $mode, $iv)
mcrypt_enc_get_algorithms_name		0;"	f	S:string function mcrypt_enc_get_algorithms_name($td)
mcrypt_enc_get_block_size		0;"	f	S:int function mcrypt_enc_get_block_size($td)
mcrypt_enc_get_iv_size		0;"	f	S:int function mcrypt_enc_get_iv_size($td)
mcrypt_enc_get_key_size		0;"	f	S:int function mcrypt_enc_get_key_size($td)
mcrypt_enc_get_modes_name		0;"	f	S:string function mcrypt_enc_get_modes_name($td)
mcrypt_enc_get_supported_key_sizes		0;"	f	S:array function mcrypt_enc_get_supported_key_sizes($td)
mcrypt_enc_is_block_algorithm_mode		0;"	f	S:bool function mcrypt_enc_is_block_algorithm_mode($td)
mcrypt_enc_is_block_algorithm		0;"	f	S:bool function mcrypt_enc_is_block_algorithm($td)
mcrypt_enc_is_block_mode		0;"	f	S:bool function mcrypt_enc_is_block_mode($td)
mcrypt_enc_self_test		0;"	f	S:int function mcrypt_enc_self_test($td)
mcrypt_encrypt		0;"	f	S:string function mcrypt_encrypt($cipher, $key, $data, $mode, $iv)
mcrypt_generic_deinit		0;"	f	S:bool function mcrypt_generic_deinit($td)
mcrypt_generic_end		0;"	f	S:bool function mcrypt_generic_end($td)
mcrypt_generic_init		0;"	f	S:int function mcrypt_generic_init($td, $key, $iv)
mcrypt_generic		0;"	f	S:string function mcrypt_generic($td, $data)
mcrypt_get_block_size		0;"	f	S:int function mcrypt_get_block_size($cipher, $mode)
mcrypt_get_cipher_name		0;"	f	S:string function mcrypt_get_cipher_name($cipher)
mcrypt_get_iv_size		0;"	f	S:int function mcrypt_get_iv_size($cipher, $mode)
mcrypt_get_key_size		0;"	f	S:int function mcrypt_get_key_size($cipher, $mode)
mcrypt_list_algorithms		0;"	f	S:array function mcrypt_list_algorithms($lib_dir = ini_get("mcrypt.algorithms_dir"))
mcrypt_list_modes		0;"	f	S:array function mcrypt_list_modes($lib_dir = ini_get("mcrypt.modes_dir"))
mcrypt_module_close		0;"	f	S:bool function mcrypt_module_close($td)
mcrypt_module_get_algo_block_size		0;"	f	S:int function mcrypt_module_get_algo_block_size($algorithm, $lib_dir)
mcrypt_module_get_algo_key_size		0;"	f	S:int function mcrypt_module_get_algo_key_size($algorithm, $lib_dir)
mcrypt_module_get_supported_key_sizes		0;"	f	S:array function mcrypt_module_get_supported_key_sizes($algorithm, $lib_dir)
mcrypt_module_is_block_algorithm_mode		0;"	f	S:bool function mcrypt_module_is_block_algorithm_mode($mode, $lib_dir)
mcrypt_module_is_block_algorithm		0;"	f	S:bool function mcrypt_module_is_block_algorithm($algorithm, $lib_dir)
mcrypt_module_is_block_mode		0;"	f	S:bool function mcrypt_module_is_block_mode($mode, $lib_dir)
mcrypt_module_open		0;"	f	S:resource function mcrypt_module_open($algorithm, $algorithm_directory, $mode, $mode_directory)
mcrypt_module_self_test		0;"	f	S:bool function mcrypt_module_self_test($algorithm, $lib_dir)
mcrypt_ofb		0;"	f	S:string function mcrypt_ofb($cipher, $key, $data, $mode, $iv)
mdecrypt_generic		0;"	f	S:string function mdecrypt_generic($td, $data)
mhash_count		0;"	f	S:int function mhash_count()
mhash_get_block_size		0;"	f	S:int function mhash_get_block_size($hash)
mhash_get_hash_name		0;"	f	S:string function mhash_get_hash_name($hash)
mhash_keygen_s2k		0;"	f	S:string function mhash_keygen_s2k($hash, $password, $salt, $bytes)
mhash		0;"	f	S:string function mhash($hash, $data, $key)
X509_PURPOSE_SSL_CLIENT		0;"	d
X509_PURPOSE_SSL_SERVER		0;"	d
X509_PURPOSE_NS_SSL_SERVER		0;"	d
X509_PURPOSE_SMIME_SIGN		0;"	d
X509_PURPOSE_SMIME_ENCRYPT		0;"	d
X509_PURPOSE_CRL_SIGN		0;"	d
X509_PURPOSE_ANY		0;"	d
OPENSSL_PKCS1_PADDING		0;"	d
OPENSSL_SSLV23_PADDING		0;"	d
OPENSSL_NO_PADDING		0;"	d
OPENSSL_PKCS1_OAEP_PADDING		0;"	d
OPENSSL_KEYTYPE_RSA		0;"	d
OPENSSL_KEYTYPE_DSA		0;"	d
OPENSSL_KEYTYPE_DH		0;"	d
OPENSSL_KEYTYPE_EC		0;"	d
OPENSSL_ALGO_DSS1		0;"	d
OPENSSL_ALGO_SHA1		0;"	d
OPENSSL_ALGO_SHA224		0;"	d
OPENSSL_ALGO_SHA256		0;"	d
OPENSSL_ALGO_SHA384		0;"	d
OPENSSL_ALGO_SHA512		0;"	d
OPENSSL_ALGO_RMD160		0;"	d
OPENSSL_ALGO_MD5		0;"	d
OPENSSL_ALGO_MD4		0;"	d
OPENSSL_ALGO_MD2		0;"	d
OPENSSL_CIPHER_RC2_40		0;"	d
OPENSSL_CIPHER_RC2_128		0;"	d
OPENSSL_CIPHER_RC2_64		0;"	d
OPENSSL_CIPHER_DES		0;"	d
OPENSSL_CIPHER_3DES		0;"	d
OPENSSL_CIPHER_AES_128_CBC		0;"	d
OPENSSL_CIPHER_AES_192_CBC		0;"	d
OPENSSL_CIPHER_AES_256_CBC		0;"	d
OPENSSL_VERSION_TEXT		0;"	d
OPENSSL_VERSION_NUMBER		0;"	d
OPENSSL_TLSEXT_SERVER_NAME		0;"	d
openssl_cipher_iv_length		0;"	f	S:int function openssl_cipher_iv_length($method)
openssl_csr_export_to_file		0;"	f	S:bool function openssl_csr_export_to_file($csr, $outfilename, $notext = true)
openssl_csr_export		0;"	f	S:bool function openssl_csr_export($csr, &$out, $notext = true)
openssl_csr_get_public_key		0;"	f	S:resource function openssl_csr_get_public_key($csr, $use_shortnames = true)
openssl_csr_get_subject		0;"	f	S:array function openssl_csr_get_subject($csr, $use_shortnames = true)
openssl_csr_new		0;"	f	S:mixed function openssl_csr_new($dn, &$privkey, $configargs, $extraattribs)
openssl_csr_sign		0;"	f	S:resource function openssl_csr_sign($csr, $cacert, $priv_key, $days, $configargs, $serial)
openssl_decrypt		0;"	f	S:string function openssl_decrypt($data, $method, $password, $options, $iv = "")
openssl_dh_compute_key		0;"	f	S:string function openssl_dh_compute_key($pub_key, $dh_key)
openssl_digest		0;"	f	S:string function openssl_digest($data, $method, $raw_output = false)
openssl_encrypt		0;"	f	S:string function openssl_encrypt($data, $method, $password, $options, $iv = "")
openssl_error_string		0;"	f	S:string function openssl_error_string()
openssl_free_key		0;"	f	S:void function openssl_free_key($key_identifier)
openssl_get_cert_locations		0;"	f	S:array function openssl_get_cert_locations()
openssl_get_cipher_methods		0;"	f	S:array function openssl_get_cipher_methods($aliases = false)
openssl_get_md_methods		0;"	f	S:array function openssl_get_md_methods($aliases = false)
openssl_get_privatekey		0;"	f	S: function openssl_get_privatekey()
openssl_get_publickey		0;"	f	S: function openssl_get_publickey()
openssl_open		0;"	f	S:bool function openssl_open($sealed_data, &$open_data, $env_key, $priv_key_id, $method)
openssl_pbkdf2		0;"	f	S:string function openssl_pbkdf2($password, $salt, $key_length, $iterations, $digest_algorithm)
openssl_pkcs12_export_to_file		0;"	f	S:bool function openssl_pkcs12_export_to_file($x509, $filename, $priv_key, $pass, $args)
openssl_pkcs12_export		0;"	f	S:bool function openssl_pkcs12_export($x509, &$out, $priv_key, $pass, $args)
openssl_pkcs12_read		0;"	f	S:bool function openssl_pkcs12_read($pkcs12, &$certs, $pass)
openssl_pkcs7_decrypt		0;"	f	S:bool function openssl_pkcs7_decrypt($infilename, $outfilename, $recipcert, $recipkey)
openssl_pkcs7_encrypt		0;"	f	S:bool function openssl_pkcs7_encrypt($infile, $outfile, $recipcerts, $headers, $flags, $cipherid = OPENSSL_CIPHER_RC2_40)
openssl_pkcs7_sign		0;"	f	S:bool function openssl_pkcs7_sign($infilename, $outfilename, $signcert, $privkey, $headers, $flags = PKCS7_DETACHED, $extracerts)
openssl_pkcs7_verify		0;"	f	S:mixed function openssl_pkcs7_verify($filename, $flags, $outfilename, $cainfo, $extracerts, $content)
openssl_pkey_export_to_file		0;"	f	S:bool function openssl_pkey_export_to_file($key, $outfilename, $passphrase, $configargs)
openssl_pkey_export		0;"	f	S:bool function openssl_pkey_export($key, &$out, $passphrase, $configargs)
openssl_pkey_free		0;"	f	S:void function openssl_pkey_free($key)
openssl_pkey_get_details		0;"	f	S:array function openssl_pkey_get_details($key)
openssl_pkey_get_private		0;"	f	S:resource function openssl_pkey_get_private($key, $passphrase = "")
openssl_pkey_get_public		0;"	f	S:resource function openssl_pkey_get_public($certificate)
openssl_pkey_new		0;"	f	S:resource function openssl_pkey_new($configargs)
openssl_private_decrypt		0;"	f	S:bool function openssl_private_decrypt($data, &$decrypted, $key, $padding = OPENSSL_PKCS1_PADDING)
openssl_private_encrypt		0;"	f	S:bool function openssl_private_encrypt($data, &$crypted, $key, $padding = OPENSSL_PKCS1_PADDING)
openssl_public_decrypt		0;"	f	S:bool function openssl_public_decrypt($data, &$decrypted, $key, $padding = OPENSSL_PKCS1_PADDING)
openssl_public_encrypt		0;"	f	S:bool function openssl_public_encrypt($data, &$crypted, $key, $padding = OPENSSL_PKCS1_PADDING)
openssl_random_pseudo_bytes		0;"	f	S:string function openssl_random_pseudo_bytes($length, &$crypto_strong)
openssl_seal		0;"	f	S:int function openssl_seal($data, &$sealed_data, &$env_keys, $pub_key_ids, $method)
openssl_sign		0;"	f	S:bool function openssl_sign($data, &$signature, $priv_key_id, $signature_alg = OPENSSL_ALGO_SHA1)
openssl_spki_export_challenge		0;"	f	S:string function openssl_spki_export_challenge(&$spkac)
openssl_spki_export		0;"	f	S:string function openssl_spki_export(&$spkac)
openssl_spki_new		0;"	f	S:string function openssl_spki_new(&$privkey, &$challenge, $algorithm)
openssl_spki_verify		0;"	f	S:string function openssl_spki_verify(&$spkac)
openssl_verify		0;"	f	S:int function openssl_verify($data, $signature, $pub_key_id, $signature_alg = OPENSSL_ALGO_SHA1)
openssl_x509_check_private_key		0;"	f	S:bool function openssl_x509_check_private_key($cert, $key)
openssl_x509_checkpurpose		0;"	f	S:int function openssl_x509_checkpurpose($x509cert, $purpose, $cainfo = array(), $untrustedfile)
openssl_x509_export_to_file		0;"	f	S:bool function openssl_x509_export_to_file($x509, $outfilename, $notext)
openssl_x509_export		0;"	f	S:bool function openssl_x509_export($x509, &$output, $notext)
openssl_x509_fingerprint		0;"	f	S:bool function openssl_x509_fingerprint($x509, $hash_algorithm = "sha1", $raw_output)
openssl_x509_free		0;"	f	S:void function openssl_x509_free($x509cert)
openssl_x509_parse		0;"	f	S:array function openssl_x509_parse($x509cert, $shortnames = true)
openssl_x509_read		0;"	f	S:resource function openssl_x509_read($x509certdata)
PASSWORD_BCRYPT		0;"	d
PASSWORD_DEFAULT		0;"	d
password_get_info		0;"	f	S:array function password_get_info($hash)
password_hash		0;"	f	S:string function password_hash($password, $algo, $options)
password_needs_rehash		0;"	f	S:boolean function password_needs_rehash($hash, $algo, $options)
password_verify		0;"	f	S:boolean function password_verify($password, $hash)
dba_close		0;"	f	S:void function dba_close($handle)
dba_delete		0;"	f	S:bool function dba_delete($key, $handle)
dba_exists		0;"	f	S:bool function dba_exists($key, $handle)
dba_fetch		0;"	f	S:string function dba_fetch($key, $handle, $skip)
dba_firstkey		0;"	f	S:string function dba_firstkey($handle)
dba_handlers		0;"	f	S:array function dba_handlers($full_info = false)
dba_insert		0;"	f	S:bool function dba_insert($key, $value, $handle)
dba_key_split		0;"	f	S:mixed function dba_key_split($key)
dba_list		0;"	f	S:array function dba_list()
dba_nextkey		0;"	f	S:string function dba_nextkey($handle)
dba_open		0;"	f	S:resource function dba_open($path, $mode, $handler, $...)
dba_optimize		0;"	f	S:bool function dba_optimize($handle)
dba_popen		0;"	f	S:resource function dba_popen($path, $mode, $handler, $...)
dba_replace		0;"	f	S:bool function dba_replace($key, $value, $handle)
dba_sync		0;"	f	S:bool function dba_sync($handle)
DBX_MYSQL		0;"	d
DBX_ODBC		0;"	d
DBX_PGSQL		0;"	d
DBX_MSSQL		0;"	d
DBX_FBSQL		0;"	d
DBX_OCI8		0;"	d
DBX_SYBASECT		0;"	d
DBX_SQLITE		0;"	d
DBX_PERSISTENT		0;"	d
DBX_RESULT_INFO		0;"	d
DBX_RESULT_INDEX		0;"	d
DBX_RESULT_ASSOC		0;"	d
DBX_RESULT_UNBUFFERED		0;"	d
DBX_COLNAMES_UNCHANGED		0;"	d
DBX_COLNAMES_UPPERCASE		0;"	d
DBX_COLNAMES_LOWERCASE		0;"	d
DBX_CMP_NATIVE		0;"	d
DBX_CMP_TEXT		0;"	d
DBX_CMP_NUMBER		0;"	d
DBX_CMP_ASC		0;"	d
DBX_CMP_DESC		0;"	d
dbx_close		0;"	f	S:int function dbx_close($link_identifier)
dbx_compare		0;"	f	S:int function dbx_compare($row_a, $row_b, $column_key, $flags = DBX_CMP_ASC | DBX_CMP_NATIVE)
dbx_connect		0;"	f	S:object function dbx_connect($module, $host, $database, $username, $password, $persistent)
dbx_error		0;"	f	S:string function dbx_error($link_identifier)
dbx_escape_string		0;"	f	S:string function dbx_escape_string($link_identifier, $text)
dbx_fetch_row		0;"	f	S:mixed function dbx_fetch_row($result_identifier)
dbx_query		0;"	f	S:mixed function dbx_query($link_identifier, $sql_statement, $flags)
dbx_sort		0;"	f	S:bool function dbx_sort($result, $user_compare_function)
ODBC_TYPE		0;"	d
ODBC_BINMODE_PASSTHRU		0;"	d
ODBC_BINMODE_RETURN		0;"	d
ODBC_BINMODE_CONVERT		0;"	d
SQL_ODBC_CURSORS		0;"	d
SQL_CUR_USE_DRIVER		0;"	d
SQL_CUR_USE_IF_NEEDED		0;"	d
SQL_CUR_USE_ODBC		0;"	d
SQL_CONCURRENCY		0;"	d
SQL_CONCUR_READ_ONLY		0;"	d
SQL_CONCUR_LOCK		0;"	d
SQL_CONCUR_ROWVER		0;"	d
SQL_CONCUR_VALUES		0;"	d
SQL_CURSOR_TYPE		0;"	d
SQL_CURSOR_FORWARD_ONLY		0;"	d
SQL_CURSOR_KEYSET_DRIVEN		0;"	d
SQL_CURSOR_DYNAMIC		0;"	d
SQL_CURSOR_STATIC		0;"	d
SQL_KEYSET_SIZE		0;"	d
SQL_CHAR		0;"	d
SQL_VARCHAR		0;"	d
SQL_LONGVARCHAR		0;"	d
SQL_DECIMAL		0;"	d
SQL_NUMERIC		0;"	d
SQL_BIT		0;"	d
SQL_TINYINT		0;"	d
SQL_SMALLINT		0;"	d
SQL_INTEGER		0;"	d
SQL_BIGINT		0;"	d
SQL_REAL		0;"	d
SQL_FLOAT		0;"	d
SQL_DOUBLE		0;"	d
SQL_BINARY		0;"	d
SQL_VARBINARY		0;"	d
SQL_LONGVARBINARY		0;"	d
SQL_DATE		0;"	d
SQL_TIME		0;"	d
SQL_TIMESTAMP		0;"	d
SQL_TYPE_DATE		0;"	d
SQL_TYPE_TIME		0;"	d
SQL_TYPE_TIMESTAMP		0;"	d
SQL_BEST_ROWID		0;"	d
SQL_ROWVER		0;"	d
SQL_SCOPE_CURROW		0;"	d
SQL_SCOPE_TRANSACTION		0;"	d
SQL_SCOPE_SESSION		0;"	d
SQL_NO_NULLS		0;"	d
SQL_NULLABLE		0;"	d
SQL_INDEX_UNIQUE		0;"	d
SQL_INDEX_ALL		0;"	d
SQL_ENSURE		0;"	d
SQL_QUICK		0;"	d
odbc_autocommit		0;"	f	S:mixed function odbc_autocommit($connection_id, $OnOff = false)
odbc_binmode		0;"	f	S:bool function odbc_binmode($result_id, $mode)
odbc_close_all		0;"	f	S:void function odbc_close_all()
odbc_close		0;"	f	S:void function odbc_close($connection_id)
odbc_columnprivileges		0;"	f	S:resource function odbc_columnprivileges($connection_id, $qualifier, $owner, $table_name, $column_name)
odbc_columns		0;"	f	S:resource function odbc_columns($connection_id, $qualifier, $schema, $table_name, $column_name)
odbc_commit		0;"	f	S:bool function odbc_commit($connection_id)
odbc_connect		0;"	f	S:resource function odbc_connect($dsn, $user, $password, $cursor_type)
odbc_cursor		0;"	f	S:string function odbc_cursor($result_id)
odbc_data_source		0;"	f	S:array function odbc_data_source($connection_id, $fetch_type)
odbc_do		0;"	f	S: function odbc_do()
odbc_error		0;"	f	S:string function odbc_error($connection_id)
odbc_errormsg		0;"	f	S:string function odbc_errormsg($connection_id)
odbc_exec		0;"	f	S:resource function odbc_exec($connection_id, $query_string, $flags)
odbc_execute		0;"	f	S:bool function odbc_execute($result_id, $parameters_array)
odbc_fetch_array		0;"	f	S:array function odbc_fetch_array($result, $rownumber)
odbc_fetch_into		0;"	f	S:array function odbc_fetch_into($result_id, &$result_array, $rownumber)
odbc_fetch_object		0;"	f	S:object function odbc_fetch_object($result, $rownumber)
odbc_fetch_row		0;"	f	S:bool function odbc_fetch_row($result_id, $row_number)
odbc_field_len		0;"	f	S:int function odbc_field_len($result_id, $field_number)
odbc_field_name		0;"	f	S:string function odbc_field_name($result_id, $field_number)
odbc_field_num		0;"	f	S:int function odbc_field_num($result_id, $field_name)
odbc_field_precision		0;"	f	S: function odbc_field_precision()
odbc_field_scale		0;"	f	S:int function odbc_field_scale($result_id, $field_number)
odbc_field_type		0;"	f	S:string function odbc_field_type($result_id, $field_number)
odbc_foreignkeys		0;"	f	S:resource function odbc_foreignkeys($connection_id, $pk_qualifier, $pk_owner, $pk_table, $fk_qualifier, $fk_owner, $fk_table)
odbc_free_result		0;"	f	S:bool function odbc_free_result($result_id)
odbc_gettypeinfo		0;"	f	S:resource function odbc_gettypeinfo($connection_id, $data_type)
odbc_longreadlen		0;"	f	S:bool function odbc_longreadlen($result_id, $length)
odbc_next_result		0;"	f	S:bool function odbc_next_result($result_id)
odbc_num_fields		0;"	f	S:int function odbc_num_fields($result_id)
odbc_num_rows		0;"	f	S:int function odbc_num_rows($result_id)
odbc_pconnect		0;"	f	S:resource function odbc_pconnect($dsn, $user, $password, $cursor_type)
odbc_prepare		0;"	f	S:resource function odbc_prepare($connection_id, $query_string)
odbc_primarykeys		0;"	f	S:resource function odbc_primarykeys($connection_id, $qualifier, $owner, $table)
odbc_procedurecolumns		0;"	f	S:resource function odbc_procedurecolumns($connection_id, $qualifier, $owner, $proc, $column)
odbc_procedures		0;"	f	S:resource function odbc_procedures($connection_id, $qualifier, $owner, $name)
odbc_result_all		0;"	f	S:int function odbc_result_all($result_id, $format)
odbc_result		0;"	f	S:mixed function odbc_result($result_id, $field)
odbc_rollback		0;"	f	S:bool function odbc_rollback($connection_id)
odbc_setoption		0;"	f	S:bool function odbc_setoption($id, $function, $option, $param)
odbc_specialcolumns		0;"	f	S:resource function odbc_specialcolumns($connection_id, $type, $qualifier, $owner, $table, $scope, $nullable)
odbc_statistics		0;"	f	S:resource function odbc_statistics($connection_id, $qualifier, $owner, $table_name, $unique, $accuracy)
odbc_tableprivileges		0;"	f	S:resource function odbc_tableprivileges($connection_id, $qualifier, $owner, $name)
odbc_tables		0;"	f	S:resource function odbc_tables($connection_id, $qualifier, $owner, $name, $types)
PARAM_BOOL		0;"	o	class:PDO
PARAM_NULL		0;"	o	class:PDO
PARAM_INT		0;"	o	class:PDO
PARAM_STR		0;"	o	class:PDO
PARAM_LOB		0;"	o	class:PDO
PARAM_STMT		0;"	o	class:PDO
PARAM_INPUT_OUTPUT		0;"	o	class:PDO
FETCH_LAZY		0;"	o	class:PDO
FETCH_ASSOC		0;"	o	class:PDO
FETCH_NAMED		0;"	o	class:PDO
FETCH_NUM		0;"	o	class:PDO
FETCH_BOTH		0;"	o	class:PDO
FETCH_OBJ		0;"	o	class:PDO
FETCH_BOUND		0;"	o	class:PDO
FETCH_COLUMN		0;"	o	class:PDO
FETCH_CLASS		0;"	o	class:PDO
FETCH_INTO		0;"	o	class:PDO
FETCH_FUNC		0;"	o	class:PDO
FETCH_GROUP		0;"	o	class:PDO
FETCH_UNIQUE		0;"	o	class:PDO
FETCH_KEY_PAIR		0;"	o	class:PDO
FETCH_CLASSTYPE		0;"	o	class:PDO
FETCH_SERIALIZE		0;"	o	class:PDO
FETCH_PROPS_LATE		0;"	o	class:PDO
ATTR_AUTOCOMMIT		0;"	o	class:PDO
ATTR_PREFETCH		0;"	o	class:PDO
ATTR_TIMEOUT		0;"	o	class:PDO
ATTR_ERRMODE		0;"	o	class:PDO
ATTR_SERVER_VERSION		0;"	o	class:PDO
ATTR_CLIENT_VERSION		0;"	o	class:PDO
ATTR_SERVER_INFO		0;"	o	class:PDO
ATTR_CONNECTION_STATUS		0;"	o	class:PDO
ATTR_CASE		0;"	o	class:PDO
ATTR_CURSOR_NAME		0;"	o	class:PDO
ATTR_CURSOR		0;"	o	class:PDO
ATTR_DRIVER_NAME		0;"	o	class:PDO
ATTR_ORACLE_NULLS		0;"	o	class:PDO
ATTR_PERSISTENT		0;"	o	class:PDO
ATTR_STATEMENT_CLASS		0;"	o	class:PDO
ATTR_FETCH_CATALOG_NAMES		0;"	o	class:PDO
ATTR_FETCH_TABLE_NAMES		0;"	o	class:PDO
ATTR_STRINGIFY_FETCHES		0;"	o	class:PDO
ATTR_MAX_COLUMN_LEN		0;"	o	class:PDO
ATTR_DEFAULT_FETCH_MODE		0;"	o	class:PDO
ATTR_EMULATE_PREPARES		0;"	o	class:PDO
ERRMODE_SILENT		0;"	o	class:PDO
ERRMODE_WARNING		0;"	o	class:PDO
ERRMODE_EXCEPTION		0;"	o	class:PDO
CASE_NATURAL		0;"	o	class:PDO
CASE_LOWER		0;"	o	class:PDO
CASE_UPPER		0;"	o	class:PDO
NULL_NATURAL		0;"	o	class:PDO
NULL_EMPTY_STRING		0;"	o	class:PDO
NULL_TO_STRING		0;"	o	class:PDO
FETCH_ORI_NEXT		0;"	o	class:PDO
FETCH_ORI_PRIOR		0;"	o	class:PDO
FETCH_ORI_FIRST		0;"	o	class:PDO
FETCH_ORI_LAST		0;"	o	class:PDO
FETCH_ORI_ABS		0;"	o	class:PDO
FETCH_ORI_REL		0;"	o	class:PDO
CURSOR_FWDONLY		0;"	o	class:PDO
CURSOR_SCROLL		0;"	o	class:PDO
ERR_NONE		0;"	o	class:PDO
PARAM_EVT_ALLOC		0;"	o	class:PDO
PARAM_EVT_FREE		0;"	o	class:PDO
PARAM_EVT_EXEC_PRE		0;"	o	class:PDO
PARAM_EVT_EXEC_POST		0;"	o	class:PDO
PARAM_EVT_FETCH_PRE		0;"	o	class:PDO
PARAM_EVT_FETCH_POST		0;"	o	class:PDO
PARAM_EVT_NORMALIZE		0;"	o	class:PDO
PDO		0;"	c
beginTransaction		0;"	f	S:bool function beginTransaction()	class:PDO
commit		0;"	f	S:bool function commit()	class:PDO
__construct		0;"	f	S: function __construct($dsn, $username, $password, $options)	class:PDO
errorCode		0;"	f	S:mixed function errorCode()	class:PDO
errorInfo		0;"	f	S:array function errorInfo()	class:PDO
exec		0;"	f	S:int function exec($statement)	class:PDO
getAttribute		0;"	f	S:mixed function getAttribute($attribute)	class:PDO
getAvailableDrivers		0;"	f	S:array function getAvailableDrivers()	class:PDO	a:static
inTransaction		0;"	f	S:bool function inTransaction()	class:PDO
lastInsertId		0;"	f	S:string function lastInsertId($name)	class:PDO
prepare		0;"	f	S:PDOStatement function prepare($statement, $driver_options = array())	class:PDO
query		0;"	f	S:PDOStatement function query($statement, $PDO::FETCH_COLUMN, $colno, $PDO::FETCH_CLASS, $classname, $ctorargs, $PDO::FETCH_INTO, $object)	class:PDO
quote		0;"	f	S:string function quote($string, $parameter_type = PDO::PARAM_STR)	class:PDO
rollBack		0;"	f	S:bool function rollBack()	class:PDO
setAttribute		0;"	f	S:bool function setAttribute($attribute, $value)	class:PDO
PDOStatement		0;"	c
queryString		0;"	p	class:PDOStatement	S: PDOStatement::queryString
bindColumn		0;"	f	S:bool function bindColumn($column, &$param, $type, $maxlen, $driverdata)	class:PDOStatement
bindParam		0;"	f	S:bool function bindParam($parameter, &$variable, $data_type = PDO::PARAM_STR, $length, $driver_options)	class:PDOStatement
bindValue		0;"	f	S:bool function bindValue($parameter, $value, $data_type = PDO::PARAM_STR)	class:PDOStatement
closeCursor		0;"	f	S:bool function closeCursor()	class:PDOStatement
columnCount		0;"	f	S:int function columnCount()	class:PDOStatement
debugDumpParams		0;"	f	S:string function debugDumpParams()	class:PDOStatement
errorCode		0;"	f	S:string function errorCode()	class:PDOStatement
errorInfo		0;"	f	S:array function errorInfo()	class:PDOStatement
execute		0;"	f	S:bool function execute($input_parameters)	class:PDOStatement
fetch		0;"	f	S:mixed function fetch($fetch_style, $cursor_orientation = PDO::FETCH_ORI_NEXT, $cursor_offset)	class:PDOStatement
fetchAll		0;"	f	S:array function fetchAll($fetch_style, $fetch_argument, $ctor_args = array())	class:PDOStatement
fetchColumn		0;"	f	S:string function fetchColumn($column_number)	class:PDOStatement
fetchObject		0;"	f	S:mixed function fetchObject($class_name = "stdClass", $ctor_args)	class:PDOStatement
getAttribute		0;"	f	S:mixed function getAttribute($attribute)	class:PDOStatement
getColumnMeta		0;"	f	S:array function getColumnMeta($column)	class:PDOStatement
nextRowset		0;"	f	S:bool function nextRowset()	class:PDOStatement
rowCount		0;"	f	S:int function rowCount()	class:PDOStatement
setAttribute		0;"	f	S:bool function setAttribute($attribute, $value)	class:PDOStatement
setFetchMode		0;"	f	S:bool function setFetchMode($mode, $PDO::FETCH_COLUMN, $colno, $PDO::FETCH_CLASS, $classname, $ctorargs, $PDO::FETCH_INTO, $object)	class:PDOStatement
PDOException		0;"	c	i:RuntimeException
errorInfo		0;"	p	class:PDOException	S: PDOException::errorInfo
code		0;"	p	class:PDOException	a:protected	S:protected PDOException::code
message		0;"	p	class:PDOException	a:protected	S:protected PDOException::message
code		0;"	p	class:PDOException	a:protected	S:protected PDOException::code
file		0;"	p	class:PDOException	a:protected	S:protected PDOException::file
line		0;"	p	class:PDOException	a:protected	S:protected PDOException::line
cubrid_schema		0;"	f	S:array function cubrid_schema($schema_type, $table_name, $col_name)	class:PDO
pgsqlGetNotify		0;"	f	S:array function pgsqlGetNotify($result_type, $ms_timeout)	class:PDO
pgsqlGetPid		0;"	f	S:int function pgsqlGetPid()	class:PDO
pgsqlLOBCreate		0;"	f	S:string function pgsqlLOBCreate()	class:PDO
pgsqlLOBOpen		0;"	f	S:resource function pgsqlLOBOpen($oid, $mode = "rb")	class:PDO
pgsqlLOBUnlink		0;"	f	S:bool function pgsqlLOBUnlink($oid)	class:PDO
sqliteCreateAggregate		0;"	f	S:bool function sqliteCreateAggregate($function_name, $step_func, $finalize_func, $num_args)	class:PDO
sqliteCreateFunction		0;"	f	S:bool function sqliteCreateFunction($function_name, $callback, $num_args)	class:PDO
cubrid_bind		0;"	f	S:bool function cubrid_bind($req_identifier, $bind_index, $bind_value, $bind_value_type)
cubrid_close_prepare		0;"	f	S:bool function cubrid_close_prepare($req_identifier)
cubrid_close_request		0;"	f	S:bool function cubrid_close_request($req_identifier)
cubrid_col_get		0;"	f	S:array function cubrid_col_get($conn_identifier, $oid, $attr_name)
cubrid_col_size		0;"	f	S:int function cubrid_col_size($conn_identifier, $oid, $attr_name)
cubrid_column_names		0;"	f	S:array function cubrid_column_names($req_identifier)
cubrid_column_types		0;"	f	S:array function cubrid_column_types($req_identifier)
cubrid_commit		0;"	f	S:bool function cubrid_commit($conn_identifier)
cubrid_connect_with_url		0;"	f	S:resource function cubrid_connect_with_url($conn_url, $userid, $passwd, $new_link = false)
cubrid_connect		0;"	f	S:resource function cubrid_connect($host, $port, $dbname, $userid, $passwd, $new_link = false)
cubrid_current_oid		0;"	f	S:string function cubrid_current_oid($req_identifier)
cubrid_disconnect		0;"	f	S:bool function cubrid_disconnect($conn_identifier)
cubrid_drop		0;"	f	S:bool function cubrid_drop($conn_identifier, $oid)
cubrid_error_code_facility		0;"	f	S:int function cubrid_error_code_facility()
cubrid_error_code		0;"	f	S:int function cubrid_error_code()
cubrid_error_msg		0;"	f	S:string function cubrid_error_msg()
cubrid_execute		0;"	f	S:bool function cubrid_execute($conn_identifier, $sql, $option, $request_identifier)
cubrid_fetch		0;"	f	S:mixed function cubrid_fetch($result, $type = CUBRID_BOTH)
cubrid_free_result		0;"	f	S:bool function cubrid_free_result($req_identifier)
cubrid_get_autocommit		0;"	f	S:bool function cubrid_get_autocommit($conn_identifier)
cubrid_get_charset		0;"	f	S:string function cubrid_get_charset($conn_identifier)
cubrid_get_class_name		0;"	f	S:string function cubrid_get_class_name($conn_identifier, $oid)
cubrid_get_client_info		0;"	f	S:string function cubrid_get_client_info()
cubrid_get_db_parameter		0;"	f	S:array function cubrid_get_db_parameter($conn_identifier)
cubrid_get_query_timeout		0;"	f	S:int function cubrid_get_query_timeout($req_identifier)
cubrid_get_server_info		0;"	f	S:string function cubrid_get_server_info($conn_identifier)
cubrid_get		0;"	f	S:mixed function cubrid_get($conn_identifier, $oid, $attr)
cubrid_insert_id		0;"	f	S:string function cubrid_insert_id($conn_identifier)
cubrid_is_instance		0;"	f	S:int function cubrid_is_instance($conn_identifier, $oid)
cubrid_lob_close		0;"	f	S:bool function cubrid_lob_close($lob_identifier_array)
cubrid_lob_export		0;"	f	S:bool function cubrid_lob_export($conn_identifier, $lob_identifier, $path_name)
cubrid_lob_get		0;"	f	S:array function cubrid_lob_get($conn_identifier, $sql)
cubrid_lob_send		0;"	f	S:bool function cubrid_lob_send($conn_identifier, $lob_identifier)
cubrid_lob_size		0;"	f	S:string function cubrid_lob_size($lob_identifier)
cubrid_lob2_bind		0;"	f	S:bool function cubrid_lob2_bind($req_identifier, $bind_index, $bind_value, $bind_value_type)
cubrid_lob2_close		0;"	f	S:bool function cubrid_lob2_close($lob_identifier)
cubrid_lob2_export		0;"	f	S:bool function cubrid_lob2_export($lob_identifier, $file_name)
cubrid_lob2_import		0;"	f	S:bool function cubrid_lob2_import($lob_identifier, $file_name)
cubrid_lob2_new		0;"	f	S:resource function cubrid_lob2_new($conn_identifier, $type = "BLOB")
cubrid_lob2_read		0;"	f	S:string function cubrid_lob2_read($lob_identifier, $len)
cubrid_lob2_seek64		0;"	f	S:bool function cubrid_lob2_seek64($lob_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT)
cubrid_lob2_seek		0;"	f	S:bool function cubrid_lob2_seek($lob_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT)
cubrid_lob2_size64		0;"	f	S:string function cubrid_lob2_size64($lob_identifier)
cubrid_lob2_size		0;"	f	S:int function cubrid_lob2_size($lob_identifier)
cubrid_lob2_tell64		0;"	f	S:string function cubrid_lob2_tell64($lob_identifier)
cubrid_lob2_tell		0;"	f	S:int function cubrid_lob2_tell($lob_identifier)
cubrid_lob2_write		0;"	f	S:bool function cubrid_lob2_write($lob_identifier, $buf)
cubrid_lock_read		0;"	f	S:bool function cubrid_lock_read($conn_identifier, $oid)
cubrid_lock_write		0;"	f	S:bool function cubrid_lock_write($conn_identifier, $oid)
cubrid_move_cursor		0;"	f	S:int function cubrid_move_cursor($req_identifier, $offset, $origin = CUBRID_CURSOR_CURRENT)
cubrid_next_result		0;"	f	S:bool function cubrid_next_result($result)
cubrid_num_cols		0;"	f	S:int function cubrid_num_cols($result)
cubrid_num_rows		0;"	f	S:int function cubrid_num_rows($result)
cubrid_pconnect_with_url		0;"	f	S:resource function cubrid_pconnect_with_url($conn_url, $userid, $passwd)
cubrid_pconnect		0;"	f	S:resource function cubrid_pconnect($host, $port, $dbname, $userid, $passwd)
cubrid_prepare		0;"	f	S:resource function cubrid_prepare($conn_identifier, $prepare_stmt, $option)
cubrid_put		0;"	f	S:int function cubrid_put($conn_identifier, $oid, $attr, $value)
cubrid_rollback		0;"	f	S:bool function cubrid_rollback($conn_identifier)
cubrid_schema		0;"	f	S:array function cubrid_schema($conn_identifier, $schema_type, $class_name, $attr_name)
cubrid_seq_drop		0;"	f	S:bool function cubrid_seq_drop($conn_identifier, $oid, $attr_name, $index)
cubrid_seq_insert		0;"	f	S:bool function cubrid_seq_insert($conn_identifier, $oid, $attr_name, $index, $seq_element)
cubrid_seq_put		0;"	f	S:bool function cubrid_seq_put($conn_identifier, $oid, $attr_name, $index, $seq_element)
cubrid_set_add		0;"	f	S:bool function cubrid_set_add($conn_identifier, $oid, $attr_name, $set_element)
cubrid_set_autocommit		0;"	f	S:bool function cubrid_set_autocommit($conn_identifier, $mode)
cubrid_set_db_parameter		0;"	f	S:bool function cubrid_set_db_parameter($conn_identifier, $param_type, $param_value)
cubrid_set_drop		0;"	f	S:bool function cubrid_set_drop($conn_identifier, $oid, $attr_name, $set_element)
cubrid_set_query_timeout		0;"	f	S:bool function cubrid_set_query_timeout($req_identifier, $timeout)
cubrid_version		0;"	f	S:string function cubrid_version()
cubrid_affected_rows		0;"	f	S:int function cubrid_affected_rows($conn_identifier, $req_identifier)
cubrid_client_encoding		0;"	f	S:string function cubrid_client_encoding($conn_identifier)
cubrid_close		0;"	f	S:bool function cubrid_close($conn_identifier)
cubrid_data_seek		0;"	f	S:bool function cubrid_data_seek($result, $row_number)
cubrid_db_name		0;"	f	S:string function cubrid_db_name($result, $index)
cubrid_errno		0;"	f	S:int function cubrid_errno($conn_identifier)
cubrid_error		0;"	f	S:string function cubrid_error($connection)
cubrid_fetch_array		0;"	f	S:array function cubrid_fetch_array($result, $type = CUBRID_BOTH)
cubrid_fetch_assoc		0;"	f	S:array function cubrid_fetch_assoc($result, $type)
cubrid_fetch_field		0;"	f	S:object function cubrid_fetch_field($result, $field_offset)
cubrid_fetch_lengths		0;"	f	S:array function cubrid_fetch_lengths($result)
cubrid_fetch_object		0;"	f	S:object function cubrid_fetch_object($result, $class_name, $params, $type)
cubrid_fetch_row		0;"	f	S:array function cubrid_fetch_row($result, $type)
cubrid_field_flags		0;"	f	S:string function cubrid_field_flags($result, $field_offset)
cubrid_field_len		0;"	f	S:int function cubrid_field_len($result, $field_offset)
cubrid_field_name		0;"	f	S:string function cubrid_field_name($result, $field_offset)
cubrid_field_seek		0;"	f	S:bool function cubrid_field_seek($result, $field_offset)
cubrid_field_table		0;"	f	S:string function cubrid_field_table($result, $field_offset)
cubrid_field_type		0;"	f	S:string function cubrid_field_type($result, $field_offset)
cubrid_list_dbs		0;"	f	S:array function cubrid_list_dbs($conn_identifier)
cubrid_num_fields		0;"	f	S:int function cubrid_num_fields($result)
cubrid_ping		0;"	f	S:bool function cubrid_ping($conn_identifier)
cubrid_query		0;"	f	S:resource function cubrid_query($query, $conn_identifier)
cubrid_real_escape_string		0;"	f	S:string function cubrid_real_escape_string($unescaped_string, $conn_identifier)
cubrid_result		0;"	f	S:string function cubrid_result($result, $row, $field)
cubrid_unbuffered_query		0;"	f	S:resource function cubrid_unbuffered_query($query, $conn_identifier)
cubrid_load_from_glo		0;"	f	S:int function cubrid_load_from_glo($conn_identifier, $oid, $file_name)
cubrid_new_glo		0;"	f	S:string function cubrid_new_glo($conn_identifier, $class_name, $file_name)
cubrid_save_to_glo		0;"	f	S:int function cubrid_save_to_glo($conn_identifier, $oid, $file_name)
cubrid_send_glo		0;"	f	S:int function cubrid_send_glo($conn_identifier, $oid)
dbplus_add		0;"	f	S:int function dbplus_add($relation, $tuple)
dbplus_aql		0;"	f	S:resource function dbplus_aql($query, $server, $dbpath)
dbplus_chdir		0;"	f	S:string function dbplus_chdir($newdir)
dbplus_close		0;"	f	S:mixed function dbplus_close($relation)
dbplus_curr		0;"	f	S:int function dbplus_curr($relation, &$tuple)
dbplus_errcode		0;"	f	S:string function dbplus_errcode($errno)
dbplus_errno		0;"	f	S:int function dbplus_errno()
dbplus_find		0;"	f	S:int function dbplus_find($relation, $constraints, $tuple)
dbplus_first		0;"	f	S:int function dbplus_first($relation, &$tuple)
dbplus_flush		0;"	f	S:int function dbplus_flush($relation)
dbplus_freealllocks		0;"	f	S:int function dbplus_freealllocks()
dbplus_freelock		0;"	f	S:int function dbplus_freelock($relation, $tuple)
dbplus_freerlocks		0;"	f	S:int function dbplus_freerlocks($relation)
dbplus_getlock		0;"	f	S:int function dbplus_getlock($relation, $tuple)
dbplus_getunique		0;"	f	S:int function dbplus_getunique($relation, $uniqueid)
dbplus_info		0;"	f	S:int function dbplus_info($relation, $key, &$result)
dbplus_last		0;"	f	S:int function dbplus_last($relation, &$tuple)
dbplus_lockrel		0;"	f	S:int function dbplus_lockrel($relation)
dbplus_next		0;"	f	S:int function dbplus_next($relation, &$tuple)
dbplus_open		0;"	f	S:resource function dbplus_open($name)
dbplus_prev		0;"	f	S:int function dbplus_prev($relation, &$tuple)
dbplus_rchperm		0;"	f	S:int function dbplus_rchperm($relation, $mask, $user, $group)
dbplus_rcreate		0;"	f	S:resource function dbplus_rcreate($name, $domlist, $overwrite)
dbplus_rcrtexact		0;"	f	S:mixed function dbplus_rcrtexact($name, $relation, $overwrite)
dbplus_rcrtlike		0;"	f	S:mixed function dbplus_rcrtlike($name, $relation, $overwrite)
dbplus_resolve		0;"	f	S:array function dbplus_resolve($relation_name)
dbplus_restorepos		0;"	f	S:int function dbplus_restorepos($relation, $tuple)
dbplus_rkeys		0;"	f	S:mixed function dbplus_rkeys($relation, $domlist)
dbplus_ropen		0;"	f	S:resource function dbplus_ropen($name)
dbplus_rquery		0;"	f	S:resource function dbplus_rquery($query, $dbpath)
dbplus_rrename		0;"	f	S:int function dbplus_rrename($relation, $name)
dbplus_rsecindex		0;"	f	S:mixed function dbplus_rsecindex($relation, $domlist, $type)
dbplus_runlink		0;"	f	S:int function dbplus_runlink($relation)
dbplus_rzap		0;"	f	S:int function dbplus_rzap($relation)
dbplus_savepos		0;"	f	S:int function dbplus_savepos($relation)
dbplus_setindex		0;"	f	S:int function dbplus_setindex($relation, $idx_name)
dbplus_setindexbynumber		0;"	f	S:int function dbplus_setindexbynumber($relation, $idx_number)
dbplus_sql		0;"	f	S:resource function dbplus_sql($query, $server, $dbpath)
dbplus_tcl		0;"	f	S:string function dbplus_tcl($sid, $script)
dbplus_tremove		0;"	f	S:int function dbplus_tremove($relation, $tuple, &$current)
dbplus_undo		0;"	f	S:int function dbplus_undo($relation)
dbplus_undoprepare		0;"	f	S:int function dbplus_undoprepare($relation)
dbplus_unlockrel		0;"	f	S:int function dbplus_unlockrel($relation)
dbplus_unselect		0;"	f	S:int function dbplus_unselect($relation)
dbplus_update		0;"	f	S:int function dbplus_update($relation, $old, $new)
dbplus_xlockrel		0;"	f	S:int function dbplus_xlockrel($relation)
dbplus_xunlockrel		0;"	f	S:int function dbplus_xunlockrel($relation)
dbase_add_record		0;"	f	S:bool function dbase_add_record($dbase_identifier, $record)
dbase_close		0;"	f	S:bool function dbase_close($dbase_identifier)
dbase_create		0;"	f	S:int function dbase_create($filename, $fields)
dbase_delete_record		0;"	f	S:bool function dbase_delete_record($dbase_identifier, $record_number)
dbase_get_header_info		0;"	f	S:array function dbase_get_header_info($dbase_identifier)
dbase_get_record_with_names		0;"	f	S:array function dbase_get_record_with_names($dbase_identifier, $record_number)
dbase_get_record		0;"	f	S:array function dbase_get_record($dbase_identifier, $record_number)
dbase_numfields		0;"	f	S:int function dbase_numfields($dbase_identifier)
dbase_numrecords		0;"	f	S:int function dbase_numrecords($dbase_identifier)
dbase_open		0;"	f	S:int function dbase_open($filename, $mode)
dbase_pack		0;"	f	S:bool function dbase_pack($dbase_identifier)
dbase_replace_record		0;"	f	S:bool function dbase_replace_record($dbase_identifier, $record, $record_number)
filepro_fieldcount		0;"	f	S:int function filepro_fieldcount()
filepro_fieldname		0;"	f	S:string function filepro_fieldname($field_number)
filepro_fieldtype		0;"	f	S:string function filepro_fieldtype($field_number)
filepro_fieldwidth		0;"	f	S:int function filepro_fieldwidth($field_number)
filepro_retrieve		0;"	f	S:string function filepro_retrieve($row_number, $field_number)
filepro_rowcount		0;"	f	S:int function filepro_rowcount()
filepro		0;"	f	S:bool function filepro($directory)
IBASE_BKP_IGNORE_CHECKSUMS		0;"	d
IBASE_BKP_IGNORE_LIMBO		0;"	d
IBASE_BKP_METADATA_ONLY		0;"	d
IBASE_BKP_NO_GARBAGE_COLLECT		0;"	d
IBASE_BKP_OLD_DESCRIPTIONS		0;"	d
IBASE_BKP_NON_TRANSPORTABLE		0;"	d
IBASE_BKP_CONVERT		0;"	d
IBASE_RES_DEACTIVATE_IDX		0;"	d
IBASE_RES_NO_SHADOW		0;"	d
IBASE_RES_NO_VALIDITY		0;"	d
IBASE_RES_ONE_AT_A_TIME		0;"	d
IBASE_RES_REPLACE		0;"	d
IBASE_RES_CREATE		0;"	d
IBASE_RES_USE_ALL_SPACE		0;"	d
IBASE_PRP_PAGE_BUFFERS		0;"	d
IBASE_PRP_SWEEP_INTERVAL		0;"	d
IBASE_PRP_SHUTDOWN_DB		0;"	d
IBASE_PRP_DENY_NEW_TRANSACTIONS		0;"	d
IBASE_PRP_DENY_NEW_ATTACHMENTS		0;"	d
IBASE_PRP_RESERVE_SPACE		0;"	d
IBASE_PRP_RES_USE_FULL		0;"	d
IBASE_PRP_RES		0;"	d
IBASE_PRP_WRITE_MODE		0;"	d
IBASE_PRP_WM_ASYNC		0;"	d
IBASE_PRP_WM_SYNC		0;"	d
IBASE_PRP_ACCESS_MODE		0;"	d
IBASE_PRP_AM_READONLY		0;"	d
IBASE_PRP_AM_READWRITE		0;"	d
IBASE_PRP_SET_SQL_DIALECT		0;"	d
IBASE_PRP_ACTIVATE		0;"	d
IBASE_PRP_DB_ONLINE		0;"	d
IBASE_RPR_CHECK_DB		0;"	d
IBASE_RPR_IGNORE_CHECKSUM		0;"	d
IBASE_RPR_KILL_SHADOWS		0;"	d
IBASE_RPR_MEND_DB		0;"	d
IBASE_RPR_VALIDATE_DB		0;"	d
IBASE_RPR_FULL		0;"	d
IBASE_RPR_SWEEP_DB		0;"	d
IBASE_STS_DATA_PAGES		0;"	d
IBASE_STS_DB_LOG		0;"	d
IBASE_STS_HDR_PAGES		0;"	d
IBASE_STS_IDX_PAGES		0;"	d
IBASE_STS_SYS_RELATIONS		0;"	d
IBASE_SVC_SERVER_VERSION		0;"	d
IBASE_SVC_IMPLEMENTATION		0;"	d
IBASE_SVC_GET_ENV		0;"	d
IBASE_SVC_GET_ENV_LOCK		0;"	d
IBASE_SVC_GET_ENV_MSG		0;"	d
IBASE_SVC_USER_DBPATH		0;"	d
IBASE_SVC_SVR_DB_INFO		0;"	d
IBASE_SVC_GET_USERS		0;"	d
ibase_add_user		0;"	f	S:bool function ibase_add_user($service_handle, $user_name, $password, $first_name, $middle_name, $last_name)
ibase_affected_rows		0;"	f	S:int function ibase_affected_rows($link_identifier)
ibase_backup		0;"	f	S:mixed function ibase_backup($service_handle, $source_db, $dest_file, $options, $verbose = false)
ibase_blob_add		0;"	f	S:void function ibase_blob_add($blob_handle, $data)
ibase_blob_cancel		0;"	f	S:bool function ibase_blob_cancel($blob_handle)
ibase_blob_close		0;"	f	S:mixed function ibase_blob_close($blob_handle)
ibase_blob_create		0;"	f	S:resource function ibase_blob_create($link_identifier)
ibase_blob_echo		0;"	f	S:bool function ibase_blob_echo($blob_id, $link_identifier)
ibase_blob_get		0;"	f	S:string function ibase_blob_get($blob_handle, $len)
ibase_blob_import		0;"	f	S:string function ibase_blob_import($link_identifier, $file_handle)
ibase_blob_info		0;"	f	S:array function ibase_blob_info($link_identifier, $blob_id)
ibase_blob_open		0;"	f	S:resource function ibase_blob_open($link_identifier, $blob_id)
ibase_close		0;"	f	S:bool function ibase_close($connection_id)
ibase_commit_ret		0;"	f	S:bool function ibase_commit_ret($link_or_trans_identifier)
ibase_commit		0;"	f	S:bool function ibase_commit($link_or_trans_identifier)
ibase_connect		0;"	f	S:resource function ibase_connect($database, $username, $password, $charset, $buffers, $dialect, $role, $sync)
ibase_db_info		0;"	f	S:string function ibase_db_info($service_handle, $db, $action, $argument)
ibase_delete_user		0;"	f	S:bool function ibase_delete_user($service_handle, $user_name)
ibase_drop_db		0;"	f	S:bool function ibase_drop_db($connection)
ibase_errcode		0;"	f	S:int function ibase_errcode()
ibase_errmsg		0;"	f	S:string function ibase_errmsg()
ibase_execute		0;"	f	S:resource function ibase_execute($query, $bind_arg, $...)
ibase_fetch_assoc		0;"	f	S:array function ibase_fetch_assoc($result, $fetch_flag)
ibase_fetch_object		0;"	f	S:object function ibase_fetch_object($result_id, $fetch_flag)
ibase_fetch_row		0;"	f	S:array function ibase_fetch_row($result_identifier, $fetch_flag)
ibase_field_info		0;"	f	S:array function ibase_field_info($result, $field_number)
ibase_free_event_handler		0;"	f	S:bool function ibase_free_event_handler($event)
ibase_free_query		0;"	f	S:bool function ibase_free_query($query)
ibase_free_result		0;"	f	S:bool function ibase_free_result($result_identifier)
ibase_gen_id		0;"	f	S:mixed function ibase_gen_id($generator, $increment = 1, $link_identifier)
ibase_maintain_db		0;"	f	S:bool function ibase_maintain_db($service_handle, $db, $action, $argument)
ibase_modify_user		0;"	f	S:bool function ibase_modify_user($service_handle, $user_name, $password, $first_name, $middle_name, $last_name)
ibase_name_result		0;"	f	S:bool function ibase_name_result($result, $name)
ibase_num_fields		0;"	f	S:int function ibase_num_fields($result_id)
ibase_num_params		0;"	f	S:int function ibase_num_params($query)
ibase_param_info		0;"	f	S:array function ibase_param_info($query, $param_number)
ibase_pconnect		0;"	f	S:resource function ibase_pconnect($database, $username, $password, $charset, $buffers, $dialect, $role, $sync)
ibase_prepare		0;"	f	S:resource function ibase_prepare($query, $link_identifier, $trans)
ibase_query		0;"	f	S:resource function ibase_query($link_identifier, $query, $bind_args)
ibase_restore		0;"	f	S:mixed function ibase_restore($service_handle, $source_file, $dest_db, $options, $verbose = false)
ibase_rollback_ret		0;"	f	S:bool function ibase_rollback_ret($link_or_trans_identifier)
ibase_rollback		0;"	f	S:bool function ibase_rollback($link_or_trans_identifier)
ibase_server_info		0;"	f	S:string function ibase_server_info($service_handle, $action)
ibase_service_attach		0;"	f	S:resource function ibase_service_attach($host, $dba_username, $dba_password)
ibase_service_detach		0;"	f	S:bool function ibase_service_detach($service_handle)
ibase_set_event_handler		0;"	f	S:resource function ibase_set_event_handler($event_handler, $event_name1, $event_name2, $..., $connection)
ibase_trans		0;"	f	S:resource function ibase_trans($trans_args, $link_identifier)
ibase_wait_event		0;"	f	S:string function ibase_wait_event($event_name1, $event_name2, $..., $connection)
FBSQL_ASSOC		0;"	d
FBSQL_NUM		0;"	d
FBSQL_BOTH		0;"	d
FBSQL_LOCK_DEFERRED		0;"	d
FBSQL_LOCK_OPTIMISTIC		0;"	d
FBSQL_LOCK_PESSIMISTIC		0;"	d
FBSQL_ISO_READ_UNCOMMITTED		0;"	d
FBSQL_ISO_READ_COMMITTED		0;"	d
FBSQL_ISO_REPEATABLE_READ		0;"	d
FBSQL_ISO_SERIALIZABLE		0;"	d
FBSQL_ISO_VERSIONED		0;"	d
FBSQL_UNKNOWN		0;"	d
FBSQL_STOPPED		0;"	d
FBSQL_STARTING		0;"	d
FBSQL_RUNNING		0;"	d
FBSQL_STOPPING		0;"	d
FBSQL_NOEXEC		0;"	d
FBSQL_LOB_DIRECT		0;"	d
FBSQL_LOB_HANDLE		0;"	d
fbsql_affected_rows		0;"	f	S:int function fbsql_affected_rows($link_identifier)
fbsql_autocommit		0;"	f	S:bool function fbsql_autocommit($link_identifier, $OnOff)
fbsql_blob_size		0;"	f	S:int function fbsql_blob_size($blob_handle, $link_identifier)
fbsql_change_user		0;"	f	S:bool function fbsql_change_user($user, $password, $database, $link_identifier)
fbsql_clob_size		0;"	f	S:int function fbsql_clob_size($clob_handle, $link_identifier)
fbsql_close		0;"	f	S:bool function fbsql_close($link_identifier)
fbsql_commit		0;"	f	S:bool function fbsql_commit($link_identifier)
fbsql_connect		0;"	f	S:resource function fbsql_connect($hostname = ini_get("fbsql.default_host"), $username = ini_get("fbsql.default_user"), $password = ini_get("fbsql.default_password"))
fbsql_create_blob		0;"	f	S:string function fbsql_create_blob($blob_data, $link_identifier)
fbsql_create_clob		0;"	f	S:string function fbsql_create_clob($clob_data, $link_identifier)
fbsql_create_db		0;"	f	S:bool function fbsql_create_db($database_name, $link_identifier, $database_options)
fbsql_data_seek		0;"	f	S:bool function fbsql_data_seek($result, $row_number)
fbsql_database_password		0;"	f	S:string function fbsql_database_password($link_identifier, $database_password)
fbsql_database		0;"	f	S:string function fbsql_database($link_identifier, $database)
fbsql_db_query		0;"	f	S:resource function fbsql_db_query($database, $query, $link_identifier)
fbsql_db_status		0;"	f	S:int function fbsql_db_status($database_name, $link_identifier)
fbsql_drop_db		0;"	f	S:bool function fbsql_drop_db($database_name, $link_identifier)
fbsql_errno		0;"	f	S:int function fbsql_errno($link_identifier)
fbsql_error		0;"	f	S:string function fbsql_error($link_identifier)
fbsql_fetch_array		0;"	f	S:array function fbsql_fetch_array($result, $result_type)
fbsql_fetch_assoc		0;"	f	S:array function fbsql_fetch_assoc($result)
fbsql_fetch_field		0;"	f	S:object function fbsql_fetch_field($result, $field_offset)
fbsql_fetch_lengths		0;"	f	S:array function fbsql_fetch_lengths($result)
fbsql_fetch_object		0;"	f	S:object function fbsql_fetch_object($result)
fbsql_fetch_row		0;"	f	S:array function fbsql_fetch_row($result)
fbsql_field_flags		0;"	f	S:string function fbsql_field_flags($result, $field_offset)
fbsql_field_len		0;"	f	S:int function fbsql_field_len($result, $field_offset)
fbsql_field_name		0;"	f	S:string function fbsql_field_name($result, $field_index)
fbsql_field_seek		0;"	f	S:bool function fbsql_field_seek($result, $field_offset)
fbsql_field_table		0;"	f	S:string function fbsql_field_table($result, $field_offset)
fbsql_field_type		0;"	f	S:string function fbsql_field_type($result, $field_offset)
fbsql_free_result		0;"	f	S:bool function fbsql_free_result($result)
fbsql_get_autostart_info		0;"	f	S:array function fbsql_get_autostart_info($link_identifier)
fbsql_hostname		0;"	f	S:string function fbsql_hostname($link_identifier, $host_name)
fbsql_insert_id		0;"	f	S:int function fbsql_insert_id($link_identifier)
fbsql_list_dbs		0;"	f	S:resource function fbsql_list_dbs($link_identifier)
fbsql_list_fields		0;"	f	S:resource function fbsql_list_fields($database_name, $table_name, $link_identifier)
fbsql_list_tables		0;"	f	S:resource function fbsql_list_tables($database, $link_identifier)
fbsql_next_result		0;"	f	S:bool function fbsql_next_result($result)
fbsql_num_fields		0;"	f	S:int function fbsql_num_fields($result)
fbsql_num_rows		0;"	f	S:int function fbsql_num_rows($result)
fbsql_password		0;"	f	S:string function fbsql_password($link_identifier, $password)
fbsql_pconnect		0;"	f	S:resource function fbsql_pconnect($hostname = ini_get("fbsql.default_host"), $username = ini_get("fbsql.default_user"), $password = ini_get("fbsql.default_password"))
fbsql_query		0;"	f	S:resource function fbsql_query($query, $link_identifier, $batch_size)
fbsql_read_blob		0;"	f	S:string function fbsql_read_blob($blob_handle, $link_identifier)
fbsql_read_clob		0;"	f	S:string function fbsql_read_clob($clob_handle, $link_identifier)
fbsql_result		0;"	f	S:mixed function fbsql_result($result, $row, $field)
fbsql_rollback		0;"	f	S:bool function fbsql_rollback($link_identifier)
fbsql_rows_fetched		0;"	f	S:int function fbsql_rows_fetched($result)
fbsql_select_db		0;"	f	S:bool function fbsql_select_db($database_name, $link_identifier)
fbsql_set_characterset		0;"	f	S:void function fbsql_set_characterset($link_identifier, $characterset, $in_out_both)
fbsql_set_lob_mode		0;"	f	S:bool function fbsql_set_lob_mode($result, $lob_mode)
fbsql_set_password		0;"	f	S:bool function fbsql_set_password($link_identifier, $user, $password, $old_password)
fbsql_set_transaction		0;"	f	S:void function fbsql_set_transaction($link_identifier, $locking, $isolation)
fbsql_start_db		0;"	f	S:bool function fbsql_start_db($database_name, $link_identifier, $database_options)
fbsql_stop_db		0;"	f	S:bool function fbsql_stop_db($database_name, $link_identifier)
fbsql_table_name		0;"	f	S:string function fbsql_table_name($result, $index)
fbsql_tablename		0;"	f	S: function fbsql_tablename()
fbsql_username		0;"	f	S:string function fbsql_username($link_identifier, $username)
fbsql_warnings		0;"	f	S:bool function fbsql_warnings($OnOff)
DB2_BINARY		0;"	d
DB2_CONVERT		0;"	d
DB2_PASSTHRU		0;"	d
DB2_SCROLLABLE		0;"	d
DB2_FORWARD_ONLY		0;"	d
DB2_PARAM_IN		0;"	d
DB2_PARAM_OUT		0;"	d
DB2_PARAM_INOUT		0;"	d
DB2_PARAM_FILE		0;"	d
DB2_AUTOCOMMIT_ON		0;"	d
DB2_AUTOCOMMIT_OFF		0;"	d
DB2_DOUBLE		0;"	d
DB2_LONG		0;"	d
DB2_CHAR		0;"	d
DB2_CASE_NATURAL		0;"	d
DB2_CASE_LOWER		0;"	d
DB2_CASE_UPPER		0;"	d
DB2_DEFERRED_PREPARE_ON		0;"	d
DB2_DEFERRED_PREPARE_OFF		0;"	d
db2_autocommit		0;"	f	S:mixed function db2_autocommit($connection, $value)
db2_bind_param		0;"	f	S:bool function db2_bind_param($stmt, $parameter-number, $variable-name, $parameter-type, $data-type, $precision = -1, $scale)
db2_client_info		0;"	f	S:object function db2_client_info($connection)
db2_close		0;"	f	S:bool function db2_close($connection)
db2_column_privileges		0;"	f	S:resource function db2_column_privileges($connection, $qualifier, $schema, $table-name, $column-name)
db2_columns		0;"	f	S:resource function db2_columns($connection, $qualifier, $schema, $table-name, $column-name)
db2_commit		0;"	f	S:bool function db2_commit($connection)
db2_conn_error		0;"	f	S:string function db2_conn_error($connection)
db2_conn_errormsg		0;"	f	S:string function db2_conn_errormsg($connection)
db2_connect		0;"	f	S:resource function db2_connect($database, $username, $password, $options)
db2_cursor_type		0;"	f	S:int function db2_cursor_type($stmt)
db2_escape_string		0;"	f	S:string function db2_escape_string($string_literal)
db2_exec		0;"	f	S:resource function db2_exec($connection, $statement, $options)
db2_execute		0;"	f	S:bool function db2_execute($stmt, $parameters)
db2_fetch_array		0;"	f	S:array function db2_fetch_array($stmt, $row_number = -1)
db2_fetch_assoc		0;"	f	S:array function db2_fetch_assoc($stmt, $row_number = -1)
db2_fetch_both		0;"	f	S:array function db2_fetch_both($stmt, $row_number = -1)
db2_fetch_object		0;"	f	S:object function db2_fetch_object($stmt, $row_number = -1)
db2_fetch_row		0;"	f	S:bool function db2_fetch_row($stmt, $row_number)
db2_field_display_size		0;"	f	S:int function db2_field_display_size($stmt, $column)
db2_field_name		0;"	f	S:string function db2_field_name($stmt, $column)
db2_field_num		0;"	f	S:int function db2_field_num($stmt, $column)
db2_field_precision		0;"	f	S:int function db2_field_precision($stmt, $column)
db2_field_scale		0;"	f	S:int function db2_field_scale($stmt, $column)
db2_field_type		0;"	f	S:string function db2_field_type($stmt, $column)
db2_field_width		0;"	f	S:int function db2_field_width($stmt, $column)
db2_foreign_keys		0;"	f	S:resource function db2_foreign_keys($connection, $qualifier, $schema, $table-name)
db2_free_result		0;"	f	S:bool function db2_free_result($stmt)
db2_free_stmt		0;"	f	S:bool function db2_free_stmt($stmt)
db2_get_option		0;"	f	S:string function db2_get_option($resource, $option)
db2_last_insert_id		0;"	f	S:string function db2_last_insert_id($resource)
db2_lob_read		0;"	f	S:string function db2_lob_read($stmt, $colnum, $length)
db2_next_result		0;"	f	S:resource function db2_next_result($stmt)
db2_num_fields		0;"	f	S:int function db2_num_fields($stmt)
db2_num_rows		0;"	f	S:boolean function db2_num_rows($stmt)
db2_pclose		0;"	f	S:bool function db2_pclose($resource)
db2_pconnect		0;"	f	S:resource function db2_pconnect($database, $username, $password, $options)
db2_prepare		0;"	f	S:resource function db2_prepare($connection, $statement, $options)
db2_primary_keys		0;"	f	S:resource function db2_primary_keys($connection, $qualifier, $schema, $table-name)
db2_procedure_columns		0;"	f	S:resource function db2_procedure_columns($connection, $qualifier, $schema, $procedure, $parameter)
db2_procedures		0;"	f	S:resource function db2_procedures($connection, $qualifier, $schema, $procedure)
db2_result		0;"	f	S:mixed function db2_result($stmt, $column)
db2_rollback		0;"	f	S:bool function db2_rollback($connection)
db2_server_info		0;"	f	S:object function db2_server_info($connection)
db2_set_option		0;"	f	S:bool function db2_set_option($resource, $options, $type)
db2_special_columns		0;"	f	S:resource function db2_special_columns($connection, $qualifier, $schema, $table_name, $scope)
db2_statistics		0;"	f	S:resource function db2_statistics($connection, $qualifier, $schema, $table-name, $unique)
db2_stmt_error		0;"	f	S:string function db2_stmt_error($stmt)
db2_stmt_errormsg		0;"	f	S:string function db2_stmt_errormsg($stmt)
db2_table_privileges		0;"	f	S:resource function db2_table_privileges($connection, $qualifier, $schema, $table_name)
db2_tables		0;"	f	S:resource function db2_tables($connection, $qualifier, $schema, $table-name, $table-type)
IFX_SCROLL		0;"	d
IFX_HOLD		0;"	d
IFX_LO_RDONLY		0;"	d
IFX_LO_WRONLY		0;"	d
IFX_LO_APPEND		0;"	d
IFX_LO_RDWR		0;"	d
IFX_LO_BUFFER		0;"	d
IFX_LO_NOBUFFER		0;"	d
ifx_affected_rows		0;"	f	S:int function ifx_affected_rows($result_id)
ifx_blobinfile_mode		0;"	f	S:bool function ifx_blobinfile_mode($mode)
ifx_byteasvarchar		0;"	f	S:bool function ifx_byteasvarchar($mode)
ifx_close		0;"	f	S:bool function ifx_close($link_identifier)
ifx_connect		0;"	f	S:resource function ifx_connect($database, $userid, $password)
ifx_copy_blob		0;"	f	S:int function ifx_copy_blob($bid)
ifx_create_blob		0;"	f	S:int function ifx_create_blob($type, $mode, $param)
ifx_create_char		0;"	f	S:int function ifx_create_char($param)
ifx_do		0;"	f	S:bool function ifx_do($result_id)
ifx_error		0;"	f	S:string function ifx_error($link_identifier)
ifx_errormsg		0;"	f	S:string function ifx_errormsg($errorcode)
ifx_fetch_row		0;"	f	S:array function ifx_fetch_row($result_id, $position)
ifx_fieldproperties		0;"	f	S:array function ifx_fieldproperties($result_id)
ifx_fieldtypes		0;"	f	S:array function ifx_fieldtypes($result_id)
ifx_free_blob		0;"	f	S:bool function ifx_free_blob($bid)
ifx_free_char		0;"	f	S:bool function ifx_free_char($bid)
ifx_free_result		0;"	f	S:bool function ifx_free_result($result_id)
ifx_get_blob		0;"	f	S:string function ifx_get_blob($bid)
ifx_get_char		0;"	f	S:string function ifx_get_char($bid)
ifx_getsqlca		0;"	f	S:array function ifx_getsqlca($result_id)
ifx_htmltbl_result		0;"	f	S:int function ifx_htmltbl_result($result_id, $html_table_options)
ifx_nullformat		0;"	f	S:bool function ifx_nullformat($mode)
ifx_num_fields		0;"	f	S:int function ifx_num_fields($result_id)
ifx_num_rows		0;"	f	S:int function ifx_num_rows($result_id)
ifx_pconnect		0;"	f	S:resource function ifx_pconnect($database, $userid, $password)
ifx_prepare		0;"	f	S:resource function ifx_prepare($query, $link_identifier, $cursor_def, $blobidarray)
ifx_query		0;"	f	S:resource function ifx_query($query, $link_identifier, $cursor_type, $blobidarray)
ifx_textasvarchar		0;"	f	S:bool function ifx_textasvarchar($mode)
ifx_update_blob		0;"	f	S:bool function ifx_update_blob($bid, $content)
ifx_update_char		0;"	f	S:bool function ifx_update_char($bid, $content)
ifxus_close_slob		0;"	f	S:bool function ifxus_close_slob($bid)
ifxus_create_slob		0;"	f	S:int function ifxus_create_slob($mode)
ifxus_free_slob		0;"	f	S:bool function ifxus_free_slob($bid)
ifxus_open_slob		0;"	f	S:int function ifxus_open_slob($bid, $mode)
ifxus_read_slob		0;"	f	S:string function ifxus_read_slob($bid, $nbytes)
ifxus_seek_slob		0;"	f	S:int function ifxus_seek_slob($bid, $mode, $offset)
ifxus_tell_slob		0;"	f	S:int function ifxus_tell_slob($bid)
ifxus_write_slob		0;"	f	S:int function ifxus_write_slob($bid, $content)
INGRES_ASSOC		0;"	d
INGRES_NUM		0;"	d
INGRES_BOTH		0;"	d
INGRES_EXT_VERSION		0;"	d
INGRES_API_VERSION		0;"	d
INGRES_CURSOR_READONLY		0;"	d
INGRES_CURSOR_UPDATE		0;"	d
INGRES_DATE_MULTINATIONAL		0;"	d
INGRES_DATE_MULTINATIONAL4		0;"	d
INGRES_DATE_FINNISH		0;"	d
INGRES_DATE_ISO		0;"	d
INGRES_DATE_ISO4		0;"	d
INGRES_DATE_GERMAN		0;"	d
INGRES_DATE_MDY		0;"	d
INGRES_DATE_DMY		0;"	d
INGRES_DATE_YMD		0;"	d
INGRES_MONEY_LEADING		0;"	d
INGRES_MONEY_TRAILING		0;"	d
INGRES_STRUCTURE_BTREE		0;"	d
INGRES_STRUCTURE_CBTREE		0;"	d
INGRES_STRUCTURE_HASH		0;"	d
INGRES_STRUCTURE_CHASH		0;"	d
INGRES_STRUCTURE_HEAP		0;"	d
INGRES_STRUCTURE_CHEAP		0;"	d
INGRES_STRUCTURE_ISAM		0;"	d
INGRES_STRUCTURE_CISAM		0;"	d
ingres_autocommit_state		0;"	f	S:bool function ingres_autocommit_state($link)
ingres_autocommit		0;"	f	S:bool function ingres_autocommit($link)
ingres_charset		0;"	f	S:string function ingres_charset($link)
ingres_close		0;"	f	S:bool function ingres_close($link)
ingres_commit		0;"	f	S:bool function ingres_commit($link)
ingres_connect		0;"	f	S:resource function ingres_connect($database, $username, $password, $options)
ingres_cursor		0;"	f	S:string function ingres_cursor($result)
ingres_errno		0;"	f	S:int function ingres_errno($link)
ingres_error		0;"	f	S:string function ingres_error($link)
ingres_errsqlstate		0;"	f	S:string function ingres_errsqlstate($link)
ingres_escape_string		0;"	f	S:string function ingres_escape_string($link, $source_string)
ingres_execute		0;"	f	S:bool function ingres_execute($result, $params, $types)
ingres_fetch_array		0;"	f	S:array function ingres_fetch_array($result, $result_type)
ingres_fetch_assoc		0;"	f	S:array function ingres_fetch_assoc($result)
ingres_fetch_object		0;"	f	S:object function ingres_fetch_object($result, $result_type)
ingres_fetch_proc_return		0;"	f	S:int function ingres_fetch_proc_return($result)
ingres_fetch_row		0;"	f	S:array function ingres_fetch_row($result)
ingres_field_length		0;"	f	S:int function ingres_field_length($result, $index)
ingres_field_name		0;"	f	S:string function ingres_field_name($result, $index)
ingres_field_nullable		0;"	f	S:bool function ingres_field_nullable($result, $index)
ingres_field_precision		0;"	f	S:int function ingres_field_precision($result, $index)
ingres_field_scale		0;"	f	S:int function ingres_field_scale($result, $index)
ingres_field_type		0;"	f	S:string function ingres_field_type($result, $index)
ingres_free_result		0;"	f	S:bool function ingres_free_result($result)
ingres_next_error		0;"	f	S:bool function ingres_next_error($link)
ingres_num_fields		0;"	f	S:int function ingres_num_fields($result)
ingres_num_rows		0;"	f	S:int function ingres_num_rows($result)
ingres_pconnect		0;"	f	S:resource function ingres_pconnect($database, $username, $password, $options)
ingres_prepare		0;"	f	S:mixed function ingres_prepare($link, $query)
ingres_query		0;"	f	S:mixed function ingres_query($link, $query, $params, $types)
ingres_result_seek		0;"	f	S:bool function ingres_result_seek($result, $position)
ingres_rollback		0;"	f	S:bool function ingres_rollback($link)
ingres_set_environment		0;"	f	S:bool function ingres_set_environment($link, $options)
ingres_unbuffered_query		0;"	f	S:mixed function ingres_unbuffered_query($link, $query, $params, $types)
maxdb->affected_rows		0;"	p	class:PDOException	S: PDOException::maxdb->affected_rows
maxdb_affected_rows		0;"	f	S:int function maxdb_affected_rows($link)
maxdb_autocommit		0;"	f	S:bool function maxdb_autocommit($link, $mode)
maxdb_bind_param		0;"	f	S: function maxdb_bind_param()
maxdb_bind_result		0;"	f	S: function maxdb_bind_result()
maxdb_change_user		0;"	f	S:bool function maxdb_change_user($link, $user, $password, $database)
maxdb_character_set_name		0;"	f	S:string function maxdb_character_set_name($link)
maxdb_client_encoding		0;"	f	S: function maxdb_client_encoding()
maxdb_close_long_data		0;"	f	S: function maxdb_close_long_data()
maxdb_close		0;"	f	S:bool function maxdb_close($link)
maxdb_commit		0;"	f	S:bool function maxdb_commit($link)
maxdb_connect_errno		0;"	f	S:int function maxdb_connect_errno()
maxdb_connect_error		0;"	f	S:string function maxdb_connect_error()
maxdb_connect		0;"	f	S:resource function maxdb_connect($host, $username, $passwd, $dbname, $port, $socket)
maxdb_data_seek		0;"	f	S:bool function maxdb_data_seek($result, $offset)
maxdb_debug		0;"	f	S:void function maxdb_debug($debug)
maxdb_disable_reads_from_master		0;"	f	S:void function maxdb_disable_reads_from_master($link)
maxdb_disable_rpl_parse		0;"	f	S:bool function maxdb_disable_rpl_parse($link)
maxdb_dump_debug_info		0;"	f	S:bool function maxdb_dump_debug_info($link)
maxdb_embedded_connect		0;"	f	S:resource function maxdb_embedded_connect($dbname)
maxdb_enable_reads_from_master		0;"	f	S:bool function maxdb_enable_reads_from_master($link)
maxdb_enable_rpl_parse		0;"	f	S:bool function maxdb_enable_rpl_parse($link)
maxdb->errno		0;"	p	class:PDOException	S: PDOException::maxdb->errno
maxdb_errno		0;"	f	S:int function maxdb_errno($link)
maxdb->error		0;"	p	class:PDOException	S: PDOException::maxdb->error
maxdb_error		0;"	f	S:string function maxdb_error($link)
maxdb_escape_string		0;"	f	S: function maxdb_escape_string()
maxdb_execute		0;"	f	S: function maxdb_execute()
maxdb_fetch_array		0;"	f	S:mixed function maxdb_fetch_array($result, $resulttype)
maxdb_fetch_assoc		0;"	f	S:array function maxdb_fetch_assoc($result)
maxdb_fetch_field_direct		0;"	f	S:mixed function maxdb_fetch_field_direct($result, $fieldnr)
maxdb_fetch_field		0;"	f	S:mixed function maxdb_fetch_field($result)
maxdb_fetch_fields		0;"	f	S:mixed function maxdb_fetch_fields($result)
maxdb_result->lengths		0;"	p	class:PDOException	S: PDOException::maxdb_result->lengths
maxdb_fetch_lengths		0;"	f	S:array function maxdb_fetch_lengths($result)
maxdb_fetch_object		0;"	f	S:object function maxdb_fetch_object($result)
maxdb_fetch_row		0;"	f	S:mixed function maxdb_fetch_row($result)
maxdb_fetch		0;"	f	S: function maxdb_fetch()
maxdb_field_count		0;"	f	S:int function maxdb_field_count($link)
maxdb_field_seek		0;"	f	S:bool function maxdb_field_seek($result, $fieldnr)
maxdb_result->current_field		0;"	p	class:PDOException	S: PDOException::maxdb_result->current_field
maxdb_field_tell		0;"	f	S:int function maxdb_field_tell($result)
maxdb_free_result		0;"	f	S:void function maxdb_free_result($result)
maxdb_get_client_info		0;"	f	S:string function maxdb_get_client_info()
maxdb_get_client_version		0;"	f	S:int function maxdb_get_client_version()
maxdb->host_info		0;"	p	class:PDOException	S: PDOException::maxdb->host_info
maxdb_get_host_info		0;"	f	S:string function maxdb_get_host_info($link)
maxdb_get_metadata		0;"	f	S: function maxdb_get_metadata()
maxdb->protocol_version		0;"	p	class:PDOException	S: PDOException::maxdb->protocol_version
maxdb_get_proto_info		0;"	f	S:string function maxdb_get_proto_info($link)
maxdb->server_info		0;"	p	class:PDOException	S: PDOException::maxdb->server_info
maxdb_get_server_info		0;"	f	S:string function maxdb_get_server_info($link)
maxdb->server_version		0;"	p	class:PDOException	S: PDOException::maxdb->server_version
maxdb_get_server_version		0;"	f	S:int function maxdb_get_server_version($link)
maxdb->info		0;"	p	class:PDOException	S: PDOException::maxdb->info
maxdb_info		0;"	f	S:string function maxdb_info($link)
maxdb_init		0;"	f	S:resource function maxdb_init()
maxdb->insert_id		0;"	p	class:PDOException	S: PDOException::maxdb->insert_id
maxdb_insert_id		0;"	f	S:mixed function maxdb_insert_id($link)
maxdb_kill		0;"	f	S:bool function maxdb_kill($link, $processid)
maxdb_master_query		0;"	f	S:bool function maxdb_master_query($link, $query)
maxdb_more_results		0;"	f	S:bool function maxdb_more_results($link)
maxdb_multi_query		0;"	f	S:bool function maxdb_multi_query($link, $query)
maxdb_next_result		0;"	f	S:bool function maxdb_next_result($link)
maxdb_result->field_count		0;"	p	class:PDOException	S: PDOException::maxdb_result->field_count
maxdb_num_fields		0;"	f	S:int function maxdb_num_fields($result)
maxdb->num_rows		0;"	p	class:PDOException	S: PDOException::maxdb->num_rows
maxdb_num_rows		0;"	f	S:int function maxdb_num_rows($result)
maxdb_options		0;"	f	S:bool function maxdb_options($link, $option, $value)
maxdb_param_count		0;"	f	S: function maxdb_param_count()
maxdb_ping		0;"	f	S:bool function maxdb_ping($link)
maxdb_prepare		0;"	f	S:maxdb_stmt function maxdb_prepare($link, $query)
maxdb_query		0;"	f	S:mixed function maxdb_query($link, $query, $resultmode)
maxdb_real_connect		0;"	f	S:bool function maxdb_real_connect($link, $hostname, $username, $passwd, $dbname, $port, $socket)
maxdb_real_escape_string		0;"	f	S:string function maxdb_real_escape_string($link, $escapestr)
maxdb_real_query		0;"	f	S:bool function maxdb_real_query($link, $query)
maxdb_report		0;"	f	S:bool function maxdb_report($flags)
maxdb_rollback		0;"	f	S:bool function maxdb_rollback($link)
maxdb_rpl_parse_enabled		0;"	f	S:int function maxdb_rpl_parse_enabled($link)
maxdb_rpl_probe		0;"	f	S:bool function maxdb_rpl_probe($link)
maxdb_rpl_query_type		0;"	f	S:int function maxdb_rpl_query_type($link)
maxdb_select_db		0;"	f	S:bool function maxdb_select_db($link, $dbname)
maxdb_send_long_data		0;"	f	S: function maxdb_send_long_data()
maxdb_send_query		0;"	f	S:bool function maxdb_send_query($link, $query)
maxdb_server_end		0;"	f	S:void function maxdb_server_end()
maxdb_server_init		0;"	f	S:bool function maxdb_server_init($server, $groups)
maxdb_set_opt		0;"	f	S: function maxdb_set_opt()
maxdb->sqlstate		0;"	p	class:PDOException	S: PDOException::maxdb->sqlstate
maxdb_sqlstate		0;"	f	S:string function maxdb_sqlstate($link)
maxdb_ssl_set		0;"	f	S:bool function maxdb_ssl_set($link, $key, $cert, $ca, $capath, $cipher)
maxdb_stat		0;"	f	S:string function maxdb_stat($link)
maxdb_stmt->affected_rows		0;"	p	class:PDOException	S: PDOException::maxdb_stmt->affected_rows
maxdb_stmt_affected_rows		0;"	f	S:int function maxdb_stmt_affected_rows($stmt)
maxdb_stmt_bind_param		0;"	f	S:bool function maxdb_stmt_bind_param($stmt, $types, &$var1, &$..., &$var)
maxdb_stmt_bind_result		0;"	f	S:bool function maxdb_stmt_bind_result($stmt, &$var1, &$...)
maxdb_stmt_close_long_data		0;"	f	S:bool function maxdb_stmt_close_long_data($stmt, $param_nr)
maxdb_stmt_close		0;"	f	S:bool function maxdb_stmt_close($stmt)
maxdb_stmt_data_seek		0;"	f	S:bool function maxdb_stmt_data_seek($statement, $offset)
maxdb_stmt->errno		0;"	p	class:PDOException	S: PDOException::maxdb_stmt->errno
maxdb_stmt_errno		0;"	f	S:int function maxdb_stmt_errno($stmt)
maxdb_stmt->error		0;"	p	class:PDOException	S: PDOException::maxdb_stmt->error
maxdb_stmt_error		0;"	f	S:string function maxdb_stmt_error($stmt)
maxdb_stmt_execute		0;"	f	S:bool function maxdb_stmt_execute($stmt)
maxdb_stmt_fetch		0;"	f	S:bool function maxdb_stmt_fetch($stmt)
maxdb_stmt_free_result		0;"	f	S:void function maxdb_stmt_free_result($stmt)
maxdb_stmt_init		0;"	f	S:object function maxdb_stmt_init($link)
maxdb_stmt->num_rows		0;"	p	class:PDOException	S: PDOException::maxdb_stmt->num_rows
maxdb_stmt_num_rows		0;"	f	S:int function maxdb_stmt_num_rows($stmt)
maxdb_stmt->param_count		0;"	p	class:PDOException	S: PDOException::maxdb_stmt->param_count
maxdb_stmt_param_count		0;"	f	S:int function maxdb_stmt_param_count($stmt)
maxdb_stmt_prepare		0;"	f	S:mixed function maxdb_stmt_prepare($stmt, $query)
maxdb_stmt_reset		0;"	f	S:bool function maxdb_stmt_reset($stmt)
maxdb_stmt_result_metadata		0;"	f	S:resource function maxdb_stmt_result_metadata($stmt)
maxdb_stmt_send_long_data		0;"	f	S:bool function maxdb_stmt_send_long_data($stmt, $param_nr, $data)
maxdb_stmt_sqlstate		0;"	f	S:string function maxdb_stmt_sqlstate($stmt)
maxdb_stmt_store_result		0;"	f	S:object function maxdb_stmt_store_result($stmt)
maxdb_store_result		0;"	f	S:object function maxdb_store_result($link)
maxdb->thread_id		0;"	p	class:PDOException	S: PDOException::maxdb->thread_id
maxdb_thread_id		0;"	f	S:int function maxdb_thread_id($link)
maxdb_thread_safe		0;"	f	S:bool function maxdb_thread_safe()
maxdb_use_result		0;"	f	S:resource function maxdb_use_result($link)
maxdb->warning_count		0;"	p	class:PDOException	S: PDOException::maxdb->warning_count
maxdb_warning_count		0;"	f	S:int function maxdb_warning_count($link)
MONGO_STREAMS		0;"	d
MONGO_SUPPORTS_STREAMS		0;"	d
MONGO_SUPPORTS_SSL		0;"	d
MONGO_SUPPORTS_AUTH_MECHANISM_MONGODB_CR		0;"	d
MONGO_SUPPORTS_AUTH_MECHANISM_MONGODB_X509		0;"	d
MONGO_SUPPORTS_AUTH_MECHANISM_GSSAPI		0;"	d
MONGO_SUPPORTS_AUTH_MECHANISM_PLAIN		0;"	d
MONGO_STREAM_NOTIFY_TYPE_IO_INIT		0;"	d
MONGO_STREAM_NOTIFY_TYPE_LOG		0;"	d
MONGO_STREAM_NOTIFY_IO_READ		0;"	d
MONGO_STREAM_NOTIFY_IO_WRITE		0;"	d
MONGO_STREAM_NOTIFY_IO_PROGRESS		0;"	d
MONGO_STREAM_NOTIFY_IO_COMPLETED		0;"	d
MONGO_STREAM_NOTIFY_LOG_INSERT		0;"	d
MONGO_STREAM_NOTIFY_LOG_QUERY		0;"	d
MONGO_STREAM_NOTIFY_LOG_UPDATE		0;"	d
MONGO_STREAM_NOTIFY_LOG_DELETE		0;"	d
MONGO_STREAM_NOTIFY_LOG_GETMORE		0;"	d
MONGO_STREAM_NOTIFY_LOG_KILLCURSOR		0;"	d
MONGO_STREAM_NOTIFY_LOG_BATCHINSERT		0;"	d
MONGO_STREAM_NOTIFY_LOG_RESPONSE_HEADER		0;"	d
MONGO_STREAM_NOTIFY_LOG_WRITE_REPLY		0;"	d
MONGO_STREAM_NOTIFY_LOG_CMD_INSERT		0;"	d
MONGO_STREAM_NOTIFY_LOG_CMD_UPDATE		0;"	d
MONGO_STREAM_NOTIFY_LOG_CMD_DELETE		0;"	d
MONGO_STREAM_NOTIFY_LOG_WRITE_BATCH		0;"	d
log_cmd_delete		0;"	f	S:callable function log_cmd_delete($server, $writeOptions, $deleteOptions, $protocolOptions)
log_cmd_insert		0;"	f	S:callable function log_cmd_insert($server, $document, $writeOptions, $protocolOptions)
log_cmd_update		0;"	f	S:callable function log_cmd_update($server, $writeOptions, $updateOptions, $protocolOptions)
log_getmore		0;"	f	S:callable function log_getmore($server, $info)
log_killcursor		0;"	f	S:callable function log_killcursor($server, $info)
log_reply		0;"	f	S:callable function log_reply($server, $messageHeaders, $operationHeaders)
log_write_batch		0;"	f	S:callable function log_write_batch($server, $writeOptions, $batch, $protocolOptions)
MongoClient		0;"	c
VERSION		0;"	o	class:MongoClient	a:const	S:const MongoClient::VERSION
DEFAULT_HOST		0;"	o	class:MongoClient	a:const	S:const MongoClient::DEFAULT_HOST
DEFAULT_PORT		0;"	o	class:MongoClient	a:const	S:const MongoClient::DEFAULT_PORT
RP_PRIMARY		0;"	o	class:MongoClient	a:const	S:const MongoClient::RP_PRIMARY
RP_PRIMARY_PREFERRED		0;"	o	class:MongoClient	a:const	S:const MongoClient::RP_PRIMARY_PREFERRED
RP_SECONDARY		0;"	o	class:MongoClient	a:const	S:const MongoClient::RP_SECONDARY
RP_SECONDARY_PREFERRED		0;"	o	class:MongoClient	a:const	S:const MongoClient::RP_SECONDARY_PREFERRED
RP_NEAREST		0;"	o	class:MongoClient	a:const	S:const MongoClient::RP_NEAREST
connected		0;"	p	class:MongoClient	S: MongoClient::connected
status		0;"	p	class:MongoClient	S: MongoClient::status
server		0;"	p	class:MongoClient	a:protected	S:protected MongoClient::server
persistent		0;"	p	class:MongoClient	a:protected	S:protected MongoClient::persistent
close		0;"	f	S:bool function close($connection)	class:MongoClient
connect		0;"	f	S:bool function connect()	class:MongoClient
__construct		0;"	f	S: function __construct($server = "mongodb://localhost:27017", $options = ), $driver_options)	class:MongoClient
dropDB		0;"	f	S:array function dropDB($db)	class:MongoClient
__get		0;"	f	S:MongoDB function __get($dbname)	class:MongoClient
getConnections		0;"	f	S:array function getConnections()	class:MongoClient	a:static
getHosts		0;"	f	S:array function getHosts()	class:MongoClient
getReadPreference		0;"	f	S:array function getReadPreference()	class:MongoClient
getWriteConcern		0;"	f	S:array function getWriteConcern()	class:MongoClient
killCursor		0;"	f	S:bool function killCursor($server_hash, $id)	class:MongoClient
listDBs		0;"	f	S:array function listDBs()	class:MongoClient
selectCollection		0;"	f	S:MongoCollection function selectCollection($db, $collection)	class:MongoClient
selectDB		0;"	f	S:MongoDB function selectDB($name)	class:MongoClient
setReadPreference		0;"	f	S:bool function setReadPreference($read_preference, $tags)	class:MongoClient
setWriteConcern		0;"	f	S:bool function setWriteConcern($w, $wtimeout)	class:MongoClient
__toString		0;"	f	S:string function __toString()	class:MongoClient
MongoDB		0;"	c
PROFILING_OFF		0;"	o	class:MongoDB	a:const	S:const MongoDB::PROFILING_OFF
PROFILING_SLOW		0;"	o	class:MongoDB	a:const	S:const MongoDB::PROFILING_SLOW
PROFILING_ON		0;"	o	class:MongoDB	a:const	S:const MongoDB::PROFILING_ON
w		0;"	p	class:MongoDB	S: MongoDB::w
wtimeout		0;"	p	class:MongoDB	S: MongoDB::wtimeout
authenticate		0;"	f	S:array function authenticate($username, $password)	class:MongoDB
command		0;"	f	S:array function command($command, $options = array())	class:MongoDB
__construct		0;"	f	S: function __construct($conn, $name)	class:MongoDB
createCollection		0;"	f	S:MongoCollection function createCollection($name, $options)	class:MongoDB
createDBRef		0;"	f	S:array function createDBRef($collection, $document_or_id)	class:MongoDB
drop		0;"	f	S:array function drop()	class:MongoDB
dropCollection		0;"	f	S:array function dropCollection($coll)	class:MongoDB
execute		0;"	f	S:array function execute($code, $args = array())	class:MongoDB
forceError		0;"	f	S:bool function forceError()	class:MongoDB
__get		0;"	f	S:MongoCollection function __get($name)	class:MongoDB
getCollectionNames		0;"	f	S:array function getCollectionNames($includeSystemCollections = false)	class:MongoDB
getDBRef		0;"	f	S:array function getDBRef($ref)	class:MongoDB
getGridFS		0;"	f	S:MongoGridFS function getGridFS($prefix = "fs")	class:MongoDB
getProfilingLevel		0;"	f	S:int function getProfilingLevel()	class:MongoDB
getReadPreference		0;"	f	S:array function getReadPreference()	class:MongoDB
getSlaveOkay		0;"	f	S:bool function getSlaveOkay()	class:MongoDB
getWriteConcern		0;"	f	S:array function getWriteConcern()	class:MongoDB
lastError		0;"	f	S:array function lastError()	class:MongoDB
listCollections		0;"	f	S:array function listCollections($includeSystemCollections = false)	class:MongoDB
prevError		0;"	f	S:array function prevError()	class:MongoDB
repair		0;"	f	S:array function repair($preserve_cloned_files, $backup_original_files)	class:MongoDB
resetError		0;"	f	S:array function resetError()	class:MongoDB
selectCollection		0;"	f	S:MongoCollection function selectCollection($name)	class:MongoDB
setProfilingLevel		0;"	f	S:int function setProfilingLevel($level)	class:MongoDB
setReadPreference		0;"	f	S:bool function setReadPreference($read_preference, $tags)	class:MongoDB
setSlaveOkay		0;"	f	S:bool function setSlaveOkay($ok = true)	class:MongoDB
setWriteConcern		0;"	f	S:bool function setWriteConcern($w, $wtimeout)	class:MongoDB
__toString		0;"	f	S:string function __toString()	class:MongoDB
MongoCollection		0;"	c
ASCENDING		0;"	o	class:MongoCollection	a:const	S:const MongoCollection::ASCENDING
DESCENDING		0;"	o	class:MongoCollection	a:const	S:const MongoCollection::DESCENDING
db		0;"	p	class:MongoCollection	S: MongoCollection::db
w		0;"	p	class:MongoCollection	S: MongoCollection::w
wtimeout		0;"	p	class:MongoCollection	S: MongoCollection::wtimeout
aggregate		0;"	f	S:array function aggregate($pipeline, $options, $op, $...)	class:MongoCollection
aggregateCursor		0;"	f	S:MongoCommandCursor function aggregateCursor($command, $options)	class:MongoCollection
batchInsert		0;"	f	S:mixed function batchInsert($a, $options = array())	class:MongoCollection
__construct		0;"	f	S: function __construct($db, $name)	class:MongoCollection
count		0;"	f	S:int function count($query = array(), $limit, $skip)	class:MongoCollection
createDBRef		0;"	f	S:array function createDBRef($document_or_id)	class:MongoCollection
createIndex		0;"	f	S:bool function createIndex($keys, $options = array())	class:MongoCollection
deleteIndex		0;"	f	S:array function deleteIndex($keys)	class:MongoCollection
deleteIndexes		0;"	f	S:array function deleteIndexes()	class:MongoCollection
distinct		0;"	f	S:array function distinct($key, $query)	class:MongoCollection
drop		0;"	f	S:array function drop()	class:MongoCollection
ensureIndex		0;"	f	S:bool function ensureIndex($key|keys, $options = array())	class:MongoCollection
find		0;"	f	S:MongoCursor function find($query = array(), $fields = array())	class:MongoCollection
findAndModify		0;"	f	S:array function findAndModify($query, $update, $fields, $options)	class:MongoCollection
findOne		0;"	f	S:array function findOne($query = array(), $fields = array(), $options = array())	class:MongoCollection
__get		0;"	f	S:MongoCollection function __get($name)	class:MongoCollection
getDBRef		0;"	f	S:array function getDBRef($ref)	class:MongoCollection
getIndexInfo		0;"	f	S:array function getIndexInfo()	class:MongoCollection
getName		0;"	f	S:string function getName()	class:MongoCollection
getReadPreference		0;"	f	S:array function getReadPreference()	class:MongoCollection
getSlaveOkay		0;"	f	S:bool function getSlaveOkay()	class:MongoCollection
getWriteConcern		0;"	f	S:array function getWriteConcern()	class:MongoCollection
group		0;"	f	S:array function group($keys, $initial, $reduce, $options = array())	class:MongoCollection
insert		0;"	f	S:bool|array function insert($a, $options = array())	class:MongoCollection
parallelCollectionScan		0;"	f	S:array[MongoCommandCursor] function parallelCollectionScan($num_cursors)	class:MongoCollection
remove		0;"	f	S:bool|array function remove($criteria = array(), $options = array())	class:MongoCollection
save		0;"	f	S:mixed function save($a, $options = array())	class:MongoCollection
setReadPreference		0;"	f	S:bool function setReadPreference($read_preference, $tags)	class:MongoCollection
setSlaveOkay		0;"	f	S:bool function setSlaveOkay($ok = true)	class:MongoCollection
setWriteConcern		0;"	f	S:bool function setWriteConcern($w, $wtimeout)	class:MongoCollection
toIndexString		0;"	f	S:string function toIndexString($keys)	class:MongoCollection	a:static protected
__toString		0;"	f	S:string function __toString()	class:MongoCollection
update		0;"	f	S:bool|array function update($criteria, $new_object, $options = array())	class:MongoCollection
validate		0;"	f	S:array function validate($scan_data)	class:MongoCollection
MongoCursor		0;"	c
slaveOkay		0;"	p	class:MongoCursor	a:static	S:static MongoCursor::slaveOkay
timeout		0;"	p	class:MongoCursor	a:static	S:static MongoCursor::timeout
addOption		0;"	f	S:MongoCursor function addOption($key, $value)	class:MongoCursor
awaitData		0;"	f	S:MongoCursor function awaitData($wait = true)	class:MongoCursor
batchSize		0;"	f	S:MongoCursor function batchSize($batchSize)	class:MongoCursor
__construct		0;"	f	S: function __construct($connection, $ns, $query = array(), $fields = array())	class:MongoCursor
count		0;"	f	S:int function count($foundOnly)	class:MongoCursor
current		0;"	f	S:array function current()	class:MongoCursor
dead		0;"	f	S:bool function dead()	class:MongoCursor
doQuery		0;"	f	S:void function doQuery()	class:MongoCursor	a:protected
explain		0;"	f	S:array function explain()	class:MongoCursor
fields		0;"	f	S:MongoCursor function fields($f)	class:MongoCursor
getNext		0;"	f	S:array function getNext()	class:MongoCursor
getReadPreference		0;"	f	S:array function getReadPreference()	class:MongoCursor
hasNext		0;"	f	S:bool function hasNext()	class:MongoCursor
hint		0;"	f	S:MongoCursor function hint($index)	class:MongoCursor
immortal		0;"	f	S:MongoCursor function immortal($liveForever = true)	class:MongoCursor
info		0;"	f	S:array function info()	class:MongoCursor
key		0;"	f	S:string function key()	class:MongoCursor
limit		0;"	f	S:MongoCursor function limit($num)	class:MongoCursor
maxTimeMS		0;"	f	S:MongoCursor function maxTimeMS($ms)	class:MongoCursor
next		0;"	f	S:void function next()	class:MongoCursor
partial		0;"	f	S:MongoCursor function partial($okay = true)	class:MongoCursor
reset		0;"	f	S:void function reset()	class:MongoCursor
rewind		0;"	f	S:void function rewind()	class:MongoCursor
setFlag		0;"	f	S:MongoCursor function setFlag($flag, $set = true)	class:MongoCursor
setReadPreference		0;"	f	S:MongoCursor function setReadPreference($read_preference, $tags)	class:MongoCursor
skip		0;"	f	S:MongoCursor function skip($num)	class:MongoCursor
slaveOkay		0;"	f	S:MongoCursor function slaveOkay($okay = true)	class:MongoCursor
snapshot		0;"	f	S:MongoCursor function snapshot()	class:MongoCursor
sort		0;"	f	S:MongoCursor function sort($fields)	class:MongoCursor
tailable		0;"	f	S:MongoCursor function tailable($tail = true)	class:MongoCursor
timeout		0;"	f	S:MongoCursor function timeout($ms)	class:MongoCursor
valid		0;"	f	S:bool function valid()	class:MongoCursor
MongoCommandCursor		0;"	c
batchSize		0;"	f	S:MongoCommandCursor function batchSize($batchSize)	class:MongoCommandCursor
__construct		0;"	f	S: function __construct($connection, $ns, $command = array())	class:MongoCommandCursor
createFromDocument		0;"	f	S: function createFromDocument($connection, $hash, $document)	class:MongoCommandCursor
current		0;"	f	S:array function current()	class:MongoCommandCursor
dead		0;"	f	S:bool function dead()	class:MongoCommandCursor
info		0;"	f	S:array function info()	class:MongoCommandCursor
key		0;"	f	S:string function key()	class:MongoCommandCursor
next		0;"	f	S:void function next()	class:MongoCommandCursor
rewind		0;"	f	S:array function rewind()	class:MongoCommandCursor
valid		0;"	f	S:bool function valid()	class:MongoCommandCursor
MongoId		0;"	c
$id		0;"	p	class:MongoId	S: MongoId::$id
__construct		0;"	f	S: function __construct($id)	class:MongoId
getHostname		0;"	f	S:string function getHostname()	class:MongoId	a:static
getInc		0;"	f	S:int function getInc()	class:MongoId
getPID		0;"	f	S:int function getPID()	class:MongoId
getTimestamp		0;"	f	S:int function getTimestamp()	class:MongoId
isValid		0;"	f	S:bool function isValid($value)	class:MongoId	a:static
__set_state		0;"	f	S:MongoId function __set_state($props)	class:MongoId	a:static
__toString		0;"	f	S:string function __toString()	class:MongoId
MongoCode		0;"	c
__construct		0;"	f	S: function __construct($code, $scope = array())	class:MongoCode
__toString		0;"	f	S:string function __toString()	class:MongoCode
MongoDate		0;"	c
sec		0;"	p	class:MongoDate	S: MongoDate::sec
usec		0;"	p	class:MongoDate	S: MongoDate::usec
__construct		0;"	f	S: function __construct($sec = time(), $usec)	class:MongoDate
__toString		0;"	f	S:string function __toString()	class:MongoDate
MongoRegex		0;"	c
regex		0;"	p	class:MongoRegex	S: MongoRegex::regex
flags		0;"	p	class:MongoRegex	S: MongoRegex::flags
__construct		0;"	f	S: function __construct($regex)	class:MongoRegex
__toString		0;"	f	S:string function __toString()	class:MongoRegex
MongoBinData		0;"	c
GENERIC		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::GENERIC
FUNC		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::FUNC
BYTE_ARRAY		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::BYTE_ARRAY
UUID		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::UUID
UUID_RFC4122		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::UUID_RFC4122
MD5		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::MD5
CUSTOM		0;"	o	class:MongoBinData	a:const	S:const MongoBinData::CUSTOM
bin		0;"	p	class:MongoBinData	S: MongoBinData::bin
type		0;"	p	class:MongoBinData	S: MongoBinData::type
__construct		0;"	f	S: function __construct($data, $type)	class:MongoBinData
__toString		0;"	f	S:string function __toString()	class:MongoBinData
MongoInt32		0;"	c
value		0;"	p	class:MongoInt32	S: MongoInt32::value
__construct		0;"	f	S: function __construct($value)	class:MongoInt32
__toString		0;"	f	S:string function __toString()	class:MongoInt32
MongoInt64		0;"	c
value		0;"	p	class:MongoInt64	S: MongoInt64::value
__construct		0;"	f	S: function __construct($value)	class:MongoInt64
__toString		0;"	f	S:string function __toString()	class:MongoInt64
MongoDBRef		0;"	c
create		0;"	f	S:array function create($collection, $id, $database)	class:MongoDBRef	a:static
get		0;"	f	S:array function get($db, $ref)	class:MongoDBRef	a:static
isRef		0;"	f	S:bool function isRef($ref)	class:MongoDBRef	a:static
MongoMinKey		0;"	c
MongoMaxKey		0;"	c
MongoTimestamp		0;"	c
sec		0;"	p	class:MongoTimestamp	S: MongoTimestamp::sec
inc		0;"	p	class:MongoTimestamp	S: MongoTimestamp::inc
__construct		0;"	f	S: function __construct($sec = time(), $inc)	class:MongoTimestamp
__toString		0;"	f	S:string function __toString()	class:MongoTimestamp
MongoGridFS		0;"	c	i:MongoCollection
chunks		0;"	p	class:MongoGridFS	S: MongoGridFS::chunks
filesName		0;"	p	class:MongoGridFS	a:protected	S:protected MongoGridFS::filesName
chunksName		0;"	p	class:MongoGridFS	a:protected	S:protected MongoGridFS::chunksName
__construct		0;"	f	S: function __construct($db, $prefix = "fs", $chunks = "fs")	class:MongoGridFS
delete		0;"	f	S:bool|array function delete($id)	class:MongoGridFS
drop		0;"	f	S:array function drop()	class:MongoGridFS
find		0;"	f	S:MongoGridFSCursor function find($query = array(), $fields = array())	class:MongoGridFS
findOne		0;"	f	S:MongoGridFSFile function findOne($query = array(), $fields = array())	class:MongoGridFS
get		0;"	f	S:MongoGridFSFile function get($id)	class:MongoGridFS
put		0;"	f	S:mixed function put($filename, $metadata = array(), $options = array())	class:MongoGridFS
remove		0;"	f	S:bool|array function remove($criteria = array(), $options = array())	class:MongoGridFS
storeBytes		0;"	f	S:mixed function storeBytes($bytes, $metadata = array(), $options = array())	class:MongoGridFS
storeFile		0;"	f	S:mixed function storeFile($filename, $metadata = array(), $options = array())	class:MongoGridFS
storeUpload		0;"	f	S:mixed function storeUpload($name, $metadata)	class:MongoGridFS
MongoGridFSFile		0;"	c
file		0;"	p	class:MongoGridFSFile	S: MongoGridFSFile::file
gridfs		0;"	p	class:MongoGridFSFile	a:protected	S:protected MongoGridFSFile::gridfs
__construct		0;"	f	S: function __construct($gridfs, $file)	class:MongoGridfsFile
getBytes		0;"	f	S:string function getBytes()	class:MongoGridFSFile
getFilename		0;"	f	S:string function getFilename()	class:MongoGridFSFile
getResource		0;"	f	S:stream function getResource()	class:MongoGridFSFile
getSize		0;"	f	S:int function getSize()	class:MongoGridFSFile
write		0;"	f	S:int function write($filename)	class:MongoGridFSFile
0;"	c	i:MongoCursor
gridfs		0;"	p	class:	a:protected	S:protected ::gridfs
__construct		0;"	f	S: function __construct($gridfs, $connection, $ns, $query, $fields)	class:MongoGridFSCursor
current		0;"	f	S:MongoGridFSFile function current()	class:MongoGridFSCursor
getNext		0;"	f	S:MongoGridFSFile function getNext()	class:MongoGridFSCursor
key		0;"	f	S:string function key()	class:MongoGridFSCursor
MongoWriteBatch		0;"	c
COMMAND_INSERT		0;"	o	class:MongoWriteBatch	a:const	S:const MongoWriteBatch::COMMAND_INSERT
COMMAND_UPDATE		0;"	o	class:MongoWriteBatch	a:const	S:const MongoWriteBatch::COMMAND_UPDATE
COMMAND_DELETE		0;"	o	class:MongoWriteBatch	a:const	S:const MongoWriteBatch::COMMAND_DELETE
add		0;"	f	S:bool function add($item)	class:MongoWriteBatch
__construct		0;"	f	S: function __construct($collection, $batch_type, $write_options)	class:MongoWriteBatch
execute		0;"	f	S:array function execute($write_options)	class:MongoWriteBatch	a:final
MongoInsertBatch		0;"	c	i:MongoWriteBatch
__construct		0;"	f	S: function __construct($collection, $write_options)	class:MongoInsertBatch
MongoUpdateBatch		0;"	c	i:MongoWriteBatch
__construct		0;"	f	S: function __construct($collection, $write_options)	class:MongoUpdateBatch
MongoDeleteBatch		0;"	c	i:MongoWriteBatch
__construct		0;"	f	S: function __construct($collection, $write_options)	class:MongoDeleteBatch
MongoLog		0;"	c
NONE		0;"	o	class:MongoLog	a:const	S:const MongoLog::NONE
ALL		0;"	o	class:MongoLog	a:const	S:const MongoLog::ALL
WARNING		0;"	o	class:MongoLog	a:const	S:const MongoLog::WARNING
INFO		0;"	o	class:MongoLog	a:const	S:const MongoLog::INFO
FINE		0;"	o	class:MongoLog	a:const	S:const MongoLog::FINE
RS		0;"	o	class:MongoLog	a:const	S:const MongoLog::RS
POOL		0;"	o	class:MongoLog	a:const	S:const MongoLog::POOL
CON		0;"	o	class:MongoLog	a:const	S:const MongoLog::CON
IO		0;"	o	class:MongoLog	a:const	S:const MongoLog::IO
SERVER		0;"	o	class:MongoLog	a:const	S:const MongoLog::SERVER
PARSE		0;"	o	class:MongoLog	a:const	S:const MongoLog::PARSE
callback		0;"	p	class:MongoLog	a:static	S:static MongoLog::callback
level		0;"	p	class:MongoLog	a:static	S:static MongoLog::level
module		0;"	p	class:MongoLog	a:static	S:static MongoLog::module
getCallback		0;"	f	S:callable function getCallback()	class:MongoLog	a:static
getLevel		0;"	f	S:int function getLevel()	class:MongoLog	a:static
getModule		0;"	f	S:int function getModule()	class:MongoLog	a:static
setCallback		0;"	f	S:void function setCallback($log_function)	class:MongoLog	a:static
setLevel		0;"	f	S:void function setLevel($level)	class:MongoLog	a:static
setModule		0;"	f	S:void function setModule($module)	class:MongoLog	a:static
MongoPool		0;"	c
getSize		0;"	f	S:int function getSize()	class:MongoPool	a:static
info		0;"	f	S:array function info()	class:MongoPool
setSize		0;"	f	S:bool function setSize($size)	class:MongoPool	a:static
Mongo		0;"	c	i:MongoClient
connectUtil		0;"	f	S:bool function connectUtil()	class:Mongo	a:protected
__construct		0;"	f	S: function __construct($server, $options)	class:Mongo
getPoolSize		0;"	f	S:int function getPoolSize()	class:Mongo	a:static
getSlave		0;"	f	S:string function getSlave()	class:Mongo
getSlaveOkay		0;"	f	S:bool function getSlaveOkay()	class:Mongo
poolDebug		0;"	f	S:array function poolDebug()	class:Mongo
setPoolSize		0;"	f	S:bool function setPoolSize($size)	class:Mongo	a:static
setSlaveOkay		0;"	f	S:bool function setSlaveOkay($ok = true)	class:Mongo
switchSlave		0;"	f	S:string function switchSlave()	class:Mongo
bson_decode		0;"	f	S:array function bson_decode($bson)
bson_encode		0;"	f	S:string function bson_encode($anything)
MongoException		0;"	c	i:Exception
MongoResultException		0;"	c	i:MongoException
document		0;"	p	class:MongoResultException	S: MongoResultException::document
message		0;"	p	class:MongoResultException	a:protected	S:protected MongoResultException::message
code		0;"	p	class:MongoResultException	a:protected	S:protected MongoResultException::code
file		0;"	p	class:MongoResultException	a:protected	S:protected MongoResultException::file
line		0;"	p	class:MongoResultException	a:protected	S:protected MongoResultException::line
getDocument		0;"	f	S:array function getDocument()	class:MongoResultException
MongoCursorException		0;"	c	i:MongoException
getHost		0;"	f	S:string function getHost()	class:MongoCursorException
MongoCursorTimeoutException		0;"	c	i:MongoCursorException
MongoConnectionException		0;"	c	i:MongoException
MongoGridFSException		0;"	c	i:MongoException
MongoDuplicateKeyException		0;"	c	i:MongoWriteConcernException
message		0;"	p	class:MongoDuplicateKeyException	a:protected	S:protected MongoDuplicateKeyException::message
code		0;"	p	class:MongoDuplicateKeyException	a:protected	S:protected MongoDuplicateKeyException::code
file		0;"	p	class:MongoDuplicateKeyException	a:protected	S:protected MongoDuplicateKeyException::file
line		0;"	p	class:MongoDuplicateKeyException	a:protected	S:protected MongoDuplicateKeyException::line
MongoProtocolException		0;"	c	i:MongoException
message		0;"	p	class:MongoProtocolException	a:protected	S:protected MongoProtocolException::message
code		0;"	p	class:MongoProtocolException	a:protected	S:protected MongoProtocolException::code
file		0;"	p	class:MongoProtocolException	a:protected	S:protected MongoProtocolException::file
line		0;"	p	class:MongoProtocolException	a:protected	S:protected MongoProtocolException::line
MongoExecutionTimeoutException		0;"	c	i:MongoException
message		0;"	p	class:MongoExecutionTimeoutException	a:protected	S:protected MongoExecutionTimeoutException::message
code		0;"	p	class:MongoExecutionTimeoutException	a:protected	S:protected MongoExecutionTimeoutException::code
file		0;"	p	class:MongoExecutionTimeoutException	a:protected	S:protected MongoExecutionTimeoutException::file
line		0;"	p	class:MongoExecutionTimeoutException	a:protected	S:protected MongoExecutionTimeoutException::line
MongoWriteConcernException		0;"	c	i:MongoCursorException
message		0;"	p	class:MongoWriteConcernException	a:protected	S:protected MongoWriteConcernException::message
code		0;"	p	class:MongoWriteConcernException	a:protected	S:protected MongoWriteConcernException::code
file		0;"	p	class:MongoWriteConcernException	a:protected	S:protected MongoWriteConcernException::file
line		0;"	p	class:MongoWriteConcernException	a:protected	S:protected MongoWriteConcernException::line
getDocument		0;"	f	S:array function getDocument()	class:MongoWriteConcernException
MSQL_ASSOC		0;"	d
MSQL_NUM		0;"	d
MSQL_BOTH		0;"	d
msql_affected_rows		0;"	f	S:int function msql_affected_rows($result)
msql_close		0;"	f	S:bool function msql_close($link_identifier)
msql_connect		0;"	f	S:resource function msql_connect($hostname)
msql_create_db		0;"	f	S:bool function msql_create_db($database_name, $link_identifier)
msql_createdb		0;"	f	S: function msql_createdb()
msql_data_seek		0;"	f	S:bool function msql_data_seek($result, $row_number)
msql_db_query		0;"	f	S:resource function msql_db_query($database, $query, $link_identifier)
msql_dbname		0;"	f	S: function msql_dbname()
msql_drop_db		0;"	f	S:bool function msql_drop_db($database_name, $link_identifier)
msql_error		0;"	f	S:string function msql_error()
msql_fetch_array		0;"	f	S:array function msql_fetch_array($result, $result_type)
msql_fetch_field		0;"	f	S:object function msql_fetch_field($result, $field_offset)
msql_fetch_object		0;"	f	S:object function msql_fetch_object($result)
msql_fetch_row		0;"	f	S:array function msql_fetch_row($result)
msql_field_flags		0;"	f	S:string function msql_field_flags($result, $field_offset)
msql_field_len		0;"	f	S:int function msql_field_len($result, $field_offset)
msql_field_name		0;"	f	S:string function msql_field_name($result, $field_offset)
msql_field_seek		0;"	f	S:bool function msql_field_seek($result, $field_offset)
msql_field_table		0;"	f	S:int function msql_field_table($result, $field_offset)
msql_field_type		0;"	f	S:string function msql_field_type($result, $field_offset)
msql_fieldflags		0;"	f	S: function msql_fieldflags()
msql_fieldlen		0;"	f	S: function msql_fieldlen()
msql_fieldname		0;"	f	S: function msql_fieldname()
msql_fieldtable		0;"	f	S: function msql_fieldtable()
msql_fieldtype		0;"	f	S: function msql_fieldtype()
msql_free_result		0;"	f	S:bool function msql_free_result($result)
msql_list_dbs		0;"	f	S:resource function msql_list_dbs($link_identifier)
msql_list_fields		0;"	f	S:resource function msql_list_fields($database, $tablename, $link_identifier)
msql_list_tables		0;"	f	S:resource function msql_list_tables($database, $link_identifier)
msql_num_fields		0;"	f	S:int function msql_num_fields($result)
msql_num_rows		0;"	f	S:int function msql_num_rows($query_identifier)
msql_numfields		0;"	f	S: function msql_numfields()
msql_numrows		0;"	f	S: function msql_numrows()
msql_pconnect		0;"	f	S:resource function msql_pconnect($hostname)
msql_query		0;"	f	S:resource function msql_query($query, $link_identifier)
msql_regcase		0;"	f	S: function msql_regcase()
msql_result		0;"	f	S:string function msql_result($result, $row, $field)
msql_select_db		0;"	f	S:bool function msql_select_db($database_name, $link_identifier)
msql_tablename		0;"	f	S: function msql_tablename()
msql		0;"	f	S: function msql()
MSSQL_ASSOC		0;"	d
MSSQL_NUM		0;"	d
MSSQL_BOTH		0;"	d
SQLTEXT		0;"	d
SQLVARCHAR		0;"	d
SQLCHAR		0;"	d
SQLINT1		0;"	d
SQLINT2		0;"	d
SQLINT4		0;"	d
SQLBIT		0;"	d
SQLFLT4		0;"	d
SQLFLT8		0;"	d
mssql_bind		0;"	f	S:bool function mssql_bind($stmt, $param_name, &$var, $type, $is_output = false, $is_null = false, $maxlen = -1)
mssql_close		0;"	f	S:bool function mssql_close($link_identifier)
mssql_connect		0;"	f	S:resource function mssql_connect($servername, $username, $password, $new_link = false)
mssql_data_seek		0;"	f	S:bool function mssql_data_seek($result_identifier, $row_number)
mssql_execute		0;"	f	S:mixed function mssql_execute($stmt, $skip_results = false)
mssql_fetch_array		0;"	f	S:array function mssql_fetch_array($result, $result_type = MSSQL_BOTH)
mssql_fetch_assoc		0;"	f	S:array function mssql_fetch_assoc($result_id)
mssql_fetch_batch		0;"	f	S:int function mssql_fetch_batch($result)
mssql_fetch_field		0;"	f	S:object function mssql_fetch_field($result, $field_offset = -1)
mssql_fetch_object		0;"	f	S:object function mssql_fetch_object($result)
mssql_fetch_row		0;"	f	S:array function mssql_fetch_row($result)
mssql_field_length		0;"	f	S:int function mssql_field_length($result, $offset = -1)
mssql_field_name		0;"	f	S:string function mssql_field_name($result, $offset = -1)
mssql_field_seek		0;"	f	S:bool function mssql_field_seek($result, $field_offset)
mssql_field_type		0;"	f	S:string function mssql_field_type($result, $offset = -1)
mssql_free_result		0;"	f	S:bool function mssql_free_result($result)
mssql_free_statement		0;"	f	S:bool function mssql_free_statement($stmt)
mssql_get_last_message		0;"	f	S:string function mssql_get_last_message()
mssql_guid_string		0;"	f	S:string function mssql_guid_string($binary, $short_format = false)
mssql_init		0;"	f	S:resource function mssql_init($sp_name, $link_identifier)
mssql_min_error_severity		0;"	f	S:void function mssql_min_error_severity($severity)
mssql_min_message_severity		0;"	f	S:void function mssql_min_message_severity($severity)
mssql_next_result		0;"	f	S:bool function mssql_next_result($result_id)
mssql_num_fields		0;"	f	S:int function mssql_num_fields($result)
mssql_num_rows		0;"	f	S:int function mssql_num_rows($result)
mssql_pconnect		0;"	f	S:resource function mssql_pconnect($servername, $username, $password, $new_link = false)
mssql_query		0;"	f	S:mixed function mssql_query($query, $link_identifier, $batch_size)
mssql_result		0;"	f	S:string function mssql_result($result, $row, $field)
mssql_rows_affected		0;"	f	S:int function mssql_rows_affected($link_identifier)
mssql_select_db		0;"	f	S:bool function mssql_select_db($database_name, $link_identifier)
mysql_affected_rows		0;"	f	S:int function mysql_affected_rows($link_identifier = NULL)
mysql_client_encoding		0;"	f	S:string function mysql_client_encoding($link_identifier = NULL)
mysql_close		0;"	f	S:bool function mysql_close($link_identifier = NULL)
mysql_connect		0;"	f	S:resource function mysql_connect($server = ini_get("mysql.default_host"), $username = ini_get("mysql.default_user"), $password = ini_get("mysql.default_password"), $new_link = false, $client_flags)
mysql_create_db		0;"	f	S:bool function mysql_create_db($database_name, $link_identifier = NULL)
mysql_data_seek		0;"	f	S:bool function mysql_data_seek($result, $row_number)
mysql_db_name		0;"	f	S:string function mysql_db_name($result, $row, $field = NULL)
mysql_db_query		0;"	f	S:resource function mysql_db_query($database, $query, $link_identifier = NULL)
mysql_drop_db		0;"	f	S:bool function mysql_drop_db($database_name, $link_identifier = NULL)
mysql_errno		0;"	f	S:int function mysql_errno($link_identifier = NULL)
mysql_error		0;"	f	S:string function mysql_error($link_identifier = NULL)
mysql_escape_string		0;"	f	S:string function mysql_escape_string($unescaped_string)
mysql_fetch_array		0;"	f	S:array function mysql_fetch_array($result, $result_type = MYSQL_BOTH)
mysql_fetch_assoc		0;"	f	S:array function mysql_fetch_assoc($result)
mysql_fetch_field		0;"	f	S:object function mysql_fetch_field($result, $field_offset)
mysql_fetch_lengths		0;"	f	S:array function mysql_fetch_lengths($result)
mysql_fetch_object		0;"	f	S:object function mysql_fetch_object($result, $class_name, $params)
mysql_fetch_row		0;"	f	S:array function mysql_fetch_row($result)
mysql_field_flags		0;"	f	S:string function mysql_field_flags($result, $field_offset)
mysql_field_len		0;"	f	S:int function mysql_field_len($result, $field_offset)
mysql_field_name		0;"	f	S:string function mysql_field_name($result, $field_offset)
mysql_field_seek		0;"	f	S:bool function mysql_field_seek($result, $field_offset)
mysql_field_table		0;"	f	S:string function mysql_field_table($result, $field_offset)
mysql_field_type		0;"	f	S:string function mysql_field_type($result, $field_offset)
mysql_free_result		0;"	f	S:bool function mysql_free_result($result)
mysql_get_client_info		0;"	f	S:string function mysql_get_client_info()
mysql_get_host_info		0;"	f	S:string function mysql_get_host_info($link_identifier = NULL)
mysql_get_proto_info		0;"	f	S:int function mysql_get_proto_info($link_identifier = NULL)
mysql_get_server_info		0;"	f	S:string function mysql_get_server_info($link_identifier = NULL)
mysql_info		0;"	f	S:string function mysql_info($link_identifier = NULL)
mysql_insert_id		0;"	f	S:int function mysql_insert_id($link_identifier = NULL)
mysql_list_dbs		0;"	f	S:resource function mysql_list_dbs($link_identifier = NULL)
mysql_list_fields		0;"	f	S:resource function mysql_list_fields($database_name, $table_name, $link_identifier = NULL)
mysql_list_processes		0;"	f	S:resource function mysql_list_processes($link_identifier = NULL)
mysql_list_tables		0;"	f	S:resource function mysql_list_tables($database, $link_identifier = NULL)
mysql_num_fields		0;"	f	S:int function mysql_num_fields($result)
mysql_num_rows		0;"	f	S:int function mysql_num_rows($result)
mysql_pconnect		0;"	f	S:resource function mysql_pconnect($server = ini_get("mysql.default_host"), $username = ini_get("mysql.default_user"), $password = ini_get("mysql.default_password"), $client_flags)
mysql_ping		0;"	f	S:bool function mysql_ping($link_identifier = NULL)
mysql_query		0;"	f	S:mixed function mysql_query($query, $link_identifier = NULL)
mysql_real_escape_string		0;"	f	S:string function mysql_real_escape_string($unescaped_string, $link_identifier = NULL)
mysql_result		0;"	f	S:string function mysql_result($result, $row, $field)
mysql_select_db		0;"	f	S:bool function mysql_select_db($database_name, $link_identifier = NULL)
mysql_set_charset		0;"	f	S:bool function mysql_set_charset($charset, $link_identifier = NULL)
mysql_stat		0;"	f	S:string function mysql_stat($link_identifier = NULL)
mysql_tablename		0;"	f	S:string function mysql_tablename($result, $i)
mysql_thread_id		0;"	f	S:int function mysql_thread_id($link_identifier = NULL)
mysql_unbuffered_query		0;"	f	S:resource function mysql_unbuffered_query($query, $link_identifier = NULL)
MYSQLI_READ_DEFAULT_GROUP		0;"	d
MYSQLI_READ_DEFAULT_FILE		0;"	d
MYSQLI_OPT_CONNECT_TIMEOUT		0;"	d
MYSQLI_OPT_LOCAL_INFILE		0;"	d
MYSQLI_INIT_COMMAND		0;"	d
MYSQLI_CLIENT_SSL		0;"	d
MYSQLI_CLIENT_COMPRESS		0;"	d
MYSQLI_CLIENT_INTERACTIVE		0;"	d
MYSQLI_CLIENT_IGNORE_SPACE		0;"	d
MYSQLI_CLIENT_NO_SCHEMA		0;"	d
MYSQLI_CLIENT_MULTI_QUERIES		0;"	d
MYSQLI_STORE_RESULT		0;"	d
MYSQLI_USE_RESULT		0;"	d
MYSQLI_ASSOC		0;"	d
MYSQLI_NUM		0;"	d
MYSQLI_BOTH		0;"	d
MYSQLI_NOT_NULL_FLAG		0;"	d
MYSQLI_PRI_KEY_FLAG		0;"	d
MYSQLI_UNIQUE_KEY_FLAG		0;"	d
MYSQLI_MULTIPLE_KEY_FLAG		0;"	d
MYSQLI_BLOB_FLAG		0;"	d
MYSQLI_UNSIGNED_FLAG		0;"	d
MYSQLI_ZEROFILL_FLAG		0;"	d
MYSQLI_AUTO_INCREMENT_FLAG		0;"	d
MYSQLI_TIMESTAMP_FLAG		0;"	d
MYSQLI_SET_FLAG		0;"	d
MYSQLI_NUM_FLAG		0;"	d
MYSQLI_PART_KEY_FLAG		0;"	d
MYSQLI_GROUP_FLAG		0;"	d
MYSQLI_TYPE_DECIMAL		0;"	d
MYSQLI_TYPE_NEWDECIMAL		0;"	d
MYSQLI_TYPE_BIT		0;"	d
MYSQLI_TYPE_TINY		0;"	d
MYSQLI_TYPE_SHORT		0;"	d
MYSQLI_TYPE_LONG		0;"	d
MYSQLI_TYPE_FLOAT		0;"	d
MYSQLI_TYPE_DOUBLE		0;"	d
MYSQLI_TYPE_NULL		0;"	d
MYSQLI_TYPE_TIMESTAMP		0;"	d
MYSQLI_TYPE_LONGLONG		0;"	d
MYSQLI_TYPE_INT24		0;"	d
MYSQLI_TYPE_DATE		0;"	d
MYSQLI_TYPE_TIME		0;"	d
MYSQLI_TYPE_DATETIME		0;"	d
MYSQLI_TYPE_YEAR		0;"	d
MYSQLI_TYPE_NEWDATE		0;"	d
MYSQLI_TYPE_INTERVAL		0;"	d
MYSQLI_TYPE_ENUM		0;"	d
MYSQLI_TYPE_SET		0;"	d
MYSQLI_TYPE_TINY_BLOB		0;"	d
MYSQLI_TYPE_MEDIUM_BLOB		0;"	d
MYSQLI_TYPE_LONG_BLOB		0;"	d
MYSQLI_TYPE_BLOB		0;"	d
MYSQLI_TYPE_VAR_STRING		0;"	d
MYSQLI_TYPE_STRING		0;"	d
MYSQLI_TYPE_CHAR		0;"	d
MYSQLI_TYPE_GEOMETRY		0;"	d
MYSQLI_NEED_DATA		0;"	d
MYSQLI_NO_DATA		0;"	d
MYSQLI_DATA_TRUNCATED		0;"	d
MYSQLI_ENUM_FLAG		0;"	d
MYSQLI_BINARY_FLAG		0;"	d
MYSQLI_CURSOR_TYPE_FOR_UPDATE		0;"	d
MYSQLI_CURSOR_TYPE_NO_CURSOR		0;"	d
MYSQLI_CURSOR_TYPE_READ_ONLY		0;"	d
MYSQLI_CURSOR_TYPE_SCROLLABLE		0;"	d
MYSQLI_STMT_ATTR_CURSOR_TYPE		0;"	d
MYSQLI_STMT_ATTR_PREFETCH_ROWS		0;"	d
MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH		0;"	d
MYSQLI_SET_CHARSET_NAME		0;"	d
MYSQLI_REPORT_INDEX		0;"	d
MYSQLI_REPORT_ERROR		0;"	d
MYSQLI_REPORT_STRICT		0;"	d
MYSQLI_REPORT_ALL		0;"	d
MYSQLI_REPORT_OFF		0;"	d
MYSQLI_DEBUG_TRACE_ENABLED		0;"	d
MYSQLI_SERVER_QUERY_NO_GOOD_INDEX_USED		0;"	d
MYSQLI_SERVER_QUERY_NO_INDEX_USED		0;"	d
MYSQLI_REFRESH_GRANT		0;"	d
MYSQLI_REFRESH_LOG		0;"	d
MYSQLI_REFRESH_TABLES		0;"	d
MYSQLI_REFRESH_HOSTS		0;"	d
MYSQLI_REFRESH_STATUS		0;"	d
MYSQLI_REFRESH_THREADS		0;"	d
MYSQLI_REFRESH_SLAVE		0;"	d
MYSQLI_REFRESH_MASTER		0;"	d
MYSQLI_TRANS_COR_AND_CHAIN		0;"	d
MYSQLI_TRANS_COR_AND_NO_CHAIN		0;"	d
MYSQLI_TRANS_COR_RELEASE		0;"	d
MYSQLI_TRANS_COR_NO_RELEASE		0;"	d
mysqli		0;"	c
mysqli->affected_rows		0;"	p	class:mysqli	S: mysqli::mysqli->affected_rows
mysqli->client_info		0;"	p	class:mysqli	S: mysqli::mysqli->client_info
mysqli->client_version		0;"	p	class:mysqli	S: mysqli::mysqli->client_version
mysqli->connect_errno		0;"	p	class:mysqli	S: mysqli::mysqli->connect_errno
mysqli->connect_error		0;"	p	class:mysqli	S: mysqli::mysqli->connect_error
mysqli->errno		0;"	p	class:mysqli	S: mysqli::mysqli->errno
mysqli->error_list		0;"	p	class:mysqli	S: mysqli::mysqli->error_list
mysqli->error		0;"	p	class:mysqli	S: mysqli::mysqli->error
mysqli->field_count		0;"	p	class:mysqli	S: mysqli::mysqli->field_count
mysqli->client_version		0;"	p	class:mysqli	S: mysqli::mysqli->client_version
mysqli->host_info		0;"	p	class:mysqli	S: mysqli::mysqli->host_info
mysqli->protocol_version		0;"	p	class:mysqli	S: mysqli::mysqli->protocol_version
mysqli->server_info		0;"	p	class:mysqli	S: mysqli::mysqli->server_info
mysqli->server_version		0;"	p	class:mysqli	S: mysqli::mysqli->server_version
mysqli->info		0;"	p	class:mysqli	S: mysqli::mysqli->info
mysqli->insert_id		0;"	p	class:mysqli	S: mysqli::mysqli->insert_id
mysqli->sqlstate		0;"	p	class:mysqli	S: mysqli::mysqli->sqlstate
mysqli->thread_id		0;"	p	class:mysqli	S: mysqli::mysqli->thread_id
mysqli->warning_count		0;"	p	class:mysqli	S: mysqli::mysqli->warning_count
mysqli->affected_rows		0;"	p	class:mysqli	S: mysqli::mysqli->affected_rows
$affected_rows		0;"	f	S:int function $affected_rows($link)	class:mysqli
autocommit		0;"	f	S:bool function autocommit($mode, $link)	class:mysqli
begin_transaction		0;"	f	S:bool function begin_transaction($flags, $name, $link)	class:mysqli
change_user		0;"	f	S:bool function change_user($user, $password, $database, $link)	class:mysqli
character_set_name		0;"	f	S:string function character_set_name($link)	class:mysqli
mysqli->client_info		0;"	p	class:mysqli	S: mysqli::mysqli->client_info
$client_info		0;"	f	S:string function $client_info($link)	class:mysqli
mysqli->client_version		0;"	p	class:mysqli	S: mysqli::mysqli->client_version
$client_version		0;"	f	S:int function $client_version($link)	class:mysqli
close		0;"	f	S:bool function close($link)	class:mysqli
commit		0;"	f	S:bool function commit($flags, $name, $link)	class:mysqli
mysqli->connect_errno		0;"	p	class:mysqli	S: mysqli::mysqli->connect_errno
$connect_errno		0;"	f	S:int function $connect_errno()	class:mysqli
mysqli->connect_error		0;"	p	class:mysqli	S: mysqli::mysqli->connect_error
$connect_error		0;"	f	S:string function $connect_error()	class:mysqli
__construct		0;"	f	S:mysqli function __construct($host = ini_get("mysqli.default_host"), $username = ini_get("mysqli.default_user"), $passwd = ini_get("mysqli.default_pw"), $dbname = "", $port = ini_get("mysqli.default_port"), $socket = ini_get("mysqli.default_socket"))	class:mysqli
debug		0;"	f	S:bool function debug($message)	class:mysqli
dump_debug_info		0;"	f	S:bool function dump_debug_info($link)	class:mysqli
mysqli->errno		0;"	p	class:mysqli	S: mysqli::mysqli->errno
$errno		0;"	f	S:int function $errno($link)	class:mysqli
mysqli->error_list		0;"	p	class:mysqli	S: mysqli::mysqli->error_list
$error_list		0;"	f	S:array function $error_list($link)	class:mysqli
mysqli->error		0;"	p	class:mysqli	S: mysqli::mysqli->error
$error		0;"	f	S:string function $error($link)	class:mysqli
mysqli->field_count		0;"	p	class:mysqli	S: mysqli::mysqli->field_count
$field_count		0;"	f	S:int function $field_count($link)	class:mysqli
get_charset		0;"	f	S:object function get_charset($link)	class:mysqli
get_client_info		0;"	f	S:string function get_client_info($link)	class:mysqli
mysqli_get_client_stats		0;"	f	S:array function mysqli_get_client_stats()
mysqli->client_version		0;"	p	class:mysqli	S: mysqli::mysqli->client_version
mysqli_get_client_version		0;"	f	S:int function mysqli_get_client_version($link)
get_connection_stats		0;"	f	S:array function get_connection_stats($link)	class:mysqli
mysqli->host_info		0;"	p	class:mysqli	S: mysqli::mysqli->host_info
$host_info		0;"	f	S:string function $host_info($link)	class:mysqli
mysqli->protocol_version		0;"	p	class:mysqli	S: mysqli::mysqli->protocol_version
$protocol_version		0;"	f	S:int function $protocol_version($link)	class:mysqli
mysqli->server_info		0;"	p	class:mysqli	S: mysqli::mysqli->server_info
$server_info		0;"	f	S:string function $server_info($link)	class:mysqli
mysqli->server_version		0;"	p	class:mysqli	S: mysqli::mysqli->server_version
$server_version		0;"	f	S:int function $server_version($link)	class:mysqli
get_warnings		0;"	f	S:mysqli_warning function get_warnings($link)	class:mysqli
mysqli->info		0;"	p	class:mysqli	S: mysqli::mysqli->info
$info		0;"	f	S:string function $info($link)	class:mysqli
init		0;"	f	S:mysqli function init()	class:mysqli
mysqli->insert_id		0;"	p	class:mysqli	S: mysqli::mysqli->insert_id
$insert_id		0;"	f	S:mixed function $insert_id($link)	class:mysqli
kill		0;"	f	S:bool function kill($processid, $link)	class:mysqli
more_results		0;"	f	S:bool function more_results($link)	class:mysqli
multi_query		0;"	f	S:bool function multi_query($query, $link)	class:mysqli
next_result		0;"	f	S:bool function next_result($link)	class:mysqli
options		0;"	f	S:bool function options($option, $value, $link)	class:mysqli
ping		0;"	f	S:bool function ping($link)	class:mysqli
poll		0;"	f	S:int function poll(&$read, &$error, &$reject, $sec, $usec)	class:mysqli	a:static
prepare		0;"	f	S:mysqli_stmt function prepare($query, $link)	class:mysqli
query		0;"	f	S:mixed function query($query, $resultmode = MYSQLI_STORE_RESULT, $link)	class:mysqli
real_connect		0;"	f	S:bool function real_connect($host, $username, $passwd, $dbname, $port, $socket, $flags, $link)	class:mysqli
real_escape_string		0;"	f	S:string function real_escape_string($escapestr, $link)	class:mysqli
real_query		0;"	f	S:bool function real_query($query, $link)	class:mysqli
reap_async_query		0;"	f	S:mysqli_result function reap_async_query($link)	class:mysqli
refresh		0;"	f	S:int function refresh($options, $link)	class:mysqli
release_savepoint		0;"	f	S:bool function release_savepoint($name, $link)	class:mysqli
rollback		0;"	f	S:bool function rollback($flags, $name, $link)	class:mysqli
rpl_query_type		0;"	f	S:int function rpl_query_type($query, $link)	class:mysqli
savepoint		0;"	f	S:bool function savepoint($name, $link)	class:mysqli
select_db		0;"	f	S:bool function select_db($dbname, $link)	class:mysqli
send_query		0;"	f	S:bool function send_query($query, $link)	class:mysqli
set_charset		0;"	f	S:bool function set_charset($charset, $link)	class:mysqli
set_local_infile_default		0;"	f	S:void function set_local_infile_default($link)	class:mysqli
set_local_infile_handler		0;"	f	S:bool function set_local_infile_handler($link, $read_func)	class:mysqli
mysqli->sqlstate		0;"	p	class:mysqli	S: mysqli::mysqli->sqlstate
$sqlstate		0;"	f	S:string function $sqlstate($link)	class:mysqli
ssl_set		0;"	f	S:bool function ssl_set($key, $cert, $ca, $capath, $cipher, $link)	class:mysqli
stat		0;"	f	S:string function stat($link)	class:mysqli
stmt_init		0;"	f	S:mysqli_stmt function stmt_init($link)	class:mysqli
store_result		0;"	f	S:mysqli_result function store_result($option)	class:mysqli
mysqli->thread_id		0;"	p	class:mysqli	S: mysqli::mysqli->thread_id
$thread_id		0;"	f	S:int function $thread_id($link)	class:mysqli
thread_safe		0;"	f	S:bool function thread_safe()	class:mysqli
use_result		0;"	f	S:mysqli_result function use_result($link)	class:mysqli
mysqli->warning_count		0;"	p	class:mysqli	S: mysqli::mysqli->warning_count
$warning_count		0;"	f	S:int function $warning_count($link)	class:mysqli
mysqli_stmt		0;"	c
mysqli_stmt->affected_rows		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->affected_rows
mysqli_stmt->errno		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->errno
mysqli_stmt->error_list		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->error_list
mysqli_stmt->error		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->error
mysqli_stmt->field_count		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->field_count
mysqli_stmt->insert_id		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->insert_id
mysqli_stmt->num_rows		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->num_rows
mysqli_stmt->param_count		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->param_count
mysqli_stmt->sqlstate		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->sqlstate
mysqli_stmt->affected_rows		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->affected_rows
$affected_rows		0;"	f	S:int function $affected_rows($stmt)	class:mysqli_stmt
attr_get		0;"	f	S:int function attr_get($attr, $stmt)	class:mysqli_stmt
attr_set		0;"	f	S:bool function attr_set($attr, $mode, $stmt)	class:mysqli_stmt
bind_param		0;"	f	S:bool function bind_param($types, &$var1, &$..., $stmt)	class:mysqli_stmt
bind_result		0;"	f	S:bool function bind_result(&$var1, &$..., $stmt)	class:mysqli_stmt
close		0;"	f	S:bool function close($stmt)	class:mysqli_stmt
data_seek		0;"	f	S:void function data_seek($offset, $stmt)	class:mysqli_stmt
mysqli_stmt->errno		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->errno
$errno		0;"	f	S:int function $errno($stmt)	class:mysqli_stmt
mysqli_stmt->error_list		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->error_list
$error_list		0;"	f	S:array function $error_list($stmt)	class:mysqli_stmt
mysqli_stmt->error		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->error
$error		0;"	f	S:string function $error($stmt)	class:mysqli_stmt
execute		0;"	f	S:bool function execute($stmt)	class:mysqli_stmt
fetch		0;"	f	S:bool function fetch($stmt)	class:mysqli_stmt
mysqli_stmt->field_count		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->field_count
$field_count		0;"	f	S:int function $field_count($stmt)	class:mysqli_stmt
free_result		0;"	f	S:void function free_result($stmt)	class:mysqli_stmt
get_result		0;"	f	S:mysqli_result function get_result($stmt)	class:mysqli_stmt
get_warnings		0;"	f	S:object function get_warnings($stmt)	class:mysqli_stmt
mysqli_stmt->insert_id		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->insert_id
$insert_id		0;"	f	S:mixed function $insert_id($stmt)	class:mysqli_stmt
more_results		0;"	f	S:bool function more_results($stmt)	class:mysqli_stmt
next_result		0;"	f	S:bool function next_result($stmt)	class:mysqli_stmt
mysqli_stmt->num_rows		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->num_rows
$num_rows		0;"	f	S:int function $num_rows($stmt)	class:mysqli_stmt
mysqli_stmt->param_count		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->param_count
$param_count		0;"	f	S:int function $param_count($stmt)	class:mysqli_stmt
prepare		0;"	f	S:bool function prepare($query, $stmt)	class:mysqli_stmt
reset		0;"	f	S:bool function reset($stmt)	class:mysqli_stmt
result_metadata		0;"	f	S:mysqli_result function result_metadata($stmt)	class:mysqli_stmt
send_long_data		0;"	f	S:bool function send_long_data($param_nr, $data, $stmt)	class:mysqli_stmt
mysqli_stmt->sqlstate		0;"	p	class:mysqli_stmt	S: mysqli_stmt::mysqli_stmt->sqlstate
$sqlstate		0;"	f	S:string function $sqlstate($stmt)	class:mysqli_stmt
store_result		0;"	f	S:bool function store_result($stmt)	class:mysqli_stmt
mysqli_result		0;"	c
mysqli_result->current_field		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->current_field
mysqli_result->field_count		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->field_count
mysqli_result->lengths		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->lengths
mysqli_result->num_rows		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->num_rows
mysqli_result->current_field		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->current_field
$current_field		0;"	f	S:int function $current_field($result)	class:mysqli_result
data_seek		0;"	f	S:bool function data_seek($offset, $result)	class:mysqli_result
fetch_all		0;"	f	S:mixed function fetch_all($resulttype = MYSQLI_NUM, $result)	class:mysqli_result
fetch_array		0;"	f	S:mixed function fetch_array($resulttype = MYSQLI_BOTH, $result)	class:mysqli_result
fetch_assoc		0;"	f	S:array function fetch_assoc($result)	class:mysqli_result
fetch_field_direct		0;"	f	S:object function fetch_field_direct($fieldnr, $result)	class:mysqli_result
fetch_field		0;"	f	S:object function fetch_field($result)	class:mysqli_result
fetch_fields		0;"	f	S:array function fetch_fields($result)	class:mysqli_result
fetch_object		0;"	f	S:object function fetch_object($class_name = "stdClass", $params, $result)	class:mysqli_result
fetch_row		0;"	f	S:mixed function fetch_row($result)	class:mysqli_result
mysqli_result->field_count		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->field_count
$field_count		0;"	f	S:int function $field_count($result)	class:mysqli_result
field_seek		0;"	f	S:bool function field_seek($fieldnr, $result)	class:mysqli_result
free		0;"	f	S:void function free($result)	class:mysqli_result
mysqli_result->lengths		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->lengths
$lengths		0;"	f	S:array function $lengths($result)	class:mysqli_result
mysqli_result->num_rows		0;"	p	class:mysqli_result	S: mysqli_result::mysqli_result->num_rows
$num_rows		0;"	f	S:int function $num_rows($result)	class:mysqli_result
mysqli_driver		0;"	c
client_info		0;"	p	class:mysqli_driver	S: mysqli_driver::client_info
client_version		0;"	p	class:mysqli_driver	S: mysqli_driver::client_version
driver_version		0;"	p	class:mysqli_driver	S: mysqli_driver::driver_version
embedded		0;"	p	class:mysqli_driver	S: mysqli_driver::embedded
reconnect		0;"	p	class:mysqli_driver	S: mysqli_driver::reconnect
report_mode		0;"	p	class:mysqli_driver	S: mysqli_driver::report_mode
embedded_server_end		0;"	f	S:void function embedded_server_end()	class:mysqli_driver
embedded_server_start		0;"	f	S:bool function embedded_server_start($start, $arguments, $groups)	class:mysqli_driver
mysqli_driver->report_mode		0;"	p	class:mysqli_driver	S: mysqli_driver::mysqli_driver->report_mode
$report_mode		0;"	f	S:bool function $report_mode($flags)	class:mysqli_driver
mysqli_warning		0;"	c
message		0;"	p	class:mysqli_warning	S: mysqli_warning::message
sqlstate		0;"	p	class:mysqli_warning	S: mysqli_warning::sqlstate
errno		0;"	p	class:mysqli_warning	S: mysqli_warning::errno
__construct		0;"	f	S: function __construct()	class:mysqli_warning
next		0;"	f	S:void function next()	class:mysqli_warning
mysqli_sql_exception		0;"	c	i:RuntimeException
sqlstate		0;"	p	class:mysqli_sql_exception	a:protected	S:protected mysqli_sql_exception::sqlstate
message		0;"	p	class:mysqli_sql_exception	a:protected	S:protected mysqli_sql_exception::message
code		0;"	p	class:mysqli_sql_exception	a:protected	S:protected mysqli_sql_exception::code
file		0;"	p	class:mysqli_sql_exception	a:protected	S:protected mysqli_sql_exception::file
line		0;"	p	class:mysqli_sql_exception	a:protected	S:protected mysqli_sql_exception::line
mysqli_bind_param		0;"	f	S: function mysqli_bind_param()
mysqli_bind_result		0;"	f	S: function mysqli_bind_result()
mysqli_client_encoding		0;"	f	S: function mysqli_client_encoding()
mysqli_connect		0;"	f	S: function mysqli_connect()
disable_reads_from_master		0;"	f	S:bool function disable_reads_from_master($link)	class:mysqli
mysqli_disable_rpl_parse		0;"	f	S:bool function mysqli_disable_rpl_parse($link)
mysqli_enable_reads_from_master		0;"	f	S:bool function mysqli_enable_reads_from_master($link)
mysqli_enable_rpl_parse		0;"	f	S:bool function mysqli_enable_rpl_parse($link)
mysqli_escape_string		0;"	f	S: function mysqli_escape_string()
mysqli_execute		0;"	f	S: function mysqli_execute()
mysqli_fetch		0;"	f	S: function mysqli_fetch()
mysqli_get_cache_stats		0;"	f	S:array function mysqli_get_cache_stats()
mysqli_get_links_stats		0;"	f	S:array function mysqli_get_links_stats()
mysqli_get_metadata		0;"	f	S: function mysqli_get_metadata()
mysqli_master_query		0;"	f	S:bool function mysqli_master_query($link, $query)
mysqli_param_count		0;"	f	S: function mysqli_param_count()
mysqli_report		0;"	f	S: function mysqli_report()
mysqli_rpl_parse_enabled		0;"	f	S:int function mysqli_rpl_parse_enabled($link)
mysqli_rpl_probe		0;"	f	S:bool function mysqli_rpl_probe($link)
mysqli_send_long_data		0;"	f	S: function mysqli_send_long_data()
set_opt		0;"	f	S: function set_opt()	class:mysqli
mysqli_slave_query		0;"	f	S:bool function mysqli_slave_query($link, $query)
MYSQLND_MS_MASTER_SWITCH		0;"	d
MYSQLND_MS_SLAVE_SWITCH		0;"	d
MYSQLND_MS_LAST_USED_SWITCH		0;"	d
MYSQLND_MS_QUERY_USE_MASTER		0;"	d
MYSQLND_MS_QUERY_USE_SLAVE		0;"	d
MYSQLND_MS_QUERY_USE_LAST_USED		0;"	d
MYSQLND_MS_QOS_CONSISTENCY_EVENTUAL		0;"	d
MYSQLND_MS_QOS_CONSISTENCY_SESSION		0;"	d
MYSQLND_MS_QOS_CONSISTENCY_STRONG		0;"	d
MYSQLND_MS_QOS_OPTION_GTID		0;"	d
MYSQLND_MS_QOS_OPTION_AGE		0;"	d
MYSQLND_MS_VERSION		0;"	d
MYSQLND_MS_VERSION_ID		0;"	d
mysqlnd_ms_dump_servers		0;"	f	S:array function mysqlnd_ms_dump_servers($connection)
mysqlnd_ms_fabric_select_global		0;"	f	S:array function mysqlnd_ms_fabric_select_global($connection, $table_name)
mysqlnd_ms_fabric_select_shard		0;"	f	S:array function mysqlnd_ms_fabric_select_shard($connection, $table_name, $shard_key)
mysqlnd_ms_get_last_gtid		0;"	f	S:string function mysqlnd_ms_get_last_gtid($connection)
mysqlnd_ms_get_last_used_connection		0;"	f	S:array function mysqlnd_ms_get_last_used_connection($connection)
mysqlnd_ms_get_stats		0;"	f	S:array function mysqlnd_ms_get_stats()
mysqlnd_ms_match_wild		0;"	f	S:bool function mysqlnd_ms_match_wild($table_name, $wildcard)
mysqlnd_ms_query_is_select		0;"	f	S:int function mysqlnd_ms_query_is_select($query)
mysqlnd_ms_set_qos		0;"	f	S:bool function mysqlnd_ms_set_qos($connection, $service_level, $service_level_option, $option_value)
mysqlnd_ms_set_user_pick_server		0;"	f	S:bool function mysqlnd_ms_set_user_pick_server($function)
mysqlnd_ms_xa_begin		0;"	f	S:int function mysqlnd_ms_xa_begin($connection, $gtrid, $timeout)
mysqlnd_ms_xa_commit		0;"	f	S:int function mysqlnd_ms_xa_commit($connection, $gtrid)
mysqlnd_ms_xa_gc		0;"	f	S:int function mysqlnd_ms_xa_gc($connection, $gtrid, $ignore_max_retries)
mysqlnd_ms_xa_rollback		0;"	f	S:int function mysqlnd_ms_xa_rollback($connection, $gtrid)
MYSQLND_QC_ENABLE_SWITCH		0;"	d
MYSQLND_QC_DISABLE_SWITCH		0;"	d
MYSQLND_QC_TTL_SWITCH		0;"	d
MYSQLND_QC_SERVER_ID_SWITCH		0;"	d
MYSQLND_QC_CONDITION_META_SCHEMA_PATTERN		0;"	d
MYSQLND_QC_VERSION		0;"	d
MYSQLND_QC_VERSION_ID		0;"	d
mysqlnd_qc_clear_cache		0;"	f	S:bool function mysqlnd_qc_clear_cache()
mysqlnd_qc_get_available_handlers		0;"	f	S:array function mysqlnd_qc_get_available_handlers()
mysqlnd_qc_get_cache_info		0;"	f	S:array function mysqlnd_qc_get_cache_info()
mysqlnd_qc_get_core_stats		0;"	f	S:array function mysqlnd_qc_get_core_stats()
mysqlnd_qc_get_normalized_query_trace_log		0;"	f	S:array function mysqlnd_qc_get_normalized_query_trace_log()
mysqlnd_qc_get_query_trace_log		0;"	f	S:array function mysqlnd_qc_get_query_trace_log()
mysqlnd_qc_set_cache_condition		0;"	f	S:bool function mysqlnd_qc_set_cache_condition($condition_type, $condition, $condition_option)
mysqlnd_qc_set_is_select		0;"	f	S:mixed function mysqlnd_qc_set_is_select($callback)
mysqlnd_qc_set_storage_handler		0;"	f	S:bool function mysqlnd_qc_set_storage_handler($handler)
mysqlnd_qc_set_user_handlers		0;"	f	S:bool function mysqlnd_qc_set_user_handlers($get_hash, $find_query_in_cache, $return_to_cache, $add_query_to_cache_if_not_exists, $query_is_select, $update_query_run_time_stats, $get_stats, $clear_cache)
MYSQLND_UH_MYSQLND_COM_SLEEP		0;"	d
MYSQLND_UH_MYSQLND_COM_QUIT		0;"	d
MYSQLND_UH_MYSQLND_COM_INIT_DB		0;"	d
MYSQLND_UH_MYSQLND_COM_QUERY		0;"	d
MYSQLND_UH_MYSQLND_COM_FIELD_LIST		0;"	d
MYSQLND_UH_MYSQLND_COM_CREATE_DB		0;"	d
MYSQLND_UH_MYSQLND_COM_DROP_DB		0;"	d
MYSQLND_UH_MYSQLND_COM_REFRESH		0;"	d
MYSQLND_UH_MYSQLND_COM_SHUTDOWN		0;"	d
MYSQLND_UH_MYSQLND_COM_STATISTICS		0;"	d
MYSQLND_UH_MYSQLND_COM_PROCESS_INFO		0;"	d
MYSQLND_UH_MYSQLND_COM_CONNECT		0;"	d
MYSQLND_UH_MYSQLND_COM_PROCESS_KILL		0;"	d
MYSQLND_UH_MYSQLND_COM_DEBUG		0;"	d
MYSQLND_UH_MYSQLND_COM_PING		0;"	d
MYSQLND_UH_MYSQLND_COM_TIME		0;"	d
MYSQLND_UH_MYSQLND_COM_DELAYED_INSERT		0;"	d
MYSQLND_UH_MYSQLND_COM_CHANGE_USER		0;"	d
MYSQLND_UH_MYSQLND_COM_BINLOG_DUMP		0;"	d
MYSQLND_UH_MYSQLND_COM_TABLE_DUMP		0;"	d
MYSQLND_UH_MYSQLND_COM_CONNECT_OUT		0;"	d
MYSQLND_UH_MYSQLND_COM_REGISTER_SLAVED		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_PREPARE		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_EXECUTE		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_SEND_LONG_DATA		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_CLOSE		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_RESET		0;"	d
MYSQLND_UH_MYSQLND_COM_SET_OPTION		0;"	d
MYSQLND_UH_MYSQLND_COM_STMT_FETCH		0;"	d
MYSQLND_UH_MYSQLND_COM_DAEMON		0;"	d
MYSQLND_UH_MYSQLND_COM_END		0;"	d
MYSQLND_UH_MYSQLND_PROT_GREET_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_AUTH_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_OK_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_EOF_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_CMD_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_RSET_HEADER_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_RSET_FLD_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_ROW_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_STATS_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PREPARE_RESP_PACKET		0;"	d
MYSQLND_UH_MYSQLND_CHG_USER_RESP_PACKET		0;"	d
MYSQLND_UH_MYSQLND_PROT_LAST		0;"	d
MYSQLND_UH_MYSQLND_CLOSE_EXPLICIT		0;"	d
MYSQLND_UH_MYSQLND_CLOSE_IMPLICIT		0;"	d
MYSQLND_UH_MYSQLND_CLOSE_DISCONNECTED		0;"	d
MYSQLND_UH_MYSQLND_CLOSE_LAST		0;"	d
MYSQLND_UH_SERVER_OPTION_MULTI_STATEMENTS_ON		0;"	d
MYSQLND_UH_SERVER_OPTION_MULTI_STATEMENTS_OFF		0;"	d
MYSQLND_UH_MYSQLND_OPTION_OPT_CONNECT_TIMEOUT		0;"	d
MYSQLND_UH_MYSQLND_OPTION_OPT_COMPRESS		0;"	d
MYSQLND_UH_MYSQLND_OPTION_OPT_NAMED_PIPE		0;"	d
MYSQLND_UH_MYSQLND_OPTION_INIT_COMMAND		0;"	d
MYSQLND_UH_MYSQLND_READ_DEFAULT_FILE		0;"	d
MYSQLND_UH_MYSQLND_READ_DEFAULT_GROUP		0;"	d
MYSQLND_UH_MYSQLND_SET_CHARSET_DIR		0;"	d
MYSQLND_UH_MYSQLND_SET_CHARSET_NAME		0;"	d
MYSQLND_UH_MYSQLND_OPT_LOCAL_INFILE		0;"	d
MYSQLND_UH_MYSQLND_OPT_PROTOCOL		0;"	d
MYSQLND_UH_MYSQLND_SHARED_MEMORY_BASE_NAME		0;"	d
MYSQLND_UH_MYSQLND_OPT_READ_TIMEOUT		0;"	d
MYSQLND_UH_MYSQLND_OPT_WRITE_TIMEOUT		0;"	d
MYSQLND_UH_MYSQLND_OPT_USE_RESULT		0;"	d
MYSQLND_UH_MYSQLND_OPT_USE_REMOTE_CONNECTION		0;"	d
MYSQLND_UH_MYSQLND_OPT_USE_EMBEDDED_CONNECTION		0;"	d
MYSQLND_UH_MYSQLND_OPT_GUESS_CONNECTION		0;"	d
MYSQLND_UH_MYSQLND_SET_CLIENT_IP		0;"	d
MYSQLND_UH_MYSQLND_SECURE_AUTH		0;"	d
MYSQLND_UH_MYSQLND_REPORT_DATA_TRUNCATION		0;"	d
MYSQLND_UH_MYSQLND_OPT_RECONNECT		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_VERIFY_SERVER_CERT		0;"	d
MYSQLND_UH_MYSQLND_OPT_NET_CMD_BUFFER_SIZE		0;"	d
MYSQLND_UH_MYSQLND_OPT_NET_READ_BUFFER_SIZE		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_KEY		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_CERT		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_CA		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_CAPATH		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_CIPHER		0;"	d
MYSQLND_UH_MYSQLND_OPT_SSL_PASSPHRASE		0;"	d
MYSQLND_UH_SERVER_OPTION_PLUGIN_DIR		0;"	d
MYSQLND_UH_SERVER_OPTION_DEFAULT_AUTH		0;"	d
MYSQLND_UH_SERVER_OPTION_SET_CLIENT_IP		0;"	d
MYSQLND_UH_MYSQLND_OPT_MAX_ALLOWED_PACKET		0;"	d
MYSQLND_UH_MYSQLND_OPT_AUTH_PROTOCOL		0;"	d
MYSQLND_UH_MYSQLND_OPT_INT_AND_FLOAT_NATIVE		0;"	d
MYSQLND_UH_VERSION		0;"	d
MYSQLND_UH_VERSION_ID		0;"	d
MysqlndUhConnection		0;"	c
changeUser		0;"	f	S:bool function changeUser($connection, $user, $password, $database, $silent, $passwd_len)	class:MysqlndUhConnection
charsetName		0;"	f	S:string function charsetName($connection)	class:MysqlndUhConnection
close		0;"	f	S:bool function close($connection, $close_type)	class:MysqlndUhConnection
connect		0;"	f	S:bool function connect($connection, $host, $use", $password, $database, $port, $socket, $mysql_flags)	class:MysqlndUhConnection
__construct		0;"	f	S: function __construct()	class:MysqlndUhConnection
endPSession		0;"	f	S:bool function endPSession($connection)	class:MysqlndUhConnection
escapeString		0;"	f	S:string function escapeString($connection, $escape_string)	class:MysqlndUhConnection
getAffectedRows		0;"	f	S:int function getAffectedRows($connection)	class:MysqlndUhConnection
getErrorNumber		0;"	f	S:int function getErrorNumber($connection)	class:MysqlndUhConnection
getErrorString		0;"	f	S:string function getErrorString($connection)	class:MysqlndUhConnection
getFieldCount		0;"	f	S:int function getFieldCount($connection)	class:MysqlndUhConnection
getHostInformation		0;"	f	S:string function getHostInformation($connection)	class:MysqlndUhConnection
getLastInsertId		0;"	f	S:int function getLastInsertId($connection)	class:MysqlndUhConnection
getLastMessage		0;"	f	S:void function getLastMessage($connection)	class:MysqlndUhConnection
getProtocolInformation		0;"	f	S:string function getProtocolInformation($connection)	class:MysqlndUhConnection
getServerInformation		0;"	f	S:string function getServerInformation($connection)	class:MysqlndUhConnection
getServerStatistics		0;"	f	S:string function getServerStatistics($connection)	class:MysqlndUhConnection
getServerVersion		0;"	f	S:int function getServerVersion($connection)	class:MysqlndUhConnection
getSqlstate		0;"	f	S:string function getSqlstate($connection)	class:MysqlndUhConnection
getStatistics		0;"	f	S:array function getStatistics($connection)	class:MysqlndUhConnection
getThreadId		0;"	f	S:int function getThreadId($connection)	class:MysqlndUhConnection
getWarningCount		0;"	f	S:int function getWarningCount($connection)	class:MysqlndUhConnection
init		0;"	f	S:bool function init($connection)	class:MysqlndUhConnection
killConnection		0;"	f	S:bool function killConnection($connection, $pid)	class:MysqlndUhConnection
listFields		0;"	f	S:array function listFields($connection, $table, $achtung_wild)	class:MysqlndUhConnection
listMethod		0;"	f	S:void function listMethod($connection, $query, $achtung_wild, $par1)	class:MysqlndUhConnection
moreResults		0;"	f	S:bool function moreResults($connection)	class:MysqlndUhConnection
nextResult		0;"	f	S:bool function nextResult($connection)	class:MysqlndUhConnection
ping		0;"	f	S:bool function ping($connection)	class:MysqlndUhConnection
query		0;"	f	S:bool function query($connection, $query)	class:MysqlndUhConnection
queryReadResultsetHeader		0;"	f	S:bool function queryReadResultsetHeader($connection, $mysqlnd_stmt)	class:MysqlndUhConnection
reapQuery		0;"	f	S:bool function reapQuery($connection)	class:MysqlndUhConnection
refreshServer		0;"	f	S:bool function refreshServer($connection, $options)	class:MysqlndUhConnection
restartPSession		0;"	f	S:bool function restartPSession($connection)	class:MysqlndUhConnection
selectDb		0;"	f	S:bool function selectDb($connection, $database)	class:MysqlndUhConnection
sendClose		0;"	f	S:bool function sendClose($connection)	class:MysqlndUhConnection
sendQuery		0;"	f	S:bool function sendQuery($connection, $query)	class:MysqlndUhConnection
serverDumpDebugInformation		0;"	f	S:bool function serverDumpDebugInformation($connection)	class:MysqlndUhConnection
setAutocommit		0;"	f	S:bool function setAutocommit($connection, $mode)	class:MysqlndUhConnection
setCharset		0;"	f	S:bool function setCharset($connection, $charset)	class:MysqlndUhConnection
setClientOption		0;"	f	S:bool function setClientOption($connection, $option, $value)	class:MysqlndUhConnection
setServerOption		0;"	f	S:void function setServerOption($connection, $option)	class:MysqlndUhConnection
shutdownServer		0;"	f	S:void function shutdownServer($MYSQLND_UH_RES_MYSQLND_NAME, $"level")	class:MysqlndUhConnection
simpleCommand		0;"	f	S:bool function simpleCommand($connection, $command, $arg, $ok_packet, $silent, $ignore_upsert_status)	class:MysqlndUhConnection
simpleCommandHandleResponse		0;"	f	S:bool function simpleCommandHandleResponse($connection, $ok_packet, $silent, $command, $ignore_upsert_status)	class:MysqlndUhConnection
sslSet		0;"	f	S:bool function sslSet($connection, $key, $cert, $ca, $capath, $cipher)	class:MysqlndUhConnection
stmtInit		0;"	f	S:resource function stmtInit($connection)	class:MysqlndUhConnection
storeResult		0;"	f	S:resource function storeResult($connection)	class:MysqlndUhConnection
txCommit		0;"	f	S:bool function txCommit($connection)	class:MysqlndUhConnection
txRollback		0;"	f	S:bool function txRollback($connection)	class:MysqlndUhConnection
useResult		0;"	f	S:resource function useResult($connection)	class:MysqlndUhConnection
MysqlndUhPreparedStatement		0;"	c
__construct		0;"	f	S: function __construct()	class:MysqlndUhPreparedStatement
execute		0;"	f	S:bool function execute($statement)	class:MysqlndUhPreparedStatement
prepare		0;"	f	S:bool function prepare($statement, $query)	class:MysqlndUhPreparedStatement
mysqlnd_uh_convert_to_mysqlnd		0;"	f	S:resource function mysqlnd_uh_convert_to_mysqlnd(&$mysql_connection)
mysqlnd_uh_set_connection_proxy		0;"	f	S:bool function mysqlnd_uh_set_connection_proxy(&$connection_proxy, &$mysqli_connection)
mysqlnd_uh_set_statement_proxy		0;"	f	S:bool function mysqlnd_uh_set_statement_proxy(&$statement_proxy)
MYSQLND_MUX_VERSION		0;"	d
MYSQLND_MUX_VERSION_ID		0;"	d
MYSQLND_MEMCACHE_DEFAULT_REGEXP		0;"	d
MYSQLND_MEMCACHE_VERSION		0;"	d
MYSQLND_MEMCACHE_VERSION_ID		0;"	d
mysqlnd_memcache_get_config		0;"	f	S:array function mysqlnd_memcache_get_config($connection)
mysqlnd_memcache_set		0;"	f	S:bool function mysqlnd_memcache_set($mysql_connection, $memcache_connection, $pattern, $callback)
oci_bind_array_by_name		0;"	f	S:bool function oci_bind_array_by_name($statement, $name, &$var_array, $max_table_length, $max_item_length = -1, $type = SQLT_AFC)
oci_bind_by_name		0;"	f	S:bool function oci_bind_by_name($statement, $bv_name, &$variable, $maxlength = -1, $type = SQLT_CHR)
oci_cancel		0;"	f	S:bool function oci_cancel($statement)
oci_client_version		0;"	f	S:string function oci_client_version()
oci_close		0;"	f	S:bool function oci_close($connection)
oci_commit		0;"	f	S:bool function oci_commit($connection)
oci_connect		0;"	f	S:resource function oci_connect($username, $password, $connection_string, $character_set, $session_mode)
oci_define_by_name		0;"	f	S:bool function oci_define_by_name($statement, $column_name, &$variable, $type = SQLT_CHR)
oci_error		0;"	f	S:array function oci_error($resource)
oci_execute		0;"	f	S:bool function oci_execute($statement, $mode = OCI_COMMIT_ON_SUCCESS)
oci_fetch_all		0;"	f	S:int function oci_fetch_all($statement, &$output, $skip, $maxrows = -1, $flags =  + )
oci_fetch_array		0;"	f	S:array function oci_fetch_array($statement, $mode)
oci_fetch_assoc		0;"	f	S:array function oci_fetch_assoc($statement)
oci_fetch_object		0;"	f	S:object function oci_fetch_object($statement)
oci_fetch_row		0;"	f	S:array function oci_fetch_row($statement)
oci_fetch		0;"	f	S:bool function oci_fetch($statement)
oci_field_is_null		0;"	f	S:bool function oci_field_is_null($statement, $field)
oci_field_name		0;"	f	S:string function oci_field_name($statement, $field)
oci_field_precision		0;"	f	S:int function oci_field_precision($statement, $field)
oci_field_scale		0;"	f	S:int function oci_field_scale($statement, $field)
oci_field_size		0;"	f	S:int function oci_field_size($statement, $field)
oci_field_type_raw		0;"	f	S:int function oci_field_type_raw($statement, $field)
oci_field_type		0;"	f	S:mixed function oci_field_type($statement, $field)
oci_free_descriptor		0;"	f	S:bool function oci_free_descriptor($descriptor)
oci_free_statement		0;"	f	S:bool function oci_free_statement($statement)
oci_get_implicit_resultset		0;"	f	S:resource  function oci_get_implicit_resultset($statement)
oci_internal_debug		0;"	f	S:void function oci_internal_debug($onoff)
oci_lob_copy		0;"	f	S:bool function oci_lob_copy($lob_to, $lob_from, $length)
oci_lob_is_equal		0;"	f	S:bool function oci_lob_is_equal($lob1, $lob2)
oci_new_collection		0;"	f	S:OCI-Collection function oci_new_collection($connection, $tdo, $schema)
oci_new_connect		0;"	f	S:resource function oci_new_connect($username, $password, $connection_string, $character_set, $session_mode)
oci_new_cursor		0;"	f	S:resource function oci_new_cursor($connection)
oci_new_descriptor		0;"	f	S:OCI-Lob function oci_new_descriptor($connection, $type = OCI_DTYPE_LOB)
oci_num_fields		0;"	f	S:int function oci_num_fields($statement)
oci_num_rows		0;"	f	S:int function oci_num_rows($statement)
oci_parse		0;"	f	S:resource function oci_parse($connection, $sql_text)
oci_password_change		0;"	f	S:resource function oci_password_change($connection, $username, $old_password, $new_password, $dbname)
oci_pconnect		0;"	f	S:resource function oci_pconnect($username, $password, $connection_string, $character_set, $session_mode)
oci_result		0;"	f	S:mixed function oci_result($statement, $field)
oci_rollback		0;"	f	S:bool function oci_rollback($connection)
oci_server_version		0;"	f	S:string function oci_server_version($connection)
oci_set_action		0;"	f	S:bool function oci_set_action($connection, $action_name)
oci_set_client_identifier		0;"	f	S:bool function oci_set_client_identifier($connection, $client_identifier)
oci_set_client_info		0;"	f	S:bool function oci_set_client_info($connection, $client_info)
oci_set_edition		0;"	f	S:bool function oci_set_edition($edition)
oci_set_module_name		0;"	f	S:bool function oci_set_module_name($connection, $module_name)
oci_set_prefetch		0;"	f	S:bool function oci_set_prefetch($statement, $rows)
oci_statement_type		0;"	f	S:string function oci_statement_type($statement)
OCI-Collection		0;"	c
append		0;"	f	S:bool function append($value)	class:OCI-Collection
assign		0;"	f	S:bool function assign($from)	class:OCI-Collection
assignElem		0;"	f	S:bool function assignElem($index, $value)	class:OCI-Collection
free		0;"	f	S:bool function free()	class:OCI-Collection
getElem		0;"	f	S:mixed function getElem($index)	class:OCI-Collection
max		0;"	f	S:int function max()	class:OCI-Collection
size		0;"	f	S:int function size()	class:OCI-Collection
trim		0;"	f	S:bool function trim($num)	class:OCI-Collection
OCI-Lob		0;"	c
append		0;"	f	S:bool function append($lob_from)	class:OCI-Lob
close		0;"	f	S:bool function close()	class:OCI-Lob
eof		0;"	f	S:bool function eof()	class:OCI-Lob
erase		0;"	f	S:int function erase($offset, $length)	class:OCI-Lob
export		0;"	f	S:bool function export($filename, $start, $length)	class:OCI-Lob
flush		0;"	f	S:bool function flush($flag)	class:OCI-Lob
free		0;"	f	S:bool function free()	class:OCI-Lob
getBuffering		0;"	f	S:bool function getBuffering()	class:OCI-Lob
import		0;"	f	S:bool function import($filename)	class:OCI-Lob
load		0;"	f	S:string function load()	class:OCI-Lob
read		0;"	f	S:string function read($length)	class:OCI-Lob
rewind		0;"	f	S:bool function rewind()	class:OCI-Lob
save		0;"	f	S:bool function save($data, $offset)	class:OCI-Lob
saveFile		0;"	f	S: function saveFile()	class:OCI-Lob
seek		0;"	f	S:bool function seek($offset, $whence)	class:OCI-Lob
setBuffering		0;"	f	S:bool function setBuffering($on_off)	class:OCI-Lob
size		0;"	f	S:int function size()	class:OCI-Lob
tell		0;"	f	S:int function tell()	class:OCI-Lob
truncate		0;"	f	S:bool function truncate($length)	class:OCI-Lob
write		0;"	f	S:int function write($data, $length)	class:OCI-Lob
writeTemporary		0;"	f	S:bool function writeTemporary($data, $lob_type = OCI_TEMP_CLOB)	class:OCI-Lob
writeToFile		0;"	f	S: function writeToFile()	class:OCI-Lob
ocibindbyname		0;"	f	S: function ocibindbyname()
ocicancel		0;"	f	S: function ocicancel()
ocicloselob		0;"	f	S: function ocicloselob()
ocicollappend		0;"	f	S: function ocicollappend()
ocicollassign		0;"	f	S: function ocicollassign()
ocicollassignelem		0;"	f	S: function ocicollassignelem()
ocicollgetelem		0;"	f	S: function ocicollgetelem()
ocicollmax		0;"	f	S: function ocicollmax()
ocicollsize		0;"	f	S: function ocicollsize()
ocicolltrim		0;"	f	S: function ocicolltrim()
ocicolumnisnull		0;"	f	S: function ocicolumnisnull()
ocicolumnname		0;"	f	S: function ocicolumnname()
ocicolumnprecision		0;"	f	S: function ocicolumnprecision()
ocicolumnscale		0;"	f	S: function ocicolumnscale()
ocicolumnsize		0;"	f	S: function ocicolumnsize()
ocicolumntype		0;"	f	S: function ocicolumntype()
ocicolumntyperaw		0;"	f	S: function ocicolumntyperaw()
ocicommit		0;"	f	S: function ocicommit()
ocidefinebyname		0;"	f	S: function ocidefinebyname()
ocierror		0;"	f	S: function ocierror()
ociexecute		0;"	f	S: function ociexecute()
ocifetch		0;"	f	S: function ocifetch()
ocifetchinto		0;"	f	S: function ocifetchinto()
ocifetchstatement		0;"	f	S: function ocifetchstatement()
ocifreecollection		0;"	f	S: function ocifreecollection()
ocifreecursor		0;"	f	S: function ocifreecursor()
ocifreedesc		0;"	f	S: function ocifreedesc()
ocifreestatement		0;"	f	S: function ocifreestatement()
ociinternaldebug		0;"	f	S: function ociinternaldebug()
ociloadlob		0;"	f	S: function ociloadlob()
ocilogoff		0;"	f	S: function ocilogoff()
ocilogon		0;"	f	S: function ocilogon()
ocinewcollection		0;"	f	S: function ocinewcollection()
ocinewcursor		0;"	f	S: function ocinewcursor()
ocinewdescriptor		0;"	f	S: function ocinewdescriptor()
ocinlogon		0;"	f	S: function ocinlogon()
ocinumcols		0;"	f	S: function ocinumcols()
ociparse		0;"	f	S: function ociparse()
ociplogon		0;"	f	S: function ociplogon()
ociresult		0;"	f	S: function ociresult()
ocirollback		0;"	f	S: function ocirollback()
ocirowcount		0;"	f	S: function ocirowcount()
ocisavelob		0;"	f	S: function ocisavelob()
ocisavelobfile		0;"	f	S: function ocisavelobfile()
ociserverversion		0;"	f	S: function ociserverversion()
ocisetprefetch		0;"	f	S: function ocisetprefetch()
ocistatementtype		0;"	f	S: function ocistatementtype()
ociwritelobtofile		0;"	f	S: function ociwritelobtofile()
ociwritetemporarylob		0;"	f	S: function ociwritetemporarylob()
px_close		0;"	f	S:bool function px_close($pxdoc)
px_create_fp		0;"	f	S:bool function px_create_fp($pxdoc, $file, $fielddesc)
px_date2string		0;"	f	S:string function px_date2string($pxdoc, $value, $format)
px_delete_record		0;"	f	S:bool function px_delete_record($pxdoc, $num)
px_delete		0;"	f	S:bool function px_delete($pxdoc)
px_get_field		0;"	f	S:array function px_get_field($pxdoc, $fieldno)
px_get_info		0;"	f	S:array function px_get_info($pxdoc)
px_get_parameter		0;"	f	S:string function px_get_parameter($pxdoc, $name)
px_get_record		0;"	f	S:array function px_get_record($pxdoc, $num, $mode)
px_get_schema		0;"	f	S:array function px_get_schema($pxdoc, $mode)
px_get_value		0;"	f	S:float function px_get_value($pxdoc, $name)
px_insert_record		0;"	f	S:int function px_insert_record($pxdoc, $data)
px_new		0;"	f	S:resource function px_new()
px_numfields		0;"	f	S:int function px_numfields($pxdoc)
px_numrecords		0;"	f	S:int function px_numrecords($pxdoc)
px_open_fp		0;"	f	S:bool function px_open_fp($pxdoc, $file)
px_put_record		0;"	f	S:bool function px_put_record($pxdoc, $record, $recpos = -1)
px_retrieve_record		0;"	f	S:array function px_retrieve_record($pxdoc, $num, $mode)
px_set_blob_file		0;"	f	S:bool function px_set_blob_file($pxdoc, $filename)
px_set_parameter		0;"	f	S:bool function px_set_parameter($pxdoc, $name, $value)
px_set_tablename		0;"	f	S:void function px_set_tablename($pxdoc, $name)
px_set_targetencoding		0;"	f	S:bool function px_set_targetencoding($pxdoc, $encoding)
px_set_value		0;"	f	S:bool function px_set_value($pxdoc, $name, $value)
px_timestamp2string		0;"	f	S:string function px_timestamp2string($pxdoc, $value, $format)
px_update_record		0;"	f	S:bool function px_update_record($pxdoc, $data, $num)
PGSQL_LIBPQ_VERSION		0;"	d
PGSQL_LIBPQ_VERSION_STR		0;"	d
PGSQL_ASSOC		0;"	d
PGSQL_NUM		0;"	d
PGSQL_BOTH		0;"	d
PGSQL_CONNECT_FORCE_NEW		0;"	d
PGSQL_CONNECT_ASYNC		0;"	d
PGSQL_CONNECTION_BAD		0;"	d
PGSQL_CONNECTION_OK		0;"	d
PGSQL_SEEK_SET		0;"	d
PGSQL_SEEK_CUR		0;"	d
PGSQL_SEEK_END		0;"	d
PGSQL_EMPTY_QUERY		0;"	d
PGSQL_COMMAND_OK		0;"	d
PGSQL_TUPLES_OK		0;"	d
PGSQL_COPY_OUT		0;"	d
PGSQL_COPY_IN		0;"	d
PGSQL_BAD_RESPONSE		0;"	d
PGSQL_NONFATAL_ERROR		0;"	d
PGSQL_FATAL_ERROR		0;"	d
PGSQL_TRANSACTION_IDLE		0;"	d
PGSQL_TRANSACTION_ACTIVE		0;"	d
PGSQL_TRANSACTION_INTRANS		0;"	d
PGSQL_TRANSACTION_INERROR		0;"	d
PGSQL_TRANSACTION_UNKNOWN		0;"	d
PGSQL_DIAG_SEVERITY		0;"	d
PGSQL_DIAG_SQLSTATE		0;"	d
PGSQL_DIAG_MESSAGE_PRIMARY		0;"	d
PGSQL_DIAG_MESSAGE_DETAIL		0;"	d
PGSQL_DIAG_MESSAGE_HINT		0;"	d
PGSQL_DIAG_STATEMENT_POSITION		0;"	d
PGSQL_DIAG_INTERNAL_POSITION		0;"	d
PGSQL_DIAG_INTERNAL_QUERY		0;"	d
PGSQL_DIAG_CONTEXT		0;"	d
PGSQL_DIAG_SOURCE_FILE		0;"	d
PGSQL_DIAG_SOURCE_LINE		0;"	d
PGSQL_DIAG_SOURCE_FUNCTION		0;"	d
PGSQL_ERRORS_TERSE		0;"	d
PGSQL_ERRORS_DEFAULT		0;"	d
PGSQL_ERRORS_VERBOSE		0;"	d
PGSQL_STATUS_LONG		0;"	d
PGSQL_STATUS_STRING		0;"	d
PGSQL_CONV_IGNORE_DEFAULT		0;"	d
PGSQL_CONV_FORCE_NULL		0;"	d
PGSQL_CONV_IGNORE_NOT_NULL		0;"	d
PGSQL_DML_NO_CONV		0;"	d
PGSQL_DML_EXEC		0;"	d
PGSQL_DML_ASYNC		0;"	d
PGSQL_DML_STRING		0;"	d
PGSQL_DML_ESCAPE		0;"	d
PGSQL_POLLING_FAILED		0;"	d
PGSQL_POLLING_READING		0;"	d
PGSQL_POLLING_WRITING		0;"	d
PGSQL_POLLING_OK		0;"	d
PGSQL_POLLING_ACTIVE		0;"	d
pg_affected_rows		0;"	f	S:int function pg_affected_rows($result)
pg_cancel_query		0;"	f	S:bool function pg_cancel_query($connection)
pg_client_encoding		0;"	f	S:string function pg_client_encoding($connection)
pg_close		0;"	f	S:bool function pg_close($connection)
pg_connect_poll		0;"	f	S:int function pg_connect_poll($connection)
pg_connect		0;"	f	S:resource function pg_connect($connection_string, $connect_type)
pg_connection_busy		0;"	f	S:bool function pg_connection_busy($connection)
pg_connection_reset		0;"	f	S:bool function pg_connection_reset($connection)
pg_connection_status		0;"	f	S:int function pg_connection_status($connection)
pg_consume_input		0;"	f	S:bool function pg_consume_input($connection)
pg_convert		0;"	f	S:array function pg_convert($connection, $table_name, $assoc_array, $options)
pg_copy_from		0;"	f	S:bool function pg_copy_from($connection, $table_name, $rows, $delimiter, $null_as)
pg_copy_to		0;"	f	S:array function pg_copy_to($connection, $table_name, $delimiter, $null_as)
pg_dbname		0;"	f	S:string function pg_dbname($connection)
pg_delete		0;"	f	S:mixed function pg_delete($connection, $table_name, $assoc_array, $options = PGSQL_DML_EXEC)
pg_end_copy		0;"	f	S:bool function pg_end_copy($connection)
pg_escape_bytea		0;"	f	S:string function pg_escape_bytea($connection, $data)
pg_escape_identifier		0;"	f	S:string function pg_escape_identifier($connection, $data)
pg_escape_literal		0;"	f	S:string function pg_escape_literal($connection, $data)
pg_escape_string		0;"	f	S:string function pg_escape_string($connection, $data)
pg_execute		0;"	f	S:resource function pg_execute($connection, $stmtname, $params)
pg_fetch_all_columns		0;"	f	S:array function pg_fetch_all_columns($result, $column)
pg_fetch_all		0;"	f	S:array function pg_fetch_all($result)
pg_fetch_array		0;"	f	S:array function pg_fetch_array($result, $row, $result_type = PGSQL_BOTH)
pg_fetch_assoc		0;"	f	S:array function pg_fetch_assoc($result, $row)
pg_fetch_object		0;"	f	S:object function pg_fetch_object($result, $row, $result_type = PGSQL_ASSOC, $class_name, $params)
pg_fetch_result		0;"	f	S:string function pg_fetch_result($result, $row, $field)
pg_fetch_row		0;"	f	S:array function pg_fetch_row($result, $row)
pg_field_is_null		0;"	f	S:int function pg_field_is_null($result, $row, $field)
pg_field_name		0;"	f	S:string function pg_field_name($result, $field_number)
pg_field_num		0;"	f	S:int function pg_field_num($result, $field_name)
pg_field_prtlen		0;"	f	S:integer function pg_field_prtlen($result, $row_number, $field_name_or_number)
pg_field_size		0;"	f	S:int function pg_field_size($result, $field_number)
pg_field_table		0;"	f	S:mixed function pg_field_table($result, $field_number, $oid_only = false)
pg_field_type_oid		0;"	f	S:int function pg_field_type_oid($result, $field_number)
pg_field_type		0;"	f	S:string function pg_field_type($result, $field_number)
pg_flush		0;"	f	S:mixed function pg_flush($connection)
pg_free_result		0;"	f	S:resource function pg_free_result($result)
pg_get_notify		0;"	f	S:array function pg_get_notify($connection, $result_type)
pg_get_pid		0;"	f	S:int function pg_get_pid($connection)
pg_get_result		0;"	f	S:resource function pg_get_result($connection)
pg_host		0;"	f	S:string function pg_host($connection)
pg_insert		0;"	f	S:mixed function pg_insert($connection, $table_name, $assoc_array, $options = PGSQL_DML_EXEC)
pg_last_error		0;"	f	S:string function pg_last_error($connection)
pg_last_notice		0;"	f	S:string function pg_last_notice($connection)
pg_last_oid		0;"	f	S:string function pg_last_oid($result)
pg_lo_close		0;"	f	S:bool function pg_lo_close($large_object)
pg_lo_create		0;"	f	S:int function pg_lo_create($connection, $object_id)
pg_lo_export		0;"	f	S:bool function pg_lo_export($connection, $oid, $pathname)
pg_lo_import		0;"	f	S:int function pg_lo_import($connection, $pathname, $object_id)
pg_lo_open		0;"	f	S:resource function pg_lo_open($connection, $oid, $mode)
pg_lo_read_all		0;"	f	S:int function pg_lo_read_all($large_object)
pg_lo_read		0;"	f	S:string function pg_lo_read($large_object, $len = 8192)
pg_lo_seek		0;"	f	S:bool function pg_lo_seek($large_object, $offset, $whence = PGSQL_SEEK_CUR)
pg_lo_tell		0;"	f	S:int function pg_lo_tell($large_object)
pg_lo_truncate		0;"	f	S:bool function pg_lo_truncate($large_object, $size)
pg_lo_unlink		0;"	f	S:bool function pg_lo_unlink($connection, $oid)
pg_lo_write		0;"	f	S:int function pg_lo_write($large_object, $data, $len)
pg_meta_data		0;"	f	S:array function pg_meta_data($connection, $table_name, $extended)
pg_num_fields		0;"	f	S:int function pg_num_fields($result)
pg_num_rows		0;"	f	S:int function pg_num_rows($result)
pg_options		0;"	f	S:string function pg_options($connection)
pg_parameter_status		0;"	f	S:string function pg_parameter_status($connection, $param_name)
pg_pconnect		0;"	f	S:resource function pg_pconnect($connection_string, $connect_type)
pg_ping		0;"	f	S:bool function pg_ping($connection)
pg_port		0;"	f	S:int function pg_port($connection)
pg_prepare		0;"	f	S:resource function pg_prepare($connection, $stmtname, $query)
pg_put_line		0;"	f	S:bool function pg_put_line($connection, $data)
pg_query_params		0;"	f	S:resource function pg_query_params($connection, $query, $params)
pg_query		0;"	f	S:resource function pg_query($connection, $query)
pg_result_error_field		0;"	f	S:string function pg_result_error_field($result, $fieldcode)
pg_result_error		0;"	f	S:string function pg_result_error($result)
pg_result_seek		0;"	f	S:bool function pg_result_seek($result, $offset)
pg_result_status		0;"	f	S:mixed function pg_result_status($result, $type = PGSQL_STATUS_LONG)
pg_select		0;"	f	S:mixed function pg_select($connection, $table_name, $assoc_array, $options = PGSQL_DML_EXEC)
pg_send_execute		0;"	f	S:bool function pg_send_execute($connection, $stmtname, $params)
pg_send_prepare		0;"	f	S:bool function pg_send_prepare($connection, $stmtname, $query)
pg_send_query_params		0;"	f	S:bool function pg_send_query_params($connection, $query, $params)
pg_send_query		0;"	f	S:bool function pg_send_query($connection, $query)
pg_set_client_encoding		0;"	f	S:int function pg_set_client_encoding($connection, $encoding)
pg_set_error_verbosity		0;"	f	S:int function pg_set_error_verbosity($connection, $verbosity)
pg_socket		0;"	f	S:resource function pg_socket($connection)
pg_trace		0;"	f	S:bool function pg_trace($pathname, $mode = "w", $connection)
pg_transaction_status		0;"	f	S:int function pg_transaction_status($connection)
pg_tty		0;"	f	S:string function pg_tty($connection)
pg_unescape_bytea		0;"	f	S:string function pg_unescape_bytea($data)
pg_untrace		0;"	f	S:bool function pg_untrace($connection)
pg_update		0;"	f	S:mixed function pg_update($connection, $table_name, $data, $condition, $options = PGSQL_DML_EXEC)
pg_version		0;"	f	S:array function pg_version($connection)
SQLITE_ASSOC		0;"	d
SQLITE_BOTH		0;"	d
SQLITE_NUM		0;"	d
SQLITE_OK		0;"	d
SQLITE_ERROR		0;"	d
SQLITE_INTERNAL		0;"	d
SQLITE_PERM		0;"	d
SQLITE_ABORT		0;"	d
SQLITE_BUSY		0;"	d
SQLITE_LOCKED		0;"	d
SQLITE_NOMEM		0;"	d
SQLITE_READONLY		0;"	d
SQLITE_INTERRUPT		0;"	d
SQLITE_IOERR		0;"	d
SQLITE_NOTADB		0;"	d
SQLITE_CORRUPT		0;"	d
SQLITE_FORMAT		0;"	d
SQLITE_NOTFOUND		0;"	d
SQLITE_FULL		0;"	d
SQLITE_CANTOPEN		0;"	d
SQLITE_PROTOCOL		0;"	d
SQLITE_EMPTY		0;"	d
SQLITE_SCHEMA		0;"	d
SQLITE_TOOBIG		0;"	d
SQLITE_CONSTRAINT		0;"	d
SQLITE_MISMATCH		0;"	d
SQLITE_MISUSE		0;"	d
SQLITE_NOLFS		0;"	d
SQLITE_AUTH		0;"	d
SQLITE_ROW		0;"	d
SQLITE_DONE		0;"	d
sqlite_array_query		0;"	f	S:array function sqlite_array_query($dbhandle, $query, $result_type = SQLITE_BOTH, $decode_binary = true)
sqlite_busy_timeout		0;"	f	S:void function sqlite_busy_timeout($dbhandle, $milliseconds)
sqlite_changes		0;"	f	S:int function sqlite_changes($dbhandle)
sqlite_close		0;"	f	S:void function sqlite_close($dbhandle)
sqlite_column		0;"	f	S:mixed function sqlite_column($result, $index_or_name, $decode_binary = true)
sqlite_create_aggregate		0;"	f	S:void function sqlite_create_aggregate($dbhandle, $function_name, $step_func, $finalize_func, $num_args = -1)
sqlite_create_function		0;"	f	S:void function sqlite_create_function($dbhandle, $function_name, $callback, $num_args = -1)
sqlite_current		0;"	f	S:array function sqlite_current($result, $result_type = SQLITE_BOTH, $decode_binary = true)
sqlite_error_string		0;"	f	S:string function sqlite_error_string($error_code)
sqlite_escape_string		0;"	f	S:string function sqlite_escape_string($item)
sqlite_exec		0;"	f	S:bool function sqlite_exec($dbhandle, $query, &$error_msg)
sqlite_factory		0;"	f	S:SQLiteDatabase function sqlite_factory($filename, $mode = 0666, &$error_message)
sqlite_fetch_all		0;"	f	S:array function sqlite_fetch_all($result, $result_type = SQLITE_BOTH, $decode_binary = true)
sqlite_fetch_array		0;"	f	S:array function sqlite_fetch_array($result, $result_type = SQLITE_BOTH, $decode_binary = true)
sqlite_fetch_column_types		0;"	f	S:array function sqlite_fetch_column_types($table_name, $dbhandle, $result_type = SQLITE_ASSOC)
sqlite_fetch_object		0;"	f	S:object function sqlite_fetch_object($result, $class_name, $ctor_params, $decode_binary = true)
sqlite_fetch_single		0;"	f	S:string function sqlite_fetch_single($result, $decode_binary = true)
sqlite_fetch_string		0;"	f	S: function sqlite_fetch_string()
sqlite_field_name		0;"	f	S:string function sqlite_field_name($result, $field_index)
sqlite_has_more		0;"	f	S:bool function sqlite_has_more($result)
sqlite_has_prev		0;"	f	S:bool function sqlite_has_prev($result)
sqlite_key		0;"	f	S:int function sqlite_key()
sqlite_last_error		0;"	f	S:int function sqlite_last_error($dbhandle)
sqlite_last_insert_rowid		0;"	f	S:int function sqlite_last_insert_rowid($dbhandle)
sqlite_libencoding		0;"	f	S:string function sqlite_libencoding()
sqlite_libversion		0;"	f	S:string function sqlite_libversion()
sqlite_next		0;"	f	S:bool function sqlite_next($result)
sqlite_num_fields		0;"	f	S:int function sqlite_num_fields($result)
sqlite_num_rows		0;"	f	S:int function sqlite_num_rows($result)
sqlite_open		0;"	f	S:resource function sqlite_open($filename, $mode = 0666, &$error_message)
sqlite_popen		0;"	f	S:resource function sqlite_popen($filename, $mode = 0666, &$error_message)
sqlite_prev		0;"	f	S:bool function sqlite_prev($result)
sqlite_query		0;"	f	S:SQLiteResult function sqlite_query($dbhandle, $query, $result_type = SQLITE_BOTH, &$error_msg)
sqlite_rewind		0;"	f	S:bool function sqlite_rewind($result)
sqlite_seek		0;"	f	S:bool function sqlite_seek($result, $rownum)
sqlite_single_query		0;"	f	S:array function sqlite_single_query($db, $query, $first_row_only, $decode_binary)
sqlite_udf_decode_binary		0;"	f	S:string function sqlite_udf_decode_binary($data)
sqlite_udf_encode_binary		0;"	f	S:string function sqlite_udf_encode_binary($data)
sqlite_unbuffered_query		0;"	f	S:SQLiteUnbuffered function sqlite_unbuffered_query($dbhandle, $query, $result_type = SQLITE_BOTH, &$error_msg)
sqlite_valid		0;"	f	S:bool function sqlite_valid($result)
SQLITE3_ASSOC		0;"	d
SQLITE3_NUM		0;"	d
SQLITE3_BOTH		0;"	d
SQLITE3_INTEGER		0;"	d
SQLITE3_FLOAT		0;"	d
SQLITE3_TEXT		0;"	d
SQLITE3_BLOB		0;"	d
SQLITE3_NULL		0;"	d
SQLITE3_OPEN_READONLY		0;"	d
SQLITE3_OPEN_READWRITE		0;"	d
SQLITE3_OPEN_CREATE		0;"	d
SQLite3		0;"	c
busyTimeout		0;"	f	S:bool function busyTimeout($msecs)	class:SQLite3
changes		0;"	f	S:int function changes()	class:SQLite3
close		0;"	f	S:bool function close()	class:SQLite3
__construct		0;"	f	S: function __construct($filename, $flags, $encryption_key)	class:SQLite3
createAggregate		0;"	f	S:bool function createAggregate($name, $step_callback, $final_callback, $argument_count = -1)	class:SQLite3
createCollation		0;"	f	S:bool function createCollation($name, $callback)	class:SQLite3
createFunction		0;"	f	S:bool function createFunction($name, $callback, $argument_count = -1)	class:SQLite3
escapeString		0;"	f	S:string function escapeString($value)	class:SQLite3	a:static
exec		0;"	f	S:bool function exec($query)	class:SQLite3
lastErrorCode		0;"	f	S:int function lastErrorCode()	class:SQLite3
lastErrorMsg		0;"	f	S:string function lastErrorMsg()	class:SQLite3
lastInsertRowID		0;"	f	S:int function lastInsertRowID()	class:SQLite3
loadExtension		0;"	f	S:bool function loadExtension($shared_library)	class:SQLite3
open		0;"	f	S:void function open($filename, $flags = SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE, $encryption_key)	class:SQLite3
prepare		0;"	f	S:SQLite3Stmt function prepare($query)	class:SQLite3
query		0;"	f	S:SQLite3Result function query($query)	class:SQLite3
querySingle		0;"	f	S:mixed function querySingle($query, $entire_row = false)	class:SQLite3
version		0;"	f	S:array function version()	class:SQLite3	a:static
SQLite3Stmt		0;"	c
bindParam		0;"	f	S:bool function bindParam($sql_param, &$param, $type)	class:SQLite3Stmt
bindValue		0;"	f	S:bool function bindValue($sql_param, $value, $type)	class:SQLite3Stmt
clear		0;"	f	S:bool function clear()	class:SQLite3Stmt
close		0;"	f	S:bool function close()	class:SQLite3Stmt
execute		0;"	f	S:SQLite3Result function execute()	class:SQLite3Stmt
paramCount		0;"	f	S:int function paramCount()	class:SQLite3Stmt
reset		0;"	f	S:bool function reset()	class:SQLite3Stmt
SQLite3Result		0;"	c
columnName		0;"	f	S:string function columnName($column_number)	class:SQLite3Result
columnType		0;"	f	S:int function columnType($column_number)	class:SQLite3Result
fetchArray		0;"	f	S:array function fetchArray($mode = SQLITE3_BOTH)	class:SQLite3Result
finalize		0;"	f	S:bool function finalize()	class:SQLite3Result
numColumns		0;"	f	S:int function numColumns()	class:SQLite3Result
reset		0;"	f	S:bool function reset()	class:SQLite3Result
SQLSRV_FETCH_ASSOC		0;"	d
SQLSRV_FETCH_NUMERIC		0;"	d
SQLSRV_FETCH_BOTH		0;"	d
SQLSRV_ERR_ALL		0;"	d
SQLSRV_ERR_ERRORS		0;"	d
SQLSRV_ERR_WARNINGS		0;"	d
SQLSRV_LOG_SYSTEM_ALL		0;"	d
SQLSRV_LOG_SYSTEM_CONN		0;"	d
SQLSRV_LOG_SYSTEM_INIT		0;"	d
SQLSRV_LOG_SYSTEM_OFF		0;"	d
SQLSRV_LOG_SYSTEM_STMT		0;"	d
SQLSRV_LOG_SYSTEM_UTIL		0;"	d
SQLSRV_LOG_SEVERITY_ALL		0;"	d
SQLSRV_LOG_SEVERITY_ERROR		0;"	d
SQLSRV_LOG_SEVERITY_NOTICE		0;"	d
SQLSRV_LOG_SEVERITY_WARNING		0;"	d
SQLSRV_NULLABLE_YES		0;"	d
SQLSRV_NULLABLE_NO		0;"	d
SQLSRV_NULLABLE_UNKNOWN		0;"	d
SQLSRV_PARAM_IN		0;"	d
SQLSRV_PARAM_INOUT		0;"	d
SQLSRV_PARAM_OUT		0;"	d
SQLSRV_PHPTYPE_INT		0;"	d
SQLSRV_PHPTYPE_DATETIME		0;"	d
SQLSRV_PHPTYPE_FLOAT		0;"	d
SQLSRV_PHPTYPE_STREAM		0;"	d
SQLSRV_PHPTYPE_STRING		0;"	d
SQLSRV_ENC_BINARY		0;"	d
SQLSRV_ENC_CHAR		0;"	d
UTF-8		0;"	d
SQLSRV_SQLTYPE_BIGINT		0;"	d
SQLSRV_SQLTYPE_BINARY		0;"	d
SQLSRV_SQLTYPE_BIT		0;"	d
SQLSRV_SQLTYPE_CHAR		0;"	d
SQLSRV_SQLTYPE_DATE		0;"	d
SQLSRV_SQLTYPE_DATETIME		0;"	d
SQLSRV_SQLTYPE_DATETIME2		0;"	d
SQLSRV_SQLTYPE_DATETIMEOFFSET		0;"	d
SQLSRV_SQLTYPE_DECIMAL		0;"	d
SQLSRV_SQLTYPE_FLOAT		0;"	d
SQLSRV_SQLTYPE_IMAGE		0;"	d
SQLSRV_SQLTYPE_INT		0;"	d
SQLSRV_SQLTYPE_MONEY		0;"	d
SQLSRV_SQLTYPE_NCHAR		0;"	d
SQLSRV_SQLTYPE_NUMERIC		0;"	d
SQLSRV_SQLTYPE_NVARCHAR		0;"	d
SQLSRV_SQLTYPE_NVARCHAR		0;"	d
SQLSRV_SQLTYPE_NTEXT		0;"	d
SQLSRV_SQLTYPE_REAL		0;"	d
SQLSRV_SQLTYPE_SMALLDATETIME		0;"	d
SQLSRV_SQLTYPE_SMALLINT		0;"	d
SQLSRV_SQLTYPE_SMALLMONEY		0;"	d
SQLSRV_SQLTYPE_TEXT		0;"	d
SQLSRV_SQLTYPE_TIME		0;"	d
SQLSRV_SQLTYPE_TIMESTAMP		0;"	d
SQLSRV_SQLTYPE_TINYINT		0;"	d
SQLSRV_SQLTYPE_UNIQUEIDENTIFIER		0;"	d
SQLSRV_SQLTYPE_UDT		0;"	d
SQLSRV_SQLTYPE_VARBINARY		0;"	d
SQLSRV_SQLTYPE_VARBINARY		0;"	d
SQLSRV_SQLTYPE_VARCHAR		0;"	d
SQLSRV_SQLTYPE_VARCHAR		0;"	d
SQLSRV_SQLTYPE_XML		0;"	d
SQLSRV_TXN_READ_UNCOMMITTED		0;"	d
SQLSRV_TXN_READ_COMMITTED		0;"	d
SQLSRV_TXN_REPEATABLE_READ		0;"	d
SQLSRV_TXN_SNAPSHOT		0;"	d
SQLSRV_TXN_READ_SERIALIZABLE		0;"	d
SQLSRV_CURSOR_FORWARD		0;"	d
SQLSRV_CURSOR_STATIC		0;"	d
SQLSRV_CURSOR_DYNAMIC		0;"	d
SQLSRV_CURSOR_KEYSET		0;"	d
SQLSRV_CURSOR_BUFFERED		0;"	d
SQLSRV_SCROLL_NEXT		0;"	d
SQLSRV_SCROLL_PRIOR		0;"	d
SQLSRV_SCROLL_FIRST		0;"	d
SQLSRV_SCROLL_LAST		0;"	d
SQLSRV_SCROLL_ABSOLUTE		0;"	d
SQLSRV_SCROLL_RELATIVE		0;"	d
sqlsrv_begin_transaction		0;"	f	S:bool function sqlsrv_begin_transaction($conn)
sqlsrv_cancel		0;"	f	S:bool function sqlsrv_cancel($stmt)
sqlsrv_client_info		0;"	f	S:array function sqlsrv_client_info($conn)
sqlsrv_close		0;"	f	S:bool function sqlsrv_close($conn)
sqlsrv_commit		0;"	f	S:bool function sqlsrv_commit($conn)
sqlsrv_configure		0;"	f	S:bool function sqlsrv_configure($setting, $value)
sqlsrv_connect		0;"	f	S:resource function sqlsrv_connect($serverName, $connectionInfo)
sqlsrv_errors		0;"	f	S:mixed function sqlsrv_errors($errorsOrWarnings)
sqlsrv_execute		0;"	f	S:bool function sqlsrv_execute($stmt)
sqlsrv_fetch_array		0;"	f	S:array function sqlsrv_fetch_array($stmt, $fetchType, $row, $offset)
sqlsrv_fetch_object		0;"	f	S:mixed function sqlsrv_fetch_object($stmt, $className, $ctorParams, $row, $offset)
sqlsrv_fetch		0;"	f	S:mixed function sqlsrv_fetch($stmt, $row, $offset)
sqlsrv_field_metadata		0;"	f	S:mixed function sqlsrv_field_metadata($stmt)
sqlsrv_free_stmt		0;"	f	S:bool function sqlsrv_free_stmt($stmt)
sqlsrv_get_config		0;"	f	S:mixed function sqlsrv_get_config($setting)
sqlsrv_get_field		0;"	f	S:mixed function sqlsrv_get_field($stmt, $fieldIndex, $getAsType)
sqlsrv_has_rows		0;"	f	S:bool function sqlsrv_has_rows($stmt)
sqlsrv_next_result		0;"	f	S:mixed function sqlsrv_next_result($stmt)
sqlsrv_num_fields		0;"	f	S:mixed function sqlsrv_num_fields($stmt)
sqlsrv_num_rows		0;"	f	S:mixed function sqlsrv_num_rows($stmt)
sqlsrv_prepare		0;"	f	S:mixed function sqlsrv_prepare($conn, $sql, $params, $options)
sqlsrv_query		0;"	f	S:mixed function sqlsrv_query($conn, $sql, $params, $options)
sqlsrv_rollback		0;"	f	S:bool function sqlsrv_rollback($conn)
sqlsrv_rows_affected		0;"	f	S:int function sqlsrv_rows_affected($stmt)
sqlsrv_send_stream_data		0;"	f	S:bool function sqlsrv_send_stream_data($stmt)
sqlsrv_server_info		0;"	f	S:array function sqlsrv_server_info($conn)
sybase_affected_rows		0;"	f	S:int function sybase_affected_rows($link_identifier)
sybase_close		0;"	f	S:bool function sybase_close($link_identifier)
sybase_connect		0;"	f	S:resource function sybase_connect($servername, $username, $password, $charset, $appname, $new = false)
sybase_data_seek		0;"	f	S:bool function sybase_data_seek($result_identifier, $row_number)
sybase_deadlock_retry_count		0;"	f	S:void function sybase_deadlock_retry_count($retry_count)
sybase_fetch_array		0;"	f	S:array function sybase_fetch_array($result)
sybase_fetch_assoc		0;"	f	S:array function sybase_fetch_assoc($result)
sybase_fetch_field		0;"	f	S:object function sybase_fetch_field($result, $field_offset = -1)
sybase_fetch_object		0;"	f	S:object function sybase_fetch_object($result, $object)
sybase_fetch_row		0;"	f	S:array function sybase_fetch_row($result)
sybase_field_seek		0;"	f	S:bool function sybase_field_seek($result, $field_offset)
sybase_free_result		0;"	f	S:bool function sybase_free_result($result)
sybase_get_last_message		0;"	f	S:string function sybase_get_last_message()
sybase_min_client_severity		0;"	f	S:void function sybase_min_client_severity($severity)
sybase_min_error_severity		0;"	f	S:void function sybase_min_error_severity($severity)
sybase_min_message_severity		0;"	f	S:void function sybase_min_message_severity($severity)
sybase_min_server_severity		0;"	f	S:void function sybase_min_server_severity($severity)
sybase_num_fields		0;"	f	S:int function sybase_num_fields($result)
sybase_num_rows		0;"	f	S:int function sybase_num_rows($result)
sybase_pconnect		0;"	f	S:resource function sybase_pconnect($servername, $username, $password, $charset, $appname)
sybase_query		0;"	f	S:mixed function sybase_query($query, $link_identifier)
sybase_result		0;"	f	S:string function sybase_result($result, $row, $field)
sybase_select_db		0;"	f	S:bool function sybase_select_db($database_name, $link_identifier)
sybase_set_message_handler		0;"	f	S:bool function sybase_set_message_handler($handler, $link_identifier)
sybase_unbuffered_query		0;"	f	S:resource function sybase_unbuffered_query($query, $link_identifier, $store_result)
TokyoTyrant		0;"	c
RDBDEF_PORT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBDEF_PORT
RDBQC_STREQ		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STREQ
RDBQC_STRINC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STRINC
RDBQC_STRBW		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STRBW
RDBQC_STREW		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STREW
RDBQC_STRAND		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STRAND
RDBQC_STROR		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STROR
RDBQC_STROREQ		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STROREQ
RDBQC_STRRX		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_STRRX
RDBQC_NUMEQ		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMEQ
RDBQC_NUMGT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMGT
RDBQC_NUMGE		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMGE
RDBQC_NUMLT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMLT
RDBQC_NUMLE		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMLE
RDBQC_NUMBT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMBT
RDBQC_NUMOREQ		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NUMOREQ
RDBQC_NEGATE		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NEGATE
RDBQC_NOIDX		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQC_NOIDX
RDBQO_STRASC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQO_STRASC
RDBQO_STRDESC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQO_STRDESC
RDBQO_NUMASC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQO_NUMASC
RDBQO_NUMDESC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQO_NUMDESC
RDBIT_LEXICAL		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_LEXICAL
RDBIT_DECIMAL		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_DECIMAL
RDBIT_TOKEN		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_TOKEN
RDBIT_QGRAM		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_QGRAM
RDBIT_OPT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_OPT
RDBIT_VOID		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_VOID
RDBIT_KEEP		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBIT_KEEP
RDBQCFTS_PH		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQCFTS_PH
RDBQCFTS_AND		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQCFTS_AND
RDBQCFTS_OR		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQCFTS_OR
RDBQCFTS_EX		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBQCFTS_EX
RDBXO_LCKREC		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBXO_LCKREC
RDBXOLCK_GLB		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBXOLCK_GLB
RDBREC_INT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBREC_INT
RDBREC_DBL		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBREC_DBL
RDBMS_UNION		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBMS_UNION
RDBMS_ISECT		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBMS_ISECT
RDBMS_DIFF		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBMS_DIFF
RDBT_RECON		0;"	o	class:TokyoTyrant	a:const	S:const TokyoTyrant::RDBT_RECON
add		0;"	f	S:number function add($key, $increment, $type)	class:TokyoTyrant
connect		0;"	f	S:TokyoTyrant function connect($host, $port = TokyoTyrant::RDBDEF_PORT, $options)	class:TokyoTyrant
connectUri		0;"	f	S:TokyoTyrant function connectUri($uri)	class:TokyoTyrant
__construct		0;"	f	S: function __construct($host, $port = TokyoTyrant::RDBDEF_PORT, $options)	class:TokyoTyrant
copy		0;"	f	S:TokyoTyrant function copy($path)	class:TokyoTyrant
ext		0;"	f	S:string function ext($name, $options, $key, $value)	class:TokyoTyrant
fwmKeys		0;"	f	S:array function fwmKeys($prefix, $max_recs)	class:TokyoTyrant
get		0;"	f	S:array function get($keys)	class:TokyoTyrant
getIterator		0;"	f	S:TokyoTyrantIterator function getIterator()	class:TokyoTyrant
num		0;"	f	S:int function num()	class:TokyoTyrant
out		0;"	f	S:string function out($keys)	class:TokyoTyrant
put		0;"	f	S:TokyoTyrant function put($keys, $value = NULL)	class:TokyoTyrant
putCat		0;"	f	S:TokyoTyrant function putCat($keys, $value)	class:TokyoTyrant
putKeep		0;"	f	S:TokyoTyrant function putKeep($keys, $value)	class:TokyoTyrant
putNr		0;"	f	S:TokyoTyrant function putNr($keys, $value = NULL)	class:TokyoTyrant
putShl		0;"	f	S:mixed function putShl($key, $value, $width)	class:TokyoTyrant
restore		0;"	f	S:mixed function restore($log_dir, $timestamp, $check_consistency = true)	class:TokyoTyrant
setMaster		0;"	f	S:mixed function setMaster($host, $port, $timestamp, $check_consistency = true)	class:TokyoTyrant
size		0;"	f	S:int function size($key)	class:TokyoTyrant
stat		0;"	f	S:array function stat()	class:TokyoTyrant
sync		0;"	f	S:mixed function sync()	class:TokyoTyrant
tune		0;"	f	S:TokyoTyrant function tune($timeout, $options = TokyoTyrant::RDBT_RECON)	class:TokyoTyrant
vanish		0;"	f	S:mixed function vanish()	class:TokyoTyrant
TokyoTyrantTable		0;"	c	i:TokyoTyrant
add		0;"	f	S:void function add($key, $increment, $type)	class:TokyoTyrantTable
genUid		0;"	f	S:int function genUid()	class:TokyoTyrantTable
get		0;"	f	S:void function get($keys)	class:TokyoTyrantTable
getIterator		0;"	f	S:TokyoTyrantIterator function getIterator()	class:TokyoTyrantTable
getQuery		0;"	f	S:TokyoTyrantQuery function getQuery()	class:TokyoTyrantTable
out		0;"	f	S:void function out($keys)	class:TokyoTyrantTable
put		0;"	f	S:int function put($key, $columns)	class:TokyoTyrantTable
putCat		0;"	f	S:void function putCat($key, $columns)	class:TokyoTyrantTable
putKeep		0;"	f	S:void function putKeep($key, $columns)	class:TokyoTyrantTable
putNr		0;"	f	S:void function putNr($keys, $value)	class:TokyoTyrantTable
putShl		0;"	f	S:void function putShl($key, $value, $width)	class:TokyoTyrantTable
setIndex		0;"	f	S:mixed function setIndex($column, $type)	class:TokyoTyrantTable
TokyoTyrantQuery		0;"	c
addCond		0;"	f	S:mixed function addCond($name, $op, $expr)	class:TokyoTyrantQuery
__construct		0;"	f	S: function __construct($table)	class:TokyoTyrantQuery
count		0;"	f	S:int function count()	class:TokyoTyrantQuery
current		0;"	f	S:array function current()	class:TokyoTyrantQuery
hint		0;"	f	S:string function hint()	class:TokyoTyrantQuery
key		0;"	f	S:string function key()	class:TokyoTyrantQuery
metaSearch		0;"	f	S:array function metaSearch($queries, $type)	class:TokyoTyrantQuery
next		0;"	f	S:array function next()	class:TokyoTyrantQuery
out		0;"	f	S:TokyoTyrantQuery function out()	class:TokyoTyrantQuery
rewind		0;"	f	S:bool function rewind()	class:TokyoTyrantQuery
search		0;"	f	S:array function search()	class:TokyoTyrantQuery
setLimit		0;"	f	S:mixed function setLimit($max, $skip)	class:TokyoTyrantQuery
setOrder		0;"	f	S:mixed function setOrder($name, $type)	class:TokyoTyrantQuery
valid		0;"	f	S:bool function valid()	class:TokyoTyrantQuery
TokyoTyrantIterator		0;"	c
__construct		0;"	f	S: function __construct($object)	class:TokyoTyrantIterator
current		0;"	f	S:mixed function current()	class:TokyoTyrantIterator
key		0;"	f	S:mixed function key()	class:TokyoTyrantIterator
next		0;"	f	S:mixed function next()	class:TokyoTyrantIterator
rewind		0;"	f	S:void function rewind()	class:TokyoTyrantIterator
valid		0;"	f	S:bool function valid()	class:TokyoTyrantIterator
tokyotyrantexception		0;"	c	i:Exception
code		0;"	p	class:tokyotyrantexception	a:protected	S:protected tokyotyrantexception::code
message		0;"	p	class:tokyotyrantexception	a:protected	S:protected tokyotyrantexception::message
code		0;"	p	class:tokyotyrantexception	a:protected	S:protected tokyotyrantexception::code
file		0;"	p	class:tokyotyrantexception	a:protected	S:protected tokyotyrantexception::file
line		0;"	p	class:tokyotyrantexception	a:protected	S:protected tokyotyrantexception::line
CAL_GREGORIAN		0;"	d
CAL_JULIAN		0;"	d
CAL_JEWISH		0;"	d
CAL_FRENCH		0;"	d
CAL_NUM_CALS		0;"	d
CAL_DOW_DAYNO		0;"	d
CAL_DOW_SHORT		0;"	d
CAL_DOW_LONG		0;"	d
CAL_MONTH_GREGORIAN_SHORT		0;"	d
CAL_MONTH_GREGORIAN_LONG		0;"	d
CAL_MONTH_JULIAN_SHORT		0;"	d
CAL_MONTH_JULIAN_LONG		0;"	d
CAL_MONTH_JEWISH		0;"	d
CAL_MONTH_FRENCH		0;"	d
CAL_EASTER_DEFAULT		0;"	d
CAL_EASTER_ROMAN		0;"	d
CAL_EASTER_ALWAYS_GREGORIAN		0;"	d
CAL_EASTER_ALWAYS_JULIAN		0;"	d
CAL_JEWISH_ADD_ALAFIM_GERESH		0;"	d
CAL_JEWISH_ADD_ALAFIM		0;"	d
CAL_JEWISH_ADD_GERESHAYIM		0;"	d
cal_days_in_month		0;"	f	S:int function cal_days_in_month($calendar, $month, $year)
cal_from_jd		0;"	f	S:array function cal_from_jd($jd, $calendar)
cal_info		0;"	f	S:array function cal_info($calendar = -1)
cal_to_jd		0;"	f	S:int function cal_to_jd($calendar, $month, $day, $year)
easter_date		0;"	f	S:int function easter_date($year = date("Y"))
easter_days		0;"	f	S:int function easter_days($year = date("Y"), $method = CAL_EASTER_DEFAULT)
FrenchToJD		0;"	f	S:int function FrenchToJD($month, $day, $year)
GregorianToJD		0;"	f	S:int function GregorianToJD($month, $day, $year)
JDDayOfWeek		0;"	f	S:mixed function JDDayOfWeek($julianday, $mode = CAL_DOW_DAYNO)
JDMonthName		0;"	f	S:string function JDMonthName($julianday, $mode)
JDToFrench		0;"	f	S:string function JDToFrench($juliandaycount)
JDToGregorian		0;"	f	S:string function JDToGregorian($julianday)
jdtojewish		0;"	f	S:string function jdtojewish($juliandaycount, $hebrew = false, $fl)
JDToJulian		0;"	f	S:string function JDToJulian($julianday)
jdtounix		0;"	f	S:int function jdtounix($jday)
JewishToJD		0;"	f	S:int function JewishToJD($month, $day, $year)
JulianToJD		0;"	f	S:int function JulianToJD($month, $day, $year)
unixtojd		0;"	f	S:int function unixtojd($timestamp = time())
SUNFUNCS_RET_TIMESTAMP		0;"	d
SUNFUNCS_RET_STRING		0;"	d
SUNFUNCS_RET_DOUBLE		0;"	d
DateTime		0;"	c
ATOM		0;"	o	class:DateTime	a:const	S:const DateTime::ATOM
COOKIE		0;"	o	class:DateTime	a:const	S:const DateTime::COOKIE
ISO8601		0;"	o	class:DateTime	a:const	S:const DateTime::ISO8601
RFC822		0;"	o	class:DateTime	a:const	S:const DateTime::RFC822
RFC850		0;"	o	class:DateTime	a:const	S:const DateTime::RFC850
RFC1036		0;"	o	class:DateTime	a:const	S:const DateTime::RFC1036
RFC1123		0;"	o	class:DateTime	a:const	S:const DateTime::RFC1123
RFC2822		0;"	o	class:DateTime	a:const	S:const DateTime::RFC2822
RFC3339		0;"	o	class:DateTime	a:const	S:const DateTime::RFC3339
RSS		0;"	o	class:DateTime	a:const	S:const DateTime::RSS
W3C		0;"	o	class:DateTime	a:const	S:const DateTime::W3C
add		0;"	f	S:DateTime function add($interval, $object)	class:DateTime
__construct		0;"	f	S:DateTime function __construct($time = "now", $timezone)	class:DateTime
createFromFormat		0;"	f	S:DateTime function createFromFormat($format, $time, $timezone)	class:DateTime	a:static
getLastErrors		0;"	f	S:array function getLastErrors()	class:DateTime	a:static
modify		0;"	f	S:DateTime function modify($modify, $object)	class:DateTime
__set_state		0;"	f	S:DateTime function __set_state($array)	class:DateTime	a:static
setDate		0;"	f	S:DateTime function setDate($year, $month, $day, $object)	class:DateTime
setISODate		0;"	f	S:DateTime function setISODate($year, $week, $day = 1, $object)	class:DateTime
setTime		0;"	f	S:DateTime function setTime($hour, $minute, $second, $object)	class:DateTime
setTimestamp		0;"	f	S:DateTime function setTimestamp($unixtimestamp, $object)	class:DateTime
setTimezone		0;"	f	S:object function setTimezone($timezone, $object)	class:DateTime
sub		0;"	f	S:DateTime function sub($interval, $object)	class:DateTime
DateTimeImmutable		0;"	c
add		0;"	f	S:DateTimeImmutable function add($interval)	class:DateTimeImmutable
__construct		0;"	f	S:DateTimeImmutable function __construct($time = "now", $timezone)	class:DateTimeImmutable
createFromFormat		0;"	f	S:DateTimeImmutable function createFromFormat($format, $time, $timezone)	class:DateTimeImmutable	a:static
createFromMutable		0;"	f	S:DateTimeImmutable function createFromMutable($datetime)	class:DateTimeImmutable	a:static
getLastErrors		0;"	f	S:array function getLastErrors()	class:DateTimeImmutable	a:static
modify		0;"	f	S:DateTimeImmutable function modify($modify)	class:DateTimeImmutable
__set_state		0;"	f	S:DateTimeImmutable function __set_state($array)	class:DateTimeImmutable	a:static
setDate		0;"	f	S:DateTimeImmutable function setDate($year, $month, $day)	class:DateTimeImmutable
setISODate		0;"	f	S:DateTimeImmutable function setISODate($year, $week, $day = 1)	class:DateTimeImmutable
setTime		0;"	f	S:DateTimeImmutable function setTime($hour, $minute, $second)	class:DateTimeImmutable
setTimestamp		0;"	f	S:DateTimeImmutable function setTimestamp($unixtimestamp)	class:DateTimeImmutable
setTimezone		0;"	f	S:DateTimeImmutable function setTimezone($timezone)	class:DateTimeImmutable
sub		0;"	f	S:DateTimeImmutable function sub($interval)	class:DateTimeImmutable
DateTimeInterface		0;"	c
diff		0;"	f	S:DateInterval function diff($datetime2, $absolute = false, $datetime1)	class:DateTime
format		0;"	f	S:string function format($format, $object)	class:DateTime
getOffset		0;"	f	S:int function getOffset($object)	class:DateTime
getTimestamp		0;"	f	S:int function getTimestamp($object)	class:DateTime
getTimezone		0;"	f	S:DateTimeZone function getTimezone($object)	class:DateTime
__wakeup		0;"	f	S: function __wakeup()	class:DateTime
DateTimeZone		0;"	c
AFRICA		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::AFRICA
AMERICA		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::AMERICA
ANTARCTICA		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ANTARCTICA
ARCTIC		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ARCTIC
ASIA		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ASIA
ATLANTIC		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ATLANTIC
AUSTRALIA		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::AUSTRALIA
EUROPE		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::EUROPE
INDIAN		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::INDIAN
PACIFIC		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::PACIFIC
UTC		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::UTC
ALL		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ALL
ALL_WITH_BC		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::ALL_WITH_BC
PER_COUNTRY		0;"	o	class:DateTimeZone	a:const	S:const DateTimeZone::PER_COUNTRY
__construct		0;"	f	S:DateTimeZone function __construct($timezone)	class:DateTimeZone
getLocation		0;"	f	S:array function getLocation($object)	class:DateTimeZone
getName		0;"	f	S:string function getName($object)	class:DateTimeZone
getOffset		0;"	f	S:int function getOffset($datetime, $object)	class:DateTimeZone
getTransitions		0;"	f	S:array function getTransitions($timestamp_begin, $timestamp_end, $object)	class:DateTimeZone
listAbbreviations		0;"	f	S:array function listAbbreviations()	class:DateTimeZone	a:static
listIdentifiers		0;"	f	S:array function listIdentifiers($what = DateTimeZone::ALL, $country)	class:DateTimeZone	a:static
DateInterval		0;"	c
y		0;"	p	class:DateInterval	S: DateInterval::y
m		0;"	p	class:DateInterval	S: DateInterval::m
d		0;"	p	class:DateInterval	S: DateInterval::d
h		0;"	p	class:DateInterval	S: DateInterval::h
i		0;"	p	class:DateInterval	S: DateInterval::i
s		0;"	p	class:DateInterval	S: DateInterval::s
invert		0;"	p	class:DateInterval	S: DateInterval::invert
days		0;"	p	class:DateInterval	S: DateInterval::days
__construct		0;"	f	S: function __construct($interval_spec)	class:DateInterval
createFromDateString		0;"	f	S:DateInterval function createFromDateString($time)	class:DateInterval	a:static
format		0;"	f	S:string function format($format)	class:DateInterval
DatePeriod		0;"	c
EXCLUDE_START_DATE		0;"	o	class:DatePeriod	a:const	S:const DatePeriod::EXCLUDE_START_DATE
__construct		0;"	f	S: function __construct($start, $interval, $recurrences, $options, $end, $isostr)	class:DatePeriod
checkdate		0;"	f	S:bool function checkdate($month, $day, $year)
date_add		0;"	f	S: function date_add()
date_create_from_format		0;"	f	S: function date_create_from_format()
date_create_immutable_from_format		0;"	f	S: function date_create_immutable_from_format()
date_create_immutable		0;"	f	S: function date_create_immutable()
date_create		0;"	f	S: function date_create()
date_date_set		0;"	f	S: function date_date_set()
date_default_timezone_get		0;"	f	S:string function date_default_timezone_get()
date_default_timezone_set		0;"	f	S:bool function date_default_timezone_set($timezone_identifier)
date_diff		0;"	f	S: function date_diff()
date_format		0;"	f	S: function date_format()
date_get_last_errors		0;"	f	S: function date_get_last_errors()
date_interval_create_from_date_string		0;"	f	S: function date_interval_create_from_date_string()
date_interval_format		0;"	f	S: function date_interval_format()
date_isodate_set		0;"	f	S: function date_isodate_set()
date_modify		0;"	f	S: function date_modify()
date_offset_get		0;"	f	S: function date_offset_get()
date_parse_from_format		0;"	f	S:array function date_parse_from_format($format, $date)
date_parse		0;"	f	S:array function date_parse($date)
date_sub		0;"	f	S: function date_sub()
date_sun_info		0;"	f	S:array function date_sun_info($time, $latitude, $longitude)
date_sunrise		0;"	f	S:mixed function date_sunrise($timestamp, $format = SUNFUNCS_RET_STRING, $latitude = ini_get("date.default_latitude"), $longitude = ini_get("date.default_longitude"), $zenith = ini_get("date.sunrise_zenith"), $gmt_offset)
date_sunset		0;"	f	S:mixed function date_sunset($timestamp, $format = SUNFUNCS_RET_STRING, $latitude = ini_get("date.default_latitude"), $longitude = ini_get("date.default_longitude"), $zenith = ini_get("date.sunset_zenith"), $gmt_offset)
date_time_set		0;"	f	S: function date_time_set()
date_timestamp_get		0;"	f	S: function date_timestamp_get()
date_timestamp_set		0;"	f	S: function date_timestamp_set()
date_timezone_get		0;"	f	S: function date_timezone_get()
date_timezone_set		0;"	f	S: function date_timezone_set()
date		0;"	f	S:string function date($format, $timestamp = time())
getdate		0;"	f	S:array function getdate($timestamp = time())
gettimeofday		0;"	f	S:mixed function gettimeofday($return_float = false)
gmdate		0;"	f	S:string function gmdate($format, $timestamp = time())
gmmktime		0;"	f	S:int function gmmktime($hour = gmdate("H"), $minute = gmdate("i"), $second = gmdate("s"), $month = gmdate("n"), $day = gmdate("j"), $year = gmdate("Y"), $is_dst = -1)
gmstrftime		0;"	f	S:string function gmstrftime($format, $timestamp = time())
idate		0;"	f	S:int function idate($format, $timestamp = time())
localtime		0;"	f	S:array function localtime($timestamp = time(), $is_associative = false)
microtime		0;"	f	S:mixed function microtime($get_as_float = false)
mktime		0;"	f	S:int function mktime($hour = date("H"), $minute = date("i"), $second = date("s"), $month = date("n"), $day = date("j"), $year = date("Y"), $is_dst = -1)
strftime		0;"	f	S:string function strftime($format, $timestamp = time())
strptime		0;"	f	S:array function strptime($date, $format)
strtotime		0;"	f	S:int function strtotime($time, $now = time())
time		0;"	f	S:int function time()
timezone_abbreviations_list		0;"	f	S: function timezone_abbreviations_list()
timezone_identifiers_list		0;"	f	S: function timezone_identifiers_list()
timezone_location_get		0;"	f	S: function timezone_location_get()
timezone_name_from_abbr		0;"	f	S:string function timezone_name_from_abbr($abbr, $gmtOffset = -1, $isdst = -1)
timezone_name_get		0;"	f	S: function timezone_name_get()
timezone_offset_get		0;"	f	S: function timezone_offset_get()
timezone_open		0;"	f	S: function timezone_open()
timezone_transitions_get		0;"	f	S: function timezone_transitions_get()
timezone_version_get		0;"	f	S:string function timezone_version_get()
HRTime\PerformanceCounter		0;"	c
getElapsedTicks		0;"	f	S:int function getElapsedTicks()	class:HRTime\PerformanceCounter
getFrequency		0;"	f	S:int function getFrequency()	class:HRTime\PerformanceCounter
getLastElapsedTicks		0;"	f	S:int function getLastElapsedTicks()	class:HRTime\PerformanceCounter
isRunning		0;"	f	S:bool function isRunning()	class:HRTime\PerformanceCounter
start		0;"	f	S:void function start()	class:HRTime\PerformanceCounter
stop		0;"	f	S:void function stop()	class:HRTime\PerformanceCounter
HRTime\StopWatch		0;"	c	i:HRTime\PerformanceCounter
getElapsedTime		0;"	f	S:float function getElapsedTime($unit)	class:HRTime\StopWatch
getLastElapsedTime		0;"	f	S:float function getLastElapsedTime($unit)	class:HRTime\StopWatch
HRTime\Unit		0;"	c
SECOND		0;"	o	class:HRTime\Unit	a:const	S:const HRTime\Unit::SECOND
MILLISECOND		0;"	o	class:HRTime\Unit	a:const	S:const HRTime\Unit::MILLISECOND
MICROSECOND		0;"	o	class:HRTime\Unit	a:const	S:const HRTime\Unit::MICROSECOND
NANOSECOND		0;"	o	class:HRTime\Unit	a:const	S:const HRTime\Unit::NANOSECOND
F_DUPFD		0;"	d
F_GETFD		0;"	d
F_GETFL		0;"	d
F_GETLK		0;"	d
F_GETOWN		0;"	d
F_RDLCK		0;"	d
F_SETFL		0;"	d
F_SETLK		0;"	d
F_SETLKW		0;"	d
F_SETOWN		0;"	d
F_UNLCK		0;"	d
F_WRLCK		0;"	d
O_APPEND		0;"	d
O_ASYNC		0;"	d
O_CREAT		0;"	d
O_EXCL		0;"	d
O_NDELAY		0;"	d
O_NOCTTY		0;"	d
O_NONBLOCK		0;"	d
O_RDONLY		0;"	d
O_RDWR		0;"	d
O_SYNC		0;"	d
O_TRUNC		0;"	d
O_WRONLY		0;"	d
S_IRGRP		0;"	d
S_IROTH		0;"	d
S_IRUSR		0;"	d
S_IRWXG		0;"	d
S_IRWXO		0;"	d
S_IRWXU		0;"	d
S_IWGRP		0;"	d
S_IWOTH		0;"	d
S_IWUSR		0;"	d
S_IXGRP		0;"	d
S_IXOTH		0;"	d
S_IXUSR		0;"	d
dio_close		0;"	f	S:void function dio_close($fd)
dio_fcntl		0;"	f	S:mixed function dio_fcntl($fd, $cmd, $args)
dio_open		0;"	f	S:resource function dio_open($filename, $flags, $mode)
dio_read		0;"	f	S:string function dio_read($fd, $len = 1024)
dio_seek		0;"	f	S:int function dio_seek($fd, $pos, $whence = SEEK_SET)
dio_stat		0;"	f	S:array function dio_stat($fd)
dio_tcsetattr		0;"	f	S:bool function dio_tcsetattr($fd, $options)
dio_truncate		0;"	f	S:bool function dio_truncate($fd, $offset)
dio_write		0;"	f	S:int function dio_write($fd, $data, $len)
DIRECTORY_SEPARATOR		0;"	d
PATH_SEPARATOR		0;"	d
SCANDIR_SORT_ASCENDING		0;"	d
SCANDIR_SORT_DESCENDING		0;"	d
SCANDIR_SORT_NONE		0;"	d
Directory		0;"	c
path		0;"	p	class:Directory	S: Directory::path
handle		0;"	p	class:Directory	S: Directory::handle
close		0;"	f	S:void function close($dir_handle)	class:Directory
read		0;"	f	S:string function read($dir_handle)	class:Directory
rewind		0;"	f	S:void function rewind($dir_handle)	class:Directory
chdir		0;"	f	S:bool function chdir($directory)
chroot		0;"	f	S:bool function chroot($directory)
closedir		0;"	f	S:void function closedir($dir_handle)
dir		0;"	f	S:Directory function dir($directory, $context)
getcwd		0;"	f	S:string function getcwd()
opendir		0;"	f	S:resource function opendir($path, $context)
readdir		0;"	f	S:string function readdir($dir_handle)
rewinddir		0;"	f	S:void function rewinddir($dir_handle)
scandir		0;"	f	S:array function scandir($directory, $sorting_order = SCANDIR_SORT_ASCENDING, $context)
FILEINFO_NONE		0;"	d
FILEINFO_SYMLINK		0;"	d
FILEINFO_MIME_TYPE		0;"	d
FILEINFO_MIME_ENCODING		0;"	d
FILEINFO_MIME		0;"	d
FILEINFO_COMPRESS		0;"	d
FILEINFO_DEVICES		0;"	d
FILEINFO_CONTINUE		0;"	d
FILEINFO_PRESERVE_ATIME		0;"	d
FILEINFO_RAW		0;"	d
finfo_buffer		0;"	f	S:string function finfo_buffer($finfo, $string, $options = FILEINFO_NONE, $context)
finfo_close		0;"	f	S:bool function finfo_close($finfo)
finfo_file		0;"	f	S:string function finfo_file($finfo, $file_name, $options = FILEINFO_NONE, $context)
finfo_open		0;"	f	S:resource function finfo_open($options = FILEINFO_NONE, $magic_file)
finfo_set_flags		0;"	f	S:bool function finfo_set_flags($finfo, $options)
mime_content_type		0;"	f	S:string function mime_content_type($filename)
SEEK_SET		0;"	d
SEEK_CUR		0;"	d
SEEK_END		0;"	d
LOCK_SH		0;"	d
LOCK_EX		0;"	d
LOCK_UN		0;"	d
LOCK_NB		0;"	d
GLOB_BRACE		0;"	d
GLOB_ONLYDIR		0;"	d
GLOB_MARK		0;"	d
GLOB_NOSORT		0;"	d
GLOB_NOCHECK		0;"	d
GLOB_NOESCAPE		0;"	d
GLOB_AVAILABLE_FLAGS		0;"	d
PATHINFO_DIRNAME		0;"	d
PATHINFO_BASENAME		0;"	d
PATHINFO_EXTENSION		0;"	d
PATHINFO_FILENAME		0;"	d
FILE_USE_INCLUDE_PATH		0;"	d
FILE_NO_DEFAULT_CONTEXT		0;"	d
FILE_APPEND		0;"	d
FILE_IGNORE_NEW_LINES		0;"	d
FILE_SKIP_EMPTY_LINES		0;"	d
FILE_BINARY		0;"	d
FILE_TEXT		0;"	d
INI_SCANNER_NORMAL		0;"	d
INI_SCANNER_RAW		0;"	d
FNM_NOESCAPE		0;"	d
FNM_PATHNAME		0;"	d
FNM_PERIOD		0;"	d
FNM_CASEFOLD		0;"	d
basename		0;"	f	S:string function basename($path, $suffix)
chgrp		0;"	f	S:bool function chgrp($filename, $group)
chmod		0;"	f	S:bool function chmod($filename, $mode)
chown		0;"	f	S:bool function chown($filename, $user)
clearstatcache		0;"	f	S:void function clearstatcache($clear_realpath_cache = false, $filename)
copy		0;"	f	S:bool function copy($source, $dest, $context)
delete		0;"	f	S: function delete()
dirname		0;"	f	S:string function dirname($path)
disk_free_space		0;"	f	S:float function disk_free_space($directory)
disk_total_space		0;"	f	S:float function disk_total_space($directory)
diskfreespace		0;"	f	S: function diskfreespace()
fclose		0;"	f	S:bool function fclose($handle)
feof		0;"	f	S:bool function feof($handle)
fflush		0;"	f	S:bool function fflush($handle)
fgetc		0;"	f	S:string function fgetc($handle)
fgetcsv		0;"	f	S:array function fgetcsv($handle, $length, $delimiter = ",", $enclosure = '"', $escape = "\\")
fgets		0;"	f	S:string function fgets($handle, $length)
fgetss		0;"	f	S:string function fgetss($handle, $length, $allowable_tags)
file_exists		0;"	f	S:bool function file_exists($filename)
file_get_contents		0;"	f	S:string function file_get_contents($filename, $use_include_path = false, $context, $offset = -1, $maxlen)
file_put_contents		0;"	f	S:int function file_put_contents($filename, $data, $flags, $context)
file		0;"	f	S:array function file($filename, $flags, $context)
fileatime		0;"	f	S:int function fileatime($filename)
filectime		0;"	f	S:int function filectime($filename)
filegroup		0;"	f	S:int function filegroup($filename)
fileinode		0;"	f	S:int function fileinode($filename)
filemtime		0;"	f	S:int function filemtime($filename)
fileowner		0;"	f	S:int function fileowner($filename)
fileperms		0;"	f	S:int function fileperms($filename)
filesize		0;"	f	S:int function filesize($filename)
filetype		0;"	f	S:string function filetype($filename)
flock		0;"	f	S:bool function flock($handle, $operation, &$wouldblock)
fnmatch		0;"	f	S:bool function fnmatch($pattern, $string, $flags)
fopen		0;"	f	S:resource function fopen($filename, $mode, $use_include_path = false, $context)
fpassthru		0;"	f	S:int function fpassthru($handle)
fputcsv		0;"	f	S:int function fputcsv($handle, $fields, $delimiter = ",", $enclosure = '"')
fputs		0;"	f	S: function fputs()
fread		0;"	f	S:string function fread($handle, $length)
fscanf		0;"	f	S:mixed function fscanf($handle, $format, &$...)
fseek		0;"	f	S:int function fseek($handle, $offset, $whence = SEEK_SET)
fstat		0;"	f	S:array function fstat($handle)
ftell		0;"	f	S:int function ftell($handle)
ftruncate		0;"	f	S:bool function ftruncate($handle, $size)
fwrite		0;"	f	S:int function fwrite($handle, $string, $length)
glob		0;"	f	S:array function glob($pattern, $flags)
is_dir		0;"	f	S:bool function is_dir($filename)
is_executable		0;"	f	S:bool function is_executable($filename)
is_file		0;"	f	S:bool function is_file($filename)
is_link		0;"	f	S:bool function is_link($filename)
is_readable		0;"	f	S:bool function is_readable($filename)
is_uploaded_file		0;"	f	S:bool function is_uploaded_file($filename)
is_writable		0;"	f	S:bool function is_writable($filename)
is_writeable		0;"	f	S: function is_writeable()
lchgrp		0;"	f	S:bool function lchgrp($filename, $group)
lchown		0;"	f	S:bool function lchown($filename, $user)
link		0;"	f	S:bool function link($target, $link)
linkinfo		0;"	f	S:int function linkinfo($path)
lstat		0;"	f	S:array function lstat($filename)
mkdir		0;"	f	S:bool function mkdir($pathname, $mode = 0777, $recursive = false, $context)
move_uploaded_file		0;"	f	S:bool function move_uploaded_file($filename, $destination)
parse_ini_file		0;"	f	S:array function parse_ini_file($filename, $process_sections = false, $scanner_mode = INI_SCANNER_NORMAL)
parse_ini_string		0;"	f	S:array function parse_ini_string($ini, $process_sections = false, $scanner_mode = INI_SCANNER_NORMAL)
pathinfo		0;"	f	S:mixed function pathinfo($path, $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME)
pclose		0;"	f	S:int function pclose($handle)
popen		0;"	f	S:resource function popen($command, $mode)
readfile		0;"	f	S:int function readfile($filename, $use_include_path = false, $context)
readlink		0;"	f	S:string function readlink($path)
realpath_cache_get		0;"	f	S:array function realpath_cache_get()
realpath_cache_size		0;"	f	S:int function realpath_cache_size()
realpath		0;"	f	S:string function realpath($path)
rename		0;"	f	S:bool function rename($oldname, $newname, $context)
rewind		0;"	f	S:bool function rewind($handle)
rmdir		0;"	f	S:bool function rmdir($dirname, $context)
set_file_buffer		0;"	f	S: function set_file_buffer()
stat		0;"	f	S:array function stat($filename)
symlink		0;"	f	S:bool function symlink($target, $link)
tempnam		0;"	f	S:string function tempnam($dir, $prefix)
tmpfile		0;"	f	S:resource function tmpfile()
touch		0;"	f	S:bool function touch($filename, $time = time(), $atime)
umask		0;"	f	S:int function umask($mask)
unlink		0;"	f	S:bool function unlink($filename, $context)
IN_ACCESS		0;"	d
IN_MODIFY		0;"	d
IN_ATTRIB		0;"	d
IN_CLOSE_WRITE		0;"	d
IN_CLOSE_NOWRITE		0;"	d
IN_OPEN		0;"	d
IN_MOVED_TO		0;"	d
IN_MOVED_FROM		0;"	d
IN_CREATE		0;"	d
IN_DELETE		0;"	d
IN_DELETE_SELF		0;"	d
IN_MOVE_SELF		0;"	d
IN_CLOSE		0;"	d
IN_MOVE		0;"	d
IN_ALL_EVENTS		0;"	d
IN_UNMOUNT		0;"	d
IN_Q_OVERFLOW		0;"	d
IN_IGNORED		0;"	d
IN_ISDIR		0;"	d
IN_ONLYDIR		0;"	d
IN_DONT_FOLLOW		0;"	d
IN_MASK_ADD		0;"	d
IN_ONESHOT		0;"	d
inotify_add_watch		0;"	f	S:int function inotify_add_watch($inotify_instance, $pathname, $mask)
inotify_init		0;"	f	S:resource function inotify_init()
inotify_queue_len		0;"	f	S:int function inotify_queue_len($inotify_instance)
inotify_read		0;"	f	S:array function inotify_read($inotify_instance)
inotify_rm_watch		0;"	f	S:bool function inotify_rm_watch($inotify_instance, $watch_descriptor)
setproctitle		0;"	f	S:void function setproctitle($title)
setthreadtitle		0;"	f	S:bool function setthreadtitle($title)
XATTR_ROOT		0;"	d
XATTR_DONTFOLLOW		0;"	d
XATTR_CREATE		0;"	d
XATTR_REPLACE		0;"	d
xattr_get		0;"	f	S:string function xattr_get($filename, $name, $flags)
xattr_list		0;"	f	S:array function xattr_list($filename, $flags)
xattr_remove		0;"	f	S:bool function xattr_remove($filename, $name, $flags)
xattr_set		0;"	f	S:bool function xattr_set($filename, $name, $value, $flags)
xattr_supported		0;"	f	S:bool function xattr_supported($filename, $flags)
XDIFF_PATCH_NORMAL		0;"	d
XDIFF_PATCH_REVERSE		0;"	d
xdiff_file_bdiff_size		0;"	f	S:int function xdiff_file_bdiff_size($file)
xdiff_file_bdiff		0;"	f	S:bool function xdiff_file_bdiff($old_file, $new_file, $dest)
xdiff_file_bpatch		0;"	f	S:bool function xdiff_file_bpatch($file, $patch, $dest)
xdiff_file_diff_binary		0;"	f	S:bool function xdiff_file_diff_binary($old_file, $new_file, $dest)
xdiff_file_diff		0;"	f	S:bool function xdiff_file_diff($old_file, $new_file, $dest, $context = 3, $minimal = false)
xdiff_file_merge3		0;"	f	S:mixed function xdiff_file_merge3($old_file, $new_file1, $new_file2, $dest)
xdiff_file_patch_binary		0;"	f	S:bool function xdiff_file_patch_binary($file, $patch, $dest)
xdiff_file_patch		0;"	f	S:mixed function xdiff_file_patch($file, $patch, $dest, $flags = DIFF_PATCH_NORMAL)
xdiff_file_rabdiff		0;"	f	S:bool function xdiff_file_rabdiff($old_file, $new_file, $dest)
xdiff_string_bdiff_size		0;"	f	S:int function xdiff_string_bdiff_size($patch)
xdiff_string_bdiff		0;"	f	S:string function xdiff_string_bdiff($old_data, $new_data)
xdiff_string_bpatch		0;"	f	S:string function xdiff_string_bpatch($str, $patch)
xdiff_string_diff_binary		0;"	f	S:string function xdiff_string_diff_binary($old_data, $new_data)
xdiff_string_diff		0;"	f	S:string function xdiff_string_diff($old_data, $new_data, $context = 3, $minimal = false)
xdiff_string_merge3		0;"	f	S:mixed function xdiff_string_merge3($old_data, $new_data1, $new_data2, &$error)
xdiff_string_patch_binary		0;"	f	S:string function xdiff_string_patch_binary($str, $patch)
xdiff_string_patch		0;"	f	S:string function xdiff_string_patch($str, $patch, $flags, &$error)
xdiff_string_rabdiff		0;"	f	S:string function xdiff_string_rabdiff($old_data, $new_data)
enchant_broker_describe		0;"	f	S:array function enchant_broker_describe($broker)
enchant_broker_dict_exists		0;"	f	S:bool function enchant_broker_dict_exists($broker, $tag)
enchant_broker_free_dict		0;"	f	S:bool function enchant_broker_free_dict($dict)
enchant_broker_free		0;"	f	S:bool function enchant_broker_free($broker)
enchant_broker_get_error		0;"	f	S:string function enchant_broker_get_error($broker)
enchant_broker_init		0;"	f	S:resource function enchant_broker_init()
enchant_broker_list_dicts		0;"	f	S:mixed function enchant_broker_list_dicts($broker)
enchant_broker_request_dict		0;"	f	S:resource function enchant_broker_request_dict($broker, $tag)
enchant_broker_request_pwl_dict		0;"	f	S:resource function enchant_broker_request_pwl_dict($broker, $filename)
enchant_broker_set_ordering		0;"	f	S:bool function enchant_broker_set_ordering($broker, $tag, $ordering)
enchant_dict_add_to_personal		0;"	f	S:void function enchant_dict_add_to_personal($dict, $word)
enchant_dict_add_to_session		0;"	f	S:void function enchant_dict_add_to_session($dict, $word)
enchant_dict_check		0;"	f	S:bool function enchant_dict_check($dict, $word)
enchant_dict_describe		0;"	f	S:mixed function enchant_dict_describe($dict)
enchant_dict_get_error		0;"	f	S:string function enchant_dict_get_error($dict)
enchant_dict_is_in_session		0;"	f	S:bool function enchant_dict_is_in_session($dict, $word)
enchant_dict_quick_check		0;"	f	S:bool function enchant_dict_quick_check($dict, $word, &$suggestions)
enchant_dict_store_replacement		0;"	f	S:void function enchant_dict_store_replacement($dict, $mis, $cor)
enchant_dict_suggest		0;"	f	S:array function enchant_dict_suggest($dict, $word)
FRIBIDI_CHARSET_UTF8		0;"	d
FRIBIDI_CHARSET_8859_6		0;"	d
FRIBIDI_CHARSET_8859_8		0;"	d
FRIBIDI_CHARSET_CP1255		0;"	d
FRIBIDI_CHARSET_CP1256		0;"	d
FRIBIDI_CHARSET_ISIRI_3342		0;"	d
FRIBIDI_CHARSET_CAP_RTL		0;"	d
FRIBIDI_RTL		0;"	d
FRIBIDI_LTR		0;"	d
FRIBIDI_AUTO		0;"	d
fribidi_log2vis		0;"	f	S:string function fribidi_log2vis($str, $direction, $charset)
Gender\Gender		0;"	c
IS_FEMALE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_FEMALE
IS_MOSTLY_FEMALE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_MOSTLY_FEMALE
IS_MALE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_MALE
IS_MOSTLY_MALE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_MOSTLY_MALE
IS_UNISEX_NAME		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_UNISEX_NAME
IS_A_COUPLE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IS_A_COUPLE
NAME_NOT_FOUND		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::NAME_NOT_FOUND
ERROR_IN_NAME		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ERROR_IN_NAME
ANY_COUNTRY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ANY_COUNTRY
BRITAIN		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::BRITAIN
IRELAND		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::IRELAND
USA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::USA
SPAIN		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SPAIN
PORTUGAL		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::PORTUGAL
ITALY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ITALY
MALTA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::MALTA
FRANCE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::FRANCE
BELGIUM		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::BELGIUM
LUXEMBOURG		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::LUXEMBOURG
NETHERLANDS		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::NETHERLANDS
GERMANY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::GERMANY
EAST_FRISIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::EAST_FRISIA
AUSTRIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::AUSTRIA
SWISS		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SWISS
ICELAND		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ICELAND
DENMARK		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::DENMARK
NORWAY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::NORWAY
SWEDEN		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SWEDEN
FINLAND		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::FINLAND
ESTONIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ESTONIA
LATVIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::LATVIA
LITHUANIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::LITHUANIA
POLAND		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::POLAND
CZECH_REP		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::CZECH_REP
SLOVAKIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SLOVAKIA
HUNGARY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::HUNGARY
ROMANIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ROMANIA
BULGARIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::BULGARIA
BOSNIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::BOSNIA
CROATIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::CROATIA
KOSOVO		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::KOSOVO
MACEDONIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::MACEDONIA
MONTENEGRO		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::MONTENEGRO
SERBIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SERBIA
SLOVENIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::SLOVENIA
ALBANIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ALBANIA
GREECE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::GREECE
RUSSIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::RUSSIA
BELARUS		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::BELARUS
MOLDOVA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::MOLDOVA
UKRAINE		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::UKRAINE
ARMENIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ARMENIA
AZERBAIJAN		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::AZERBAIJAN
GEORGIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::GEORGIA
KAZAKH_UZBEK		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::KAZAKH_UZBEK
TURKEY		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::TURKEY
ARABIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ARABIA
ISRAEL		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::ISRAEL
CHINA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::CHINA
INDIA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::INDIA
JAPAN		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::JAPAN
KOREA		0;"	o	class:Gender\Gender	a:const	S:const Gender\Gender::KOREA
connect		0;"	f	S:boolean function connect($dsn)	class:Gender\Gender
__construct		0;"	f	S: function __construct($dsn)	class:Gender\Gender
country		0;"	f	S:array function country($country)	class:Gender\Gender
get		0;"	f	S:integer function get($name, $country)	class:Gender\Gender
isNick		0;"	f	S:array function isNick($name0, $name1, $country)	class:Gender\Gender
similarNames		0;"	f	S:array function similarNames($name, $country)	class:Gender\Gender
bind_textdomain_codeset		0;"	f	S:string function bind_textdomain_codeset($domain, $codeset)
bindtextdomain		0;"	f	S:string function bindtextdomain($domain, $directory)
dcgettext		0;"	f	S:string function dcgettext($domain, $message, $category)
dcngettext		0;"	f	S:string function dcngettext($domain, $msgid1, $msgid2, $n, $category)
dgettext		0;"	f	S:string function dgettext($domain, $message)
dngettext		0;"	f	S:string function dngettext($domain, $msgid1, $msgid2, $n)
gettext		0;"	f	S:string function gettext($message)
ngettext		0;"	f	S:string function ngettext($msgid1, $msgid2, $n)
textdomain		0;"	f	S:string function textdomain($text_domain)
iconv_get_encoding		0;"	f	S:mixed function iconv_get_encoding($type = "all")
iconv_mime_decode_headers		0;"	f	S:array function iconv_mime_decode_headers($encoded_headers, $mode, $charset = ini_get("iconv.internal_encoding"))
iconv_mime_decode		0;"	f	S:string function iconv_mime_decode($encoded_header, $mode, $charset = ini_get("iconv.internal_encoding"))
iconv_mime_encode		0;"	f	S:string function iconv_mime_encode($field_name, $field_value, $preferences)
iconv_set_encoding		0;"	f	S:bool function iconv_set_encoding($type, $charset)
iconv_strlen		0;"	f	S:int function iconv_strlen($str, $charset = ini_get("iconv.internal_encoding"))
iconv_strpos		0;"	f	S:int function iconv_strpos($haystack, $needle, $offset, $charset = ini_get("iconv.internal_encoding"))
iconv_strrpos		0;"	f	S:int function iconv_strrpos($haystack, $needle, $charset = ini_get("iconv.internal_encoding"))
iconv_substr		0;"	f	S:string function iconv_substr($str, $offset, $length = iconv_strlen($str, $charset), $charset = ini_get("iconv.internal_encoding"))
iconv		0;"	f	S:string function iconv($in_charset, $out_charset, $str)
ob_iconv_handler		0;"	f	S:string function ob_iconv_handler($contents, $status)
INTL_MAX_LOCALE_LEN		0;"	d
IDNA_DEFAULT		0;"	d
IDNA_ALLOW_UNASSIGNED		0;"	d
IDNA_USE_STD3_RULES		0;"	d
IDNA_CHECK_BIDI		0;"	d
IDNA_CHECK_CONTEXTJ		0;"	d
IDNA_NONTRANSITIONAL_TO_ASCII		0;"	d
IDNA_NONTRANSITIONAL_TO_UNICODE		0;"	d
INTL_IDNA_VARIANT_2003		0;"	d
INTL_IDNA_VARIANT_UTS46		0;"	d
IDNA_ERROR_CONTEXTJ		0;"	d
Collator		0;"	c
asort		0;"	f	S:bool function asort(&$arr, $sort_flag, $coll)	class:Collator
compare		0;"	f	S:int function compare($str1, $str2, $coll)	class:Collator
__construct		0;"	f	S: function __construct($locale)	class:Collator
create		0;"	f	S:Collator function create($locale)	class:Collator	a:static
getAttribute		0;"	f	S:int function getAttribute($attr, $coll)	class:Collator
getErrorCode		0;"	f	S:int function getErrorCode($coll)	class:Collator
getErrorMessage		0;"	f	S:string function getErrorMessage($coll)	class:Collator
getLocale		0;"	f	S:string function getLocale($type, $coll)	class:Collator
getSortKey		0;"	f	S:string function getSortKey($str, $coll)	class:Collator
getStrength		0;"	f	S:int function getStrength($coll)	class:Collator
setAttribute		0;"	f	S:bool function setAttribute($attr, $val, $coll)	class:Collator
setStrength		0;"	f	S:bool function setStrength($strength, $coll)	class:Collator
sortWithSortKeys		0;"	f	S:bool function sortWithSortKeys(&$arr, $coll)	class:Collator
sort		0;"	f	S:bool function sort(&$arr, $sort_flag, $coll)	class:Collator
NumberFormatter		0;"	c
create		0;"	f	S:NumberFormatter function create($locale, $style, $pattern)	class:NumberFormatter	a:static
formatCurrency		0;"	f	S:string function formatCurrency($value, $currency, $fmt)	class:NumberFormatter
format		0;"	f	S:string function format($value, $type, $fmt)	class:NumberFormatter
getAttribute		0;"	f	S:int function getAttribute($attr, $fmt)	class:NumberFormatter
getErrorCode		0;"	f	S:int function getErrorCode($fmt)	class:NumberFormatter
getErrorMessage		0;"	f	S:string function getErrorMessage($fmt)	class:NumberFormatter
getLocale		0;"	f	S:string function getLocale($type, $fmt)	class:NumberFormatter
getPattern		0;"	f	S:string function getPattern($fmt)	class:NumberFormatter
getSymbol		0;"	f	S:string function getSymbol($attr, $fmt)	class:NumberFormatter
getTextAttribute		0;"	f	S:string function getTextAttribute($attr, $fmt)	class:NumberFormatter
parseCurrency		0;"	f	S:float function parseCurrency($value, &$currency, &$position, $fmt)	class:NumberFormatter
parse		0;"	f	S:mixed function parse($value, $type, &$position, $fmt)	class:NumberFormatter
setAttribute		0;"	f	S:bool function setAttribute($attr, $value, $fmt)	class:NumberFormatter
setPattern		0;"	f	S:bool function setPattern($pattern, $fmt)	class:NumberFormatter
setSymbol		0;"	f	S:bool function setSymbol($attr, $value, $fmt)	class:NumberFormatter
setTextAttribute		0;"	f	S:bool function setTextAttribute($attr, $value, $fmt)	class:NumberFormatter
Locale		0;"	c
acceptFromHttp		0;"	f	S:string function acceptFromHttp($header)	class:Locale	a:static
canonicalize		0;"	f	S:string function canonicalize($locale)	class:Locale	a:static
composeLocale		0;"	f	S:string function composeLocale($subtags)	class:Locale	a:static
filterMatches		0;"	f	S:bool function filterMatches($langtag, $locale, $canonicalize = false)	class:Locale	a:static
getAllVariants		0;"	f	S:array function getAllVariants($locale)	class:Locale	a:static
getDefault		0;"	f	S:string function getDefault()	class:Locale	a:static
getDisplayLanguage		0;"	f	S:string function getDisplayLanguage($locale, $in_locale)	class:Locale	a:static
getDisplayName		0;"	f	S:string function getDisplayName($locale, $in_locale)	class:Locale	a:static
getDisplayRegion		0;"	f	S:string function getDisplayRegion($locale, $in_locale)	class:Locale	a:static
getDisplayScript		0;"	f	S:string function getDisplayScript($locale, $in_locale)	class:Locale	a:static
getDisplayVariant		0;"	f	S:string function getDisplayVariant($locale, $in_locale)	class:Locale	a:static
getKeywords		0;"	f	S:array function getKeywords($locale)	class:Locale	a:static
getPrimaryLanguage		0;"	f	S:string function getPrimaryLanguage($locale)	class:Locale	a:static
getRegion		0;"	f	S:string function getRegion($locale)	class:Locale	a:static
getScript		0;"	f	S:string function getScript($locale)	class:Locale	a:static
lookup		0;"	f	S:string function lookup($langtag, $locale, $canonicalize = false, $default)	class:Locale	a:static
parseLocale		0;"	f	S:array function parseLocale($locale)	class:Locale	a:static
setDefault		0;"	f	S:bool function setDefault($locale)	class:Locale	a:static
Normalizer		0;"	c
isNormalized		0;"	f	S:bool function isNormalized($input, $form = Normalizer::FORM_C)	class:Normalizer	a:static
normalize		0;"	f	S:string function normalize($input, $form = Normalizer::FORM_C)	class:Normalizer	a:static
MessageFormatter		0;"	c
create		0;"	f	S:MessageFormatter function create($locale, $pattern)	class:MessageFormatter	a:static
formatMessage		0;"	f	S:string function formatMessage($locale, $pattern, $args)	class:MessageFormatter	a:static
format		0;"	f	S:string function format($args, $fmt)	class:MessageFormatter
getErrorCode		0;"	f	S:int function getErrorCode($fmt)	class:MessageFormatter
getErrorMessage		0;"	f	S:string function getErrorMessage($fmt)	class:MessageFormatter
getLocale		0;"	f	S:string function getLocale($formatter)	class:MessageFormatter
getPattern		0;"	f	S:string function getPattern($fmt)	class:MessageFormatter
parseMessage		0;"	f	S:array function parseMessage($locale, $pattern, $source, $value)	class:MessageFormatter	a:static
parse		0;"	f	S:array function parse($value, $fmt)	class:MessageFormatter
setPattern		0;"	f	S:bool function setPattern($pattern, $fmt)	class:MessageFormatter
IntlCalendar		0;"	c
FIELD_ERA		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_ERA
FIELD_YEAR		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_YEAR
FIELD_MONTH		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_MONTH
FIELD_WEEK_OF_YEAR		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_WEEK_OF_YEAR
FIELD_WEEK_OF_MONTH		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_WEEK_OF_MONTH
FIELD_DATE		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DATE
FIELD_DAY_OF_YEAR		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DAY_OF_YEAR
FIELD_DAY_OF_WEEK		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DAY_OF_WEEK
FIELD_DAY_OF_WEEK_IN_MONTH		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DAY_OF_WEEK_IN_MONTH
FIELD_AM_PM		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_AM_PM
FIELD_HOUR		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_HOUR
FIELD_HOUR_OF_DAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_HOUR_OF_DAY
FIELD_MINUTE		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_MINUTE
FIELD_SECOND		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_SECOND
FIELD_MILLISECOND		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_MILLISECOND
FIELD_ZONE_OFFSET		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_ZONE_OFFSET
FIELD_DST_OFFSET		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DST_OFFSET
FIELD_YEAR_WOY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_YEAR_WOY
FIELD_DOW_LOCAL		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DOW_LOCAL
FIELD_EXTENDED_YEAR		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_EXTENDED_YEAR
FIELD_JULIAN_DAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_JULIAN_DAY
FIELD_MILLISECONDS_IN_DAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_MILLISECONDS_IN_DAY
FIELD_IS_LEAP_MONTH		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_IS_LEAP_MONTH
FIELD_FIELD_COUNT 		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_FIELD_COUNT
FIELD_DAY_OF_MONTH		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::FIELD_DAY_OF_MONTH
DOW_SUNDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_SUNDAY
DOW_MONDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_MONDAY
DOW_TUESDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_TUESDAY
DOW_WEDNESDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_WEDNESDAY
DOW_THURSDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_THURSDAY
DOW_FRIDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_FRIDAY
DOW_SATURDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_SATURDAY
DOW_TYPE_WEEKDAY		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_TYPE_WEEKDAY
DOW_TYPE_WEEKEND		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_TYPE_WEEKEND
DOW_TYPE_WEEKEND_OFFSET		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_TYPE_WEEKEND_OFFSET
DOW_TYPE_WEEKEND_CEASE		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::DOW_TYPE_WEEKEND_CEASE
WALLTIME_FIRST		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::WALLTIME_FIRST
WALLTIME_LAST		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::WALLTIME_LAST
WALLTIME_NEXT_VALID		0;"	o	class:IntlCalendar	a:const	S:const IntlCalendar::WALLTIME_NEXT_VALID
add		0;"	f	S:bool function add($field, $amount, $cal)	class:IntlCalendar
after		0;"	f	S:bool function after($other, $cal)	class:IntlCalendar
before		0;"	f	S:bool function before($other, $cal)	class:IntlCalendar
clear		0;"	f	S:bool function clear($field = NULL, $cal)	class:IntlCalendar
__construct		0;"	f	S: function __construct()	class:IntlCalendar	a:private
createInstance		0;"	f	S:IntlCalendar function createInstance($timeZone = NULL, $locale = "")	class:IntlCalendar	a:static
equals		0;"	f	S:bool function equals($other, $cal)	class:IntlCalendar
fieldDifference		0;"	f	S:int function fieldDifference($when, $field, $cal)	class:IntlCalendar
fromDateTime		0;"	f	S:IntlCalendar function fromDateTime($dateTime)	class:IntlCalendar	a:static
get		0;"	f	S:int function get($field, $cal)	class:IntlCalendar
getActualMaximum		0;"	f	S:int function getActualMaximum($field, $cal)	class:IntlCalendar
getActualMinimum		0;"	f	S:int function getActualMinimum($field, $cal)	class:IntlCalendar
getAvailableLocales		0;"	f	S:array function getAvailableLocales()	class:IntlCalendar	a:static
getDayOfWeekType		0;"	f	S:int function getDayOfWeekType($dayOfWeek, $cal)	class:IntlCalendar
getErrorCode		0;"	f	S:int function getErrorCode($calendar)	class:IntlCalendar
getErrorMessage		0;"	f	S:string function getErrorMessage($calendar)	class:IntlCalendar
getFirstDayOfWeek		0;"	f	S:int function getFirstDayOfWeek($cal)	class:IntlCalendar
getGreatestMinimum		0;"	f	S:int function getGreatestMinimum($field, $cal)	class:IntlCalendar
getKeywordValuesForLocale		0;"	f	S:Iterator function getKeywordValuesForLocale($key, $locale, $commonlyUsed)	class:IntlCalendar	a:static
getLeastMaximum		0;"	f	S:int function getLeastMaximum($field, $cal)	class:IntlCalendar
getLocale		0;"	f	S:string function getLocale($localeType, $cal)	class:IntlCalendar
getMaximum		0;"	f	S:int function getMaximum($field, $cal)	class:IntlCalendar
getMinimalDaysInFirstWeek		0;"	f	S:int function getMinimalDaysInFirstWeek($cal)	class:IntlCalendar
getMinimum		0;"	f	S:int function getMinimum($field, $cal)	class:IntlCalendar
getNow		0;"	f	S:float function getNow()	class:IntlCalendar	a:static
getRepeatedWallTimeOption		0;"	f	S:int function getRepeatedWallTimeOption($cal)	class:IntlCalendar
getSkippedWallTimeOption		0;"	f	S:int function getSkippedWallTimeOption($cal)	class:IntlCalendar
getTime		0;"	f	S:float function getTime($cal)	class:IntlCalendar
getTimeZone		0;"	f	S:IntlTimeZone function getTimeZone($cal)	class:IntlCalendar
getType		0;"	f	S:string function getType($cal)	class:IntlCalendar
getWeekendTransition		0;"	f	S:int function getWeekendTransition($dayOfWeek, $cal)	class:IntlCalendar
inDaylightTime		0;"	f	S:bool function inDaylightTime($cal)	class:IntlCalendar
isEquivalentTo		0;"	f	S:bool function isEquivalentTo($other, $cal)	class:IntlCalendar
isLenient		0;"	f	S:bool function isLenient($cal)	class:IntlCalendar
isSet		0;"	f	S:bool function isSet($field, $cal)	class:IntlCalendar
isWeekend		0;"	f	S:bool function isWeekend($date = NULL, $cal)	class:IntlCalendar
roll		0;"	f	S:bool function roll($field, $amountOrUpOrDown, $cal)	class:IntlCalendar
set		0;"	f	S:bool function set($field, $value, $year, $month, $dayOfMonth = NULL, $hour = NULL, $minute = NULL, $second = NULL, $cal)	class:IntlCalendar
setFirstDayOfWeek		0;"	f	S:bool function setFirstDayOfWeek($dayOfWeek, $cal)	class:IntlCalendar
setLenient		0;"	f	S:ReturnType function setLenient($isLenient, $cal)	class:IntlCalendar
setMinimalDaysInFirstWeek		0;"	f	S:bool function setMinimalDaysInFirstWeek($minimalDays, $cal)	class:IntlCalendar
setRepeatedWallTimeOption		0;"	f	S:bool function setRepeatedWallTimeOption($wallTimeOption, $cal)	class:IntlCalendar
setSkippedWallTimeOption		0;"	f	S:bool function setSkippedWallTimeOption($wallTimeOption, $cal)	class:IntlCalendar
setTime		0;"	f	S:float function setTime($date, $cal)	class:IntlCalendar
setTimeZone		0;"	f	S:bool function setTimeZone($timeZone, $cal)	class:IntlCalendar
toDateTime		0;"	f	S:DateTime function toDateTime($cal)	class:IntlCalendar
IntlTimeZone		0;"	c
DISPLAY_SHORT		0;"	o	class:IntlTimeZone	a:const	S:const IntlTimeZone::DISPLAY_SHORT
DISPLAY_LONG		0;"	o	class:IntlTimeZone	a:const	S:const IntlTimeZone::DISPLAY_LONG
countEquivalentIDs		0;"	f	S:integer function countEquivalentIDs($zoneId)	class:IntlTimeZone	a:static
createDefault		0;"	f	S:IntlTimeZone function createDefault()	class:IntlTimeZone	a:static
createEnumeration		0;"	f	S:IntlIterator function createEnumeration($countryOrRawOffset)	class:IntlTimeZone	a:static
createTimeZone		0;"	f	S:IntlTimeZone function createTimeZone($zoneId)	class:IntlTimeZone	a:static
fromDateTimeZone		0;"	f	S:IntlTimeZone function fromDateTimeZone($zoneId)	class:IntlTimeZone	a:static
getCanonicalID		0;"	f	S:string function getCanonicalID($zoneId, &$isSystemID)	class:IntlTimeZone	a:static
getDisplayName		0;"	f	S:string function getDisplayName($isDaylight, $style, $locale)	class:IntlTimeZone
getDSTSavings		0;"	f	S:integer function getDSTSavings()	class:IntlTimeZone
getEquivalentID		0;"	f	S:string function getEquivalentID($zoneId, $index)	class:IntlTimeZone	a:static
getErrorCode		0;"	f	S:integer function getErrorCode()	class:IntlTimeZone
getErrorMessage		0;"	f	S:string function getErrorMessage()	class:IntlTimeZone
getGMT		0;"	f	S:IntlTimeZone function getGMT()	class:IntlTimeZone	a:static
getID		0;"	f	S:string function getID()	class:IntlTimeZone
getOffset		0;"	f	S:integer function getOffset($date, $local, &$rawOffset, &$dstOffset)	class:IntlTimeZone
getRawOffset		0;"	f	S:integer function getRawOffset()	class:IntlTimeZone
getTZDataVersion		0;"	f	S:string function getTZDataVersion()	class:IntlTimeZone	a:static
hasSameRules		0;"	f	S:bool function hasSameRules($otherTimeZone)	class:IntlTimeZone
toDateTimeZone		0;"	f	S:DateTimeZone function toDateTimeZone()	class:IntlTimeZone
useDaylightTime		0;"	f	S:bool function useDaylightTime()	class:IntlTimeZone
IntlDateFormatter		0;"	c
create		0;"	f	S:IntlDateFormatter function create($locale, $datetype, $timetype, $timezone = NULL, $calendar = NULL, $pattern = "")	class:IntlDateFormatter	a:static
format		0;"	f	S:string function format($value, $fmt)	class:IntlDateFormatter
formatObject		0;"	f	S:string function formatObject($object, $format = NULL, $locale = NULL)	class:IntlDateFormatter	a:static
getCalendar		0;"	f	S:int function getCalendar($fmt)	class:IntlDateFormatter
getDateType		0;"	f	S:int function getDateType($fmt)	class:IntlDateFormatter
getErrorCode		0;"	f	S:int function getErrorCode($fmt)	class:IntlDateFormatter
getErrorMessage		0;"	f	S:string function getErrorMessage($fmt)	class:IntlDateFormatter
getLocale		0;"	f	S:string function getLocale($which, $fmt)	class:IntlDateFormatter
getPattern		0;"	f	S:string function getPattern($fmt)	class:IntlDateFormatter
getTimeType		0;"	f	S:int function getTimeType($fmt)	class:IntlDateFormatter
getTimeZoneId		0;"	f	S:string function getTimeZoneId($fmt)	class:IntlDateFormatter
getCalendarObject		0;"	f	S:IntlCalendar function getCalendarObject()	class:IntlDateFormatter
getTimeZone		0;"	f	S:IntlTimeZone function getTimeZone()	class:IntlDateFormatter
isLenient		0;"	f	S:bool function isLenient($fmt)	class:IntlDateFormatter
localtime		0;"	f	S:array function localtime($value, &$position, $fmt)	class:IntlDateFormatter
parse		0;"	f	S:int function parse($value, &$position, $fmt)	class:IntlDateFormatter
setCalendar		0;"	f	S:bool function setCalendar($which, $fmt)	class:IntlDateFormatter
setLenient		0;"	f	S:bool function setLenient($lenient, $fmt)	class:IntlDateFormatter
setPattern		0;"	f	S:bool function setPattern($pattern, $fmt)	class:IntlDateFormatter
setTimeZoneId		0;"	f	S:bool function setTimeZoneId($zone, $fmt)	class:IntlDateFormatter
setTimeZone		0;"	f	S:boolean function setTimeZone($zone)	class:IntlDateFormatter
ResourceBundle		0;"	c
count		0;"	f	S:int function count($r)	class:ResourceBundle
create		0;"	f	S:ResourceBundle function create($locale, $bundlename, $fallback)	class:ResourceBundle	a:static
getErrorCode		0;"	f	S:int function getErrorCode($r)	class:ResourceBundle
getErrorMessage		0;"	f	S:string function getErrorMessage($r)	class:ResourceBundle
get		0;"	f	S:mixed function get($index, $r)	class:ResourceBundle
getLocales		0;"	f	S:array function getLocales($bundlename)	class:ResourceBundle
Spoofchecker		0;"	c
SINGLE_SCRIPT_CONFUSABLE		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::SINGLE_SCRIPT_CONFUSABLE
MIXED_SCRIPT_CONFUSABLE		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::MIXED_SCRIPT_CONFUSABLE
WHOLE_SCRIPT_CONFUSABLE		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::WHOLE_SCRIPT_CONFUSABLE
ANY_CASE		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::ANY_CASE
SINGLE_SCRIPT		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::SINGLE_SCRIPT
INVISIBLE		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::INVISIBLE
CHAR_LIMIT		0;"	o	class:Spoofchecker	a:const	S:const Spoofchecker::CHAR_LIMIT
areConfusable		0;"	f	S:bool function areConfusable($s1, $s2, &$error)	class:Spoofchecker
__construct		0;"	f	S: function __construct()	class:Spoofchecker
isSuspicious		0;"	f	S:bool function isSuspicious($text, &$error)	class:Spoofchecker
setAllowedLocales		0;"	f	S:void function setAllowedLocales($locale_list)	class:Spoofchecker
setChecks		0;"	f	S:void function setChecks($checks)	class:Spoofchecker
Transliterator		0;"	c
FORWARD		0;"	o	class:Transliterator	a:const	S:const Transliterator::FORWARD
REVERSE		0;"	o	class:Transliterator	a:const	S:const Transliterator::REVERSE
id		0;"	p	class:Transliterator	S: Transliterator::id
__construct		0;"	f	S: function __construct()	class:Transliterator
create		0;"	f	S:Transliterator function create($id, $direction)	class:Transliterator	a:static
createFromRules		0;"	f	S:Transliterator function createFromRules($rules, $direction, $id)	class:Transliterator	a:static
createInverse		0;"	f	S:Transliterator function createInverse()	class:Transliterator
getErrorCode		0;"	f	S:int function getErrorCode()	class:Transliterator
getErrorMessage		0;"	f	S:string function getErrorMessage()	class:Transliterator
listIDs		0;"	f	S:array function listIDs()	class:Transliterator	a:static
transliterate		0;"	f	S:string function transliterate($subject, $start, $end, $transliterator)	class:Transliterator
IntlBreakIterator		0;"	c
DONE		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::DONE
WORD_NONE		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_NONE
WORD_NONE_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_NONE_LIMIT
WORD_NUMBER		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_NUMBER
WORD_NUMBER_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_NUMBER_LIMIT
WORD_LETTER		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_LETTER
WORD_LETTER_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_LETTER_LIMIT
WORD_KANA		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_KANA
WORD_KANA_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_KANA_LIMIT
WORD_IDEO		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_IDEO
WORD_IDEO_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::WORD_IDEO_LIMIT
LINE_SOFT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::LINE_SOFT
LINE_SOFT_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::LINE_SOFT_LIMIT
LINE_HARD		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::LINE_HARD
LINE_HARD_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::LINE_HARD_LIMIT
SENTENCE_TERM		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::SENTENCE_TERM
SENTENCE_TERM_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::SENTENCE_TERM_LIMIT
SENTENCE_SEP		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::SENTENCE_SEP
SENTENCE_SEP_LIMIT		0;"	o	class:IntlBreakIterator	a:const	S:const IntlBreakIterator::SENTENCE_SEP_LIMIT
__construct		0;"	f	S: function __construct()	class:IntlBreakIterator	a:private
createCharacterInstance		0;"	f	S:ReturnType function createCharacterInstance($"locale")	class:IntlBreakIterator	a:static
createCodePointInstance		0;"	f	S:ReturnType function createCodePointInstance()	class:IntlBreakIterator	a:static
createLineInstance		0;"	f	S:ReturnType function createLineInstance($"locale")	class:IntlBreakIterator	a:static
createSentenceInstance		0;"	f	S:ReturnType function createSentenceInstance($"locale")	class:IntlBreakIterator	a:static
createTitleInstance		0;"	f	S:ReturnType function createTitleInstance($"locale")	class:IntlBreakIterator	a:static
createWordInstance		0;"	f	S:ReturnType function createWordInstance($"locale")	class:IntlBreakIterator	a:static
current		0;"	f	S:ReturnType function current()	class:IntlBreakIterator
first		0;"	f	S:ReturnType function first()	class:IntlBreakIterator
following		0;"	f	S:ReturnType function following($"offset")	class:IntlBreakIterator
getErrorCode		0;"	f	S:ReturnType function getErrorCode()	class:IntlBreakIterator
getErrorMessage		0;"	f	S:ReturnType function getErrorMessage()	class:IntlBreakIterator
getLocale		0;"	f	S:ReturnType function getLocale($"locale_type")	class:IntlBreakIterator
getPartsIterator		0;"	f	S:ReturnType function getPartsIterator($"key_type")	class:IntlBreakIterator
getText		0;"	f	S:ReturnType function getText()	class:IntlBreakIterator
isBoundary		0;"	f	S:ReturnType function isBoundary($"offset")	class:IntlBreakIterator
last		0;"	f	S:ReturnType function last()	class:IntlBreakIterator
next		0;"	f	S:ReturnType function next($"offset")	class:IntlBreakIterator
preceding		0;"	f	S:ReturnType function preceding($"offset")	class:IntlBreakIterator
previous		0;"	f	S:ReturnType function previous()	class:IntlBreakIterator
setText		0;"	f	S:ReturnType function setText($"text")	class:IntlBreakIterator
IntlRuleBasedBreakIterator		0;"	c	i:IntlBreakIterator
DONE		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::DONE
WORD_NONE		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_NONE
WORD_NONE_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_NONE_LIMIT
WORD_NUMBER		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_NUMBER
WORD_NUMBER_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_NUMBER_LIMIT
WORD_LETTER		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_LETTER
WORD_LETTER_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_LETTER_LIMIT
WORD_KANA		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_KANA
WORD_KANA_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_KANA_LIMIT
WORD_IDEO		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_IDEO
WORD_IDEO_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::WORD_IDEO_LIMIT
LINE_SOFT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::LINE_SOFT
LINE_SOFT_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::LINE_SOFT_LIMIT
LINE_HARD		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::LINE_HARD
LINE_HARD_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::LINE_HARD_LIMIT
SENTENCE_TERM		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::SENTENCE_TERM
SENTENCE_TERM_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::SENTENCE_TERM_LIMIT
SENTENCE_SEP		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::SENTENCE_SEP
SENTENCE_SEP_LIMIT		0;"	o	class:IntlRuleBasedBreakIterator	a:const	S:const IntlRuleBasedBreakIterator::SENTENCE_SEP_LIMIT
__construct		0;"	f	S: function __construct($rules, $areCompiled)	class:IntlRuleBasedBreakIterator
getBinaryRules		0;"	f	S:ReturnType function getBinaryRules()	class:IntlRuleBasedBreakIterator
getRules		0;"	f	S:ReturnType function getRules()	class:IntlRuleBasedBreakIterator
getRuleStatus		0;"	f	S:ReturnType function getRuleStatus()	class:IntlRuleBasedBreakIterator
getRuleStatusVec		0;"	f	S:ReturnType function getRuleStatusVec()	class:IntlRuleBasedBreakIterator
IntlCodePointBreakIterator		0;"	c	i:IntlBreakIterator
DONE		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::DONE
WORD_NONE		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_NONE
WORD_NONE_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_NONE_LIMIT
WORD_NUMBER		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_NUMBER
WORD_NUMBER_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_NUMBER_LIMIT
WORD_LETTER		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_LETTER
WORD_LETTER_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_LETTER_LIMIT
WORD_KANA		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_KANA
WORD_KANA_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_KANA_LIMIT
WORD_IDEO		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_IDEO
WORD_IDEO_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::WORD_IDEO_LIMIT
LINE_SOFT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::LINE_SOFT
LINE_SOFT_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::LINE_SOFT_LIMIT
LINE_HARD		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::LINE_HARD
LINE_HARD_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::LINE_HARD_LIMIT
SENTENCE_TERM		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::SENTENCE_TERM
SENTENCE_TERM_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::SENTENCE_TERM_LIMIT
SENTENCE_SEP		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::SENTENCE_SEP
SENTENCE_SEP_LIMIT		0;"	o	class:IntlCodePointBreakIterator	a:const	S:const IntlCodePointBreakIterator::SENTENCE_SEP_LIMIT
getLastCodePoint		0;"	f	S:ReturnType function getLastCodePoint()	class:IntlCodePointBreakIterator
IntlPartsIterator		0;"	c	i:IntlIterator
KEY_SEQUENTIAL		0;"	o	class:IntlPartsIterator	a:const	S:const IntlPartsIterator::KEY_SEQUENTIAL
KEY_LEFT		0;"	o	class:IntlPartsIterator	a:const	S:const IntlPartsIterator::KEY_LEFT
KEY_RIGHT		0;"	o	class:IntlPartsIterator	a:const	S:const IntlPartsIterator::KEY_RIGHT
getBreakIterator		0;"	f	S:ReturnType function getBreakIterator()	class:IntlPartsIterator
UConverter		0;"	c
REASON_UNASSIGNED		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_UNASSIGNED
REASON_ILLEGAL		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_ILLEGAL
REASON_IRREGULAR		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_IRREGULAR
REASON_RESET		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_RESET
REASON_CLOSE		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_CLOSE
REASON_CLONE		0;"	o	class:UConverter	a:const	S:const UConverter::REASON_CLONE
UNSUPPORTED_CONVERTER		0;"	o	class:UConverter	a:const	S:const UConverter::UNSUPPORTED_CONVERTER
SBCS		0;"	o	class:UConverter	a:const	S:const UConverter::SBCS
DBCS		0;"	o	class:UConverter	a:const	S:const UConverter::DBCS
MBCS		0;"	o	class:UConverter	a:const	S:const UConverter::MBCS
LATIN_1		0;"	o	class:UConverter	a:const	S:const UConverter::LATIN_1
UTF8		0;"	o	class:UConverter	a:const	S:const UConverter::UTF8
UTF16_BigEndian		0;"	o	class:UConverter	a:const	S:const UConverter::UTF16_BigEndian
UTF16_LittleEndian		0;"	o	class:UConverter	a:const	S:const UConverter::UTF16_LittleEndian
UTF32_BigEndian		0;"	o	class:UConverter	a:const	S:const UConverter::UTF32_BigEndian
UTF32_LittleEndian		0;"	o	class:UConverter	a:const	S:const UConverter::UTF32_LittleEndian
EBCDIC_STATEFUL		0;"	o	class:UConverter	a:const	S:const UConverter::EBCDIC_STATEFUL
ISO_2022		0;"	o	class:UConverter	a:const	S:const UConverter::ISO_2022
LMBCS_1		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_1
LMBCS_2		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_2
LMBCS_3		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_3
LMBCS_4		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_4
LMBCS_5		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_5
LMBCS_6		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_6
LMBCS_8		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_8
LMBCS_11		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_11
LMBCS_16		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_16
LMBCS_17		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_17
LMBCS_18		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_18
LMBCS_19		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_19
LMBCS_LAST		0;"	o	class:UConverter	a:const	S:const UConverter::LMBCS_LAST
HZ		0;"	o	class:UConverter	a:const	S:const UConverter::HZ
SCSU		0;"	o	class:UConverter	a:const	S:const UConverter::SCSU
ISCII		0;"	o	class:UConverter	a:const	S:const UConverter::ISCII
US_ASCII		0;"	o	class:UConverter	a:const	S:const UConverter::US_ASCII
UTF7		0;"	o	class:UConverter	a:const	S:const UConverter::UTF7
BOCU1		0;"	o	class:UConverter	a:const	S:const UConverter::BOCU1
UTF16		0;"	o	class:UConverter	a:const	S:const UConverter::UTF16
UTF32		0;"	o	class:UConverter	a:const	S:const UConverter::UTF32
CESU8		0;"	o	class:UConverter	a:const	S:const UConverter::CESU8
IMAP_MAILBOX		0;"	o	class:UConverter	a:const	S:const UConverter::IMAP_MAILBOX
__construct		0;"	f	S: function __construct($destination_encoding, $source_encoding)	class:UConverter
convert		0;"	f	S:string function convert($str, $reverse)	class:UConverter
fromUCallback		0;"	f	S:mixed function fromUCallback($reason, $source, $codePoint, &$error)	class:UConverter
getAliases		0;"	f	S:array function getAliases($name)	class:UConverter	a:static
getAvailable		0;"	f	S:array function getAvailable()	class:UConverter	a:static
getDestinationEncoding		0;"	f	S:string function getDestinationEncoding()	class:UConverter
getDestinationType		0;"	f	S:integer function getDestinationType()	class:UConverter
getErrorCode		0;"	f	S:integer function getErrorCode()	class:UConverter
getErrorMessage		0;"	f	S:string function getErrorMessage()	class:UConverter
getSourceEncoding		0;"	f	S:string function getSourceEncoding()	class:UConverter
getSourceType		0;"	f	S:integer function getSourceType()	class:UConverter
getStandards		0;"	f	S:array function getStandards()	class:UConverter	a:static
getSubstChars		0;"	f	S:string function getSubstChars()	class:UConverter
reasonText		0;"	f	S:string function reasonText($reason)	class:UConverter	a:static
setDestinationEncoding		0;"	f	S:void function setDestinationEncoding($encoding)	class:UConverter
setSourceEncoding		0;"	f	S:void function setSourceEncoding($encoding)	class:UConverter
setSubstChars		0;"	f	S:void function setSubstChars($chars)	class:UConverter
toUCallback		0;"	f	S:mixed function toUCallback($reason, $source, $codeUnits, &$error)	class:UConverter
transcode		0;"	f	S:string function transcode($str, $toEncoding, $fromEncoding, $options)	class:UConverter	a:static
grapheme_extract		0;"	f	S:string function grapheme_extract($haystack, $size, $extract_type, $start, &$next)
grapheme_stripos		0;"	f	S:int function grapheme_stripos($haystack, $needle, $offset)
grapheme_stristr		0;"	f	S:string function grapheme_stristr($haystack, $needle, $before_needle = false)
grapheme_strlen		0;"	f	S:int function grapheme_strlen($input)
grapheme_strpos		0;"	f	S:int function grapheme_strpos($haystack, $needle, $offset)
grapheme_strripos		0;"	f	S:int function grapheme_strripos($haystack, $needle, $offset)
grapheme_strrpos		0;"	f	S:int function grapheme_strrpos($haystack, $needle, $offset)
grapheme_strstr		0;"	f	S:string function grapheme_strstr($haystack, $needle, $before_needle = false)
grapheme_substr		0;"	f	S:int function grapheme_substr($string, $start, $length)
idn_to_ascii		0;"	f	S:string function idn_to_ascii($domain, $options, $variant = INTL_IDNA_VARIANT_2003, &$idna_info)
idn_to_unicode		0;"	f	S: function idn_to_unicode()
idn_to_utf8		0;"	f	S:string function idn_to_utf8($domain, $options, $variant = INTL_IDNA_VARIANT_2003, &$idna_info)
IntlException		0;"	c	i:Exception
message		0;"	p	class:IntlException	a:protected	S:protected IntlException::message
code		0;"	p	class:IntlException	a:protected	S:protected IntlException::code
file		0;"	p	class:IntlException	a:protected	S:protected IntlException::file
line		0;"	p	class:IntlException	a:protected	S:protected IntlException::line
IntlIterator		0;"	c
current		0;"	f	S:ReturnType function current()	class:IntlIterator
key		0;"	f	S:ReturnType function key()	class:IntlIterator
next		0;"	f	S:ReturnType function next()	class:IntlIterator
rewind		0;"	f	S:ReturnType function rewind()	class:IntlIterator
valid		0;"	f	S:ReturnType function valid()	class:IntlIterator
intl_error_name		0;"	f	S:string function intl_error_name($error_code)
intl_get_error_code		0;"	f	S:int function intl_get_error_code()
intl_get_error_message		0;"	f	S:string function intl_get_error_message()
intl_is_failure		0;"	f	S:bool function intl_is_failure($error_code)
MB_OVERLOAD_MAIL		0;"	d
MB_OVERLOAD_STRING		0;"	d
MB_OVERLOAD_REGEX		0;"	d
MB_CASE_UPPER		0;"	d
MB_CASE_LOWER		0;"	d
MB_CASE_TITLE		0;"	d
mb_check_encoding		0;"	f	S:bool function mb_check_encoding($var, $encoding = mb_internal_encoding())
mb_convert_case		0;"	f	S:string function mb_convert_case($str, $mode, $encoding = mb_internal_encoding())
mb_convert_encoding		0;"	f	S:string function mb_convert_encoding($str, $to_encoding, $from_encoding = mb_internal_encoding())
mb_convert_kana		0;"	f	S:string function mb_convert_kana($str, $option = "KV", $encoding = mb_internal_encoding())
mb_convert_variables		0;"	f	S:string function mb_convert_variables($to_encoding, $from_encoding, &$vars, &$...)
mb_decode_mimeheader		0;"	f	S:string function mb_decode_mimeheader($str)
mb_decode_numericentity		0;"	f	S:string function mb_decode_numericentity($str, $convmap, $encoding = mb_internal_encoding())
mb_detect_encoding		0;"	f	S:string function mb_detect_encoding($str, $encoding_list = mb_detect_order(), $strict = false)
mb_detect_order		0;"	f	S:mixed function mb_detect_order($encoding_list = mb_detect_order())
mb_encode_mimeheader		0;"	f	S:string function mb_encode_mimeheader($str, $charset = mb_internal_encoding(), $transfer_encoding = "B", $linefeed = "\r\n", $indent)
mb_encode_numericentity		0;"	f	S:string function mb_encode_numericentity($str, $convmap, $encoding = mb_internal_encoding(), $is_hex = FALSE)
mb_encoding_aliases		0;"	f	S:array function mb_encoding_aliases($encoding)
mb_ereg_match		0;"	f	S:bool function mb_ereg_match($pattern, $string, $option = "msr")
mb_ereg_replace_callback		0;"	f	S:string function mb_ereg_replace_callback($pattern, $callback, $string, $option = "msr")
mb_ereg_replace		0;"	f	S:string function mb_ereg_replace($pattern, $replacement, $string, $option = "msr")
mb_ereg_search_getpos		0;"	f	S:int function mb_ereg_search_getpos()
mb_ereg_search_getregs		0;"	f	S:array function mb_ereg_search_getregs()
mb_ereg_search_init		0;"	f	S:bool function mb_ereg_search_init($string, $pattern, $option = "msr")
mb_ereg_search_pos		0;"	f	S:array function mb_ereg_search_pos($pattern, $option = "ms")
mb_ereg_search_regs		0;"	f	S:array function mb_ereg_search_regs($pattern, $option = "ms")
mb_ereg_search_setpos		0;"	f	S:bool function mb_ereg_search_setpos($position)
mb_ereg_search		0;"	f	S:bool function mb_ereg_search($pattern, $option = "ms")
mb_ereg		0;"	f	S:int function mb_ereg($pattern, $string, $regs)
mb_eregi_replace		0;"	f	S:string function mb_eregi_replace($pattern, $replace, $string, $option = "msri")
mb_eregi		0;"	f	S:int function mb_eregi($pattern, $string, $regs)
mb_get_info		0;"	f	S:mixed function mb_get_info($type = "all")
mb_http_input		0;"	f	S:mixed function mb_http_input($type = "")
mb_http_output		0;"	f	S:mixed function mb_http_output($encoding = mb_http_output())
mb_internal_encoding		0;"	f	S:mixed function mb_internal_encoding($encoding = mb_internal_encoding())
mb_language		0;"	f	S:mixed function mb_language($language = mb_language())
mb_list_encodings		0;"	f	S:array function mb_list_encodings()
mb_output_handler		0;"	f	S:string function mb_output_handler($contents, $status)
mb_parse_str		0;"	f	S:array function mb_parse_str($encoded_string, &$result)
mb_preferred_mime_name		0;"	f	S:string function mb_preferred_mime_name($encoding)
mb_regex_encoding		0;"	f	S:mixed function mb_regex_encoding($encoding = mb_regex_encoding())
mb_regex_set_options		0;"	f	S:string function mb_regex_set_options($options = mb_regex_set_options())
mb_send_mail		0;"	f	S:bool function mb_send_mail($to, $subject, $message, $additional_headers, $additional_parameter)
mb_split		0;"	f	S:array function mb_split($pattern, $string, $limit = -1)
mb_strcut		0;"	f	S:string function mb_strcut($str, $start, $length = NULL, $encoding = mb_internal_encoding())
mb_strimwidth		0;"	f	S:string function mb_strimwidth($str, $start, $width, $trimmarker = "", $encoding = mb_internal_encoding())
mb_stripos		0;"	f	S:int function mb_stripos($haystack, $needle, $offset, $encoding = mb_internal_encoding())
mb_stristr		0;"	f	S:string function mb_stristr($haystack, $needle, $before_needle = false, $encoding = mb_internal_encoding())
mb_strlen		0;"	f	S:string function mb_strlen($str, $encoding = mb_internal_encoding())
mb_strpos		0;"	f	S:string function mb_strpos($haystack, $needle, $offset, $encoding = mb_internal_encoding())
mb_strrchr		0;"	f	S:string function mb_strrchr($haystack, $needle, $part = false, $encoding = mb_internal_encoding())
mb_strrichr		0;"	f	S:string function mb_strrichr($haystack, $needle, $part = false, $encoding = mb_internal_encoding())
mb_strripos		0;"	f	S:int function mb_strripos($haystack, $needle, $offset, $encoding = mb_internal_encoding())
mb_strrpos		0;"	f	S:int function mb_strrpos($haystack, $needle, $offset, $encoding = mb_internal_encoding())
mb_strstr		0;"	f	S:string function mb_strstr($haystack, $needle, $before_needle = false, $encoding = mb_internal_encoding())
mb_strtolower		0;"	f	S:string function mb_strtolower($str, $encoding = mb_internal_encoding())
mb_strtoupper		0;"	f	S:string function mb_strtoupper($str, $encoding = mb_internal_encoding())
mb_strwidth		0;"	f	S:string function mb_strwidth($str, $encoding = mb_internal_encoding())
mb_substitute_character		0;"	f	S:integer function mb_substitute_character($substrchar = mb_substitute_character())
mb_substr_count		0;"	f	S:string function mb_substr_count($haystack, $needle, $encoding = mb_internal_encoding())
mb_substr		0;"	f	S:string function mb_substr($str, $start, $length = NULL, $encoding = mb_internal_encoding())
PSPELL_FAST		0;"	d
PSPELL_NORMAL		0;"	d
PSPELL_BAD_SPELLERS		0;"	d
PSPELL_RUN_TOGETHER		0;"	d
pspell_add_to_personal		0;"	f	S:bool function pspell_add_to_personal($dictionary_link, $word)
pspell_add_to_session		0;"	f	S:bool function pspell_add_to_session($dictionary_link, $word)
pspell_check		0;"	f	S:bool function pspell_check($dictionary_link, $word)
pspell_clear_session		0;"	f	S:bool function pspell_clear_session($dictionary_link)
pspell_config_create		0;"	f	S:int function pspell_config_create($language, $spelling, $jargon, $encoding)
pspell_config_data_dir		0;"	f	S:bool function pspell_config_data_dir($conf, $directory)
pspell_config_dict_dir		0;"	f	S:bool function pspell_config_dict_dir($conf, $directory)
pspell_config_ignore		0;"	f	S:bool function pspell_config_ignore($dictionary_link, $n)
pspell_config_mode		0;"	f	S:bool function pspell_config_mode($dictionary_link, $mode)
pspell_config_personal		0;"	f	S:bool function pspell_config_personal($dictionary_link, $file)
pspell_config_repl		0;"	f	S:bool function pspell_config_repl($dictionary_link, $file)
pspell_config_runtogether		0;"	f	S:bool function pspell_config_runtogether($dictionary_link, $flag)
pspell_config_save_repl		0;"	f	S:bool function pspell_config_save_repl($dictionary_link, $flag)
pspell_new_config		0;"	f	S:int function pspell_new_config($config)
pspell_new_personal		0;"	f	S:int function pspell_new_personal($personal, $language, $spelling, $jargon, $encoding, $mode)
pspell_new		0;"	f	S:int function pspell_new($language, $spelling, $jargon, $encoding, $mode)
pspell_save_wordlist		0;"	f	S:bool function pspell_save_wordlist($dictionary_link)
pspell_store_replacement		0;"	f	S:bool function pspell_store_replacement($dictionary_link, $misspelled, $correct)
pspell_suggest		0;"	f	S:array function pspell_suggest($dictionary_link, $word)
recode_file		0;"	f	S:bool function recode_file($request, $input, $output)
recode_string		0;"	f	S:string function recode_string($request, $string)
recode		0;"	f	S: function recode()
CAIRO_STATUS_SUCCESS		0;"	d
CAIRO_STATUS_NO_MEMORY		0;"	d
CAIRO_STATUS_INVALID_RESTORE		0;"	d
CAIRO_STATUS_INVALID_POP_GROUP		0;"	d
CAIRO_STATUS_NO_CURRENT_POINT		0;"	d
CAIRO_STATUS_INVALID_MATRIX		0;"	d
CAIRO_STATUS_INVALID_STATUS		0;"	d
CAIRO_STATUS_NULL_POINTER		0;"	d
CAIRO_STATUS_INVALID_STRING		0;"	d
CAIRO_STATUS_INVALID_PATH_DATA		0;"	d
CAIRO_STATUS_READ_ERROR		0;"	d
CAIRO_STATUS_WRITE_ERROR		0;"	d
CAIRO_STATUS_SURFACE_FINISHED		0;"	d
CAIRO_STATUS_SURFACE_TYPE_MISMATCH		0;"	d
CAIRO_STATUS_PATTERN_TYPE_MISMATCH		0;"	d
CAIRO_STATUS_INVALID_CONTENT		0;"	d
CAIRO_STATUS_INVALID_FORMAT		0;"	d
CAIRO_STATUS_INVALID_VISUAL		0;"	d
CAIRO_STATUS_FILE_NOT_FOUND		0;"	d
CAIRO_STATUS_INVALID_DASH		0;"	d
CAIRO_STATUS_INVALID_DSC_COMMENT		0;"	d
CAIRO_STATUS_INVALID_INDEX		0;"	d
CAIRO_STATUS_CLIP_NOT_REPRESENTABLE		0;"	d
CAIRO_STATUS_TEMP_FILE_ERROR		0;"	d
CAIRO_STATUS_INVALID_STRIDE		0;"	d
CAIRO_ANTIALIAS_DEFAULT		0;"	d
CAIRO_ANTIALIAS_NONE		0;"	d
CAIRO_ANTIALIAS_GRAY		0;"	d
CAIRO_ANTIALIAS_SUBPIXEL		0;"	d
CAIRO_SUBPIXEL_ORDER_DEFAULT		0;"	d
CAIRO_SUBPIXEL_ORDER_RGB		0;"	d
CAIRO_SUBPIXEL_ORDER_BGR		0;"	d
CAIRO_SUBPIXEL_ORDER_VRGB		0;"	d
CAIRO_SUBPIXEL_ORDER_VBGR		0;"	d
CAIRO_FILL_RULE_WINDING		0;"	d
CAIRO_FILL_RULE_EVEN_ODD		0;"	d
CAIRO_LINE_CAP_BUTT		0;"	d
CAIRO_LINE_CAP_ROUND		0;"	d
CAIRO_LINE_CAP_SQUARE		0;"	d
CAIRO_LINE_JOIN_MITER		0;"	d
CAIRO_LINE_JOIN_ROUND		0;"	d
CAIRO_LINE_JOIN_BEVEL		0;"	d
CAIRO_OPERATOR_CLEAR		0;"	d
CAIRO_OPERATOR_SOURCE		0;"	d
CAIRO_OPERATOR_OVER		0;"	d
CAIRO_OPERATOR_IN		0;"	d
CAIRO_OPERATOR_OUT		0;"	d
CAIRO_OPERATOR_ATOP		0;"	d
CAIRO_OPERATOR_DEST		0;"	d
CAIRO_OPERATOR_DEST_OVER		0;"	d
CAIRO_OPERATOR_DEST_IN		0;"	d
CAIRO_OPERATOR_DEST_OUT		0;"	d
CAIRO_OPERATOR_DEST_ATOP		0;"	d
CAIRO_OPERATOR_XOR		0;"	d
CAIRO_OPERATOR_ADD		0;"	d
CAIRO_OPERATOR_SATURATE		0;"	d
CAIRO_PATTERN_TYPE_SOLID		0;"	d
CAIRO_PATTERN_TYPE_SURFACE		0;"	d
CAIRO_PATTERN_TYPE_LINEAR		0;"	d
CAIRO_PATTERN_TYPE_RADIAL		0;"	d
CAIRO_EXTEND_NONE		0;"	d
CAIRO_EXTEND_REPEAT		0;"	d
CAIRO_EXTEND_REFLECT		0;"	d
CAIRO_EXTEND_PAD		0;"	d
CAIRO_FILTER_FAST		0;"	d
CAIRO_FILTER_GOOD		0;"	d
CAIRO_FILTER_BEST		0;"	d
CAIRO_FILTER_NEAREST		0;"	d
CAIRO_FILTER_BILINEAR		0;"	d
CAIRO_FILTER_GAUSSIAN		0;"	d
CAIRO_HINT_STYLE_DEFAULT		0;"	d
CAIRO_HINT_STYLE_NONE		0;"	d
CAIRO_HINT_STYLE_SLIGHT		0;"	d
CAIRO_HINT_STYLE_MEDIUM		0;"	d
CAIRO_HINT_STYLE_FULL		0;"	d
CAIRO_HINT_METRICS_DEFAULT		0;"	d
CAIRO_HINT_METRICS_OFF		0;"	d
CAIRO_HINT_METRICS_ON		0;"	d
CAIRO_FONT_TYPE_TOY		0;"	d
CAIRO_FONT_TYPE_FT		0;"	d
CAIRO_FONT_TYPE_WIN32		0;"	d
CAIRO_FONT_TYPE_QUARTZ		0;"	d
CAIRO_FONT_SLANT_NORMAL		0;"	d
CAIRO_FONT_SLANT_ITALIC		0;"	d
CAIRO_FONT_SLANT_OBLIQUE		0;"	d
CAIRO_FONT_WEIGHT_NORMAL		0;"	d
CAIRO_FONT_WEIGHT_BOLD		0;"	d
CAIRO_CONTENT_COLOR		0;"	d
CAIRO_CONTENT_ALPHA		0;"	d
CAIRO_CONTENT_COLOR_ALPHA		0;"	d
CAIRO_SURFACE_TYPE_IMAGE		0;"	d
CAIRO_SURFACE_TYPE_PDF		0;"	d
CAIRO_SURFACE_TYPE_PS		0;"	d
CAIRO_SURFACE_TYPE_XLIB		0;"	d
CAIRO_SURFACE_TYPE_XCB		0;"	d
CAIRO_SURFACE_TYPE_GLITZ		0;"	d
CAIRO_SURFACE_TYPE_QUARTZ		0;"	d
CAIRO_SURFACE_TYPE_WIN32		0;"	d
CAIRO_SURFACE_TYPE_BEOS		0;"	d
CAIRO_SURFACE_TYPE_DIRECTFB		0;"	d
CAIRO_SURFACE_TYPE_SVG		0;"	d
CAIRO_SURFACE_TYPE_OS2		0;"	d
CAIRO_SURFACE_TYPE_WIN32_PRINTING		0;"	d
CAIRO_SURFACE_TYPE_QUARTZ_IMAGE		0;"	d
CAIRO_FORMAT_ARGB32		0;"	d
CAIRO_FORMAT_RGB24		0;"	d
CAIRO_FORMAT_A8		0;"	d
CAIRO_FORMAT_A1		0;"	d
CAIRO_PS_LEVEL_2		0;"	d
CAIRO_PS_LEVEL_3		0;"	d
CAIRO_SVG_VERSION_1_1		0;"	d
CAIRO_SVG_VERSION_1_2		0;"	d
cairo_create		0;"	f	S:CairoContext function cairo_create($surface)
cairo_font_face_get_type		0;"	f	S:int function cairo_font_face_get_type($fontface)
cairo_font_face_status		0;"	f	S:int function cairo_font_face_status($fontface)
cairo_font_options_create		0;"	f	S:CairoFontOptions function cairo_font_options_create()
cairo_font_options_equal		0;"	f	S:bool function cairo_font_options_equal($options, $other)
cairo_font_options_get_antialias		0;"	f	S:int function cairo_font_options_get_antialias($options)
cairo_font_options_get_hint_metrics		0;"	f	S:int function cairo_font_options_get_hint_metrics($options)
cairo_font_options_get_hint_style		0;"	f	S:int function cairo_font_options_get_hint_style($options)
cairo_font_options_get_subpixel_order		0;"	f	S:int function cairo_font_options_get_subpixel_order($options)
cairo_font_options_hash		0;"	f	S:int function cairo_font_options_hash($options)
cairo_font_options_merge		0;"	f	S:void function cairo_font_options_merge($options, $other)
cairo_font_options_set_antialias		0;"	f	S:void function cairo_font_options_set_antialias($options, $antialias)
cairo_font_options_set_hint_metrics		0;"	f	S:void function cairo_font_options_set_hint_metrics($options, $hint_metrics)
cairo_font_options_set_hint_style		0;"	f	S:void function cairo_font_options_set_hint_style($options, $hint_style)
cairo_font_options_set_subpixel_order		0;"	f	S:void function cairo_font_options_set_subpixel_order($options, $subpixel_order)
cairo_font_options_status		0;"	f	S:int function cairo_font_options_status($options)
cairo_format_stride_for_width		0;"	f	S:int function cairo_format_stride_for_width($format, $width)
cairo_image_surface_create_for_data		0;"	f	S:CairoImageSurface function cairo_image_surface_create_for_data($data, $format, $width, $height, $stride = -1)
cairo_image_surface_create_from_png		0;"	f	S:CairoImageSurface function cairo_image_surface_create_from_png($file)
cairo_image_surface_create		0;"	f	S:CairoImageSurface function cairo_image_surface_create($format, $width, $height)
cairo_image_surface_get_data		0;"	f	S:string function cairo_image_surface_get_data($surface)
cairo_image_surface_get_format		0;"	f	S:int function cairo_image_surface_get_format($surface)
cairo_image_surface_get_height		0;"	f	S:int function cairo_image_surface_get_height($surface)
cairo_image_surface_get_stride		0;"	f	S:int function cairo_image_surface_get_stride($surface)
cairo_image_surface_get_width		0;"	f	S:int function cairo_image_surface_get_width($surface)
cairo_matrix_create_scale		0;"	f	S: function cairo_matrix_create_scale()
cairo_matrix_create_translate		0;"	f	S: function cairo_matrix_create_translate()
cairo_matrix_invert		0;"	f	S:void function cairo_matrix_invert($matrix)
cairo_matrix_multiply		0;"	f	S:CairoMatrix function cairo_matrix_multiply($matrix1, $matrix2)
cairo_matrix_rotate		0;"	f	S:void function cairo_matrix_rotate($matrix, $radians)
cairo_matrix_transform_distance		0;"	f	S:array function cairo_matrix_transform_distance($matrix, $dx, $dy)
cairo_matrix_transform_point		0;"	f	S:array function cairo_matrix_transform_point($matrix, $dx, $dy)
cairo_matrix_translate		0;"	f	S:void function cairo_matrix_translate($matrix, $tx, $ty)
cairo_pattern_add_color_stop_rgb		0;"	f	S:void function cairo_pattern_add_color_stop_rgb($pattern, $offset, $red, $green, $blue)
cairo_pattern_add_color_stop_rgba		0;"	f	S:void function cairo_pattern_add_color_stop_rgba($pattern, $offset, $red, $green, $blue, $alpha)
cairo_pattern_create_for_surface		0;"	f	S:CairoPattern function cairo_pattern_create_for_surface($surface)
cairo_pattern_create_linear		0;"	f	S:CairoPattern function cairo_pattern_create_linear($x0, $y0, $x1, $y1)
cairo_pattern_create_radial		0;"	f	S:CairoPattern function cairo_pattern_create_radial($x0, $y0, $r0, $x1, $y1, $r1)
cairo_pattern_create_rgb		0;"	f	S:CairoPattern function cairo_pattern_create_rgb($red, $green, $blue)
cairo_pattern_create_rgba		0;"	f	S:CairoPattern function cairo_pattern_create_rgba($red, $green, $blue, $alpha)
cairo_pattern_get_color_stop_count		0;"	f	S:int function cairo_pattern_get_color_stop_count($pattern)
cairo_pattern_get_color_stop_rgba		0;"	f	S:array function cairo_pattern_get_color_stop_rgba($pattern, $index)
cairo_pattern_get_extend		0;"	f	S:int function cairo_pattern_get_extend($pattern)
cairo_pattern_get_filter		0;"	f	S:int function cairo_pattern_get_filter($pattern)
cairo_pattern_get_linear_points		0;"	f	S:array function cairo_pattern_get_linear_points($pattern)
cairo_pattern_get_matrix		0;"	f	S:CairoMatrix function cairo_pattern_get_matrix($pattern)
cairo_pattern_get_radial_circles		0;"	f	S:array function cairo_pattern_get_radial_circles($pattern)
cairo_pattern_get_rgba		0;"	f	S:array function cairo_pattern_get_rgba($pattern)
cairo_pattern_get_surface		0;"	f	S:CairoSurface function cairo_pattern_get_surface($pattern)
cairo_pattern_get_type		0;"	f	S:int function cairo_pattern_get_type($pattern)
cairo_pattern_set_extend		0;"	f	S:void function cairo_pattern_set_extend($pattern, $extend)
cairo_pattern_set_filter		0;"	f	S:void function cairo_pattern_set_filter($pattern, $filter)
cairo_pattern_set_matrix		0;"	f	S:void function cairo_pattern_set_matrix($pattern, $matrix)
cairo_pattern_status		0;"	f	S:int function cairo_pattern_status($pattern)
cairo_pdf_surface_create		0;"	f	S:CairoPdfSurface function cairo_pdf_surface_create($file, $width, $height)
cairo_pdf_surface_set_size		0;"	f	S:void function cairo_pdf_surface_set_size($surface, $width, $height)
cairo_ps_get_levels		0;"	f	S:array function cairo_ps_get_levels()
cairo_ps_level_to_string		0;"	f	S:string function cairo_ps_level_to_string($level)
cairo_ps_surface_create		0;"	f	S:CairoPsSurface function cairo_ps_surface_create($file, $width, $height)
cairo_ps_surface_dsc_begin_page_setup		0;"	f	S:void function cairo_ps_surface_dsc_begin_page_setup($surface)
cairo_ps_surface_dsc_begin_setup		0;"	f	S:void function cairo_ps_surface_dsc_begin_setup($surface)
cairo_ps_surface_dsc_comment		0;"	f	S:void function cairo_ps_surface_dsc_comment($surface, $comment)
cairo_ps_surface_get_eps		0;"	f	S:bool function cairo_ps_surface_get_eps($surface)
cairo_ps_surface_restrict_to_level		0;"	f	S:void function cairo_ps_surface_restrict_to_level($surface, $level)
cairo_ps_surface_set_eps		0;"	f	S:void function cairo_ps_surface_set_eps($surface, $level)
cairo_ps_surface_set_size		0;"	f	S:void function cairo_ps_surface_set_size($surface, $width, $height)
cairo_scaled_font_create		0;"	f	S:CairoScaledFont function cairo_scaled_font_create($fontface, $matrix, $ctm, $fontoptions)
cairo_scaled_font_extents		0;"	f	S:array function cairo_scaled_font_extents($scaledfont)
cairo_scaled_font_get_ctm		0;"	f	S:CairoMatrix function cairo_scaled_font_get_ctm($scaledfont)
cairo_scaled_font_get_font_face		0;"	f	S:CairoFontFace function cairo_scaled_font_get_font_face($scaledfont)
cairo_scaled_font_get_font_matrix		0;"	f	S:CairoFontOptions function cairo_scaled_font_get_font_matrix($scaledfont)
cairo_scaled_font_get_font_options		0;"	f	S:CairoFontOptions function cairo_scaled_font_get_font_options($scaledfont)
cairo_scaled_font_get_scale_matrix		0;"	f	S:CairoMatrix function cairo_scaled_font_get_scale_matrix($scaledfont)
cairo_scaled_font_get_type		0;"	f	S:int function cairo_scaled_font_get_type($scaledfont)
cairo_scaled_font_glyph_extents		0;"	f	S:array function cairo_scaled_font_glyph_extents($scaledfont, $glyphs)
cairo_scaled_font_status		0;"	f	S:int function cairo_scaled_font_status($scaledfont)
cairo_scaled_font_text_extents		0;"	f	S:array function cairo_scaled_font_text_extents($scaledfont, $text)
cairo_surface_copy_page		0;"	f	S:void function cairo_surface_copy_page($surface)
cairo_surface_create_similar		0;"	f	S:CairoSurface function cairo_surface_create_similar($surface, $content, $width, $height)
cairo_surface_finish		0;"	f	S:void function cairo_surface_finish($surface)
cairo_surface_flush		0;"	f	S:void function cairo_surface_flush($surface)
cairo_surface_get_content		0;"	f	S:int function cairo_surface_get_content($surface)
cairo_surface_get_device_offset		0;"	f	S:array function cairo_surface_get_device_offset($surface)
cairo_surface_get_font_options		0;"	f	S:CairoFontOptions function cairo_surface_get_font_options($surface)
cairo_surface_get_type		0;"	f	S:int function cairo_surface_get_type($surface)
cairo_surface_mark_dirty_rectangle		0;"	f	S:void function cairo_surface_mark_dirty_rectangle($surface, $x, $y, $width, $height)
cairo_surface_mark_dirty		0;"	f	S:void function cairo_surface_mark_dirty($surface)
cairo_surface_set_device_offset		0;"	f	S:void function cairo_surface_set_device_offset($surface, $x, $y)
cairo_surface_set_fallback_resolution		0;"	f	S:void function cairo_surface_set_fallback_resolution($surface, $x, $y)
cairo_surface_show_page		0;"	f	S:void function cairo_surface_show_page($surface)
cairo_surface_status		0;"	f	S:int function cairo_surface_status($surface)
cairo_surface_write_to_png		0;"	f	S:void function cairo_surface_write_to_png($surface, $stream)
cairo_svg_surface_create		0;"	f	S:CairoSvgSurface function cairo_svg_surface_create($file, $width, $height)
cairo_svg_surface_restrict_to_version		0;"	f	S:void function cairo_svg_surface_restrict_to_version($surface, $version)
cairo_svg_version_to_string		0;"	f	S:string function cairo_svg_version_to_string($version)
Cairo		0;"	c
availableFonts		0;"	f	S:array function availableFonts()	class:Cairo	a:static
availableSurfaces		0;"	f	S:array function availableSurfaces()	class:Cairo	a:static
statusToString		0;"	f	S:string function statusToString($status)	class:Cairo	a:static
version		0;"	f	S:int function version()	class:Cairo	a:static
versionString		0;"	f	S:string function versionString()	class:Cairo	a:static
CairoContext		0;"	c
appendPath		0;"	f	S:void function appendPath($path, $context)	class:CairoContext
arc		0;"	f	S:void function arc($x, $y, $radius, $angle1, $angle2, $context)	class:CairoContext
arcNegative		0;"	f	S:void function arcNegative($x, $y, $radius, $angle1, $angle2, $context)	class:CairoContext
clip		0;"	f	S:void function clip($context)	class:CairoContext
clipExtents		0;"	f	S:array function clipExtents($context)	class:CairoContext
clipPreserve		0;"	f	S:void function clipPreserve($context)	class:CairoContext
clipRectangleList		0;"	f	S:array function clipRectangleList($context)	class:CairoContext
closePath		0;"	f	S:void function closePath($context)	class:CairoContext
__construct		0;"	f	S: function __construct($surface)	class:CairoContext
copyPage		0;"	f	S:void function copyPage($context)	class:CairoContext
copyPath		0;"	f	S:CairoPath function copyPath($context)	class:CairoContext
copyPathFlat		0;"	f	S:CairoPath function copyPathFlat($context)	class:CairoContext
curveTo		0;"	f	S:void function curveTo($x1, $y1, $x2, $y2, $x3, $y3, $context)	class:CairoContext
deviceToUser		0;"	f	S:array function deviceToUser($x, $y, $context)	class:CairoContext
deviceToUserDistance		0;"	f	S:array function deviceToUserDistance($x, $y, $context)	class:CairoContext
fill		0;"	f	S:void function fill($context)	class:CairoContext
fillExtents		0;"	f	S:array function fillExtents($context)	class:CairoContext
fillPreserve		0;"	f	S:void function fillPreserve($context)	class:CairoContext
fontExtents		0;"	f	S:array function fontExtents($context)	class:CairoContext
getAntialias		0;"	f	S:int function getAntialias($context)	class:CairoContext
getCurrentPoint		0;"	f	S:array function getCurrentPoint($context)	class:CairoContext
getDash		0;"	f	S:array function getDash($context)	class:CairoContext
getDashCount		0;"	f	S:int function getDashCount($context)	class:CairoContext
getFillRule		0;"	f	S:int function getFillRule($context)	class:CairoContext
getFontFace		0;"	f	S:void function getFontFace($context)	class:CairoContext
getFontMatrix		0;"	f	S:void function getFontMatrix($context)	class:CairoContext
getFontOptions		0;"	f	S:void function getFontOptions($context)	class:CairoContext
getGroupTarget		0;"	f	S:void function getGroupTarget($context)	class:CairoContext
getLineCap		0;"	f	S:int function getLineCap($context)	class:CairoContext
getLineJoin		0;"	f	S:int function getLineJoin($context)	class:CairoContext
getLineWidth		0;"	f	S:float function getLineWidth($context)	class:CairoContext
getMatrix		0;"	f	S:void function getMatrix($context)	class:CairoContext
getMiterLimit		0;"	f	S:float function getMiterLimit($context)	class:CairoContext
getOperator		0;"	f	S:int function getOperator($context)	class:CairoContext
getScaledFont		0;"	f	S:void function getScaledFont($context)	class:CairoContext
getSource		0;"	f	S:void function getSource($context)	class:CairoContext
getTarget		0;"	f	S:void function getTarget($context)	class:CairoContext
getTolerance		0;"	f	S:float function getTolerance($context)	class:CairoContext
glyphPath		0;"	f	S:void function glyphPath($glyphs, $context)	class:CairoContext
hasCurrentPoint		0;"	f	S:bool function hasCurrentPoint($context)	class:CairoContext
identityMatrix		0;"	f	S:void function identityMatrix($context)	class:CairoContext
inFill		0;"	f	S:bool function inFill($x, $y, $context)	class:CairoContext
inStroke		0;"	f	S:bool function inStroke($x, $y, $context)	class:CairoContext
lineTo		0;"	f	S:void function lineTo($x, $y, $context)	class:CairoContext
mask		0;"	f	S:void function mask($pattern, $context)	class:CairoContext
maskSurface		0;"	f	S:void function maskSurface($surface, $x, $y, $context)	class:CairoContext
moveTo		0;"	f	S:void function moveTo($x, $y, $context)	class:CairoContext
newPath		0;"	f	S:void function newPath($context)	class:CairoContext
newSubPath		0;"	f	S:void function newSubPath($context)	class:CairoContext
paint		0;"	f	S:void function paint($context)	class:CairoContext
paintWithAlpha		0;"	f	S:void function paintWithAlpha($alpha, $context)	class:CairoContext
pathExtents		0;"	f	S:array function pathExtents($context)	class:CairoContext
popGroup		0;"	f	S:void function popGroup($context)	class:CairoContext
popGroupToSource		0;"	f	S:void function popGroupToSource($context)	class:CairoContext
pushGroup		0;"	f	S:void function pushGroup($context)	class:CairoContext
pushGroupWithContent		0;"	f	S:void function pushGroupWithContent($content, $context)	class:CairoContext
rectangle		0;"	f	S:void function rectangle($x, $y, $width, $height, $context)	class:CairoContext
relCurveTo		0;"	f	S:void function relCurveTo($x1, $y1, $x2, $y2, $x3, $y3, $context)	class:CairoContext
relLineTo		0;"	f	S:void function relLineTo($x, $y, $context)	class:CairoContext
relMoveTo		0;"	f	S:void function relMoveTo($x, $y, $context)	class:CairoContext
resetClip		0;"	f	S:void function resetClip($context)	class:CairoContext
restore		0;"	f	S:void function restore($context)	class:CairoContext
rotate		0;"	f	S:void function rotate($angle, $context)	class:CairoContext
save		0;"	f	S:void function save($context)	class:CairoContext
scale		0;"	f	S:void function scale($x, $y, $context)	class:CairoContext
selectFontFace		0;"	f	S:void function selectFontFace($family, $slant, $weight, $context)	class:CairoContext
setAntialias		0;"	f	S:void function setAntialias($antialias, $context)	class:CairoContext
setDash		0;"	f	S:void function setDash($dashes, $offset, $context)	class:CairoContext
setFillRule		0;"	f	S:void function setFillRule($setting, $context)	class:CairoContext
setFontFace		0;"	f	S:void function setFontFace($fontface, $context)	class:CairoContext
setFontMatrix		0;"	f	S:void function setFontMatrix($matrix, $context)	class:CairoContext
setFontOptions		0;"	f	S:void function setFontOptions($fontoptions, $context)	class:CairoContext
setFontSize		0;"	f	S:void function setFontSize($size, $context)	class:CairoContext
setLineCap		0;"	f	S:void function setLineCap($setting, $context)	class:CairoContext
setLineJoin		0;"	f	S:void function setLineJoin($setting, $context)	class:CairoContext
setLineWidth		0;"	f	S:void function setLineWidth($width, $context)	class:CairoContext
setMatrix		0;"	f	S:void function setMatrix($matrix, $context)	class:CairoContext
setMiterLimit		0;"	f	S:void function setMiterLimit($limit, $context)	class:CairoContext
setOperator		0;"	f	S:void function setOperator($setting, $context)	class:CairoContext
setScaledFont		0;"	f	S:void function setScaledFont($scaledfont, $context)	class:CairoContext
setSource		0;"	f	S:void function setSource($pattern, $context)	class:CairoContext
setSourceRGB		0;"	f	S:void function setSourceRGB($red, $green, $blue, $context, $pattern)	class:CairoContext
setSourceRGBA		0;"	f	S:void function setSourceRGBA($red, $green, $blue, $alpha, $context, $pattern)	class:CairoContext
setSourceSurface		0;"	f	S:void function setSourceSurface($surface, $x, $y, $context)	class:CairoContext
setTolerance		0;"	f	S:void function setTolerance($tolerance, $context)	class:CairoContext
showPage		0;"	f	S:void function showPage($context)	class:CairoContext
showText		0;"	f	S:void function showText($text, $context)	class:CairoContext
status		0;"	f	S:int function status($context)	class:CairoContext
stroke		0;"	f	S:void function stroke($context)	class:CairoContext
strokeExtents		0;"	f	S:array function strokeExtents($context)	class:CairoContext
strokePreserve		0;"	f	S:void function strokePreserve($context)	class:CairoContext
textExtents		0;"	f	S:array function textExtents($text, $context)	class:CairoContext
textPath		0;"	f	S:void function textPath($string, $context, $text)	class:CairoContext
transform		0;"	f	S:void function transform($matrix, $context)	class:CairoContext
translate		0;"	f	S:void function translate($x, $y, $context)	class:CairoContext
userToDevice		0;"	f	S:array function userToDevice($x, $y, $context)	class:CairoContext
userToDeviceDistance		0;"	f	S:array function userToDeviceDistance($x, $y, $context)	class:CairoContext
CairoException		0;"	c	i:Exception
message		0;"	p	class:CairoException	a:protected	S:protected CairoException::message
code		0;"	p	class:CairoException	a:protected	S:protected CairoException::code
file		0;"	p	class:CairoException	a:protected	S:protected CairoException::file
line		0;"	p	class:CairoException	a:protected	S:protected CairoException::line
CairoStatus		0;"	c
SUCCESS		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::SUCCESS
NO_MEMORY		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::NO_MEMORY
INVALID_RESTORE		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_RESTORE
INVALID_POP_GROUP		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_POP_GROUP
NO_CURRENT_POINT		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::NO_CURRENT_POINT
INVALID_MATRIX		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_MATRIX
INVALID_STATUS		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_STATUS
NULL_POINTER		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::NULL_POINTER
INVALID_STRING		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_STRING
INVALID_PATH_DATA		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_PATH_DATA
READ_ERROR		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::READ_ERROR
WRITE_ERROR		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::WRITE_ERROR
SURFACE_FINISHED		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::SURFACE_FINISHED
SURFACE_TYPE_MISMATCH		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::SURFACE_TYPE_MISMATCH
PATTERN_TYPE_MISMATCH		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::PATTERN_TYPE_MISMATCH
INVALID_CONTENT		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_CONTENT
INVALID_FORMAT		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_FORMAT
INVALID_VISUAL		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_VISUAL
FILE_NOT_FOUND		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::FILE_NOT_FOUND
INVALID_DASH		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_DASH
INVALID_DSC_COMMENT		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_DSC_COMMENT
INVALID_INDEX		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_INDEX
CLIP_NOT_REPRESENTABLE		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::CLIP_NOT_REPRESENTABLE
TEMP_FILE_ERROR		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::TEMP_FILE_ERROR
INVALID_STRIDE		0;"	o	class:CairoStatus	a:const	S:const CairoStatus::INVALID_STRIDE
CairoSurface		0;"	c
__construct		0;"	f	S: function __construct()	class:CairoSurface
copyPage		0;"	f	S:void function copyPage($context)	class:CairoSurface
createSimilar		0;"	f	S:void function createSimilar($other, $content, $width, $height)	class:CairoSurface
finish		0;"	f	S:void function finish()	class:CairoSurface
flush		0;"	f	S:void function flush()	class:CairoSurface
getContent		0;"	f	S:int function getContent()	class:CairoSurface
getDeviceOffset		0;"	f	S:array function getDeviceOffset()	class:CairoSurface
getFontOptions		0;"	f	S:void function getFontOptions($context)	class:CairoSurface
getType		0;"	f	S:int function getType()	class:CairoSurface
markDirty		0;"	f	S:void function markDirty()	class:CairoSurface
markDirtyRectangle		0;"	f	S:void function markDirtyRectangle($x, $y, $width, $height)	class:CairoSurface
setDeviceOffset		0;"	f	S:void function setDeviceOffset($x, $y)	class:CairoSurface
setFallbackResolution		0;"	f	S:void function setFallbackResolution($x, $y)	class:CairoSurface
showPage		0;"	f	S:void function showPage($context)	class:CairoSurface
status		0;"	f	S:int function status($context)	class:CairoSurface
writeToPng		0;"	f	S:void function writeToPng($file)	class:CairoSurface
CairoSvgSurface		0;"	c	i:CairoSurface
__construct		0;"	f	S: function __construct($file, $width, $height)	class:CairoSvgSurface
getVersions		0;"	f	S:array function getVersions()	class:CairoSvgSurface	a:static
restrictToVersion		0;"	f	S:void function restrictToVersion($version)	class:CairoSvgSurface
versionToString		0;"	f	S:string function versionToString($version)	class:CairoSvgSurface	a:static
CairoImageSurface		0;"	c	i:CairoSurface
__construct		0;"	f	S: function __construct($format, $width, $height)	class:CairoImageSurface
createForData		0;"	f	S:void function createForData($data, $format, $width, $height, $stride = -1)	class:CairoImageSurface	a:static
createFromPng		0;"	f	S:CairoImageSurface function createFromPng($file)	class:CairoImageSurface	a:static
getData		0;"	f	S:string function getData()	class:CairoImageSurface
getFormat		0;"	f	S:int function getFormat()	class:CairoImageSurface
getHeight		0;"	f	S:int function getHeight()	class:CairoImageSurface
getStride		0;"	f	S:int function getStride()	class:CairoImageSurface
getWidth		0;"	f	S:int function getWidth()	class:CairoImageSurface
CairoPdfSurface		0;"	c	i:CairoSurface
__construct		0;"	f	S: function __construct($file, $width, $height)	class:CairoPdfSurface
setSize		0;"	f	S:void function setSize($width, $height)	class:CairoPdfSurface
CairoPsSurface		0;"	c	i:CairoSurface
__construct		0;"	f	S: function __construct($file, $width, $height)	class:CairoPsSurface
dscBeginPageSetup		0;"	f	S:void function dscBeginPageSetup()	class:CairoPsSurface
dscBeginSetup		0;"	f	S:void function dscBeginSetup()	class:CairoPsSurface
dscComment		0;"	f	S:void function dscComment($comment)	class:CairoPsSurface
getEps		0;"	f	S:bool function getEps()	class:CairoPsSurface
getLevels		0;"	f	S:array function getLevels()	class:CairoPsSurface	a:static
levelToString		0;"	f	S:string function levelToString($level)	class:CairoPsSurface	a:static
restrictToLevel		0;"	f	S:void function restrictToLevel($level)	class:CairoPsSurface
setEps		0;"	f	S:void function setEps($level)	class:CairoPsSurface
setSize		0;"	f	S:void function setSize($width, $height)	class:CairoPsSurface
CairoSurfaceType		0;"	c
IMAGE		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::IMAGE
PDF		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::PDF
PS		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::PS
XLIB		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::XLIB
XCB		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::XCB
GLITZ		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::GLITZ
QUARTZ		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::QUARTZ
WIN32		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::WIN32
BEOS		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::BEOS
DIRECTFB		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::DIRECTFB
SVG		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::SVG
OS2		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::OS2
WIN32_PRINTING		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::WIN32_PRINTING
QUARTZ_IMAGE		0;"	o	class:CairoSurfaceType	a:const	S:const CairoSurfaceType::QUARTZ_IMAGE
CairoFontFace		0;"	c
__construct		0;"	f	S: function __construct()	class:CairoFontFace
getType		0;"	f	S:int function getType()	class:CairoFontFace
status		0;"	f	S:int function status($fontface)	class:CairoFontFace
CairoFontOptions		0;"	c
__construct		0;"	f	S: function __construct()	class:CairoFontOptions
equal		0;"	f	S:bool function equal($other)	class:CairoFontOptions
getAntialias		0;"	f	S:int function getAntialias($context)	class:CairoFontOptions
getHintMetrics		0;"	f	S:int function getHintMetrics()	class:CairoFontOptions
getHintStyle		0;"	f	S:int function getHintStyle()	class:CairoFontOptions
getSubpixelOrder		0;"	f	S:int function getSubpixelOrder()	class:CairoFontOptions
hash		0;"	f	S:int function hash()	class:CairoFontOptions
merge		0;"	f	S:void function merge($other)	class:CairoFontOptions
setAntialias		0;"	f	S:void function setAntialias($antialias, $context)	class:CairoFontOptions
setHintMetrics		0;"	f	S:void function setHintMetrics($hint_metrics)	class:CairoFontOptions
setHintStyle		0;"	f	S:void function setHintStyle($hint_style)	class:CairoFontOptions
setSubpixelOrder		0;"	f	S:void function setSubpixelOrder($subpixel_order)	class:CairoFontOptions
status		0;"	f	S:int function status($context)	class:CairoFontOptions
CairoFontSlant		0;"	c
NORMAL		0;"	o	class:CairoFontSlant	a:const	S:const CairoFontSlant::NORMAL
ITALIC		0;"	o	class:CairoFontSlant	a:const	S:const CairoFontSlant::ITALIC
OBLIQUE		0;"	o	class:CairoFontSlant	a:const	S:const CairoFontSlant::OBLIQUE
CairoFontType		0;"	c
TOY		0;"	o	class:CairoFontType	a:const	S:const CairoFontType::TOY
FT		0;"	o	class:CairoFontType	a:const	S:const CairoFontType::FT
WIN32		0;"	o	class:CairoFontType	a:const	S:const CairoFontType::WIN32
QUARTZ		0;"	o	class:CairoFontType	a:const	S:const CairoFontType::QUARTZ
CairoFontWeight		0;"	c
NORMAL		0;"	o	class:CairoFontWeight	a:const	S:const CairoFontWeight::NORMAL
BOLD		0;"	o	class:CairoFontWeight	a:const	S:const CairoFontWeight::BOLD
CairoScaledFont		0;"	c
__construct		0;"	f	S: function __construct($font_face, $matrix, $ctm, $options)	class:CairoScaledFont
extents		0;"	f	S:array function extents()	class:CairoScaledFont
getCtm		0;"	f	S:CairoMatrix function getCtm()	class:CairoScaledFont
getFontFace		0;"	f	S:void function getFontFace($context)	class:CairoScaledFont
getFontMatrix		0;"	f	S:void function getFontMatrix($context)	class:CairoScaledFont
getFontOptions		0;"	f	S:void function getFontOptions($context)	class:CairoScaledFont
getScaleMatrix		0;"	f	S:void function getScaleMatrix()	class:CairoScaledFont
getType		0;"	f	S:int function getType()	class:CairoScaledFont
glyphExtents		0;"	f	S:array function glyphExtents($glyphs)	class:CairoScaledFont
status		0;"	f	S:int function status($context)	class:CairoScaledFont
textExtents		0;"	f	S:array function textExtents($text, $context)	class:CairoScaledFont
CairoToyFontFace		0;"	c	i:CairoFontFace
CairoPatternType		0;"	c
SOLID		0;"	o	class:CairoPatternType	a:const	S:const CairoPatternType::SOLID
SURFACE		0;"	o	class:CairoPatternType	a:const	S:const CairoPatternType::SURFACE
LINEAR		0;"	o	class:CairoPatternType	a:const	S:const CairoPatternType::LINEAR
RADIAL		0;"	o	class:CairoPatternType	a:const	S:const CairoPatternType::RADIAL
CairoPattern		0;"	c
__construct		0;"	f	S: function __construct()	class:CairoPattern
getMatrix		0;"	f	S:void function getMatrix($context)	class:CairoPattern
getType		0;"	f	S:int function getType()	class:CairoPattern
setMatrix		0;"	f	S:void function setMatrix($matrix, $context)	class:CairoPattern
status		0;"	f	S:int function status($context)	class:CairoPattern
CairoGradientPattern		0;"	c	i:CairoPattern
addColorStopRgb		0;"	f	S:void function addColorStopRgb($offset, $red, $green, $blue)	class:CairoGradientPattern
addColorStopRgba		0;"	f	S:void function addColorStopRgba($offset, $red, $green, $blue, $alpha)	class:CairoGradientPattern
getColorStopCount		0;"	f	S:int function getColorStopCount()	class:CairoGradientPattern
getColorStopRgba		0;"	f	S:array function getColorStopRgba($index)	class:CairoGradientPattern
getExtend		0;"	f	S:int function getExtend()	class:CairoGradientPattern
setExtend		0;"	f	S:void function setExtend($extend)	class:CairoGradientPattern
CairoSolidPattern		0;"	c	i:CairoPattern
__construct		0;"	f	S: function __construct($red, $green, $blue, $alpha)	class:CairoSolidPattern
getRgba		0;"	f	S:array function getRgba()	class:CairoSolidPattern
CairoSurfacePattern		0;"	c	i:CairoPattern
__construct		0;"	f	S: function __construct($surface)	class:CairoSurfacePattern
getExtend		0;"	f	S:int function getExtend()	class:CairoSurfacePattern
getFilter		0;"	f	S:int function getFilter()	class:CairoSurfacePattern
getSurface		0;"	f	S:void function getSurface()	class:CairoSurfacePattern
setExtend		0;"	f	S:void function setExtend($extend)	class:CairoSurfacePattern
setFilter		0;"	f	S:void function setFilter($filter)	class:CairoSurfacePattern
CairoLinearGradient		0;"	c	i:CairoGradientPattern
__construct		0;"	f	S: function __construct($x0, $y0, $x1, $y1)	class:CairoLinearGradient
getPoints		0;"	f	S:array function getPoints()	class:CairoLinearGradient
CairoRadialGradient		0;"	c	i:CairoGradientPattern
__construct		0;"	f	S:CairoPattern function __construct($x0, $y0, $r0, $x1, $y1, $r1)	class:CairoRadialGradient
getCircles		0;"	f	S:array function getCircles()	class:CairoRadialGradient
CairoAntialias		0;"	c
MODE_DEFAULT		0;"	o	class:CairoAntialias	a:const	S:const CairoAntialias::MODE_DEFAULT
MODE_NONE		0;"	o	class:CairoAntialias	a:const	S:const CairoAntialias::MODE_NONE
MODE_GRAY		0;"	o	class:CairoAntialias	a:const	S:const CairoAntialias::MODE_GRAY
MODE_SUBPIXEL		0;"	o	class:CairoAntialias	a:const	S:const CairoAntialias::MODE_SUBPIXEL
CairoContent		0;"	c
COLOR		0;"	o	class:CairoContent	a:const	S:const CairoContent::COLOR
ALPHA		0;"	o	class:CairoContent	a:const	S:const CairoContent::ALPHA
COLOR_ALPHA		0;"	o	class:CairoContent	a:const	S:const CairoContent::COLOR_ALPHA
CairoExtend		0;"	c
NONE		0;"	o	class:CairoExtend	a:const	S:const CairoExtend::NONE
REPEAT		0;"	o	class:CairoExtend	a:const	S:const CairoExtend::REPEAT
REFLECT		0;"	o	class:CairoExtend	a:const	S:const CairoExtend::REFLECT
PAD		0;"	o	class:CairoExtend	a:const	S:const CairoExtend::PAD
CairoFormat		0;"	c
ARGB32		0;"	o	class:CairoFormat	a:const	S:const CairoFormat::ARGB32
RGB24		0;"	o	class:CairoFormat	a:const	S:const CairoFormat::RGB24
A8		0;"	o	class:CairoFormat	a:const	S:const CairoFormat::A8
A1		0;"	o	class:CairoFormat	a:const	S:const CairoFormat::A1
strideForWidth		0;"	f	S:int function strideForWidth($format, $width)	class:CairoFormat	a:static
CairoFillRule		0;"	c
WINDING		0;"	o	class:CairoFillRule	a:const	S:const CairoFillRule::WINDING
EVEN_ODD		0;"	o	class:CairoFillRule	a:const	S:const CairoFillRule::EVEN_ODD
CairoFilter		0;"	c
FAST		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::FAST
GOOD		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::GOOD
BEST		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::BEST
NEAREST		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::NEAREST
BILINEAR		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::BILINEAR
GAUSSIAN		0;"	o	class:CairoFilter	a:const	S:const CairoFilter::GAUSSIAN
CairoHintMetrics		0;"	c
METRICS_DEFAULT		0;"	o	class:CairoHintMetrics	a:const	S:const CairoHintMetrics::METRICS_DEFAULT
METRICS_OFF		0;"	o	class:CairoHintMetrics	a:const	S:const CairoHintMetrics::METRICS_OFF
METRICS_ON		0;"	o	class:CairoHintMetrics	a:const	S:const CairoHintMetrics::METRICS_ON
CairoHintStyle		0;"	c
STYLE_DEFAULT		0;"	o	class:CairoHintStyle	a:const	S:const CairoHintStyle::STYLE_DEFAULT
STYLE_NONE		0;"	o	class:CairoHintStyle	a:const	S:const CairoHintStyle::STYLE_NONE
STYLE_SLIGHT		0;"	o	class:CairoHintStyle	a:const	S:const CairoHintStyle::STYLE_SLIGHT
STYLE_MEDIUM		0;"	o	class:CairoHintStyle	a:const	S:const CairoHintStyle::STYLE_MEDIUM
STYLE_FULL		0;"	o	class:CairoHintStyle	a:const	S:const CairoHintStyle::STYLE_FULL
CairoLineCap		0;"	c
BUTT		0;"	o	class:CairoLineCap	a:const	S:const CairoLineCap::BUTT
ROUND		0;"	o	class:CairoLineCap	a:const	S:const CairoLineCap::ROUND
SQUARE		0;"	o	class:CairoLineCap	a:const	S:const CairoLineCap::SQUARE
CairoLineJoin		0;"	c
MITER		0;"	o	class:CairoLineJoin	a:const	S:const CairoLineJoin::MITER
ROUND		0;"	o	class:CairoLineJoin	a:const	S:const CairoLineJoin::ROUND
BEVEL		0;"	o	class:CairoLineJoin	a:const	S:const CairoLineJoin::BEVEL
CairoMatrix		0;"	c
__construct		0;"	f	S:object function __construct($xx = 1.0, $yx = 0.0, $xy = 0.0, $yy = 1.0, $x0 = 0.0, $y0 = 0.0)	class:CairoMatrix
initIdentity		0;"	f	S:object function initIdentity()	class:CairoMatrix	a:static
initRotate		0;"	f	S:object function initRotate($radians)	class:CairoMatrix	a:static
initScale		0;"	f	S:object function initScale($sx, $sy)	class:CairoMatrix	a:static
initTranslate		0;"	f	S:object function initTranslate($tx, $ty)	class:CairoMatrix	a:static
invert		0;"	f	S:void function invert()	class:CairoMatrix
multiply		0;"	f	S:CairoMatrix function multiply($matrix1, $matrix2)	class:CairoMatrix	a:static
rotate		0;"	f	S:void function rotate($sx, $sy, $context, $angle)	class:CairoMatrix
scale		0;"	f	S:void function scale($sx, $sy, $context)	class:CairoMatrix
transformDistance		0;"	f	S:array function transformDistance($dx, $dy)	class:CairoMatrix
transformPoint		0;"	f	S:array function transformPoint($dx, $dy)	class:CairoMatrix
translate		0;"	f	S:void function translate($tx, $ty, $context, $x, $y)	class:CairoMatrix
CairoOperator		0;"	c
CLEAR		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::CLEAR
SOURCE		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::SOURCE
OVER		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::OVER
IN		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::IN
OUT		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::OUT
ATOP		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::ATOP
DEST		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::DEST
DEST_OVER		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::DEST_OVER
DEST_IN		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::DEST_IN
DEST_OUT		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::DEST_OUT
DEST_ATOP		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::DEST_ATOP
XOR		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::XOR
ADD		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::ADD
SATURATE		0;"	o	class:CairoOperator	a:const	S:const CairoOperator::SATURATE
CairoPath		0;"	c
CairoPsLevel		0;"	c
LEVEL_2		0;"	o	class:CairoPsLevel	a:const	S:const CairoPsLevel::LEVEL_2
LEVEL_3		0;"	o	class:CairoPsLevel	a:const	S:const CairoPsLevel::LEVEL_3
CairoSubpixelOrder		0;"	c
ORDER_DEFAULT		0;"	o	class:CairoSubpixelOrder	a:const	S:const CairoSubpixelOrder::ORDER_DEFAULT
ORDER_RGB		0;"	o	class:CairoSubpixelOrder	a:const	S:const CairoSubpixelOrder::ORDER_RGB
ORDER_BGR		0;"	o	class:CairoSubpixelOrder	a:const	S:const CairoSubpixelOrder::ORDER_BGR
ORDER_VRGB		0;"	o	class:CairoSubpixelOrder	a:const	S:const CairoSubpixelOrder::ORDER_VRGB
ORDER_VBGR		0;"	o	class:CairoSubpixelOrder	a:const	S:const CairoSubpixelOrder::ORDER_VBGR
CairoSvgVersion		0;"	c
VERSION_1_1		0;"	o	class:CairoSvgVersion	a:const	S:const CairoSvgVersion::VERSION_1_1
VERSION_1_2		0;"	o	class:CairoSvgVersion	a:const	S:const CairoSvgVersion::VERSION_1_2
EXIF_USE_MBSTRING		0;"	d
exif_imagetype		0;"	f	S:int function exif_imagetype($filename)
exif_read_data		0;"	f	S:array function exif_read_data($filename, $sections, $arrays = false, $thumbnail = false)
exif_tagname		0;"	f	S:string function exif_tagname($index)
exif_thumbnail		0;"	f	S:string function exif_thumbnail($filename, &$width, &$height, &$imagetype)
read_exif_data		0;"	f	S: function read_exif_data()
GD_VERSION		0;"	d
GD_MAJOR_VERSION		0;"	d
GD_MINOR_VERSION		0;"	d
GD_RELEASE_VERSION		0;"	d
GD_EXTRA_VERSION		0;"	d
GD_BUNDLED		0;"	d
IMG_GIF		0;"	d
IMG_JPG		0;"	d
IMG_JPEG		0;"	d
IMG_PNG		0;"	d
IMG_WBMP		0;"	d
IMG_XPM		0;"	d
IMG_COLOR_TILED		0;"	d
IMG_COLOR_STYLED		0;"	d
IMG_COLOR_BRUSHED		0;"	d
IMG_COLOR_STYLEDBRUSHED		0;"	d
IMG_COLOR_TRANSPARENT		0;"	d
IMG_ARC_ROUNDED		0;"	d
IMG_ARC_PIE		0;"	d
IMG_ARC_CHORD		0;"	d
IMG_ARC_NOFILL		0;"	d
IMG_ARC_EDGED		0;"	d
IMG_GD2_RAW		0;"	d
IMG_GD2_COMPRESSED		0;"	d
IMG_EFFECT_REPLACE		0;"	d
IMG_EFFECT_ALPHABLEND		0;"	d
IMG_EFFECT_NORMAL		0;"	d
IMG_EFFECT_OVERLAY		0;"	d
IMG_FILTER_NEGATE		0;"	d
IMG_FILTER_GRAYSCALE		0;"	d
IMG_FILTER_BRIGHTNESS		0;"	d
IMG_FILTER_CONTRAST		0;"	d
IMG_FILTER_COLORIZE		0;"	d
IMG_FILTER_EDGEDETECT		0;"	d
IMG_FILTER_GAUSSIAN_BLUR		0;"	d
IMG_FILTER_SELECTIVE_BLUR		0;"	d
IMG_FILTER_EMBOSS		0;"	d
IMG_FILTER_MEAN_REMOVAL		0;"	d
IMG_FILTER_SMOOTH		0;"	d
IMG_FILTER_PIXELATE		0;"	d
IMAGETYPE_GIF		0;"	d
IMAGETYPE_JPEG		0;"	d
IMAGETYPE_JPEG2000		0;"	d
IMAGETYPE_PNG		0;"	d
IMAGETYPE_SWF		0;"	d
IMAGETYPE_PSD		0;"	d
IMAGETYPE_BMP		0;"	d
IMAGETYPE_WBMP		0;"	d
IMAGETYPE_XBM		0;"	d
IMAGETYPE_TIFF_II		0;"	d
IMAGETYPE_TIFF_MM		0;"	d
IMAGETYPE_IFF		0;"	d
IMAGETYPE_JB2		0;"	d
IMAGETYPE_JPC		0;"	d
IMAGETYPE_JP2		0;"	d
IMAGETYPE_JPX		0;"	d
IMAGETYPE_SWC		0;"	d
IMAGETYPE_ICO		0;"	d
PNG_NO_FILTER		0;"	d
PNG_FILTER_NONE		0;"	d
PNG_FILTER_SUB		0;"	d
PNG_FILTER_UP		0;"	d
PNG_FILTER_AVG		0;"	d
PNG_FILTER_PAETH		0;"	d
PNG_ALL_FILTERS		0;"	d
IMG_FLIP_VERTICAL		0;"	d
IMG_FLIP_HORIZONTAL		0;"	d
IMG_FLIP_BOTH		0;"	d
IMG_BELL		0;"	d
IMG_BESSEL		0;"	d
IMG_BILINEAR_FIXED		0;"	d
IMG_BICUBIC		0;"	d
IMG_BICUBIC		0;"	d
IMG_BLACKMAN		0;"	d
IMG_BOX		0;"	d
IMG_BSPLINE		0;"	d
IMG_CATMULLROM		0;"	d
IMG_GAUSSIAN		0;"	d
IMG_GENERALIZED_CUBIC		0;"	d
IMG_HERMITE		0;"	d
IMG_HAMMING		0;"	d
IMG_HANNING		0;"	d
IMG_MITCHELL		0;"	d
IMG_POWER		0;"	d
IMG_QUADRATIC		0;"	d
IMG_SINC		0;"	d
IMG_NEAREST_NEIGHBOUR		0;"	d
IMG_WEIGHTED4		0;"	d
IMG_TRIANGLE		0;"	d
gd_info		0;"	f	S:array function gd_info()
getimagesize		0;"	f	S:array function getimagesize($filename, &$imageinfo)
getimagesizefromstring		0;"	f	S:array function getimagesizefromstring($imagedata, &$imageinfo)
image_type_to_extension		0;"	f	S:string function image_type_to_extension($imagetype, $include_dot)
image_type_to_mime_type		0;"	f	S:string function image_type_to_mime_type($imagetype)
image2wbmp		0;"	f	S:bool function image2wbmp($image, $filename, $threshold)
imageaffine		0;"	f	S:resource function imageaffine($image, $affine, $clip)
imageaffinematrixconcat		0;"	f	S:array function imageaffinematrixconcat($m1, $m2)
imageaffinematrixget		0;"	f	S:array function imageaffinematrixget($type, $options)
imagealphablending		0;"	f	S:bool function imagealphablending($image, $blendmode)
imageantialias		0;"	f	S:bool function imageantialias($image, $enabled)
imagearc		0;"	f	S:bool function imagearc($image, $cx, $cy, $width, $height, $start, $end, $color)
imagechar		0;"	f	S:bool function imagechar($image, $font, $x, $y, $c, $color)
imagecharup		0;"	f	S:bool function imagecharup($image, $font, $x, $y, $c, $color)
imagecolorallocate		0;"	f	S:int function imagecolorallocate($image, $red, $green, $blue)
imagecolorallocatealpha		0;"	f	S:int function imagecolorallocatealpha($image, $red, $green, $blue, $alpha)
imagecolorat		0;"	f	S:int function imagecolorat($image, $x, $y)
imagecolorclosest		0;"	f	S:int function imagecolorclosest($image, $red, $green, $blue)
imagecolorclosestalpha		0;"	f	S:int function imagecolorclosestalpha($image, $red, $green, $blue, $alpha)
imagecolorclosesthwb		0;"	f	S:int function imagecolorclosesthwb($image, $red, $green, $blue)
imagecolordeallocate		0;"	f	S:bool function imagecolordeallocate($image, $color)
imagecolorexact		0;"	f	S:int function imagecolorexact($image, $red, $green, $blue)
imagecolorexactalpha		0;"	f	S:int function imagecolorexactalpha($image, $red, $green, $blue, $alpha)
imagecolormatch		0;"	f	S:bool function imagecolormatch($image1, $image2)
imagecolorresolve		0;"	f	S:int function imagecolorresolve($image, $red, $green, $blue)
imagecolorresolvealpha		0;"	f	S:int function imagecolorresolvealpha($image, $red, $green, $blue, $alpha)
imagecolorset		0;"	f	S:void function imagecolorset($image, $index, $red, $green, $blue, $alpha)
imagecolorsforindex		0;"	f	S:array function imagecolorsforindex($image, $index)
imagecolorstotal		0;"	f	S:int function imagecolorstotal($image)
imagecolortransparent		0;"	f	S:int function imagecolortransparent($image, $color)
imageconvolution		0;"	f	S:bool function imageconvolution($image, $matrix, $div, $offset)
imagecopy		0;"	f	S:bool function imagecopy($dst_im, $src_im, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h)
imagecopymerge		0;"	f	S:bool function imagecopymerge($dst_im, $src_im, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h, $pct)
imagecopymergegray		0;"	f	S:bool function imagecopymergegray($dst_im, $src_im, $dst_x, $dst_y, $src_x, $src_y, $src_w, $src_h, $pct)
imagecopyresampled		0;"	f	S:bool function imagecopyresampled($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h)
imagecopyresized		0;"	f	S:bool function imagecopyresized($dst_image, $src_image, $dst_x, $dst_y, $src_x, $src_y, $dst_w, $dst_h, $src_w, $src_h)
imagecreate		0;"	f	S:resource function imagecreate($width, $height)
imagecreatefromgd2		0;"	f	S:resource function imagecreatefromgd2($filename)
imagecreatefromgd2part		0;"	f	S:resource function imagecreatefromgd2part($filename, $srcX, $srcY, $width, $height)
imagecreatefromgd		0;"	f	S:resource function imagecreatefromgd($filename)
imagecreatefromgif		0;"	f	S:resource function imagecreatefromgif($filename)
imagecreatefromjpeg		0;"	f	S:resource function imagecreatefromjpeg($filename)
imagecreatefrompng		0;"	f	S:resource function imagecreatefrompng($filename)
imagecreatefromstring		0;"	f	S:resource function imagecreatefromstring($image)
imagecreatefromwbmp		0;"	f	S:resource function imagecreatefromwbmp($filename)
imagecreatefromwebp		0;"	f	S:resource function imagecreatefromwebp($filename)
imagecreatefromxbm		0;"	f	S:resource function imagecreatefromxbm($filename)
imagecreatefromxpm		0;"	f	S:resource function imagecreatefromxpm($filename)
imagecreatetruecolor		0;"	f	S:resource function imagecreatetruecolor($width, $height)
imagecrop		0;"	f	S:resource function imagecrop($image, $rect)
imagecropauto		0;"	f	S:resource function imagecropauto($image, $mode = -1, $threshold = .5, $color = -1)
imagedashedline		0;"	f	S:bool function imagedashedline($image, $x1, $y1, $x2, $y2, $color)
imagedestroy		0;"	f	S:bool function imagedestroy($image)
imageellipse		0;"	f	S:bool function imageellipse($image, $cx, $cy, $width, $height, $color)
imagefill		0;"	f	S:bool function imagefill($image, $x, $y, $color)
imagefilledarc		0;"	f	S:bool function imagefilledarc($image, $cx, $cy, $width, $height, $start, $end, $color, $style)
imagefilledellipse		0;"	f	S:bool function imagefilledellipse($image, $cx, $cy, $width, $height, $color)
imagefilledpolygon		0;"	f	S:bool function imagefilledpolygon($image, $points, $num_points, $color)
imagefilledrectangle		0;"	f	S:bool function imagefilledrectangle($image, $x1, $y1, $x2, $y2, $color)
imagefilltoborder		0;"	f	S:bool function imagefilltoborder($image, $x, $y, $border, $color)
imagefilter		0;"	f	S:bool function imagefilter($image, $filtertype, $arg1, $arg2, $arg3, $arg4)
imageflip		0;"	f	S:bool function imageflip($image, $mode)
imagefontheight		0;"	f	S:int function imagefontheight($font)
imagefontwidth		0;"	f	S:int function imagefontwidth($font)
imageftbbox		0;"	f	S:array function imageftbbox($size, $angle, $fontfile, $text, $extrainfo)
imagefttext		0;"	f	S:array function imagefttext($image, $size, $angle, $x, $y, $color, $fontfile, $text, $extrainfo)
imagegammacorrect		0;"	f	S:bool function imagegammacorrect($image, $inputgamma, $outputgamma)
imagegd2		0;"	f	S:bool function imagegd2($image, $filename, $chunk_size, $type = IMG_GD2_RAW)
imagegd		0;"	f	S:bool function imagegd($image, $filename)
imagegif		0;"	f	S:bool function imagegif($image, $filename)
imagegrabscreen		0;"	f	S:resource function imagegrabscreen()
imagegrabwindow		0;"	f	S:resource function imagegrabwindow($window_handle, $client_area)
imageinterlace		0;"	f	S:int function imageinterlace($image, $interlace)
imageistruecolor		0;"	f	S:bool function imageistruecolor($image)
imagejpeg		0;"	f	S:bool function imagejpeg($image, $filename, $quality)
imagelayereffect		0;"	f	S:bool function imagelayereffect($image, $effect)
imageline		0;"	f	S:bool function imageline($image, $x1, $y1, $x2, $y2, $color)
imageloadfont		0;"	f	S:int function imageloadfont($file)
imagepalettecopy		0;"	f	S:void function imagepalettecopy($destination, $source)
imagepalettetotruecolor		0;"	f	S:bool function imagepalettetotruecolor($src)
imagepng		0;"	f	S:bool function imagepng($image, $filename, $quality, $filters)
imagepolygon		0;"	f	S:bool function imagepolygon($image, $points, $num_points, $color)
imagepsbbox		0;"	f	S:array function imagepsbbox($text, $font, $size, $space, $tightness, $angle)
imagepsencodefont		0;"	f	S:bool function imagepsencodefont($font_index, $encodingfile)
imagepsextendfont		0;"	f	S:bool function imagepsextendfont($font_index, $extend)
imagepsfreefont		0;"	f	S:bool function imagepsfreefont($font_index)
imagepsloadfont		0;"	f	S:resource function imagepsloadfont($filename)
imagepsslantfont		0;"	f	S:bool function imagepsslantfont($font_index, $slant)
imagepstext		0;"	f	S:array function imagepstext($image, $text, $font_index, $size, $foreground, $background, $x, $y, $space, $tightness, $angle = 0.0, $antialias_steps = 4)
imagerectangle		0;"	f	S:bool function imagerectangle($image, $x1, $y1, $x2, $y2, $color)
imagerotate		0;"	f	S:resource function imagerotate($image, $angle, $bgd_color, $ignore_transparent)
imagesavealpha		0;"	f	S:bool function imagesavealpha($image, $saveflag)
imagescale		0;"	f	S:resource function imagescale($image, $new_width, $new_height = -1, $mode = IMG_BILINEAR_FIXED)
imagesetbrush		0;"	f	S:bool function imagesetbrush($image, $brush)
imagesetinterpolation		0;"	f	S:bool function imagesetinterpolation($image, $method = IMG_BILINEAR_FIXED)
imagesetpixel		0;"	f	S:bool function imagesetpixel($image, $x, $y, $color)
imagesetstyle		0;"	f	S:bool function imagesetstyle($image, $style)
imagesetthickness		0;"	f	S:bool function imagesetthickness($image, $thickness)
imagesettile		0;"	f	S:bool function imagesettile($image, $tile)
imagestring		0;"	f	S:bool function imagestring($image, $font, $x, $y, $string, $color)
imagestringup		0;"	f	S:bool function imagestringup($image, $font, $x, $y, $string, $color)
imagesx		0;"	f	S:int function imagesx($image)
imagesy		0;"	f	S:int function imagesy($image)
imagetruecolortopalette		0;"	f	S:bool function imagetruecolortopalette($image, $dither, $ncolors)
imagettfbbox		0;"	f	S:array function imagettfbbox($size, $angle, $fontfile, $text)
imagettftext		0;"	f	S:array function imagettftext($image, $size, $angle, $x, $y, $color, $fontfile, $text)
imagetypes		0;"	f	S:int function imagetypes()
imagewbmp		0;"	f	S:bool function imagewbmp($image, $filename, $foreground)
imagewebp		0;"	f	S:bool function imagewebp($image, $filename)
imagexbm		0;"	f	S:bool function imagexbm($image, $filename, $foreground)
iptcembed		0;"	f	S:mixed function iptcembed($iptcdata, $jpeg_file_name, $spool)
iptcparse		0;"	f	S:array function iptcparse($iptcblock)
jpeg2wbmp		0;"	f	S:bool function jpeg2wbmp($jpegname, $wbmpname, $dest_height, $dest_width, $threshold)
png2wbmp		0;"	f	S:bool function png2wbmp($pngname, $wbmpname, $dest_height, $dest_width, $threshold)
COLOR_BLACK		0;"	o	class:Gmagick
COLOR_BLUE		0;"	o	class:Gmagick
COLOR_CYAN		0;"	o	class:Gmagick
COLOR_GREEN		0;"	o	class:Gmagick
COLOR_RED		0;"	o	class:Gmagick
COLOR_YELLOW		0;"	o	class:Gmagick
COLOR_MAGENTA		0;"	o	class:Gmagick
COLOR_OPACITY		0;"	o	class:Gmagick
COLOR_ALPHA		0;"	o	class:Gmagick
COLOR_FUZZ		0;"	o	class:Gmagick
COMPOSITE_DEFAULT		0;"	o	class:Gmagick
COMPOSITE_UNDEFINED		0;"	o	class:Gmagick
COMPOSITE_NO		0;"	o	class:Gmagick
COMPOSITE_ADD		0;"	o	class:Gmagick
COMPOSITE_ATOP		0;"	o	class:Gmagick
COMPOSITE_BLEND		0;"	o	class:Gmagick
COMPOSITE_BUMPMAP		0;"	o	class:Gmagick
COMPOSITE_CLEAR		0;"	o	class:Gmagick
COMPOSITE_COLORBURN		0;"	o	class:Gmagick
COMPOSITE_COLORDODGE		0;"	o	class:Gmagick
COMPOSITE_COLORIZE		0;"	o	class:Gmagick
COMPOSITE_COPYBLACK		0;"	o	class:Gmagick
COMPOSITE_COPYBLUE		0;"	o	class:Gmagick
COMPOSITE_COPY		0;"	o	class:Gmagick
COMPOSITE_COPYCYAN		0;"	o	class:Gmagick
COMPOSITE_COPYGREEN		0;"	o	class:Gmagick
COMPOSITE_COPYMAGENTA		0;"	o	class:Gmagick
COMPOSITE_COPYOPACITY		0;"	o	class:Gmagick
COMPOSITE_COPYRED		0;"	o	class:Gmagick
COMPOSITE_COPYYELLOW		0;"	o	class:Gmagick
COMPOSITE_DARKEN		0;"	o	class:Gmagick
COMPOSITE_DSTATOP		0;"	o	class:Gmagick
COMPOSITE_DST		0;"	o	class:Gmagick
COMPOSITE_DSTIN		0;"	o	class:Gmagick
COMPOSITE_DSTOUT		0;"	o	class:Gmagick
COMPOSITE_DSTOVER		0;"	o	class:Gmagick
COMPOSITE_DIFFERENCE		0;"	o	class:Gmagick
COMPOSITE_DISPLACE		0;"	o	class:Gmagick
COMPOSITE_DISSOLVE		0;"	o	class:Gmagick
COMPOSITE_EXCLUSION		0;"	o	class:Gmagick
COMPOSITE_HARDLIGHT		0;"	o	class:Gmagick
COMPOSITE_HUE		0;"	o	class:Gmagick
COMPOSITE_IN		0;"	o	class:Gmagick
COMPOSITE_LIGHTEN		0;"	o	class:Gmagick
COMPOSITE_LUMINIZE		0;"	o	class:Gmagick
COMPOSITE_MINUS		0;"	o	class:Gmagick
COMPOSITE_MODULATE		0;"	o	class:Gmagick
COMPOSITE_MULTIPLY		0;"	o	class:Gmagick
COMPOSITE_OUT		0;"	o	class:Gmagick
COMPOSITE_OVER		0;"	o	class:Gmagick
COMPOSITE_OVERLAY		0;"	o	class:Gmagick
COMPOSITE_PLUS		0;"	o	class:Gmagick
COMPOSITE_REPLACE		0;"	o	class:Gmagick
COMPOSITE_SATURATE		0;"	o	class:Gmagick
COMPOSITE_SCREEN		0;"	o	class:Gmagick
COMPOSITE_SOFTLIGHT		0;"	o	class:Gmagick
COMPOSITE_SRCATOP		0;"	o	class:Gmagick
COMPOSITE_SRC		0;"	o	class:Gmagick
COMPOSITE_SRCIN		0;"	o	class:Gmagick
COMPOSITE_SRCOUT		0;"	o	class:Gmagick
COMPOSITE_SRCOVER		0;"	o	class:Gmagick
COMPOSITE_SUBTRACT		0;"	o	class:Gmagick
COMPOSITE_THRESHOLD		0;"	o	class:Gmagick
COMPOSITE_XOR		0;"	o	class:Gmagick
MONTAGEMODE_FRAME		0;"	o	class:Gmagick
MONTAGEMODE_UNFRAME		0;"	o	class:Gmagick
MONTAGEMODE_CONCATENATE		0;"	o	class:Gmagick
STYLE_NORMAL		0;"	o	class:Gmagick
STYLE_ITALIC		0;"	o	class:Gmagick
STYLE_OBLIQUE		0;"	o	class:Gmagick
STYLE_ANY		0;"	o	class:Gmagick
FILTER_UNDEFINED		0;"	o	class:Gmagick
FILTER_POINT		0;"	o	class:Gmagick
FILTER_BOX		0;"	o	class:Gmagick
FILTER_TRIANGLE		0;"	o	class:Gmagick
FILTER_HERMITE		0;"	o	class:Gmagick
FILTER_HANNING		0;"	o	class:Gmagick
FILTER_HAMMING		0;"	o	class:Gmagick
FILTER_BLACKMAN		0;"	o	class:Gmagick
FILTER_GAUSSIAN		0;"	o	class:Gmagick
FILTER_QUADRATIC		0;"	o	class:Gmagick
FILTER_CUBIC		0;"	o	class:Gmagick
FILTER_CATROM		0;"	o	class:Gmagick
FILTER_MITCHELL		0;"	o	class:Gmagick
FILTER_LANCZOS		0;"	o	class:Gmagick
FILTER_BESSEL		0;"	o	class:Gmagick
FILTER_SINC		0;"	o	class:Gmagick
IMGTYPE_UNDEFINED		0;"	o	class:Gmagick
IMGTYPE_BILEVEL		0;"	o	class:Gmagick
IMGTYPE_GRAYSCALE		0;"	o	class:Gmagick
IMGTYPE_GRAYSCALEMATTE		0;"	o	class:Gmagick
IMGTYPE_PALETTE		0;"	o	class:Gmagick
IMGTYPE_PALETTEMATTE		0;"	o	class:Gmagick
IMGTYPE_TRUECOLOR		0;"	o	class:Gmagick
IMGTYPE_TRUECOLORMATTE		0;"	o	class:Gmagick
IMGTYPE_COLORSEPARATION		0;"	o	class:Gmagick
IMGTYPE_COLORSEPARATIONMATTE		0;"	o	class:Gmagick
IMGTYPE_OPTIMIZE		0;"	o	class:Gmagick
RESOLUTION_UNDEFINED		0;"	o	class:Gmagick
RESOLUTION_PIXELSPERINCH		0;"	o	class:Gmagick
RESOLUTION_PIXELSPERCENTIMETER		0;"	o	class:Gmagick
COMPRESSION_UNDEFINED		0;"	o	class:Gmagick
COMPRESSION_NO		0;"	o	class:Gmagick
COMPRESSION_BZIP		0;"	o	class:Gmagick
COMPRESSION_FAX		0;"	o	class:Gmagick
COMPRESSION_GROUP4		0;"	o	class:Gmagick
COMPRESSION_JPEG		0;"	o	class:Gmagick
COMPRESSION_JPEG2000		0;"	o	class:Gmagick
COMPRESSION_LOSSLESSJPEG		0;"	o	class:Gmagick
COMPRESSION_LZW		0;"	o	class:Gmagick
COMPRESSION_RLE		0;"	o	class:Gmagick
COMPRESSION_ZIP		0;"	o	class:Gmagick
PAINT_POINT		0;"	o	class:Gmagick
PAINT_REPLACE		0;"	o	class:Gmagick
PAINT_FLOODFILL		0;"	o	class:Gmagick
PAINT_FILLTOBORDER		0;"	o	class:Gmagick
PAINT_RESET		0;"	o	class:Gmagick
GRAVITY_NORTHWEST		0;"	o	class:Gmagick
GRAVITY_NORTH		0;"	o	class:Gmagick
GRAVITY_NORTHEAST		0;"	o	class:Gmagick
GRAVITY_WEST		0;"	o	class:Gmagick
GRAVITY_CENTER		0;"	o	class:Gmagick
GRAVITY_EAST		0;"	o	class:Gmagick
GRAVITY_SOUTHWEST		0;"	o	class:Gmagick
GRAVITY_SOUTH		0;"	o	class:Gmagick
GRAVITY_SOUTHEAST		0;"	o	class:Gmagick
STRETCH_NORMAL		0;"	o	class:Gmagick
STRETCH_ULTRACONDENSED		0;"	o	class:Gmagick
STRETCH_CONDENSED		0;"	o	class:Gmagick
STRETCH_SEMICONDENSED		0;"	o	class:Gmagick
STRETCH_SEMIEXPANDED		0;"	o	class:Gmagick
STRETCH_EXPANDED		0;"	o	class:Gmagick
STRETCH_EXTRAEXPANDED		0;"	o	class:Gmagick
STRETCH_ULTRAEXPANDED		0;"	o	class:Gmagick
STRETCH_ANY		0;"	o	class:Gmagick
ALIGN_UNDEFINED		0;"	o	class:Gmagick
ALIGN_LEFT		0;"	o	class:Gmagick
ALIGN_CENTER		0;"	o	class:Gmagick
ALIGN_RIGHT		0;"	o	class:Gmagick
DECORATION_NO		0;"	o	class:Gmagick
DECORATION_UNDERLINE		0;"	o	class:Gmagick
DECORATION_OVERLINE		0;"	o	class:Gmagick
DECORATION_LINETROUGH		0;"	o	class:Gmagick
NOISE_UNIFORM		0;"	o	class:Gmagick
NOISE_GAUSSIAN		0;"	o	class:Gmagick
NOISE_MULTIPLICATIVEGAUSSIAN		0;"	o	class:Gmagick
NOISE_IMPULSE		0;"	o	class:Gmagick
NOISE_LAPLACIAN		0;"	o	class:Gmagick
NOISE_POISSON		0;"	o	class:Gmagick
CHANNEL_UNDEFINED		0;"	o	class:Gmagick
CHANNEL_RED		0;"	o	class:Gmagick
CHANNEL_GRAY		0;"	o	class:Gmagick
CHANNEL_CYAN		0;"	o	class:Gmagick
CHANNEL_GREEN		0;"	o	class:Gmagick
CHANNEL_MAGENTA		0;"	o	class:Gmagick
CHANNEL_BLUE		0;"	o	class:Gmagick
CHANNEL_YELLOW		0;"	o	class:Gmagick
CHANNEL_ALPHA		0;"	o	class:Gmagick
CHANNEL_OPACITY		0;"	o	class:Gmagick
CHANNEL_MATTE		0;"	o	class:Gmagick
CHANNEL_BLACK		0;"	o	class:Gmagick
CHANNEL_INDEX		0;"	o	class:Gmagick
CHANNEL_ALL		0;"	o	class:Gmagick
METRIC_UNDEFINED		0;"	o	class:Gmagick
METRIC_MEANABSOLUTEERROR		0;"	o	class:Gmagick
METRIC_MEANSQUAREERROR		0;"	o	class:Gmagick
METRIC_PEAKABSOLUTEERROR		0;"	o	class:Gmagick
METRIC_PEAKSIGNALTONOISERATIO		0;"	o	class:Gmagick
METRIC_ROOTMEANSQUAREDERROR		0;"	o	class:Gmagick
PIXEL_CHAR		0;"	o	class:Gmagick
PIXEL_DOUBLE		0;"	o	class:Gmagick
PIXEL_FLOAT		0;"	o	class:Gmagick
PIXEL_INTEGER		0;"	o	class:Gmagick
PIXEL_LONG		0;"	o	class:Gmagick
PIXEL_QUANTUM		0;"	o	class:Gmagick
PIXEL_SHORT		0;"	o	class:Gmagick
COLORSPACE_UNDEFINED		0;"	o	class:Gmagick
COLORSPACE_RGB		0;"	o	class:Gmagick
COLORSPACE_GRAY		0;"	o	class:Gmagick
COLORSPACE_TRANSPARENT		0;"	o	class:Gmagick
COLORSPACE_OHTA		0;"	o	class:Gmagick
COLORSPACE_LAB		0;"	o	class:Gmagick
COLORSPACE_XYZ		0;"	o	class:Gmagick
COLORSPACE_YCBCR		0;"	o	class:Gmagick
COLORSPACE_YCC		0;"	o	class:Gmagick
COLORSPACE_YIQ		0;"	o	class:Gmagick
COLORSPACE_YPBPR		0;"	o	class:Gmagick
COLORSPACE_YUV		0;"	o	class:Gmagick
COLORSPACE_CMYK		0;"	o	class:Gmagick
COLORSPACE_SRGB		0;"	o	class:Gmagick
COLORSPACE_HSB		0;"	o	class:Gmagick
COLORSPACE_HSL		0;"	o	class:Gmagick
COLORSPACE_HWB		0;"	o	class:Gmagick
COLORSPACE_REC601LUMA		0;"	o	class:Gmagick
COLORSPACE_REC709LUMA		0;"	o	class:Gmagick
COLORSPACE_LOG		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_UNDEFINED		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_BACKGROUND		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_CONSTANT		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_EDGE		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_MIRROR		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_TILE		0;"	o	class:Gmagick
VIRTUALPIXELMETHOD_TRANSPARENT		0;"	o	class:Gmagick
PREVIEW_UNDEFINED		0;"	o	class:Gmagick
PREVIEW_ROTATE		0;"	o	class:Gmagick
PREVIEW_SHEAR		0;"	o	class:Gmagick
PREVIEW_ROLL		0;"	o	class:Gmagick
PREVIEW_HUE		0;"	o	class:Gmagick
PREVIEW_SATURATION		0;"	o	class:Gmagick
PREVIEW_BRIGHTNESS		0;"	o	class:Gmagick
PREVIEW_GAMMA		0;"	o	class:Gmagick
PREVIEW_SPIFF		0;"	o	class:Gmagick
PREVIEW_DULL		0;"	o	class:Gmagick
PREVIEW_GRAYSCALE		0;"	o	class:Gmagick
PREVIEW_QUANTIZE		0;"	o	class:Gmagick
PREVIEW_DESPECKLE		0;"	o	class:Gmagick
PREVIEW_REDUCENOISE		0;"	o	class:Gmagick
PREVIEW_ADDNOISE		0;"	o	class:Gmagick
PREVIEW_SHARPEN		0;"	o	class:Gmagick
PREVIEW_BLUR		0;"	o	class:Gmagick
PREVIEW_THRESHOLD		0;"	o	class:Gmagick
PREVIEW_EDGEDETECT		0;"	o	class:Gmagick
PREVIEW_SPREAD		0;"	o	class:Gmagick
PREVIEW_SOLARIZE		0;"	o	class:Gmagick
PREVIEW_SHADE		0;"	o	class:Gmagick
PREVIEW_RAISE		0;"	o	class:Gmagick
PREVIEW_SEGMENT		0;"	o	class:Gmagick
PREVIEW_SWIRL		0;"	o	class:Gmagick
PREVIEW_IMPLODE		0;"	o	class:Gmagick
PREVIEW_WAVE		0;"	o	class:Gmagick
PREVIEW_OILPAINT		0;"	o	class:Gmagick
PREVIEW_CHARCOALDRAWING		0;"	o	class:Gmagick
PREVIEW_JPEG		0;"	o	class:Gmagick
RENDERINGINTENT_UNDEFINED		0;"	o	class:Gmagick
RENDERINGINTENT_SATURATION		0;"	o	class:Gmagick
RENDERINGINTENT_PERCEPTUAL		0;"	o	class:Gmagick
RENDERINGINTENT_ABSOLUTE		0;"	o	class:Gmagick
RENDERINGINTENT_RELATIVE		0;"	o	class:Gmagick
FILLRULE_UNDEFINED		0;"	o	class:Gmagick
FILLRULE_EVENODD		0;"	o	class:Gmagick
FILLRULE_NONZERO		0;"	o	class:Gmagick
PATHUNITS_UNDEFINED		0;"	o	class:Gmagick
PATHUNITS_USERSPACE		0;"	o	class:Gmagick
PATHUNITS_USERSPACEONUSE		0;"	o	class:Gmagick
PATHUNITS_OBJECTBOUNDINGBOX		0;"	o	class:Gmagick
LINECAP_UNDEFINED		0;"	o	class:Gmagick
LINECAP_BUTT		0;"	o	class:Gmagick
LINECAP_ROUND		0;"	o	class:Gmagick
LINECAP_SQUARE		0;"	o	class:Gmagick
LINEJOIN_UNDEFINED		0;"	o	class:Gmagick
LINEJOIN_MITER		0;"	o	class:Gmagick
LINEJOIN_ROUND		0;"	o	class:Gmagick
LINEJOIN_BEVEL		0;"	o	class:Gmagick
RESOURCETYPE_UNDEFINED		0;"	o	class:Gmagick
RESOURCETYPE_AREA		0;"	o	class:Gmagick
RESOURCETYPE_DISK		0;"	o	class:Gmagick
RESOURCETYPE_FILE		0;"	o	class:Gmagick
RESOURCETYPE_MAP		0;"	o	class:Gmagick
RESOURCETYPE_MEMORY		0;"	o	class:Gmagick
ORIENTATION_UNDEFINED		0;"	o	class:Gmagick
ORIENTATION_TOPLEFT		0;"	o	class:Gmagick
ORIENTATION_TOPRIGHT		0;"	o	class:Gmagick
ORIENTATION_BOTTOMRIGHT		0;"	o	class:Gmagick
ORIENTATION_BOTTOMLEFT		0;"	o	class:Gmagick
ORIENTATION_LEFTTOP		0;"	o	class:Gmagick
ORIENTATION_RIGHTTOP		0;"	o	class:Gmagick
ORIENTATION_RIGHTBOTTOM		0;"	o	class:Gmagick
ORIENTATION_LEFTBOTTOM		0;"	o	class:Gmagick
Gmagick		0;"	c
addimage		0;"	f	S:Gmagick function addimage($Gmagick)	class:Gmagick
addnoiseimage		0;"	f	S:Gmagick function addnoiseimage($NOISE)	class:Gmagick
annotateimage		0;"	f	S:Gmagick function annotateimage($GmagickDraw, $x, $y, $angle, $text)	class:Gmagick
blurimage		0;"	f	S:Gmagick function blurimage($radius, $sigma, $channel)	class:Gmagick
borderimage		0;"	f	S:Gmagick function borderimage($color, $width, $height)	class:Gmagick
charcoalimage		0;"	f	S:Gmagick function charcoalimage($radius, $sigma)	class:Gmagick
chopimage		0;"	f	S:Gmagick function chopimage($width, $height, $x, $y)	class:Gmagick
clear		0;"	f	S:Gmagick function clear()	class:Gmagick
commentimage		0;"	f	S:Gmagick function commentimage($comment)	class:Gmagick
compositeimage		0;"	f	S:Gmagick function compositeimage($source, $COMPOSE, $x, $y)	class:Gmagick
__construct		0;"	f	S: function __construct($filename)	class:Gmagick
cropimage		0;"	f	S:Gmagick function cropimage($width, $height, $x, $y)	class:Gmagick
cropthumbnailimage		0;"	f	S:Gmagick function cropthumbnailimage($width, $height)	class:Gmagick
current		0;"	f	S:Gmagick function current()	class:Gmagick
cyclecolormapimage		0;"	f	S:Gmagick function cyclecolormapimage($displace)	class:Gmagick
deconstructimages		0;"	f	S:void function deconstructimages()	class:Gmagick
despeckleimage		0;"	f	S:Gmagick function despeckleimage()	class:Gmagick
destroy		0;"	f	S:Gmagick function destroy()	class:Gmagick
drawimage		0;"	f	S:Gmagick function drawimage($GmagickDraw)	class:Gmagick
edgeimage		0;"	f	S:Gmagick function edgeimage($radius)	class:Gmagick
embossimage		0;"	f	S:Gmagick function embossimage($radius, $sigma)	class:Gmagick
enhanceimage		0;"	f	S:Gmagick function enhanceimage()	class:Gmagick
equalizeimage		0;"	f	S:Gmagick function equalizeimage()	class:Gmagick
flipimage		0;"	f	S:Gmagick function flipimage()	class:Gmagick
flopimage		0;"	f	S:Gmagick function flopimage()	class:Gmagick
frameimage		0;"	f	S:Gmagick function frameimage($color, $width, $height, $inner_bevel, $outer_bevel)	class:Gmagick
gammaimage		0;"	f	S:Gmagick function gammaimage($gamma)	class:Gmagick
getcopyright		0;"	f	S:string function getcopyright()	class:Gmagick
getfilename		0;"	f	S:string function getfilename()	class:Gmagick
getimagebackgroundcolor		0;"	f	S:void function getimagebackgroundcolor()	class:Gmagick
getimageblueprimary		0;"	f	S:array function getimageblueprimary()	class:Gmagick
getimagebordercolor		0;"	f	S:void function getimagebordercolor()	class:Gmagick
getimagechanneldepth		0;"	f	S:int function getimagechanneldepth($channel_type)	class:Gmagick
getimagecolors		0;"	f	S:int function getimagecolors()	class:Gmagick
getimagecolorspace		0;"	f	S:int function getimagecolorspace()	class:Gmagick
getimagecompose		0;"	f	S:int function getimagecompose()	class:Gmagick
getimagedelay		0;"	f	S:int function getimagedelay()	class:Gmagick
getimagedepth		0;"	f	S:int function getimagedepth()	class:Gmagick
getimagedispose		0;"	f	S:int function getimagedispose()	class:Gmagick
getimageextrema		0;"	f	S:array function getimageextrema()	class:Gmagick
getimagefilename		0;"	f	S:string function getimagefilename()	class:Gmagick
getimageformat		0;"	f	S:string function getimageformat()	class:Gmagick
getimagegamma		0;"	f	S:float function getimagegamma()	class:Gmagick
getimagegreenprimary		0;"	f	S:array function getimagegreenprimary()	class:Gmagick
getimageheight		0;"	f	S:int function getimageheight()	class:Gmagick
getimagehistogram		0;"	f	S:array function getimagehistogram()	class:Gmagick
getimageindex		0;"	f	S:int function getimageindex()	class:Gmagick
getimageinterlacescheme		0;"	f	S:int function getimageinterlacescheme()	class:Gmagick
getimageiterations		0;"	f	S:int function getimageiterations()	class:Gmagick
getimagematte		0;"	f	S:int function getimagematte()	class:Gmagick
getimagemattecolor		0;"	f	S:void function getimagemattecolor()	class:Gmagick
getimageprofile		0;"	f	S:string function getimageprofile($name)	class:Gmagick
getimageredprimary		0;"	f	S:array function getimageredprimary()	class:Gmagick
getimagerenderingintent		0;"	f	S:int function getimagerenderingintent()	class:Gmagick
getimageresolution		0;"	f	S:array function getimageresolution()	class:Gmagick
getimagescene		0;"	f	S:int function getimagescene()	class:Gmagick
getimagesignature		0;"	f	S:string function getimagesignature()	class:Gmagick
getimagetype		0;"	f	S:int function getimagetype()	class:Gmagick
getimageunits		0;"	f	S:int function getimageunits()	class:Gmagick
getimagewhitepoint		0;"	f	S:array function getimagewhitepoint()	class:Gmagick
getimagewidth		0;"	f	S:int function getimagewidth()	class:Gmagick
getpackagename		0;"	f	S:string function getpackagename()	class:Gmagick
getquantumdepth		0;"	f	S:array function getquantumdepth()	class:Gmagick
getreleasedate		0;"	f	S:string function getreleasedate()	class:Gmagick
getsamplingfactors		0;"	f	S:array function getsamplingfactors()	class:Gmagick
getsize		0;"	f	S:array function getsize()	class:Gmagick
getversion		0;"	f	S:array function getversion()	class:Gmagick
hasnextimage		0;"	f	S:mixed function hasnextimage()	class:Gmagick
haspreviousimage		0;"	f	S:mixed function haspreviousimage()	class:Gmagick
implodeimage		0;"	f	S:mixed function implodeimage($radius)	class:Gmagick
labelimage		0;"	f	S:mixed function labelimage($label)	class:Gmagick
levelimage		0;"	f	S:mixed function levelimage($blackPoint, $gamma, $whitePoint, $channel = Gmagick::CHANNEL_DEFAULT)	class:Gmagick
magnifyimage		0;"	f	S:mixed function magnifyimage()	class:Gmagick
mapimage		0;"	f	S:Gmagick function mapimage($gmagick, $dither)	class:Gmagick
medianfilterimage		0;"	f	S:void function medianfilterimage($radius)	class:Gmagick
minifyimage		0;"	f	S:void function minifyimage()	class:Gmagick
modulateimage		0;"	f	S:void function modulateimage($brightness, $saturation, $hue)	class:Gmagick
motionblurimage		0;"	f	S:void function motionblurimage($radius, $sigma, $angle)	class:Gmagick
newimage		0;"	f	S:void function newimage($width, $height, $background, $format)	class:Gmagick
nextimage		0;"	f	S:bool function nextimage()	class:Gmagick
normalizeimage		0;"	f	S:void function normalizeimage($channel)	class:Gmagick
oilpaintimage		0;"	f	S:void function oilpaintimage($radius)	class:Gmagick
previousimage		0;"	f	S:bool function previousimage()	class:Gmagick
profileimage		0;"	f	S:void function profileimage($name, $profile)	class:Gmagick
quantizeimage		0;"	f	S:void function quantizeimage($numColors, $colorspace, $treeDepth, $dither, $measureError)	class:Gmagick
quantizeimages		0;"	f	S:void function quantizeimages($numColors, $colorspace, $treeDepth, $dither, $measureError)	class:Gmagick
queryfontmetrics		0;"	f	S:array function queryfontmetrics($draw, $text)	class:Gmagick
queryfonts		0;"	f	S:array function queryfonts($pattern = "*")	class:Gmagick
queryformats		0;"	f	S:array function queryformats($pattern = "*")	class:Gmagick
radialblurimage		0;"	f	S:void function radialblurimage($angle, $channel = Gmagick::CHANNEL_DEFAULT)	class:Gmagick
raiseimage		0;"	f	S:void function raiseimage($width, $height, $x, $y, $raise)	class:Gmagick
read		0;"	f	S:void function read($filename)	class:Gmagick
readimage		0;"	f	S:void function readimage($filename)	class:Gmagick
readimageblob		0;"	f	S:void function readimageblob($imageContents, $filename)	class:Gmagick
readimagefile		0;"	f	S:void function readimagefile($fp, $filename)	class:Gmagick
reducenoiseimage		0;"	f	S:void function reducenoiseimage($radius)	class:Gmagick
removeimage		0;"	f	S:void function removeimage()	class:Gmagick
removeimageprofile		0;"	f	S:string function removeimageprofile($name)	class:Gmagick
resampleimage		0;"	f	S:void function resampleimage($xResolution, $yResolution, $filter, $blur)	class:Gmagick
resizeimage		0;"	f	S:void function resizeimage($width, $height, $filter, $blur, $fit = false)	class:Gmagick
rollimage		0;"	f	S:void function rollimage($x, $y)	class:Gmagick
rotateimage		0;"	f	S:Gmagick function rotateimage($color, $degrees)	class:Gmagick
scaleimage		0;"	f	S:Gmagick function scaleimage($width, $height, $fit = false)	class:Gmagick
separateimagechannel		0;"	f	S:Gmagick function separateimagechannel($channel)	class:Gmagick
setfilename		0;"	f	S:Gmagick function setfilename($filename)	class:Gmagick
setimagebackgroundcolor		0;"	f	S:Gmagick function setimagebackgroundcolor($color)	class:Gmagick
setimageblueprimary		0;"	f	S:Gmagick function setimageblueprimary($x, $y)	class:Gmagick
setimagebordercolor		0;"	f	S:Gmagick function setimagebordercolor($color)	class:Gmagick
setimagechanneldepth		0;"	f	S:Gmagick function setimagechanneldepth($channel, $depth)	class:Gmagick
setimagecolorspace		0;"	f	S:Gmagick function setimagecolorspace($colorspace)	class:Gmagick
setimagecompose		0;"	f	S:Gmagick function setimagecompose($composite)	class:Gmagick
setimagedelay		0;"	f	S:Gmagick function setimagedelay($delay)	class:Gmagick
setimagedepth		0;"	f	S:Gmagick function setimagedepth($depth)	class:Gmagick
setimagedispose		0;"	f	S:Gmagick function setimagedispose($disposeType)	class:Gmagick
setimagefilename		0;"	f	S:Gmagick function setimagefilename($filename)	class:Gmagick
setimageformat		0;"	f	S:Gmagick function setimageformat($imageFormat)	class:Gmagick
setimagegamma		0;"	f	S:Gmagick function setimagegamma($gamma)	class:Gmagick
setimagegreenprimary		0;"	f	S:Gmagick function setimagegreenprimary($x, $y)	class:Gmagick
setimageindex		0;"	f	S:Gmagick function setimageindex($index)	class:Gmagick
setimageinterlacescheme		0;"	f	S:Gmagick function setimageinterlacescheme($interlace)	class:Gmagick
setimageiterations		0;"	f	S:Gmagick function setimageiterations($iterations)	class:Gmagick
setimageprofile		0;"	f	S:Gmagick function setimageprofile($name, $profile)	class:Gmagick
setimageredprimary		0;"	f	S:Gmagick function setimageredprimary($x, $y)	class:Gmagick
setimagerenderingintent		0;"	f	S:Gmagick function setimagerenderingintent($rendering_intent)	class:Gmagick
setimageresolution		0;"	f	S:Gmagick function setimageresolution($xResolution, $yResolution)	class:Gmagick
setimagescene		0;"	f	S:Gmagick function setimagescene($scene)	class:Gmagick
setimagetype		0;"	f	S:Gmagick function setimagetype($imgType)	class:Gmagick
setimageunits		0;"	f	S:Gmagick function setimageunits($resolution)	class:Gmagick
setimagewhitepoint		0;"	f	S:Gmagick function setimagewhitepoint($x, $y)	class:Gmagick
setsamplingfactors		0;"	f	S:Gmagick function setsamplingfactors($factors)	class:Gmagick
setsize		0;"	f	S:Gmagick function setsize($columns, $rows)	class:Gmagick
shearimage		0;"	f	S:Gmagick function shearimage($color, $xShear, $yShear)	class:Gmagick
solarizeimage		0;"	f	S:Gmagick function solarizeimage($threshold)	class:Gmagick
spreadimage		0;"	f	S:Gmagick function spreadimage($radius)	class:Gmagick
stripimage		0;"	f	S:Gmagick function stripimage()	class:Gmagick
swirlimage		0;"	f	S:Gmagick function swirlimage($degrees)	class:Gmagick
thumbnailimage		0;"	f	S:Gmagick function thumbnailimage($width, $height, $fit = false)	class:Gmagick
trimimage		0;"	f	S:Gmagick function trimimage($fuzz)	class:Gmagick
write		0;"	f	S:void function write($filename)	class:Gmagick
writeimage		0;"	f	S:Gmagick function writeimage($filename, $all_frames = false)	class:Gmagick
GmagickDraw		0;"	c
annotate		0;"	f	S:GmagickDraw function annotate($x, $y, $text)	class:GmagickDraw
arc		0;"	f	S:GmagickDraw function arc($sx, $sy, $ex, $ey, $sd, $ed)	class:GmagickDraw
bezier		0;"	f	S:GmagickDraw function bezier($coordinate_array)	class:GmagickDraw
ellipse		0;"	f	S:GmagickDraw function ellipse($ox, $oy, $rx, $ry, $start, $end)	class:GmagickDraw
getfillcolor		0;"	f	S:void function getfillcolor()	class:GmagickDraw
getfillopacity		0;"	f	S:float function getfillopacity()	class:GmagickDraw
getfont		0;"	f	S:string function getfont()	class:GmagickDraw
getfontsize		0;"	f	S:float function getfontsize()	class:GmagickDraw
getfontstyle		0;"	f	S:int function getfontstyle()	class:GmagickDraw
getfontweight		0;"	f	S:int function getfontweight()	class:GmagickDraw
getstrokecolor		0;"	f	S:void function getstrokecolor()	class:GmagickDraw
getstrokeopacity		0;"	f	S:float function getstrokeopacity()	class:GmagickDraw
getstrokewidth		0;"	f	S:float function getstrokewidth()	class:GmagickDraw
gettextdecoration		0;"	f	S:int function gettextdecoration()	class:GmagickDraw
gettextencoding		0;"	f	S:string function gettextencoding()	class:GmagickDraw
line		0;"	f	S:GmagickDraw function line($sx, $sy, $ex, $ey)	class:GmagickDraw
point		0;"	f	S:GmagickDraw function point($x, $y)	class:GmagickDraw
polygon		0;"	f	S:GmagickDraw function polygon($coordinates)	class:GmagickDraw
polyline		0;"	f	S:GmagickDraw function polyline($coordinate_array)	class:GmagickDraw
rectangle		0;"	f	S:GmagickDraw function rectangle($x1, $y1, $x2, $y2)	class:GmagickDraw
rotate		0;"	f	S:GmagickDraw function rotate($degrees)	class:GmagickDraw
roundrectangle		0;"	f	S:GmagickDraw function roundrectangle($x1, $y1, $x2, $y2, $rx, $ry)	class:GmagickDraw
scale		0;"	f	S:GmagickDraw function scale($x, $y)	class:GmagickDraw
setfillcolor		0;"	f	S:GmagickDraw function setfillcolor($color)	class:GmagickDraw
setfillopacity		0;"	f	S:GmagickDraw function setfillopacity($fill_opacity)	class:GmagickDraw
setfont		0;"	f	S:GmagickDraw function setfont($font)	class:GmagickDraw
setfontsize		0;"	f	S:GmagickDraw function setfontsize($pointsize)	class:GmagickDraw
setfontstyle		0;"	f	S:GmagickDraw function setfontstyle($style)	class:GmagickDraw
setfontweight		0;"	f	S:GmagickDraw function setfontweight($weight)	class:GmagickDraw
setstrokecolor		0;"	f	S:GmagickDraw function setstrokecolor($color)	class:GmagickDraw
setstrokeopacity		0;"	f	S:GmagickDraw function setstrokeopacity($stroke_opacity)	class:GmagickDraw
setstrokewidth		0;"	f	S:GmagickDraw function setstrokewidth($width)	class:GmagickDraw
settextdecoration		0;"	f	S:GmagickDraw function settextdecoration($decoration)	class:GmagickDraw
settextencoding		0;"	f	S:GmagickDraw function settextencoding($encoding)	class:GmagickDraw
GmagickPixel		0;"	c
__construct		0;"	f	S: function __construct($color)	class:GmagickPixel
getcolor		0;"	f	S:mixed function getcolor($as_array, $normalize_array)	class:GmagickPixel
getcolorcount		0;"	f	S:int function getcolorcount()	class:GmagickPixel
getcolorvalue		0;"	f	S:float function getcolorvalue($color)	class:GmagickPixel
setcolor		0;"	f	S:GmagickPixel function setcolor($color)	class:GmagickPixel
setcolorvalue		0;"	f	S:GmagickPixel function setcolorvalue($color, $value)	class:GmagickPixel
COLOR_BLACK		0;"	o	class:imagick
COLOR_BLUE		0;"	o	class:imagick
COLOR_CYAN		0;"	o	class:imagick
COLOR_GREEN		0;"	o	class:imagick
COLOR_RED		0;"	o	class:imagick
COLOR_YELLOW		0;"	o	class:imagick
COLOR_MAGENTA		0;"	o	class:imagick
COLOR_OPACITY		0;"	o	class:imagick
COLOR_ALPHA		0;"	o	class:imagick
COLOR_FUZZ		0;"	o	class:imagick
DISPOSE_UNRECOGNIZED		0;"	o	class:imagick
DISPOSE_UNDEFINED		0;"	o	class:imagick
DISPOSE_NONE		0;"	o	class:imagick
DISPOSE_BACKGROUND		0;"	o	class:imagick
DISPOSE_PREVIOUS		0;"	o	class:imagick
COMPOSITE_DEFAULT		0;"	o	class:imagick
COMPOSITE_UNDEFINED		0;"	o	class:imagick
COMPOSITE_NO		0;"	o	class:imagick
COMPOSITE_ADD		0;"	o	class:imagick
COMPOSITE_ATOP		0;"	o	class:imagick
COMPOSITE_BLEND		0;"	o	class:imagick
COMPOSITE_BUMPMAP		0;"	o	class:imagick
COMPOSITE_CLEAR		0;"	o	class:imagick
COMPOSITE_COLORBURN		0;"	o	class:imagick
COMPOSITE_COLORDODGE		0;"	o	class:imagick
COMPOSITE_COLORIZE		0;"	o	class:imagick
COMPOSITE_COPYBLACK		0;"	o	class:imagick
COMPOSITE_COPYBLUE		0;"	o	class:imagick
COMPOSITE_COPY		0;"	o	class:imagick
COMPOSITE_COPYCYAN		0;"	o	class:imagick
COMPOSITE_COPYGREEN		0;"	o	class:imagick
COMPOSITE_COPYMAGENTA		0;"	o	class:imagick
COMPOSITE_COPYOPACITY		0;"	o	class:imagick
COMPOSITE_COPYRED		0;"	o	class:imagick
COMPOSITE_COPYYELLOW		0;"	o	class:imagick
COMPOSITE_DARKEN		0;"	o	class:imagick
COMPOSITE_DSTATOP		0;"	o	class:imagick
COMPOSITE_DST		0;"	o	class:imagick
COMPOSITE_DSTIN		0;"	o	class:imagick
COMPOSITE_DSTOUT		0;"	o	class:imagick
COMPOSITE_DSTOVER		0;"	o	class:imagick
COMPOSITE_DIFFERENCE		0;"	o	class:imagick
COMPOSITE_DISPLACE		0;"	o	class:imagick
COMPOSITE_DISSOLVE		0;"	o	class:imagick
COMPOSITE_EXCLUSION		0;"	o	class:imagick
COMPOSITE_HARDLIGHT		0;"	o	class:imagick
COMPOSITE_HUE		0;"	o	class:imagick
COMPOSITE_IN		0;"	o	class:imagick
COMPOSITE_LIGHTEN		0;"	o	class:imagick
COMPOSITE_LUMINIZE		0;"	o	class:imagick
COMPOSITE_MINUS		0;"	o	class:imagick
COMPOSITE_MODULATE		0;"	o	class:imagick
COMPOSITE_MULTIPLY		0;"	o	class:imagick
COMPOSITE_OUT		0;"	o	class:imagick
COMPOSITE_OVER		0;"	o	class:imagick
COMPOSITE_OVERLAY		0;"	o	class:imagick
COMPOSITE_PLUS		0;"	o	class:imagick
COMPOSITE_REPLACE		0;"	o	class:imagick
COMPOSITE_SATURATE		0;"	o	class:imagick
COMPOSITE_SCREEN		0;"	o	class:imagick
COMPOSITE_SOFTLIGHT		0;"	o	class:imagick
COMPOSITE_SRCATOP		0;"	o	class:imagick
COMPOSITE_SRC		0;"	o	class:imagick
COMPOSITE_SRCIN		0;"	o	class:imagick
COMPOSITE_SRCOUT		0;"	o	class:imagick
COMPOSITE_SRCOVER		0;"	o	class:imagick
COMPOSITE_SUBTRACT		0;"	o	class:imagick
COMPOSITE_THRESHOLD		0;"	o	class:imagick
COMPOSITE_XOR		0;"	o	class:imagick
MONTAGEMODE_FRAME		0;"	o	class:imagick
MONTAGEMODE_UNFRAME		0;"	o	class:imagick
MONTAGEMODE_CONCATENATE		0;"	o	class:imagick
STYLE_NORMAL		0;"	o	class:imagick
STYLE_ITALIC		0;"	o	class:imagick
STYLE_OBLIQUE		0;"	o	class:imagick
STYLE_ANY		0;"	o	class:imagick
FILTER_UNDEFINED		0;"	o	class:imagick
FILTER_POINT		0;"	o	class:imagick
FILTER_BOX		0;"	o	class:imagick
FILTER_TRIANGLE		0;"	o	class:imagick
FILTER_HERMITE		0;"	o	class:imagick
FILTER_HANNING		0;"	o	class:imagick
FILTER_HAMMING		0;"	o	class:imagick
FILTER_BLACKMAN		0;"	o	class:imagick
FILTER_GAUSSIAN		0;"	o	class:imagick
FILTER_QUADRATIC		0;"	o	class:imagick
FILTER_CUBIC		0;"	o	class:imagick
FILTER_CATROM		0;"	o	class:imagick
FILTER_MITCHELL		0;"	o	class:imagick
FILTER_LANCZOS		0;"	o	class:imagick
FILTER_BESSEL		0;"	o	class:imagick
FILTER_SINC		0;"	o	class:imagick
IMGTYPE_UNDEFINED		0;"	o	class:imagick
IMGTYPE_BILEVEL		0;"	o	class:imagick
IMGTYPE_GRAYSCALE		0;"	o	class:imagick
IMGTYPE_GRAYSCALEMATTE		0;"	o	class:imagick
IMGTYPE_PALETTE		0;"	o	class:imagick
IMGTYPE_PALETTEMATTE		0;"	o	class:imagick
IMGTYPE_TRUECOLOR		0;"	o	class:imagick
IMGTYPE_TRUECOLORMATTE		0;"	o	class:imagick
IMGTYPE_COLORSEPARATION		0;"	o	class:imagick
IMGTYPE_COLORSEPARATIONMATTE		0;"	o	class:imagick
IMGTYPE_OPTIMIZE		0;"	o	class:imagick
RESOLUTION_UNDEFINED		0;"	o	class:imagick
RESOLUTION_PIXELSPERINCH		0;"	o	class:imagick
RESOLUTION_PIXELSPERCENTIMETER		0;"	o	class:imagick
COMPRESSION_UNDEFINED		0;"	o	class:imagick
COMPRESSION_NO		0;"	o	class:imagick
COMPRESSION_BZIP		0;"	o	class:imagick
COMPRESSION_FAX		0;"	o	class:imagick
COMPRESSION_GROUP4		0;"	o	class:imagick
COMPRESSION_JPEG		0;"	o	class:imagick
COMPRESSION_JPEG2000		0;"	o	class:imagick
COMPRESSION_LOSSLESSJPEG		0;"	o	class:imagick
COMPRESSION_LZW		0;"	o	class:imagick
COMPRESSION_RLE		0;"	o	class:imagick
COMPRESSION_ZIP		0;"	o	class:imagick
COMPRESSION_DXT1		0;"	o	class:imagick
COMPRESSION_DXT3		0;"	o	class:imagick
COMPRESSION_DXT5		0;"	o	class:imagick
PAINT_POINT		0;"	o	class:imagick
PAINT_REPLACE		0;"	o	class:imagick
PAINT_FLOODFILL		0;"	o	class:imagick
PAINT_FILLTOBORDER		0;"	o	class:imagick
PAINT_RESET		0;"	o	class:imagick
GRAVITY_NORTHWEST		0;"	o	class:imagick
GRAVITY_NORTH		0;"	o	class:imagick
GRAVITY_NORTHEAST		0;"	o	class:imagick
GRAVITY_WEST		0;"	o	class:imagick
GRAVITY_CENTER		0;"	o	class:imagick
GRAVITY_EAST		0;"	o	class:imagick
GRAVITY_SOUTHWEST		0;"	o	class:imagick
GRAVITY_SOUTH		0;"	o	class:imagick
GRAVITY_SOUTHEAST		0;"	o	class:imagick
STRETCH_NORMAL		0;"	o	class:imagick
STRETCH_ULTRACONDENSED		0;"	o	class:imagick
STRETCH_CONDENSED		0;"	o	class:imagick
STRETCH_SEMICONDENSED		0;"	o	class:imagick
STRETCH_SEMIEXPANDED		0;"	o	class:imagick
STRETCH_EXPANDED		0;"	o	class:imagick
STRETCH_EXTRAEXPANDED		0;"	o	class:imagick
STRETCH_ULTRAEXPANDED		0;"	o	class:imagick
STRETCH_ANY		0;"	o	class:imagick
ALIGN_UNDEFINED		0;"	o	class:imagick
ALIGN_LEFT		0;"	o	class:imagick
ALIGN_CENTER		0;"	o	class:imagick
ALIGN_RIGHT		0;"	o	class:imagick
DECORATION_NO		0;"	o	class:imagick
DECORATION_UNDERLINE		0;"	o	class:imagick
DECORATION_OVERLINE		0;"	o	class:imagick
DECORATION_LINETROUGH		0;"	o	class:imagick
NOISE_UNIFORM		0;"	o	class:imagick
NOISE_GAUSSIAN		0;"	o	class:imagick
NOISE_MULTIPLICATIVEGAUSSIAN		0;"	o	class:imagick
NOISE_IMPULSE		0;"	o	class:imagick
NOISE_LAPLACIAN		0;"	o	class:imagick
NOISE_POISSON		0;"	o	class:imagick
NOISE_RANDOM		0;"	o	class:imagick
CHANNEL_UNDEFINED		0;"	o	class:imagick
CHANNEL_RED		0;"	o	class:imagick
CHANNEL_GRAY		0;"	o	class:imagick
CHANNEL_CYAN		0;"	o	class:imagick
CHANNEL_GREEN		0;"	o	class:imagick
CHANNEL_MAGENTA		0;"	o	class:imagick
CHANNEL_BLUE		0;"	o	class:imagick
CHANNEL_YELLOW		0;"	o	class:imagick
CHANNEL_ALPHA		0;"	o	class:imagick
CHANNEL_OPACITY		0;"	o	class:imagick
CHANNEL_MATTE		0;"	o	class:imagick
CHANNEL_BLACK		0;"	o	class:imagick
CHANNEL_INDEX		0;"	o	class:imagick
CHANNEL_ALL		0;"	o	class:imagick
CHANNEL_DEFAULT		0;"	o	class:imagick
METRIC_UNDEFINED		0;"	o	class:imagick
METRIC_MEANABSOLUTEERROR		0;"	o	class:imagick
METRIC_MEANSQUAREERROR		0;"	o	class:imagick
METRIC_PEAKABSOLUTEERROR		0;"	o	class:imagick
METRIC_PEAKSIGNALTONOISERATIO		0;"	o	class:imagick
METRIC_ROOTMEANSQUAREDERROR		0;"	o	class:imagick
PIXEL_CHAR		0;"	o	class:imagick
PIXEL_DOUBLE		0;"	o	class:imagick
PIXEL_FLOAT		0;"	o	class:imagick
PIXEL_INTEGER		0;"	o	class:imagick
PIXEL_LONG		0;"	o	class:imagick
PIXEL_QUANTUM		0;"	o	class:imagick
PIXEL_SHORT		0;"	o	class:imagick
EVALUATE_UNDEFINED		0;"	o	class:imagick
EVALUATE_ADD		0;"	o	class:imagick
EVALUATE_AND		0;"	o	class:imagick
EVALUATE_DIVIDE		0;"	o	class:imagick
EVALUATE_LEFTSHIFT		0;"	o	class:imagick
EVALUATE_MAX		0;"	o	class:imagick
EVALUATE_MIN		0;"	o	class:imagick
EVALUATE_MULTIPLY		0;"	o	class:imagick
EVALUATE_OR		0;"	o	class:imagick
EVALUATE_RIGHTSHIFT		0;"	o	class:imagick
EVALUATE_SET		0;"	o	class:imagick
EVALUATE_SUBTRACT		0;"	o	class:imagick
EVALUATE_XOR		0;"	o	class:imagick
EVALUATE_POW		0;"	o	class:imagick
EVALUATE_LOG		0;"	o	class:imagick
EVALUATE_THRESHOLD		0;"	o	class:imagick
EVALUATE_THRESHOLDBLACK		0;"	o	class:imagick
EVALUATE_THRESHOLDWHITE		0;"	o	class:imagick
EVALUATE_GAUSSIANNOISE		0;"	o	class:imagick
EVALUATE_IMPULSENOISE		0;"	o	class:imagick
EVALUATE_LAPLACIANNOISE		0;"	o	class:imagick
EVALUATE_MULTIPLICATIVENOISE		0;"	o	class:imagick
EVALUATE_POISSONNOISE		0;"	o	class:imagick
EVALUATE_UNIFORMNOISE		0;"	o	class:imagick
EVALUATE_COSINE		0;"	o	class:imagick
EVALUATE_SINE		0;"	o	class:imagick
EVALUATE_ADDMODULUS		0;"	o	class:imagick
COLORSPACE_UNDEFINED		0;"	o	class:imagick
COLORSPACE_RGB		0;"	o	class:imagick
COLORSPACE_GRAY		0;"	o	class:imagick
COLORSPACE_TRANSPARENT		0;"	o	class:imagick
COLORSPACE_OHTA		0;"	o	class:imagick
COLORSPACE_LAB		0;"	o	class:imagick
COLORSPACE_XYZ		0;"	o	class:imagick
COLORSPACE_YCBCR		0;"	o	class:imagick
COLORSPACE_YCC		0;"	o	class:imagick
COLORSPACE_YIQ		0;"	o	class:imagick
COLORSPACE_YPBPR		0;"	o	class:imagick
COLORSPACE_YUV		0;"	o	class:imagick
COLORSPACE_CMYK		0;"	o	class:imagick
COLORSPACE_SRGB		0;"	o	class:imagick
COLORSPACE_HSB		0;"	o	class:imagick
COLORSPACE_HSL		0;"	o	class:imagick
COLORSPACE_HWB		0;"	o	class:imagick
COLORSPACE_REC601LUMA		0;"	o	class:imagick
COLORSPACE_REC709LUMA		0;"	o	class:imagick
COLORSPACE_LOG		0;"	o	class:imagick
COLORSPACE_CMY		0;"	o	class:imagick
VIRTUALPIXELMETHOD_UNDEFINED		0;"	o	class:imagick
VIRTUALPIXELMETHOD_BACKGROUND		0;"	o	class:imagick
VIRTUALPIXELMETHOD_CONSTANT		0;"	o	class:imagick
VIRTUALPIXELMETHOD_EDGE		0;"	o	class:imagick
VIRTUALPIXELMETHOD_MIRROR		0;"	o	class:imagick
VIRTUALPIXELMETHOD_TILE		0;"	o	class:imagick
VIRTUALPIXELMETHOD_TRANSPARENT		0;"	o	class:imagick
VIRTUALPIXELMETHOD_MASK		0;"	o	class:imagick
VIRTUALPIXELMETHOD_BLACK		0;"	o	class:imagick
VIRTUALPIXELMETHOD_GRAY		0;"	o	class:imagick
VIRTUALPIXELMETHOD_WHITE		0;"	o	class:imagick
VIRTUALPIXELMETHOD_HORIZONTALTILE		0;"	o	class:imagick
VIRTUALPIXELMETHOD_VERTICALTILE		0;"	o	class:imagick
PREVIEW_UNDEFINED		0;"	o	class:imagick
PREVIEW_ROTATE		0;"	o	class:imagick
PREVIEW_SHEAR		0;"	o	class:imagick
PREVIEW_ROLL		0;"	o	class:imagick
PREVIEW_HUE		0;"	o	class:imagick
PREVIEW_SATURATION		0;"	o	class:imagick
PREVIEW_BRIGHTNESS		0;"	o	class:imagick
PREVIEW_GAMMA		0;"	o	class:imagick
PREVIEW_SPIFF		0;"	o	class:imagick
PREVIEW_DULL		0;"	o	class:imagick
PREVIEW_GRAYSCALE		0;"	o	class:imagick
PREVIEW_QUANTIZE		0;"	o	class:imagick
PREVIEW_DESPECKLE		0;"	o	class:imagick
PREVIEW_REDUCENOISE		0;"	o	class:imagick
PREVIEW_ADDNOISE		0;"	o	class:imagick
PREVIEW_SHARPEN		0;"	o	class:imagick
PREVIEW_BLUR		0;"	o	class:imagick
PREVIEW_THRESHOLD		0;"	o	class:imagick
PREVIEW_EDGEDETECT		0;"	o	class:imagick
PREVIEW_SPREAD		0;"	o	class:imagick
PREVIEW_SOLARIZE		0;"	o	class:imagick
PREVIEW_SHADE		0;"	o	class:imagick
PREVIEW_RAISE		0;"	o	class:imagick
PREVIEW_SEGMENT		0;"	o	class:imagick
PREVIEW_SWIRL		0;"	o	class:imagick
PREVIEW_IMPLODE		0;"	o	class:imagick
PREVIEW_WAVE		0;"	o	class:imagick
PREVIEW_OILPAINT		0;"	o	class:imagick
PREVIEW_CHARCOALDRAWING		0;"	o	class:imagick
PREVIEW_JPEG		0;"	o	class:imagick
RENDERINGINTENT_UNDEFINED		0;"	o	class:imagick
RENDERINGINTENT_SATURATION		0;"	o	class:imagick
RENDERINGINTENT_PERCEPTUAL		0;"	o	class:imagick
RENDERINGINTENT_ABSOLUTE		0;"	o	class:imagick
RENDERINGINTENT_RELATIVE		0;"	o	class:imagick
INTERLACE_UNDEFINED		0;"	o	class:imagick
INTERLACE_NO		0;"	o	class:imagick
INTERLACE_LINE		0;"	o	class:imagick
INTERLACE_PLANE		0;"	o	class:imagick
INTERLACE_PARTITION		0;"	o	class:imagick
INTERLACE_GIF		0;"	o	class:imagick
INTERLACE_JPEG		0;"	o	class:imagick
INTERLACE_PNG		0;"	o	class:imagick
FILLRULE_UNDEFINED		0;"	o	class:imagick
FILLRULE_EVENODD		0;"	o	class:imagick
FILLRULE_NONZERO		0;"	o	class:imagick
PATHUNITS_UNDEFINED		0;"	o	class:imagick
PATHUNITS_USERSPACE		0;"	o	class:imagick
PATHUNITS_USERSPACEONUSE		0;"	o	class:imagick
PATHUNITS_OBJECTBOUNDINGBOX		0;"	o	class:imagick
LINECAP_UNDEFINED		0;"	o	class:imagick
LINECAP_BUTT		0;"	o	class:imagick
LINECAP_ROUND		0;"	o	class:imagick
LINECAP_SQUARE		0;"	o	class:imagick
LINEJOIN_UNDEFINED		0;"	o	class:imagick
LINEJOIN_MITER		0;"	o	class:imagick
LINEJOIN_ROUND		0;"	o	class:imagick
LINEJOIN_BEVEL		0;"	o	class:imagick
RESOURCETYPE_UNDEFINED		0;"	o	class:imagick
RESOURCETYPE_AREA		0;"	o	class:imagick
RESOURCETYPE_DISK		0;"	o	class:imagick
RESOURCETYPE_FILE		0;"	o	class:imagick
RESOURCETYPE_MAP		0;"	o	class:imagick
RESOURCETYPE_MEMORY		0;"	o	class:imagick
RESOURCETYPE_THREAD		0;"	o	class:imagick
LAYERMETHOD_UNDEFINED		0;"	o	class:imagick
LAYERMETHOD_COALESCE		0;"	o	class:imagick
LAYERMETHOD_COMPAREANY		0;"	o	class:imagick
LAYERMETHOD_COMPARECLEAR		0;"	o	class:imagick
LAYERMETHOD_COMPAREOVERLAY		0;"	o	class:imagick
LAYERMETHOD_DISPOSE		0;"	o	class:imagick
LAYERMETHOD_OPTIMIZE		0;"	o	class:imagick
LAYERMETHOD_OPTIMIZEPLUS		0;"	o	class:imagick
LAYERMETHOD_OPTIMIZEIMAGE		0;"	o	class:imagick
LAYERMETHOD_OPTIMIZETRANS		0;"	o	class:imagick
LAYERMETHOD_REMOVEDUPS		0;"	o	class:imagick
LAYERMETHOD_REMOVEZERO		0;"	o	class:imagick
LAYERMETHOD_COMPOSITE		0;"	o	class:imagick
LAYERMETHOD_MERGE		0;"	o	class:imagick
LAYERMETHOD_FLATTEN		0;"	o	class:imagick
LAYERMETHOD_MOSAIC		0;"	o	class:imagick
ORIENTATION_UNDEFINED		0;"	o	class:imagick
ORIENTATION_TOPLEFT		0;"	o	class:imagick
ORIENTATION_TOPRIGHT		0;"	o	class:imagick
ORIENTATION_BOTTOMRIGHT		0;"	o	class:imagick
ORIENTATION_BOTTOMLEFT		0;"	o	class:imagick
ORIENTATION_LEFTTOP		0;"	o	class:imagick
ORIENTATION_RIGHTTOP		0;"	o	class:imagick
ORIENTATION_RIGHTBOTTOM		0;"	o	class:imagick
ORIENTATION_LEFTBOTTOM		0;"	o	class:imagick
DISTORTION_UNDEFINED		0;"	o	class:imagick
DISTORTION_AFFINE		0;"	o	class:imagick
DISTORTION_AFFINEPROJECTION		0;"	o	class:imagick
DISTORTION_ARC		0;"	o	class:imagick
DISTORTION_BILINEAR		0;"	o	class:imagick
DISTORTION_PERSPECTIVE		0;"	o	class:imagick
DISTORTION_PERSPECTIVEPROJECTION		0;"	o	class:imagick
DISTORTION_SCALEROTATETRANSLATE		0;"	o	class:imagick
DISTORTION_POLYNOMIAL		0;"	o	class:imagick
DISTORTION_POLAR		0;"	o	class:imagick
DISTORTION_DEPOLAR		0;"	o	class:imagick
DISTORTION_BARREL		0;"	o	class:imagick
DISTORTION_BARRELINVERSE		0;"	o	class:imagick
DISTORTION_SHEPARDS		0;"	o	class:imagick
DISTORTION_SENTINEL		0;"	o	class:imagick
ALPHACHANNEL_ACTIVATE		0;"	o	class:imagick
ALPHACHANNEL_DEACTIVATE		0;"	o	class:imagick
ALPHACHANNEL_RESET		0;"	o	class:imagick
ALPHACHANNEL_SET		0;"	o	class:imagick
ALPHACHANNEL_UNDEFINED		0;"	o	class:imagick
ALPHACHANNEL_COPY		0;"	o	class:imagick
ALPHACHANNEL_EXTRACT		0;"	o	class:imagick
ALPHACHANNEL_OPAQUE		0;"	o	class:imagick
ALPHACHANNEL_SHAPE		0;"	o	class:imagick
ALPHACHANNEL_TRANSPARENT		0;"	o	class:imagick
SPARSECOLORMETHOD_UNDEFINED		0;"	o	class:imagick
SPARSECOLORMETHOD_BARYCENTRIC		0;"	o	class:imagick
SPARSECOLORMETHOD_BILINEAR		0;"	o	class:imagick
SPARSECOLORMETHOD_POLYNOMIAL		0;"	o	class:imagick
SPARSECOLORMETHOD_SPEPARDS		0;"	o	class:imagick
SPARSECOLORMETHOD_VORONOI		0;"	o	class:imagick
FUNCTION_UNDEFINED		0;"	o	class:imagick
FUNCTION_POLYNOMIAL		0;"	o	class:imagick
FUNCTION_SINUSOID		0;"	o	class:imagick
INTERPOLATE_UNDEFINED		0;"	o	class:imagick
INTERPOLATE_AVERAGE		0;"	o	class:imagick
INTERPOLATE_BICUBIC		0;"	o	class:imagick
INTERPOLATE_BILINEAR		0;"	o	class:imagick
INTERPOLATE_FILTER		0;"	o	class:imagick
INTERPOLATE_INTEGER		0;"	o	class:imagick
INTERPOLATE_MESH		0;"	o	class:imagick
INTERPOLATE_NEARESTNEIGHBOR		0;"	o	class:imagick
INTERPOLATE_SPLINE		0;"	o	class:imagick
DITHERMETHOD_UNDEFINED		0;"	o	class:imagick
DITHERMETHOD_NO		0;"	o	class:imagick
DITHERMETHOD_RIEMERSMA		0;"	o	class:imagick
DITHERMETHOD_FLOYDSTEINBERG		0;"	o	class:imagick
Imagick		0;"	c
adaptiveBlurImage		0;"	f	S:bool function adaptiveBlurImage($radius, $sigma, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
adaptiveResizeImage		0;"	f	S:bool function adaptiveResizeImage($columns, $rows, $bestfit = false)	class:Imagick
adaptiveSharpenImage		0;"	f	S:bool function adaptiveSharpenImage($radius, $sigma, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
adaptiveThresholdImage		0;"	f	S:bool function adaptiveThresholdImage($width, $height, $offset)	class:Imagick
addImage		0;"	f	S:bool function addImage($source)	class:Imagick
addNoiseImage		0;"	f	S:bool function addNoiseImage($noise_type, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
affineTransformImage		0;"	f	S:bool function affineTransformImage($matrix)	class:Imagick
animateImages		0;"	f	S:bool function animateImages($x_server)	class:Imagick
annotateImage		0;"	f	S:bool function annotateImage($draw_settings, $x, $y, $angle, $text)	class:Imagick
appendImages		0;"	f	S:Imagick function appendImages($stack = false)	class:Imagick
averageImages		0;"	f	S:Imagick function averageImages()	class:Imagick
blackThresholdImage		0;"	f	S:bool function blackThresholdImage($threshold)	class:Imagick
blurImage		0;"	f	S:bool function blurImage($radius, $sigma, $channel)	class:Imagick
borderImage		0;"	f	S:bool function borderImage($bordercolor, $width, $height)	class:Imagick
charcoalImage		0;"	f	S:bool function charcoalImage($radius, $sigma)	class:Imagick
chopImage		0;"	f	S:bool function chopImage($width, $height, $x, $y)	class:Imagick
clear		0;"	f	S:bool function clear()	class:Imagick
clipImage		0;"	f	S:bool function clipImage()	class:Imagick
clipPathImage		0;"	f	S:bool function clipPathImage($pathname, $inside)	class:Imagick
clone		0;"	f	S:Imagick function clone()	class:Imagick
clutImage		0;"	f	S:bool function clutImage($lookup_table, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
coalesceImages		0;"	f	S:Imagick function coalesceImages()	class:Imagick
colorFloodfillImage		0;"	f	S:bool function colorFloodfillImage($fill, $fuzz, $bordercolor, $x, $y)	class:Imagick
colorizeImage		0;"	f	S:bool function colorizeImage($colorize, $opacity)	class:Imagick
combineImages		0;"	f	S:Imagick function combineImages($channelType)	class:Imagick
commentImage		0;"	f	S:bool function commentImage($comment)	class:Imagick
compareImageChannels		0;"	f	S:array function compareImageChannels($image, $channelType, $metricType)	class:Imagick
compareImageLayers		0;"	f	S:Imagick function compareImageLayers($method)	class:Imagick
compareImages		0;"	f	S:array function compareImages($compare, $metric)	class:Imagick
compositeImage		0;"	f	S:bool function compositeImage($composite_object, $composite, $x, $y, $channel = Imagick::CHANNEL_ALL)	class:Imagick
__construct		0;"	f	S: function __construct($files)	class:Imagick
contrastImage		0;"	f	S:bool function contrastImage($sharpen)	class:Imagick
contrastStretchImage		0;"	f	S:bool function contrastStretchImage($black_point, $white_point, $channel = Imagick::CHANNEL_ALL)	class:Imagick
convolveImage		0;"	f	S:bool function convolveImage($kernel, $channel = Imagick::CHANNEL_ALL)	class:Imagick
cropImage		0;"	f	S:bool function cropImage($width, $height, $x, $y)	class:Imagick
cropThumbnailImage		0;"	f	S:bool function cropThumbnailImage($width, $height)	class:Imagick
current		0;"	f	S:Imagick function current()	class:Imagick
cycleColormapImage		0;"	f	S:bool function cycleColormapImage($displace)	class:Imagick
decipherImage		0;"	f	S:bool function decipherImage($passphrase)	class:Imagick
deconstructImages		0;"	f	S:Imagick function deconstructImages()	class:Imagick
deleteImageArtifact		0;"	f	S:bool function deleteImageArtifact($artifact)	class:Imagick
deskewImage		0;"	f	S:bool function deskewImage($threshold)	class:Imagick
despeckleImage		0;"	f	S:bool function despeckleImage()	class:Imagick
destroy		0;"	f	S:bool function destroy()	class:Imagick
displayImage		0;"	f	S:bool function displayImage($servername)	class:Imagick
displayImages		0;"	f	S:bool function displayImages($servername)	class:Imagick
distortImage		0;"	f	S:bool function distortImage($method, $arguments, $bestfit)	class:Imagick
drawImage		0;"	f	S:bool function drawImage($draw)	class:Imagick
edgeImage		0;"	f	S:bool function edgeImage($radius)	class:Imagick
embossImage		0;"	f	S:bool function embossImage($radius, $sigma)	class:Imagick
encipherImage		0;"	f	S:bool function encipherImage($passphrase)	class:Imagick
enhanceImage		0;"	f	S:bool function enhanceImage()	class:Imagick
equalizeImage		0;"	f	S:bool function equalizeImage()	class:Imagick
evaluateImage		0;"	f	S:bool function evaluateImage($op, $constant, $channel = Imagick::CHANNEL_ALL)	class:Imagick
exportImagePixels		0;"	f	S:array function exportImagePixels($x, $y, $width, $height, $map, $STORAGE)	class:Imagick
extentImage		0;"	f	S:bool function extentImage($width, $height, $x, $y)	class:Imagick
flattenImages		0;"	f	S:Imagick function flattenImages()	class:Imagick
flipImage		0;"	f	S:bool function flipImage()	class:Imagick
floodFillPaintImage		0;"	f	S:bool function floodFillPaintImage($fill, $fuzz, $target, $x, $y, $invert, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
flopImage		0;"	f	S:bool function flopImage()	class:Imagick
frameImage		0;"	f	S:bool function frameImage($matte_color, $width, $height, $inner_bevel, $outer_bevel)	class:Imagick
functionImage		0;"	f	S:bool function functionImage($function, $arguments, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
fxImage		0;"	f	S:Imagick function fxImage($expression, $channel = Imagick::CHANNEL_ALL)	class:Imagick
gammaImage		0;"	f	S:bool function gammaImage($gamma, $channel = Imagick::CHANNEL_ALL)	class:Imagick
gaussianBlurImage		0;"	f	S:bool function gaussianBlurImage($radius, $sigma, $channel = Imagick::CHANNEL_ALL)	class:Imagick
getColorspace		0;"	f	S:int function getColorspace()	class:Imagick
getCompression		0;"	f	S:int function getCompression()	class:Imagick
getCompressionQuality		0;"	f	S:int function getCompressionQuality()	class:Imagick
getCopyright		0;"	f	S:string function getCopyright()	class:Imagick
getFilename		0;"	f	S:string function getFilename()	class:Imagick
getFont		0;"	f	S:string function getFont()	class:Imagick
getFormat		0;"	f	S:string function getFormat()	class:Imagick
getGravity		0;"	f	S:int function getGravity()	class:Imagick
getHomeURL		0;"	f	S:string function getHomeURL()	class:Imagick
getImage		0;"	f	S:Imagick function getImage()	class:Imagick
getImageAlphaChannel		0;"	f	S:int function getImageAlphaChannel()	class:Imagick
getImageArtifact		0;"	f	S:string function getImageArtifact($artifact)	class:Imagick
getImageBackgroundColor		0;"	f	S:ImagickPixel function getImageBackgroundColor()	class:Imagick
getImageBlob		0;"	f	S:string function getImageBlob()	class:Imagick
getImageBluePrimary		0;"	f	S:array function getImageBluePrimary()	class:Imagick
getImageBorderColor		0;"	f	S:ImagickPixel function getImageBorderColor()	class:Imagick
getImageChannelDepth		0;"	f	S:int function getImageChannelDepth($channel)	class:Imagick
getImageChannelDistortion		0;"	f	S:float function getImageChannelDistortion($reference, $channel, $metric)	class:Imagick
getImageChannelDistortions		0;"	f	S:float function getImageChannelDistortions($reference, $metric, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
getImageChannelExtrema		0;"	f	S:array function getImageChannelExtrema($channel)	class:Imagick
getImageChannelKurtosis		0;"	f	S:array function getImageChannelKurtosis($channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
getImageChannelMean		0;"	f	S:array function getImageChannelMean($channel)	class:Imagick
getImageChannelRange		0;"	f	S:array function getImageChannelRange($channel)	class:Imagick
getImageChannelStatistics		0;"	f	S:array function getImageChannelStatistics()	class:Imagick
getImageClipMask		0;"	f	S:Imagick function getImageClipMask()	class:Imagick
getImageColormapColor		0;"	f	S:ImagickPixel function getImageColormapColor($index)	class:Imagick
getImageColors		0;"	f	S:int function getImageColors()	class:Imagick
getImageColorspace		0;"	f	S:int function getImageColorspace()	class:Imagick
getImageCompose		0;"	f	S:int function getImageCompose()	class:Imagick
getImageCompression		0;"	f	S:int function getImageCompression()	class:Imagick
getImageCompressionQuality		0;"	f	S:int function getImageCompressionQuality()	class:Imagick
getImageDelay		0;"	f	S:int function getImageDelay()	class:Imagick
getImageDepth		0;"	f	S:int function getImageDepth()	class:Imagick
getImageDispose		0;"	f	S:int function getImageDispose()	class:Imagick
getImageDistortion		0;"	f	S:float function getImageDistortion($reference, $metric)	class:Imagick
getImageExtrema		0;"	f	S:array function getImageExtrema()	class:Imagick
getImageFilename		0;"	f	S:string function getImageFilename()	class:Imagick
getImageFormat		0;"	f	S:string function getImageFormat()	class:Imagick
getImageGamma		0;"	f	S:float function getImageGamma()	class:Imagick
getImageGeometry		0;"	f	S:array function getImageGeometry()	class:Imagick
getImageGravity		0;"	f	S:int function getImageGravity()	class:Imagick
getImageGreenPrimary		0;"	f	S:array function getImageGreenPrimary()	class:Imagick
getImageHeight		0;"	f	S:int function getImageHeight()	class:Imagick
getImageHistogram		0;"	f	S:array function getImageHistogram()	class:Imagick
getImageIndex		0;"	f	S:int function getImageIndex()	class:Imagick
getImageInterlaceScheme		0;"	f	S:int function getImageInterlaceScheme()	class:Imagick
getImageInterpolateMethod		0;"	f	S:int function getImageInterpolateMethod()	class:Imagick
getImageIterations		0;"	f	S:int function getImageIterations()	class:Imagick
getImageLength		0;"	f	S:int function getImageLength()	class:Imagick
getImageMagickLicense		0;"	f	S:string function getImageMagickLicense()	class:Imagick
getImageMatte		0;"	f	S:bool function getImageMatte()	class:Imagick
getImageMatteColor		0;"	f	S:ImagickPixel function getImageMatteColor()	class:Imagick
getImageOrientation		0;"	f	S:int function getImageOrientation()	class:Imagick
getImagePage		0;"	f	S:array function getImagePage()	class:Imagick
getImagePixelColor		0;"	f	S:ImagickPixel function getImagePixelColor($x, $y)	class:Imagick
getImageProfile		0;"	f	S:string function getImageProfile($name)	class:Imagick
getImageProfiles		0;"	f	S:array function getImageProfiles($pattern = "*", $only_names = true)	class:Imagick
getImageProperties		0;"	f	S:array function getImageProperties($pattern = "*", $only_names = true)	class:Imagick
getImageProperty		0;"	f	S:string function getImageProperty($name)	class:Imagick
getImageRedPrimary		0;"	f	S:array function getImageRedPrimary()	class:Imagick
getImageRegion		0;"	f	S:Imagick function getImageRegion($width, $height, $x, $y)	class:Imagick
getImageRenderingIntent		0;"	f	S:int function getImageRenderingIntent()	class:Imagick
getImageResolution		0;"	f	S:array function getImageResolution()	class:Imagick
getImagesBlob		0;"	f	S:string function getImagesBlob()	class:Imagick
getImageScene		0;"	f	S:int function getImageScene()	class:Imagick
getImageSignature		0;"	f	S:string function getImageSignature()	class:Imagick
getImageSize		0;"	f	S:int function getImageSize()	class:Imagick
getImageTicksPerSecond		0;"	f	S:int function getImageTicksPerSecond()	class:Imagick
getImageTotalInkDensity		0;"	f	S:float function getImageTotalInkDensity()	class:Imagick
getImageType		0;"	f	S:int function getImageType()	class:Imagick
getImageUnits		0;"	f	S:int function getImageUnits()	class:Imagick
getImageVirtualPixelMethod		0;"	f	S:int function getImageVirtualPixelMethod()	class:Imagick
getImageWhitePoint		0;"	f	S:array function getImageWhitePoint()	class:Imagick
getImageWidth		0;"	f	S:int function getImageWidth()	class:Imagick
getInterlaceScheme		0;"	f	S:int function getInterlaceScheme()	class:Imagick
getIteratorIndex		0;"	f	S:int function getIteratorIndex()	class:Imagick
getNumberImages		0;"	f	S:int function getNumberImages()	class:Imagick
getOption		0;"	f	S:string function getOption($key)	class:Imagick
getPackageName		0;"	f	S:string function getPackageName()	class:Imagick
getPage		0;"	f	S:array function getPage()	class:Imagick
getPixelIterator		0;"	f	S:ImagickPixelIterator function getPixelIterator()	class:Imagick
getPixelRegionIterator		0;"	f	S:ImagickPixelIterator function getPixelRegionIterator($x, $y, $columns, $rows)	class:Imagick
getPointSize		0;"	f	S:float function getPointSize()	class:Imagick
getQuantumDepth		0;"	f	S:array function getQuantumDepth()	class:Imagick
getQuantumRange		0;"	f	S:array function getQuantumRange()	class:Imagick
getReleaseDate		0;"	f	S:string function getReleaseDate()	class:Imagick
getResource		0;"	f	S:int function getResource($type)	class:Imagick
getResourceLimit		0;"	f	S:int function getResourceLimit($type)	class:Imagick
getSamplingFactors		0;"	f	S:array function getSamplingFactors()	class:Imagick
getSize		0;"	f	S:array function getSize()	class:Imagick
getSizeOffset		0;"	f	S:int function getSizeOffset()	class:Imagick
getVersion		0;"	f	S:array function getVersion()	class:Imagick
haldClutImage		0;"	f	S:bool function haldClutImage($clut, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
hasNextImage		0;"	f	S:bool function hasNextImage()	class:Imagick
hasPreviousImage		0;"	f	S:bool function hasPreviousImage()	class:Imagick
identifyImage		0;"	f	S:array function identifyImage($appendRawOutput = false)	class:Imagick
implodeImage		0;"	f	S:bool function implodeImage($radius)	class:Imagick
importImagePixels		0;"	f	S:bool function importImagePixels($x, $y, $width, $height, $map, $storage, $pixels)	class:Imagick
labelImage		0;"	f	S:bool function labelImage($label)	class:Imagick
levelImage		0;"	f	S:bool function levelImage($blackPoint, $gamma, $whitePoint, $channel = Imagick::CHANNEL_ALL)	class:Imagick
linearStretchImage		0;"	f	S:bool function linearStretchImage($blackPoint, $whitePoint)	class:Imagick
liquidRescaleImage		0;"	f	S:bool function liquidRescaleImage($width, $height, $delta_x, $rigidity)	class:Imagick
magnifyImage		0;"	f	S:bool function magnifyImage()	class:Imagick
mapImage		0;"	f	S:bool function mapImage($map, $dither)	class:Imagick
matteFloodfillImage		0;"	f	S:bool function matteFloodfillImage($alpha, $fuzz, $bordercolor, $x, $y)	class:Imagick
medianFilterImage		0;"	f	S:bool function medianFilterImage($radius)	class:Imagick
mergeImageLayers		0;"	f	S:bool function mergeImageLayers($layer_method)	class:Imagick
minifyImage		0;"	f	S:bool function minifyImage()	class:Imagick
modulateImage		0;"	f	S:bool function modulateImage($brightness, $saturation, $hue)	class:Imagick
montageImage		0;"	f	S:Imagick function montageImage($draw, $tile_geometry, $thumbnail_geometry, $mode, $frame)	class:Imagick
morphImages		0;"	f	S:Imagick function morphImages($number_frames)	class:Imagick
mosaicImages		0;"	f	S:Imagick function mosaicImages()	class:Imagick
motionBlurImage		0;"	f	S:bool function motionBlurImage($radius, $sigma, $angle, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
negateImage		0;"	f	S:bool function negateImage($gray, $channel = Imagick::CHANNEL_ALL)	class:Imagick
newImage		0;"	f	S:bool function newImage($cols, $rows, $background, $format)	class:Imagick
newPseudoImage		0;"	f	S:bool function newPseudoImage($columns, $rows, $pseudoString)	class:Imagick
nextImage		0;"	f	S:bool function nextImage()	class:Imagick
normalizeImage		0;"	f	S:bool function normalizeImage($channel = Imagick::CHANNEL_ALL)	class:Imagick
oilPaintImage		0;"	f	S:bool function oilPaintImage($radius)	class:Imagick
opaquePaintImage		0;"	f	S:bool function opaquePaintImage($target, $fill, $fuzz, $invert, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
optimizeImageLayers		0;"	f	S:bool function optimizeImageLayers()	class:Imagick
orderedPosterizeImage		0;"	f	S:bool function orderedPosterizeImage($threshold_map, $channel = Imagick::CHANNEL_ALL)	class:Imagick
paintFloodfillImage		0;"	f	S:bool function paintFloodfillImage($fill, $fuzz, $bordercolor, $x, $y, $channel = Imagick::CHANNEL_ALL)	class:Imagick
paintOpaqueImage		0;"	f	S:bool function paintOpaqueImage($target, $fill, $fuzz, $channel = Imagick::CHANNEL_ALL)	class:Imagick
paintTransparentImage		0;"	f	S:bool function paintTransparentImage($target, $alpha, $fuzz)	class:Imagick
pingImage		0;"	f	S:bool function pingImage($filename)	class:Imagick
pingImageBlob		0;"	f	S:bool function pingImageBlob($image)	class:Imagick
pingImageFile		0;"	f	S:bool function pingImageFile($filehandle, $fileName)	class:Imagick
polaroidImage		0;"	f	S:bool function polaroidImage($properties, $angle)	class:Imagick
posterizeImage		0;"	f	S:bool function posterizeImage($levels, $dither)	class:Imagick
previewImages		0;"	f	S:bool function previewImages($preview)	class:Imagick
previousImage		0;"	f	S:bool function previousImage()	class:Imagick
profileImage		0;"	f	S:bool function profileImage($name, $profile)	class:Imagick
quantizeImage		0;"	f	S:bool function quantizeImage($numberColors, $colorspace, $treedepth, $dither, $measureError)	class:Imagick
quantizeImages		0;"	f	S:bool function quantizeImages($numberColors, $colorspace, $treedepth, $dither, $measureError)	class:Imagick
queryFontMetrics		0;"	f	S:array function queryFontMetrics($properties, $text, $multiline)	class:Imagick
queryFonts		0;"	f	S:array function queryFonts($pattern = "*")	class:Imagick
queryFormats		0;"	f	S:array function queryFormats($pattern = "*")	class:Imagick
radialBlurImage		0;"	f	S:bool function radialBlurImage($angle, $channel = Imagick::CHANNEL_ALL)	class:Imagick
raiseImage		0;"	f	S:bool function raiseImage($width, $height, $x, $y, $raise)	class:Imagick
randomThresholdImage		0;"	f	S:bool function randomThresholdImage($low, $high, $channel = Imagick::CHANNEL_ALL)	class:Imagick
readImage		0;"	f	S:bool function readImage($filename)	class:Imagick
readImageBlob		0;"	f	S:bool function readImageBlob($image, $filename)	class:Imagick
readImageFile		0;"	f	S:bool function readImageFile($filehandle, $fileName = null)	class:Imagick
recolorImage		0;"	f	S:bool function recolorImage($matrix)	class:Imagick
reduceNoiseImage		0;"	f	S:bool function reduceNoiseImage($radius)	class:Imagick
remapImage		0;"	f	S:bool function remapImage($replacement, $DITHER)	class:Imagick
removeImage		0;"	f	S:bool function removeImage()	class:Imagick
removeImageProfile		0;"	f	S:string function removeImageProfile($name)	class:Imagick
render		0;"	f	S:bool function render()	class:Imagick
resampleImage		0;"	f	S:bool function resampleImage($x_resolution, $y_resolution, $filter, $blur)	class:Imagick
resetImagePage		0;"	f	S:bool function resetImagePage($page)	class:Imagick
resizeImage		0;"	f	S:bool function resizeImage($columns, $rows, $filter, $blur, $bestfit = false)	class:Imagick
rollImage		0;"	f	S:bool function rollImage($x, $y)	class:Imagick
rotateImage		0;"	f	S:bool function rotateImage($background, $degrees)	class:Imagick
roundCorners		0;"	f	S:bool function roundCorners($x_rounding, $y_rounding, $stroke_width = 10, $displace = 5, $size_correction = -6)	class:Imagick
sampleImage		0;"	f	S:bool function sampleImage($columns, $rows)	class:Imagick
scaleImage		0;"	f	S:bool function scaleImage($cols, $rows, $bestfit = false)	class:Imagick
segmentImage		0;"	f	S:bool function segmentImage($COLORSPACE, $cluster_threshold, $smooth_threshold, $verbose = false)	class:Imagick
separateImageChannel		0;"	f	S:bool function separateImageChannel($channel)	class:Imagick
sepiaToneImage		0;"	f	S:bool function sepiaToneImage($threshold)	class:Imagick
setBackgroundColor		0;"	f	S:bool function setBackgroundColor($background)	class:Imagick
setColorspace		0;"	f	S:bool function setColorspace($COLORSPACE)	class:Imagick
setCompression		0;"	f	S:bool function setCompression($compression)	class:Imagick
setCompressionQuality		0;"	f	S:bool function setCompressionQuality($quality)	class:Imagick
setFilename		0;"	f	S:bool function setFilename($filename)	class:Imagick
setFirstIterator		0;"	f	S:bool function setFirstIterator()	class:Imagick
setFont		0;"	f	S:bool function setFont($font)	class:Imagick
setFormat		0;"	f	S:bool function setFormat($format)	class:Imagick
setGravity		0;"	f	S:bool function setGravity($gravity)	class:Imagick
setImage		0;"	f	S:bool function setImage($replace)	class:Imagick
setImageAlphaChannel		0;"	f	S:bool function setImageAlphaChannel($mode)	class:Imagick
setImageArtifact		0;"	f	S:bool function setImageArtifact($artifact, $value)	class:Imagick
setImageBackgroundColor		0;"	f	S:bool function setImageBackgroundColor($background)	class:Imagick
setImageBias		0;"	f	S:bool function setImageBias($bias)	class:Imagick
setImageBluePrimary		0;"	f	S:bool function setImageBluePrimary($x, $y)	class:Imagick
setImageBorderColor		0;"	f	S:bool function setImageBorderColor($border)	class:Imagick
setImageChannelDepth		0;"	f	S:bool function setImageChannelDepth($channel, $depth)	class:Imagick
setImageClipMask		0;"	f	S:bool function setImageClipMask($clip_mask)	class:Imagick
setImageColormapColor		0;"	f	S:bool function setImageColormapColor($index, $color)	class:Imagick
setImageColorspace		0;"	f	S:bool function setImageColorspace($colorspace)	class:Imagick
setImageCompose		0;"	f	S:bool function setImageCompose($compose)	class:Imagick
setImageCompression		0;"	f	S:bool function setImageCompression($compression)	class:Imagick
setImageCompressionQuality		0;"	f	S:bool function setImageCompressionQuality($quality)	class:Imagick
setImageDelay		0;"	f	S:bool function setImageDelay($delay)	class:Imagick
setImageDepth		0;"	f	S:bool function setImageDepth($depth)	class:Imagick
setImageDispose		0;"	f	S:bool function setImageDispose($dispose)	class:Imagick
setImageExtent		0;"	f	S:bool function setImageExtent($columns, $rows)	class:Imagick
setImageFilename		0;"	f	S:bool function setImageFilename($filename)	class:Imagick
setImageFormat		0;"	f	S:bool function setImageFormat($format)	class:Imagick
setImageGamma		0;"	f	S:bool function setImageGamma($gamma)	class:Imagick
setImageGravity		0;"	f	S:bool function setImageGravity($gravity)	class:Imagick
setImageGreenPrimary		0;"	f	S:bool function setImageGreenPrimary($x, $y)	class:Imagick
setImageIndex		0;"	f	S:bool function setImageIndex($index)	class:Imagick
setImageInterlaceScheme		0;"	f	S:bool function setImageInterlaceScheme($interlace_scheme)	class:Imagick
setImageInterpolateMethod		0;"	f	S:bool function setImageInterpolateMethod($method)	class:Imagick
setImageIterations		0;"	f	S:bool function setImageIterations($iterations)	class:Imagick
setImageMatte		0;"	f	S:bool function setImageMatte($matte)	class:Imagick
setImageMatteColor		0;"	f	S:bool function setImageMatteColor($matte)	class:Imagick
setImageOpacity		0;"	f	S:bool function setImageOpacity($opacity)	class:Imagick
setImageOrientation		0;"	f	S:bool function setImageOrientation($orientation)	class:Imagick
setImagePage		0;"	f	S:bool function setImagePage($width, $height, $x, $y)	class:Imagick
setImageProfile		0;"	f	S:bool function setImageProfile($name, $profile)	class:Imagick
setImageProperty		0;"	f	S:bool function setImageProperty($name, $value)	class:Imagick
setImageRedPrimary		0;"	f	S:bool function setImageRedPrimary($x, $y)	class:Imagick
setImageRenderingIntent		0;"	f	S:bool function setImageRenderingIntent($rendering_intent)	class:Imagick
setImageResolution		0;"	f	S:bool function setImageResolution($x_resolution, $y_resolution)	class:Imagick
setImageScene		0;"	f	S:bool function setImageScene($scene)	class:Imagick
setImageTicksPerSecond		0;"	f	S:bool function setImageTicksPerSecond($ticks_per_second)	class:Imagick
setImageType		0;"	f	S:bool function setImageType($image_type)	class:Imagick
setImageUnits		0;"	f	S:bool function setImageUnits($units)	class:Imagick
setImageVirtualPixelMethod		0;"	f	S:bool function setImageVirtualPixelMethod($method)	class:Imagick
setImageWhitePoint		0;"	f	S:bool function setImageWhitePoint($x, $y)	class:Imagick
setInterlaceScheme		0;"	f	S:bool function setInterlaceScheme($interlace_scheme)	class:Imagick
setIteratorIndex		0;"	f	S:bool function setIteratorIndex($index)	class:Imagick
setLastIterator		0;"	f	S:bool function setLastIterator()	class:Imagick
setOption		0;"	f	S:bool function setOption($key, $value)	class:Imagick
setPage		0;"	f	S:bool function setPage($width, $height, $x, $y)	class:Imagick
setPointSize		0;"	f	S:bool function setPointSize($point_size)	class:Imagick
setResolution		0;"	f	S:bool function setResolution($x_resolution, $y_resolution)	class:Imagick
setResourceLimit		0;"	f	S:bool function setResourceLimit($type, $limit)	class:Imagick
setSamplingFactors		0;"	f	S:bool function setSamplingFactors($factors)	class:Imagick
setSize		0;"	f	S:bool function setSize($columns, $rows)	class:Imagick
setSizeOffset		0;"	f	S:bool function setSizeOffset($columns, $rows, $offset)	class:Imagick
setType		0;"	f	S:bool function setType($image_type)	class:Imagick
shadeImage		0;"	f	S:bool function shadeImage($gray, $azimuth, $elevation)	class:Imagick
shadowImage		0;"	f	S:bool function shadowImage($opacity, $sigma, $x, $y)	class:Imagick
sharpenImage		0;"	f	S:bool function sharpenImage($radius, $sigma, $channel = Imagick::CHANNEL_ALL)	class:Imagick
shaveImage		0;"	f	S:bool function shaveImage($columns, $rows)	class:Imagick
shearImage		0;"	f	S:bool function shearImage($background, $x_shear, $y_shear)	class:Imagick
sigmoidalContrastImage		0;"	f	S:bool function sigmoidalContrastImage($sharpen, $alpha, $beta, $channel = Imagick::CHANNEL_ALL)	class:Imagick
sketchImage		0;"	f	S:bool function sketchImage($radius, $sigma, $angle)	class:Imagick
solarizeImage		0;"	f	S:bool function solarizeImage($threshold)	class:Imagick
sparseColorImage		0;"	f	S:bool function sparseColorImage($SPARSE_METHOD, $arguments, $channel = Imagick::CHANNEL_DEFAULT)	class:Imagick
spliceImage		0;"	f	S:bool function spliceImage($width, $height, $x, $y)	class:Imagick
spreadImage		0;"	f	S:bool function spreadImage($radius)	class:Imagick
steganoImage		0;"	f	S:Imagick function steganoImage($watermark_wand, $offset)	class:Imagick
stereoImage		0;"	f	S:bool function stereoImage($offset_wand)	class:Imagick
stripImage		0;"	f	S:bool function stripImage()	class:Imagick
swirlImage		0;"	f	S:bool function swirlImage($degrees)	class:Imagick
textureImage		0;"	f	S:bool function textureImage($texture_wand)	class:Imagick
thresholdImage		0;"	f	S:bool function thresholdImage($threshold, $channel = Imagick::CHANNEL_ALL)	class:Imagick
thumbnailImage		0;"	f	S:bool function thumbnailImage($columns, $rows, $bestfit = false, $fill = false)	class:Imagick
tintImage		0;"	f	S:bool function tintImage($tint, $opacity)	class:Imagick
transformImage		0;"	f	S:Imagick function transformImage($crop, $geometry)	class:Imagick
transparentPaintImage		0;"	f	S:bool function transparentPaintImage($target, $alpha, $fuzz, $invert)	class:Imagick
transposeImage		0;"	f	S:bool function transposeImage()	class:Imagick
transverseImage		0;"	f	S:bool function transverseImage()	class:Imagick
trimImage		0;"	f	S:bool function trimImage($fuzz)	class:Imagick
uniqueImageColors		0;"	f	S:bool function uniqueImageColors()	class:Imagick
unsharpMaskImage		0;"	f	S:bool function unsharpMaskImage($radius, $sigma, $amount, $threshold, $channel = Imagick::CHANNEL_ALL)	class:Imagick
valid		0;"	f	S:bool function valid()	class:Imagick
vignetteImage		0;"	f	S:bool function vignetteImage($blackPoint, $whitePoint, $x, $y)	class:Imagick
waveImage		0;"	f	S:bool function waveImage($amplitude, $length)	class:Imagick
whiteThresholdImage		0;"	f	S:bool function whiteThresholdImage($threshold)	class:Imagick
writeImage		0;"	f	S:bool function writeImage($filename = NULL)	class:Imagick
writeImageFile		0;"	f	S:bool function writeImageFile($filehandle)	class:Imagick
writeImages		0;"	f	S:bool function writeImages($filename, $adjoin)	class:Imagick
writeImagesFile		0;"	f	S:bool function writeImagesFile($filehandle)	class:Imagick
ImagickDraw		0;"	c
affine		0;"	f	S:bool function affine($affine)	class:ImagickDraw
annotation		0;"	f	S:bool function annotation($x, $y, $text)	class:ImagickDraw
arc		0;"	f	S:bool function arc($sx, $sy, $ex, $ey, $sd, $ed)	class:ImagickDraw
bezier		0;"	f	S:bool function bezier($coordinates)	class:ImagickDraw
circle		0;"	f	S:bool function circle($ox, $oy, $px, $py)	class:ImagickDraw
clear		0;"	f	S:bool function clear()	class:ImagickDraw
clone		0;"	f	S:ImagickDraw function clone()	class:ImagickDraw
color		0;"	f	S:bool function color($x, $y, $paintMethod)	class:ImagickDraw
comment		0;"	f	S:bool function comment($comment)	class:ImagickDraw
composite		0;"	f	S:bool function composite($compose, $x, $y, $width, $height, $compositeWand)	class:ImagickDraw
__construct		0;"	f	S: function __construct()	class:ImagickDraw
destroy		0;"	f	S:bool function destroy()	class:ImagickDraw
ellipse		0;"	f	S:bool function ellipse($ox, $oy, $rx, $ry, $start, $end)	class:ImagickDraw
getClipPath		0;"	f	S:string function getClipPath()	class:ImagickDraw
getClipRule		0;"	f	S:int function getClipRule()	class:ImagickDraw
getClipUnits		0;"	f	S:int function getClipUnits()	class:ImagickDraw
getFillColor		0;"	f	S:ImagickPixel function getFillColor()	class:ImagickDraw
getFillOpacity		0;"	f	S:float function getFillOpacity()	class:ImagickDraw
getFillRule		0;"	f	S:int function getFillRule()	class:ImagickDraw
getFont		0;"	f	S:string function getFont()	class:ImagickDraw
getFontFamily		0;"	f	S:string function getFontFamily()	class:ImagickDraw
getFontSize		0;"	f	S:float function getFontSize()	class:ImagickDraw
getFontStyle		0;"	f	S:int function getFontStyle()	class:ImagickDraw
getFontWeight		0;"	f	S:int function getFontWeight()	class:ImagickDraw
getGravity		0;"	f	S:int function getGravity()	class:ImagickDraw
getStrokeAntialias		0;"	f	S:bool function getStrokeAntialias()	class:ImagickDraw
getStrokeColor		0;"	f	S:ImagickPixel function getStrokeColor()	class:ImagickDraw
getStrokeDashArray		0;"	f	S:array function getStrokeDashArray()	class:ImagickDraw
getStrokeDashOffset		0;"	f	S:float function getStrokeDashOffset()	class:ImagickDraw
getStrokeLineCap		0;"	f	S:int function getStrokeLineCap()	class:ImagickDraw
getStrokeLineJoin		0;"	f	S:int function getStrokeLineJoin()	class:ImagickDraw
getStrokeMiterLimit		0;"	f	S:int function getStrokeMiterLimit()	class:ImagickDraw
getStrokeOpacity		0;"	f	S:float function getStrokeOpacity()	class:ImagickDraw
getStrokeWidth		0;"	f	S:float function getStrokeWidth()	class:ImagickDraw
getTextAlignment		0;"	f	S:int function getTextAlignment()	class:ImagickDraw
getTextAntialias		0;"	f	S:bool function getTextAntialias()	class:ImagickDraw
getTextDecoration		0;"	f	S:int function getTextDecoration()	class:ImagickDraw
getTextEncoding		0;"	f	S:string function getTextEncoding()	class:ImagickDraw
getTextUnderColor		0;"	f	S:ImagickPixel function getTextUnderColor()	class:ImagickDraw
getVectorGraphics		0;"	f	S:string function getVectorGraphics()	class:ImagickDraw
line		0;"	f	S:bool function line($sx, $sy, $ex, $ey)	class:ImagickDraw
matte		0;"	f	S:bool function matte($x, $y, $paintMethod)	class:ImagickDraw
pathClose		0;"	f	S:bool function pathClose()	class:ImagickDraw
pathCurveToAbsolute		0;"	f	S:bool function pathCurveToAbsolute($x1, $y1, $x2, $y2, $x, $y)	class:ImagickDraw
pathCurveToQuadraticBezierAbsolute		0;"	f	S:bool function pathCurveToQuadraticBezierAbsolute($x1, $y1, $x, $y)	class:ImagickDraw
pathCurveToQuadraticBezierRelative		0;"	f	S:bool function pathCurveToQuadraticBezierRelative($x1, $y1, $x, $y)	class:ImagickDraw
pathCurveToQuadraticBezierSmoothAbsolute		0;"	f	S:bool function pathCurveToQuadraticBezierSmoothAbsolute($x, $y)	class:ImagickDraw
pathCurveToQuadraticBezierSmoothRelative		0;"	f	S:bool function pathCurveToQuadraticBezierSmoothRelative($x, $y)	class:ImagickDraw
pathCurveToRelative		0;"	f	S:bool function pathCurveToRelative($x1, $y1, $x2, $y2, $x, $y)	class:ImagickDraw
pathCurveToSmoothAbsolute		0;"	f	S:bool function pathCurveToSmoothAbsolute($x2, $y2, $x, $y)	class:ImagickDraw
pathCurveToSmoothRelative		0;"	f	S:bool function pathCurveToSmoothRelative($x2, $y2, $x, $y)	class:ImagickDraw
pathEllipticArcAbsolute		0;"	f	S:bool function pathEllipticArcAbsolute($rx, $ry, $x_axis_rotation, $large_arc_flag, $sweep_flag, $x, $y)	class:ImagickDraw
pathEllipticArcRelative		0;"	f	S:bool function pathEllipticArcRelative($rx, $ry, $x_axis_rotation, $large_arc_flag, $sweep_flag, $x, $y)	class:ImagickDraw
pathFinish		0;"	f	S:bool function pathFinish()	class:ImagickDraw
pathLineToAbsolute		0;"	f	S:bool function pathLineToAbsolute($x, $y)	class:ImagickDraw
pathLineToHorizontalAbsolute		0;"	f	S:bool function pathLineToHorizontalAbsolute($x)	class:ImagickDraw
pathLineToHorizontalRelative		0;"	f	S:bool function pathLineToHorizontalRelative($x)	class:ImagickDraw
pathLineToRelative		0;"	f	S:bool function pathLineToRelative($x, $y)	class:ImagickDraw
pathLineToVerticalAbsolute		0;"	f	S:bool function pathLineToVerticalAbsolute($y)	class:ImagickDraw
pathLineToVerticalRelative		0;"	f	S:bool function pathLineToVerticalRelative($y)	class:ImagickDraw
pathMoveToAbsolute		0;"	f	S:bool function pathMoveToAbsolute($x, $y)	class:ImagickDraw
pathMoveToRelative		0;"	f	S:bool function pathMoveToRelative($x, $y)	class:ImagickDraw
pathStart		0;"	f	S:bool function pathStart()	class:ImagickDraw
point		0;"	f	S:bool function point($x, $y)	class:ImagickDraw
polygon		0;"	f	S:bool function polygon($coordinates)	class:ImagickDraw
polyline		0;"	f	S:bool function polyline($coordinates)	class:ImagickDraw
pop		0;"	f	S:bool function pop()	class:ImagickDraw
popClipPath		0;"	f	S:bool function popClipPath()	class:ImagickDraw
popDefs		0;"	f	S:bool function popDefs()	class:ImagickDraw
popPattern		0;"	f	S:bool function popPattern()	class:ImagickDraw
push		0;"	f	S:bool function push()	class:ImagickDraw
pushClipPath		0;"	f	S:bool function pushClipPath($clip_mask_id)	class:ImagickDraw
pushDefs		0;"	f	S:bool function pushDefs()	class:ImagickDraw
pushPattern		0;"	f	S:bool function pushPattern($pattern_id, $x, $y, $width, $height)	class:ImagickDraw
rectangle		0;"	f	S:bool function rectangle($x1, $y1, $x2, $y2)	class:ImagickDraw
render		0;"	f	S:bool function render()	class:ImagickDraw
rotate		0;"	f	S:bool function rotate($degrees)	class:ImagickDraw
roundRectangle		0;"	f	S:bool function roundRectangle($x1, $y1, $x2, $y2, $rx, $ry)	class:ImagickDraw
scale		0;"	f	S:bool function scale($x, $y)	class:ImagickDraw
setClipPath		0;"	f	S:bool function setClipPath($clip_mask)	class:ImagickDraw
setClipRule		0;"	f	S:bool function setClipRule($fill_rule)	class:ImagickDraw
setClipUnits		0;"	f	S:bool function setClipUnits($clip_units)	class:ImagickDraw
setFillAlpha		0;"	f	S:bool function setFillAlpha($opacity)	class:ImagickDraw
setFillColor		0;"	f	S:bool function setFillColor($fill_pixel)	class:ImagickDraw
setFillOpacity		0;"	f	S:bool function setFillOpacity($fillOpacity)	class:ImagickDraw
setFillPatternURL		0;"	f	S:bool function setFillPatternURL($fill_url)	class:ImagickDraw
setFillRule		0;"	f	S:bool function setFillRule($fill_rule)	class:ImagickDraw
setFont		0;"	f	S:bool function setFont($font_name)	class:ImagickDraw
setFontFamily		0;"	f	S:bool function setFontFamily($font_family)	class:ImagickDraw
setFontSize		0;"	f	S:bool function setFontSize($pointsize)	class:ImagickDraw
setFontStretch		0;"	f	S:bool function setFontStretch($fontStretch)	class:ImagickDraw
setFontStyle		0;"	f	S:bool function setFontStyle($style)	class:ImagickDraw
setFontWeight		0;"	f	S:bool function setFontWeight($font_weight)	class:ImagickDraw
setGravity		0;"	f	S:bool function setGravity($gravity)	class:ImagickDraw
setStrokeAlpha		0;"	f	S:bool function setStrokeAlpha($opacity)	class:ImagickDraw
setStrokeAntialias		0;"	f	S:bool function setStrokeAntialias($stroke_antialias)	class:ImagickDraw
setStrokeColor		0;"	f	S:bool function setStrokeColor($stroke_pixel)	class:ImagickDraw
setStrokeDashArray		0;"	f	S:bool function setStrokeDashArray($dashArray)	class:ImagickDraw
setStrokeDashOffset		0;"	f	S:bool function setStrokeDashOffset($dash_offset)	class:ImagickDraw
setStrokeLineCap		0;"	f	S:bool function setStrokeLineCap($linecap)	class:ImagickDraw
setStrokeLineJoin		0;"	f	S:bool function setStrokeLineJoin($linejoin)	class:ImagickDraw
setStrokeMiterLimit		0;"	f	S:bool function setStrokeMiterLimit($miterlimit)	class:ImagickDraw
setStrokeOpacity		0;"	f	S:bool function setStrokeOpacity($stroke_opacity)	class:ImagickDraw
setStrokePatternURL		0;"	f	S:bool function setStrokePatternURL($stroke_url)	class:ImagickDraw
setStrokeWidth		0;"	f	S:bool function setStrokeWidth($stroke_width)	class:ImagickDraw
setTextAlignment		0;"	f	S:bool function setTextAlignment($alignment)	class:ImagickDraw
setTextAntialias		0;"	f	S:bool function setTextAntialias($antiAlias)	class:ImagickDraw
setTextDecoration		0;"	f	S:bool function setTextDecoration($decoration)	class:ImagickDraw
setTextEncoding		0;"	f	S:bool function setTextEncoding($encoding)	class:ImagickDraw
setTextUnderColor		0;"	f	S:bool function setTextUnderColor($under_color)	class:ImagickDraw
setVectorGraphics		0;"	f	S:bool function setVectorGraphics($xml)	class:ImagickDraw
setViewbox		0;"	f	S:bool function setViewbox($x1, $y1, $x2, $y2)	class:ImagickDraw
skewX		0;"	f	S:bool function skewX($degrees)	class:ImagickDraw
skewY		0;"	f	S:bool function skewY($degrees)	class:ImagickDraw
translate		0;"	f	S:bool function translate($x, $y)	class:ImagickDraw
ImagickPixel		0;"	c
clear		0;"	f	S:bool function clear()	class:ImagickPixel
__construct		0;"	f	S: function __construct($color)	class:ImagickPixel
destroy		0;"	f	S:bool function destroy()	class:ImagickPixel
getColor		0;"	f	S:array function getColor($normalized = false)	class:ImagickPixel
getColorAsString		0;"	f	S:string function getColorAsString()	class:ImagickPixel
getColorCount		0;"	f	S:int function getColorCount()	class:ImagickPixel
getColorValue		0;"	f	S:float function getColorValue($color)	class:ImagickPixel
getHSL		0;"	f	S:array function getHSL()	class:ImagickPixel
isPixelSimilar		0;"	f	S:bool function isPixelSimilar($color, $fuzz)	class:ImagickPixel
isSimilar		0;"	f	S:bool function isSimilar($color, $fuzz)	class:ImagickPixel
setColor		0;"	f	S:bool function setColor($color)	class:ImagickPixel
setColorValue		0;"	f	S:bool function setColorValue($color, $value)	class:ImagickPixel
setHSL		0;"	f	S:bool function setHSL($hue, $saturation, $luminosity)	class:ImagickPixel
ImagickPixelIterator		0;"	c
clear		0;"	f	S:bool function clear()	class:ImagickPixelIterator
__construct		0;"	f	S: function __construct($wand)	class:ImagickPixelIterator
destroy		0;"	f	S:bool function destroy()	class:ImagickPixelIterator
getCurrentIteratorRow		0;"	f	S:array function getCurrentIteratorRow()	class:ImagickPixelIterator
getIteratorRow		0;"	f	S:int function getIteratorRow()	class:ImagickPixelIterator
getNextIteratorRow		0;"	f	S:array function getNextIteratorRow()	class:ImagickPixelIterator
getPreviousIteratorRow		0;"	f	S:array function getPreviousIteratorRow()	class:ImagickPixelIterator
newPixelIterator		0;"	f	S:bool function newPixelIterator($wand)	class:ImagickPixelIterator
newPixelRegionIterator		0;"	f	S:bool function newPixelRegionIterator($wand, $x, $y, $columns, $rows)	class:ImagickPixelIterator
resetIterator		0;"	f	S:bool function resetIterator()	class:ImagickPixelIterator
setIteratorFirstRow		0;"	f	S:bool function setIteratorFirstRow()	class:ImagickPixelIterator
setIteratorLastRow		0;"	f	S:bool function setIteratorLastRow()	class:ImagickPixelIterator
setIteratorRow		0;"	f	S:bool function setIteratorRow($row)	class:ImagickPixelIterator
syncIterator		0;"	f	S:bool function syncIterator()	class:ImagickPixelIterator
CYRUS_CONN_NONSYNCLITERAL		0;"	d
CYRUS_CONN_INITIALRESPONSE		0;"	d
CYRUS_CALLBACK_NUMBERED		0;"	d
CYRUS_CALLBACK_NOLITERAL		0;"	d
cyrus_authenticate		0;"	f	S:void function cyrus_authenticate($connection, $mechlist, $service, $user, $minssf, $maxssf, $authname, $password)
cyrus_bind		0;"	f	S:bool function cyrus_bind($connection, $callbacks)
cyrus_close		0;"	f	S:bool function cyrus_close($connection)
cyrus_connect		0;"	f	S:resource function cyrus_connect($host, $port, $flags)
cyrus_query		0;"	f	S:array function cyrus_query($connection, $query)
cyrus_unbind		0;"	f	S:bool function cyrus_unbind($connection, $trigger_name)
NIL		0;"	d
OP_DEBUG		0;"	d
OP_READONLY		0;"	d
OP_ANONYMOUS		0;"	d
OP_SHORTCACHE		0;"	d
OP_SILENT		0;"	d
OP_PROTOTYPE		0;"	d
OP_HALFOPEN		0;"	d
OP_EXPUNGE		0;"	d
OP_SECURE		0;"	d
CL_EXPUNGE		0;"	d
FT_UID		0;"	d
FT_PEEK		0;"	d
FT_NOT		0;"	d
FT_INTERNAL		0;"	d
FT_PREFETCHTEXT		0;"	d
ST_UID		0;"	d
ST_SILENT		0;"	d
ST_SET		0;"	d
CP_UID		0;"	d
CP_MOVE		0;"	d
SE_UID		0;"	d
SE_FREE		0;"	d
SE_NOPREFETCH		0;"	d
SO_FREE		0;"	d
SO_NOSERVER		0;"	d
SA_MESSAGES		0;"	d
SA_RECENT		0;"	d
SA_UNSEEN		0;"	d
SA_UIDNEXT		0;"	d
SA_UIDVALIDITY		0;"	d
SA_ALL		0;"	d
LATT_NOINFERIORS		0;"	d
LATT_NOSELECT		0;"	d
LATT_MARKED		0;"	d
LATT_UNMARKED		0;"	d
SORTDATE		0;"	d
SORTARRIVAL		0;"	d
SORTFROM		0;"	d
SORTSUBJECT		0;"	d
SORTTO		0;"	d
SORTCC		0;"	d
SORTSIZE		0;"	d
TYPETEXT		0;"	d
TYPEMULTIPART		0;"	d
TYPEMESSAGE		0;"	d
TYPEAPPLICATION		0;"	d
TYPEAUDIO		0;"	d
TYPEIMAGE		0;"	d
TYPEVIDEO		0;"	d
TYPEOTHER		0;"	d
ENC7BIT		0;"	d
ENC8BIT		0;"	d
ENCBINARY		0;"	d
ENCBASE64		0;"	d
ENCQUOTEDPRINTABLE		0;"	d
ENCOTHER		0;"	d
IMAP_OPENTIMEOUT		0;"	d
IMAP_READTIMEOUT		0;"	d
IMAP_WRITETIMEOUT		0;"	d
IMAP_CLOSETIMEOUT		0;"	d
LATT_REFERRAL		0;"	d
LATT_HASCHILDREN		0;"	d
LATT_HASNOCHILDREN		0;"	d
TYPEMODEL		0;"	d
IMAP_GC_ELT		0;"	d
IMAP_GC_ENV		0;"	d
IMAP_GC_TEXTS		0;"	d
imap_8bit		0;"	f	S:string function imap_8bit($string)
imap_alerts		0;"	f	S:array function imap_alerts()
imap_append		0;"	f	S:bool function imap_append($imap_stream, $mailbox, $message, $options, $internal_date)
imap_base64		0;"	f	S:string function imap_base64($text)
imap_binary		0;"	f	S:string function imap_binary($string)
imap_body		0;"	f	S:string function imap_body($imap_stream, $msg_number, $options)
imap_bodystruct		0;"	f	S:object function imap_bodystruct($imap_stream, $msg_number, $section)
imap_check		0;"	f	S:object function imap_check($imap_stream)
imap_clearflag_full		0;"	f	S:bool function imap_clearflag_full($imap_stream, $sequence, $flag, $options)
imap_close		0;"	f	S:bool function imap_close($imap_stream, $flag)
imap_create		0;"	f	S: function imap_create()
imap_createmailbox		0;"	f	S:bool function imap_createmailbox($imap_stream, $mailbox)
imap_delete		0;"	f	S:bool function imap_delete($imap_stream, $msg_number, $options)
imap_deletemailbox		0;"	f	S:bool function imap_deletemailbox($imap_stream, $mailbox)
imap_errors		0;"	f	S:array function imap_errors()
imap_expunge		0;"	f	S:bool function imap_expunge($imap_stream)
imap_fetch_overview		0;"	f	S:array function imap_fetch_overview($imap_stream, $sequence, $options)
imap_fetchbody		0;"	f	S:string function imap_fetchbody($imap_stream, $msg_number, $section, $options)
imap_fetchheader		0;"	f	S:string function imap_fetchheader($imap_stream, $msg_number, $options)
imap_fetchmime		0;"	f	S:string function imap_fetchmime($imap_stream, $msg_number, $section, $options)
imap_fetchstructure		0;"	f	S:object function imap_fetchstructure($imap_stream, $msg_number, $options)
imap_fetchtext		0;"	f	S: function imap_fetchtext()
imap_gc		0;"	f	S:bool function imap_gc($imap_stream, $caches)
imap_get_quota		0;"	f	S:array function imap_get_quota($imap_stream, $quota_root)
imap_get_quotaroot		0;"	f	S:array function imap_get_quotaroot($imap_stream, $quota_root)
imap_getacl		0;"	f	S:array function imap_getacl($imap_stream, $mailbox)
imap_getmailboxes		0;"	f	S:array function imap_getmailboxes($imap_stream, $ref, $pattern)
imap_getsubscribed		0;"	f	S:array function imap_getsubscribed($imap_stream, $ref, $pattern)
imap_header		0;"	f	S: function imap_header()
imap_headerinfo		0;"	f	S:object function imap_headerinfo($imap_stream, $msg_number, $fromlength, $subjectlength, $defaulthost)
imap_headers		0;"	f	S:array function imap_headers($imap_stream)
imap_last_error		0;"	f	S:string function imap_last_error()
imap_list		0;"	f	S:array function imap_list($imap_stream, $ref, $pattern)
imap_listmailbox		0;"	f	S: function imap_listmailbox()
imap_listscan		0;"	f	S:array function imap_listscan($imap_stream, $ref, $pattern, $content)
imap_listsubscribed		0;"	f	S: function imap_listsubscribed()
imap_lsub		0;"	f	S:array function imap_lsub($imap_stream, $ref, $pattern)
imap_mail_compose		0;"	f	S:string function imap_mail_compose($envelope, $body)
imap_mail_copy		0;"	f	S:bool function imap_mail_copy($imap_stream, $msglist, $mailbox, $options)
imap_mail_move		0;"	f	S:bool function imap_mail_move($imap_stream, $msglist, $mailbox, $options)
imap_mail		0;"	f	S:bool function imap_mail($to, $subject, $message, $additional_headers, $cc, $bcc, $rpath)
imap_mailboxmsginfo		0;"	f	S:object function imap_mailboxmsginfo($imap_stream)
imap_mime_header_decode		0;"	f	S:array function imap_mime_header_decode($text)
imap_msgno		0;"	f	S:int function imap_msgno($imap_stream, $uid)
imap_num_msg		0;"	f	S:int function imap_num_msg($imap_stream)
imap_num_recent		0;"	f	S:int function imap_num_recent($imap_stream)
imap_open		0;"	f	S:resource function imap_open($mailbox, $username, $password, $options, $n_retries, $params)
imap_ping		0;"	f	S:bool function imap_ping($imap_stream)
imap_qprint		0;"	f	S:string function imap_qprint($string)
imap_rename		0;"	f	S: function imap_rename()
imap_renamemailbox		0;"	f	S:bool function imap_renamemailbox($imap_stream, $old_mbox, $new_mbox)
imap_reopen		0;"	f	S:bool function imap_reopen($imap_stream, $mailbox, $options, $n_retries)
imap_rfc822_parse_adrlist		0;"	f	S:array function imap_rfc822_parse_adrlist($address, $default_host)
imap_rfc822_parse_headers		0;"	f	S:object function imap_rfc822_parse_headers($headers, $defaulthost = "UNKNOWN")
imap_rfc822_write_address		0;"	f	S:string function imap_rfc822_write_address($mailbox, $host, $personal)
imap_savebody		0;"	f	S:bool function imap_savebody($imap_stream, $file, $msg_number, $part_number = "", $options)
imap_scan		0;"	f	S: function imap_scan()
imap_scanmailbox		0;"	f	S: function imap_scanmailbox()
imap_search		0;"	f	S:array function imap_search($imap_stream, $criteria, $options = SE_FREE, $charset = NIL)
imap_set_quota		0;"	f	S:bool function imap_set_quota($imap_stream, $quota_root, $quota_limit)
imap_setacl		0;"	f	S:bool function imap_setacl($imap_stream, $mailbox, $id, $rights)
imap_setflag_full		0;"	f	S:bool function imap_setflag_full($imap_stream, $sequence, $flag, $options = NIL)
imap_sort		0;"	f	S:array function imap_sort($imap_stream, $criteria, $reverse, $options, $search_criteria, $charset = NIL)
imap_status		0;"	f	S:object function imap_status($imap_stream, $mailbox, $options)
imap_subscribe		0;"	f	S:bool function imap_subscribe($imap_stream, $mailbox)
imap_thread		0;"	f	S:array function imap_thread($imap_stream, $options = SE_FREE)
imap_timeout		0;"	f	S:mixed function imap_timeout($timeout_type, $timeout = -1)
imap_uid		0;"	f	S:int function imap_uid($imap_stream, $msg_number)
imap_undelete		0;"	f	S:bool function imap_undelete($imap_stream, $msg_number, $flags)
imap_unsubscribe		0;"	f	S:bool function imap_unsubscribe($imap_stream, $mailbox)
imap_utf7_decode		0;"	f	S:string function imap_utf7_decode($text)
imap_utf7_encode		0;"	f	S:string function imap_utf7_encode($data)
imap_utf8		0;"	f	S:string function imap_utf8($mime_encoded_text)
ezmlm_hash		0;"	f	S:int function ezmlm_hash($addr)
mail		0;"	f	S:bool function mail($to, $subject, $message, $additional_headers, $additional_parameters)
MAILPARSE_EXTRACT_OUTPUT		0;"	d
MAILPARSE_EXTRACT_STREAM		0;"	d
MAILPARSE_EXTRACT_RETURN		0;"	d
mailparse_determine_best_xfer_encoding		0;"	f	S:string function mailparse_determine_best_xfer_encoding($fp)
mailparse_msg_create		0;"	f	S:resource function mailparse_msg_create()
mailparse_msg_extract_part_file		0;"	f	S:string function mailparse_msg_extract_part_file($mimemail, $filename, $callbackfunc)
mailparse_msg_extract_part		0;"	f	S:void function mailparse_msg_extract_part($mimemail, $msgbody, $callbackfunc)
mailparse_msg_extract_whole_part_file		0;"	f	S:string function mailparse_msg_extract_whole_part_file($mimemail, $filename, $callbackfunc)
mailparse_msg_free		0;"	f	S:bool function mailparse_msg_free($mimemail)
mailparse_msg_get_part_data		0;"	f	S:array function mailparse_msg_get_part_data($mimemail)
mailparse_msg_get_part		0;"	f	S:resource function mailparse_msg_get_part($mimemail, $mimesection)
mailparse_msg_get_structure		0;"	f	S:array function mailparse_msg_get_structure($mimemail)
mailparse_msg_parse_file		0;"	f	S:resource function mailparse_msg_parse_file($filename)
mailparse_msg_parse		0;"	f	S:bool function mailparse_msg_parse($mimemail, $data)
mailparse_rfc822_parse_addresses		0;"	f	S:array function mailparse_rfc822_parse_addresses($addresses)
mailparse_stream_encode		0;"	f	S:bool function mailparse_stream_encode($sourcefp, $destfp, $encoding)
mailparse_uudecode_all		0;"	f	S:array function mailparse_uudecode_all($fp)
vpopmail_add_alias_domain_ex		0;"	f	S:bool function vpopmail_add_alias_domain_ex($olddomain, $newdomain)
vpopmail_add_alias_domain		0;"	f	S:bool function vpopmail_add_alias_domain($domain, $aliasdomain)
vpopmail_add_domain_ex		0;"	f	S:bool function vpopmail_add_domain_ex($domain, $passwd, $quota, $bounce, $apop)
vpopmail_add_domain		0;"	f	S:bool function vpopmail_add_domain($domain, $dir, $uid, $gid)
vpopmail_add_user		0;"	f	S:bool function vpopmail_add_user($user, $domain, $password, $gecos, $apop)
vpopmail_alias_add		0;"	f	S:bool function vpopmail_alias_add($user, $domain, $alias)
vpopmail_alias_del_domain		0;"	f	S:bool function vpopmail_alias_del_domain($domain)
vpopmail_alias_del		0;"	f	S:bool function vpopmail_alias_del($user, $domain)
vpopmail_alias_get_all		0;"	f	S:array function vpopmail_alias_get_all($domain)
vpopmail_alias_get		0;"	f	S:array function vpopmail_alias_get($alias, $domain)
vpopmail_auth_user		0;"	f	S:bool function vpopmail_auth_user($user, $domain, $password, $apop)
vpopmail_del_domain_ex		0;"	f	S:bool function vpopmail_del_domain_ex($domain)
vpopmail_del_domain		0;"	f	S:bool function vpopmail_del_domain($domain)
vpopmail_del_user		0;"	f	S:bool function vpopmail_del_user($user, $domain)
vpopmail_error		0;"	f	S:string function vpopmail_error()
vpopmail_passwd		0;"	f	S:bool function vpopmail_passwd($user, $domain, $password, $apop)
vpopmail_set_user_quota		0;"	f	S:bool function vpopmail_set_user_quota($user, $domain, $quota)
bcadd		0;"	f	S:string function bcadd($left_operand, $right_operand, $scale)
bccomp		0;"	f	S:int function bccomp($left_operand = "", $right_operand = "", $scale = int)
bcdiv		0;"	f	S:string function bcdiv($left_operand = "", $right_operand = "", $scale = int)
bcmod		0;"	f	S:string function bcmod($left_operand, $modulus)
bcmul		0;"	f	S:string function bcmul($left_operand = "", $right_operand = "", $scale = int)
bcpow		0;"	f	S:string function bcpow($left_operand, $right_operand, $scale)
bcpowmod		0;"	f	S:string function bcpowmod($left_operand = "", $right_operand = "", $modulus = "", $scale = int)
bcscale		0;"	f	S:bool function bcscale($scale)
bcsqrt		0;"	f	S:string function bcsqrt($operand, $scale)
bcsub		0;"	f	S:string function bcsub($left_operand = "", $right_operand = "", $scale = int)
GMP_ROUND_ZERO		0;"	d
GMP_ROUND_PLUSINF		0;"	d
GMP_ROUND_MINUSINF		0;"	d
GMP_MSW_FIRST		0;"	d
GMP_LSW_FIRST		0;"	d
GMP_LITTLE_ENDIAN		0;"	d
GMP_BIG_ENDIAN		0;"	d
GMP_NATIVE_ENDIAN		0;"	d
GMP_VERSION		0;"	d
gmp_abs		0;"	f	S:GMP function gmp_abs($a)
gmp_add		0;"	f	S:GMP function gmp_add($a, $b)
gmp_and		0;"	f	S:GMP function gmp_and($a, $b)
gmp_clrbit		0;"	f	S:void function gmp_clrbit($a, $index)
gmp_cmp		0;"	f	S:int function gmp_cmp($a, $b)
gmp_com		0;"	f	S:GMP function gmp_com($a)
gmp_div_q		0;"	f	S:GMP function gmp_div_q($a, $b, $round = GMP_ROUND_ZERO)
gmp_div_qr		0;"	f	S:array function gmp_div_qr($n, $d, $round = GMP_ROUND_ZERO)
gmp_div_r		0;"	f	S:GMP function gmp_div_r($n, $d, $round = GMP_ROUND_ZERO)
gmp_div		0;"	f	S: function gmp_div()
gmp_divexact		0;"	f	S:GMP function gmp_divexact($n, $d)
gmp_export		0;"	f	S:string function gmp_export($gmpnumber, $word_size, $options)
gmp_fact		0;"	f	S:GMP function gmp_fact($a)
gmp_gcd		0;"	f	S:GMP function gmp_gcd($a, $b)
gmp_gcdext		0;"	f	S:array function gmp_gcdext($a, $b)
gmp_hamdist		0;"	f	S:int function gmp_hamdist($a, $b)
gmp_import		0;"	f	S:GMP function gmp_import($data, $word_size, $options)
gmp_init		0;"	f	S:GMP function gmp_init($number, $base)
gmp_intval		0;"	f	S:integer function gmp_intval($gmpnumber)
gmp_invert		0;"	f	S:GMP function gmp_invert($a, $b)
gmp_jacobi		0;"	f	S:int function gmp_jacobi($a, $p)
gmp_legendre		0;"	f	S:int function gmp_legendre($a, $p)
gmp_mod		0;"	f	S:GMP function gmp_mod($n, $d)
gmp_mul		0;"	f	S:GMP function gmp_mul($a, $b)
gmp_neg		0;"	f	S:GMP function gmp_neg($a)
gmp_nextprime		0;"	f	S:GMP function gmp_nextprime($a)
gmp_or		0;"	f	S:GMP function gmp_or($a, $b)
gmp_perfect_square		0;"	f	S:bool function gmp_perfect_square($a)
gmp_popcount		0;"	f	S:int function gmp_popcount($a)
gmp_pow		0;"	f	S:GMP function gmp_pow($base, $exp)
gmp_powm		0;"	f	S:GMP function gmp_powm($base, $exp, $mod)
gmp_prob_prime		0;"	f	S:int function gmp_prob_prime($a, $reps = 10)
gmp_random_bits		0;"	f	S:GMP function gmp_random_bits($bits)
gmp_random_range		0;"	f	S:GMP function gmp_random_range($min, $max)
gmp_random		0;"	f	S:GMP function gmp_random($limiter = 20)
gmp_root		0;"	f	S:GMP function gmp_root($a, $nth)
gmp_rootrem		0;"	f	S:array function gmp_rootrem($a, $nth)
gmp_scan0		0;"	f	S:int function gmp_scan0($a, $start)
gmp_scan1		0;"	f	S:int function gmp_scan1($a, $start)
gmp_setbit		0;"	f	S:void function gmp_setbit(&$a, $index, $bit_on = true)
gmp_sign		0;"	f	S:int function gmp_sign($a)
gmp_sqrt		0;"	f	S:GMP function gmp_sqrt($a)
gmp_sqrtrem		0;"	f	S:array function gmp_sqrtrem($a)
gmp_strval		0;"	f	S:string function gmp_strval($gmpnumber, $base = 10)
gmp_sub		0;"	f	S:GMP function gmp_sub($a, $b)
gmp_testbit		0;"	f	S:bool function gmp_testbit($a, $index)
gmp_xor		0;"	f	S:GMP function gmp_xor($a, $b)
GMP		0;"	c
Lapack		0;"	c
eigenValues		0;"	f	S:array function eigenValues($a, $left, $right)	class:Lapack	a:static
identity		0;"	f	S:array function identity($n)	class:Lapack	a:static
leastSquaresByFactorisation		0;"	f	S:array function leastSquaresByFactorisation($a, $b)	class:Lapack	a:static
leastSquaresBySVD		0;"	f	S:array function leastSquaresBySVD($a, $b)	class:Lapack	a:static
pseudoInverse		0;"	f	S:array function pseudoInverse($a)	class:Lapack	a:static
singularValues		0;"	f	S:array function singularValues($a)	class:Lapack	a:static
solveLinearEquation		0;"	f	S:array function solveLinearEquation($a, $b)	class:Lapack	a:static
lapackexception		0;"	c	i:Exception
message		0;"	p	class:lapackexception	a:protected	S:protected lapackexception::message
code		0;"	p	class:lapackexception	a:protected	S:protected lapackexception::code
file		0;"	p	class:lapackexception	a:protected	S:protected lapackexception::file
line		0;"	p	class:lapackexception	a:protected	S:protected lapackexception::line
abs		0;"	f	S:number function abs($number)
acos		0;"	f	S:float function acos($arg)
acosh		0;"	f	S:float function acosh($arg)
asin		0;"	f	S:float function asin($arg)
asinh		0;"	f	S:float function asinh($arg)
atan2		0;"	f	S:float function atan2($y, $x)
atan		0;"	f	S:float function atan($arg)
atanh		0;"	f	S:float function atanh($arg)
base_convert		0;"	f	S:string function base_convert($number, $frombase, $tobase)
bindec		0;"	f	S:float function bindec($binary_string)
ceil		0;"	f	S:float function ceil($value)
cos		0;"	f	S:float function cos($arg)
cosh		0;"	f	S:float function cosh($arg)
decbin		0;"	f	S:string function decbin($number)
dechex		0;"	f	S:string function dechex($number)
decoct		0;"	f	S:string function decoct($number)
deg2rad		0;"	f	S:float function deg2rad($number)
exp		0;"	f	S:float function exp($arg)
expm1		0;"	f	S:float function expm1($arg)
floor		0;"	f	S:float function floor($value)
fmod		0;"	f	S:float function fmod($x, $y)
getrandmax		0;"	f	S:int function getrandmax()
hexdec		0;"	f	S:number function hexdec($hex_string)
hypot		0;"	f	S:float function hypot($x, $y)
is_finite		0;"	f	S:bool function is_finite($val)
is_infinite		0;"	f	S:bool function is_infinite($val)
is_nan		0;"	f	S:bool function is_nan($val)
lcg_value		0;"	f	S:float function lcg_value()
log10		0;"	f	S:float function log10($arg)
log1p		0;"	f	S:float function log1p($number)
log		0;"	f	S:float function log($arg, $base = M_E)
max		0;"	f	S:string function max($values, $value1, $value2, $...)
min		0;"	f	S:string function min($values, $value1, $value2, $...)
mt_getrandmax		0;"	f	S:int function mt_getrandmax()
mt_rand		0;"	f	S:int function mt_rand($min, $max)
mt_srand		0;"	f	S:void function mt_srand($seed)
octdec		0;"	f	S:number function octdec($octal_string)
pi		0;"	f	S:float function pi()
pow		0;"	f	S:number function pow($base, $exp)
rad2deg		0;"	f	S:float function rad2deg($number)
rand		0;"	f	S:int function rand($min, $max)
round		0;"	f	S:float function round($val, $precision, $mode = PHP_ROUND_HALF_UP)
sin		0;"	f	S:float function sin($arg)
sinh		0;"	f	S:float function sinh($arg)
sqrt		0;"	f	S:float function sqrt($arg)
srand		0;"	f	S:void function srand($seed)
tan		0;"	f	S:float function tan($arg)
tanh		0;"	f	S:float function tanh($arg)
stats_absolute_deviation		0;"	f	S:float function stats_absolute_deviation($a)
stats_cdf_beta		0;"	f	S:float function stats_cdf_beta($par1, $par2, $par3, $which)
stats_cdf_binomial		0;"	f	S:float function stats_cdf_binomial($par1, $par2, $par3, $which)
stats_cdf_cauchy		0;"	f	S:float function stats_cdf_cauchy($par1, $par2, $par3, $which)
stats_cdf_chisquare		0;"	f	S:float function stats_cdf_chisquare($par1, $par2, $which)
stats_cdf_exponential		0;"	f	S:float function stats_cdf_exponential($par1, $par2, $which)
stats_cdf_f		0;"	f	S:float function stats_cdf_f($par1, $par2, $par3, $which)
stats_cdf_gamma		0;"	f	S:float function stats_cdf_gamma($par1, $par2, $par3, $which)
stats_cdf_laplace		0;"	f	S:float function stats_cdf_laplace($par1, $par2, $par3, $which)
stats_cdf_logistic		0;"	f	S:float function stats_cdf_logistic($par1, $par2, $par3, $which)
stats_cdf_negative_binomial		0;"	f	S:float function stats_cdf_negative_binomial($par1, $par2, $par3, $which)
stats_cdf_noncentral_chisquare		0;"	f	S:float function stats_cdf_noncentral_chisquare($par1, $par2, $par3, $which)
stats_cdf_noncentral_f		0;"	f	S:float function stats_cdf_noncentral_f($par1, $par2, $par3, $par4, $which)
stats_cdf_poisson		0;"	f	S:float function stats_cdf_poisson($par1, $par2, $which)
stats_cdf_t		0;"	f	S:float function stats_cdf_t($par1, $par2, $which)
stats_cdf_uniform		0;"	f	S:float function stats_cdf_uniform($par1, $par2, $par3, $which)
stats_cdf_weibull		0;"	f	S:float function stats_cdf_weibull($par1, $par2, $par3, $which)
stats_covariance		0;"	f	S:float function stats_covariance($a, $b)
stats_den_uniform		0;"	f	S:float function stats_den_uniform($x, $a, $b)
stats_dens_beta		0;"	f	S:float function stats_dens_beta($x, $a, $b)
stats_dens_cauchy		0;"	f	S:float function stats_dens_cauchy($x, $ave, $stdev)
stats_dens_chisquare		0;"	f	S:float function stats_dens_chisquare($x, $dfr)
stats_dens_exponential		0;"	f	S:float function stats_dens_exponential($x, $scale)
stats_dens_f		0;"	f	S:float function stats_dens_f($x, $dfr1, $dfr2)
stats_dens_gamma		0;"	f	S:float function stats_dens_gamma($x, $shape, $scale)
stats_dens_laplace		0;"	f	S:float function stats_dens_laplace($x, $ave, $stdev)
stats_dens_logistic		0;"	f	S:float function stats_dens_logistic($x, $ave, $stdev)
stats_dens_negative_binomial		0;"	f	S:float function stats_dens_negative_binomial($x, $n, $pi)
stats_dens_normal		0;"	f	S:float function stats_dens_normal($x, $ave, $stdev)
stats_dens_pmf_binomial		0;"	f	S:float function stats_dens_pmf_binomial($x, $n, $pi)
stats_dens_pmf_hypergeometric		0;"	f	S:float function stats_dens_pmf_hypergeometric($n1, $n2, $N1, $N2)
stats_dens_pmf_poisson		0;"	f	S:float function stats_dens_pmf_poisson($x, $lb)
stats_dens_t		0;"	f	S:float function stats_dens_t($x, $dfr)
stats_dens_weibull		0;"	f	S:float function stats_dens_weibull($x, $a, $b)
stats_harmonic_mean		0;"	f	S:number function stats_harmonic_mean($a)
stats_kurtosis		0;"	f	S:float function stats_kurtosis($a)
stats_rand_gen_beta		0;"	f	S:float function stats_rand_gen_beta($a, $b)
stats_rand_gen_chisquare		0;"	f	S:float function stats_rand_gen_chisquare($df)
stats_rand_gen_exponential		0;"	f	S:float function stats_rand_gen_exponential($av)
stats_rand_gen_f		0;"	f	S:float function stats_rand_gen_f($dfn, $dfd)
stats_rand_gen_funiform		0;"	f	S:float function stats_rand_gen_funiform($low, $high)
stats_rand_gen_gamma		0;"	f	S:float function stats_rand_gen_gamma($a, $r)
stats_rand_gen_ibinomial_negative		0;"	f	S:int function stats_rand_gen_ibinomial_negative($n, $p)
stats_rand_gen_ibinomial		0;"	f	S:int function stats_rand_gen_ibinomial($n, $pp)
stats_rand_gen_int		0;"	f	S:int function stats_rand_gen_int()
stats_rand_gen_ipoisson		0;"	f	S:int function stats_rand_gen_ipoisson($mu)
stats_rand_gen_iuniform		0;"	f	S:int function stats_rand_gen_iuniform($low, $high)
stats_rand_gen_noncenral_chisquare		0;"	f	S:float function stats_rand_gen_noncenral_chisquare($df, $xnonc)
stats_rand_gen_noncentral_f		0;"	f	S:float function stats_rand_gen_noncentral_f($dfn, $dfd, $xnonc)
stats_rand_gen_noncentral_t		0;"	f	S:float function stats_rand_gen_noncentral_t($df, $xnonc)
stats_rand_gen_normal		0;"	f	S:float function stats_rand_gen_normal($av, $sd)
stats_rand_gen_t		0;"	f	S:float function stats_rand_gen_t($df)
stats_rand_get_seeds		0;"	f	S:array function stats_rand_get_seeds()
stats_rand_phrase_to_seeds		0;"	f	S:array function stats_rand_phrase_to_seeds($phrase)
stats_rand_ranf		0;"	f	S:float function stats_rand_ranf()
stats_rand_setall		0;"	f	S:void function stats_rand_setall($iseed1, $iseed2)
stats_skew		0;"	f	S:float function stats_skew($a)
stats_standard_deviation		0;"	f	S:float function stats_standard_deviation($a, $sample = false)
stats_stat_binomial_coef		0;"	f	S:float function stats_stat_binomial_coef($x, $n)
stats_stat_correlation		0;"	f	S:float function stats_stat_correlation($arr1, $arr2)
stats_stat_gennch		0;"	f	S:float function stats_stat_gennch($n)
stats_stat_independent_t		0;"	f	S:float function stats_stat_independent_t($arr1, $arr2)
stats_stat_innerproduct		0;"	f	S:float function stats_stat_innerproduct($arr1, $arr2)
stats_stat_noncentral_t		0;"	f	S:float function stats_stat_noncentral_t($par1, $par2, $par3, $which)
stats_stat_paired_t		0;"	f	S:float function stats_stat_paired_t($arr1, $arr2)
stats_stat_percentile		0;"	f	S:float function stats_stat_percentile($df, $xnonc)
stats_stat_powersum		0;"	f	S:float function stats_stat_powersum($arr, $power)
stats_variance		0;"	f	S:float function stats_variance($a, $sample = false)
TRADER_MA_TYPE_SMA		0;"	d
TRADER_MA_TYPE_EMA		0;"	d
TRADER_MA_TYPE_WMA		0;"	d
TRADER_MA_TYPE_DEMA		0;"	d
TRADER_MA_TYPE_TEMA		0;"	d
TRADER_MA_TYPE_TRIMA		0;"	d
TRADER_MA_TYPE_KAMA		0;"	d
TRADER_MA_TYPE_MAMA		0;"	d
TRADER_MA_TYPE_T3		0;"	d
TRADER_REAL_MIN		0;"	d
TRADER_REAL_MAX		0;"	d
TRADER_FUNC_UNST_ADX		0;"	d
TRADER_FUNC_UNST_ADXR		0;"	d
TRADER_FUNC_UNST_ATR		0;"	d
TRADER_FUNC_UNST_CMO		0;"	d
TRADER_FUNC_UNST_DX		0;"	d
TRADER_FUNC_UNST_EMA		0;"	d
TRADER_FUNC_UNST_HT_DCPERIOD		0;"	d
TRADER_FUNC_UNST_HT_DCPHASE		0;"	d
TRADER_FUNC_UNST_HT_PHASOR		0;"	d
TRADER_FUNC_UNST_HT_SINE		0;"	d
TRADER_FUNC_UNST_HT_TRENDLINE		0;"	d
TRADER_FUNC_UNST_HT_TRENDMODE		0;"	d
TRADER_FUNC_UNST_KAMA		0;"	d
TRADER_FUNC_UNST_MAMA		0;"	d
TRADER_FUNC_UNST_MFI		0;"	d
TRADER_FUNC_UNST_MINUS_DI		0;"	d
TRADER_FUNC_UNST_MINUS_DM		0;"	d
TRADER_FUNC_UNST_NATR		0;"	d
TRADER_FUNC_UNST_PLUS_DI		0;"	d
TRADER_FUNC_UNST_PLUS_DM		0;"	d
TRADER_FUNC_UNST_RSI		0;"	d
TRADER_FUNC_UNST_STOCHRSI		0;"	d
TRADER_FUNC_UNST_T3		0;"	d
TRADER_FUNC_UNST_ALL		0;"	d
TRADER_FUNC_UNST_NONE		0;"	d
TRADER_COMPATIBILITY_DEFAULT		0;"	d
TRADER_COMPATIBILITY_METASTOCK		0;"	d
TRADER_ERR_SUCCESS		0;"	d
TRADER_ERR_LIB_NOT_INITIALIZE		0;"	d
TRADER_ERR_BAD_PARAM		0;"	d
TRADER_ERR_ALLOC_ERR		0;"	d
TRADER_ERR_GROUP_NOT_FOUND		0;"	d
TRADER_ERR_FUNC_NOT_FOUND		0;"	d
TRADER_ERR_INVALID_HANDLE		0;"	d
TRADER_ERR_INVALID_PARAM_HOLDER		0;"	d
TRADER_ERR_INVALID_PARAM_HOLDER_TYPE		0;"	d
TRADER_ERR_INVALID_PARAM_FUNCTION		0;"	d
TRADER_ERR_INPUT_NOT_ALL_INITIALIZE		0;"	d
TRADER_ERR_OUTPUT_NOT_ALL_INITIALIZE		0;"	d
TRADER_ERR_OUT_OF_RANGE_START_INDEX		0;"	d
TRADER_ERR_OUT_OF_RANGE_END_INDEX		0;"	d
TRADER_ERR_INVALID_LIST_TYPE		0;"	d
TRADER_ERR_BAD_OBJECT		0;"	d
TRADER_ERR_NOT_SUPPORTED		0;"	d
TRADER_ERR_INTERNAL_ERROR		0;"	d
TRADER_ERR_UNKNOWN_ERROR		0;"	d
trader_acos		0;"	f	S:array function trader_acos($real)
trader_ad		0;"	f	S:array function trader_ad($high, $low, $close, $volume)
trader_add		0;"	f	S:array function trader_add($real0, $real1)
trader_adosc		0;"	f	S:array function trader_adosc($high, $low, $close, $volume, $fastPeriod, $slowPeriod)
trader_adx		0;"	f	S:array function trader_adx($high, $low, $close, $timePeriod)
trader_adxr		0;"	f	S:array function trader_adxr($high, $low, $close, $timePeriod)
trader_apo		0;"	f	S:array function trader_apo($real, $fastPeriod, $slowPeriod, $mAType)
trader_aroon		0;"	f	S:array function trader_aroon($high, $low, $timePeriod)
trader_aroonosc		0;"	f	S:array function trader_aroonosc($high, $low, $timePeriod)
trader_asin		0;"	f	S:array function trader_asin($real)
trader_atan		0;"	f	S:array function trader_atan($real)
trader_atr		0;"	f	S:array function trader_atr($high, $low, $close, $timePeriod)
trader_avgprice		0;"	f	S:array function trader_avgprice($open, $high, $low, $close)
trader_bbands		0;"	f	S:array function trader_bbands($real, $timePeriod, $nbDevUp, $nbDevDn, $mAType)
trader_beta		0;"	f	S:array function trader_beta($real0, $real1, $timePeriod)
trader_bop		0;"	f	S:array function trader_bop($open, $high, $low, $close)
trader_cci		0;"	f	S:array function trader_cci($high, $low, $close, $timePeriod)
trader_cdl2crows		0;"	f	S:array function trader_cdl2crows($open, $high, $low, $close)
trader_cdl3blackcrows		0;"	f	S:array function trader_cdl3blackcrows($open, $high, $low, $close)
trader_cdl3inside		0;"	f	S:array function trader_cdl3inside($open, $high, $low, $close)
trader_cdl3linestrike		0;"	f	S:array function trader_cdl3linestrike($open, $high, $low, $close)
trader_cdl3outside		0;"	f	S:array function trader_cdl3outside($open, $high, $low, $close)
trader_cdl3starsinsouth		0;"	f	S:array function trader_cdl3starsinsouth($open, $high, $low, $close)
trader_cdl3whitesoldiers		0;"	f	S:array function trader_cdl3whitesoldiers($open, $high, $low, $close)
trader_cdlabandonedbaby		0;"	f	S:array function trader_cdlabandonedbaby($open, $high, $low, $close, $penetration)
trader_cdladvanceblock		0;"	f	S:array function trader_cdladvanceblock($open, $high, $low, $close)
trader_cdlbelthold		0;"	f	S:array function trader_cdlbelthold($open, $high, $low, $close)
trader_cdlbreakaway		0;"	f	S:array function trader_cdlbreakaway($open, $high, $low, $close)
trader_cdlclosingmarubozu		0;"	f	S:array function trader_cdlclosingmarubozu($open, $high, $low, $close)
trader_cdlconcealbabyswall		0;"	f	S:array function trader_cdlconcealbabyswall($open, $high, $low, $close)
trader_cdlcounterattack		0;"	f	S:array function trader_cdlcounterattack($open, $high, $low, $close)
trader_cdldarkcloudcover		0;"	f	S:array function trader_cdldarkcloudcover($open, $high, $low, $close, $penetration)
trader_cdldoji		0;"	f	S:array function trader_cdldoji($open, $high, $low, $close)
trader_cdldojistar		0;"	f	S:array function trader_cdldojistar($open, $high, $low, $close)
trader_cdldragonflydoji		0;"	f	S:array function trader_cdldragonflydoji($open, $high, $low, $close)
trader_cdlengulfing		0;"	f	S:array function trader_cdlengulfing($open, $high, $low, $close)
trader_cdleveningdojistar		0;"	f	S:array function trader_cdleveningdojistar($open, $high, $low, $close, $penetration)
trader_cdleveningstar		0;"	f	S:array function trader_cdleveningstar($open, $high, $low, $close, $penetration)
trader_cdlgapsidesidewhite		0;"	f	S:array function trader_cdlgapsidesidewhite($open, $high, $low, $close)
trader_cdlgravestonedoji		0;"	f	S:array function trader_cdlgravestonedoji($open, $high, $low, $close)
trader_cdlhammer		0;"	f	S:array function trader_cdlhammer($open, $high, $low, $close)
trader_cdlhangingman		0;"	f	S:array function trader_cdlhangingman($open, $high, $low, $close)
trader_cdlharami		0;"	f	S:array function trader_cdlharami($open, $high, $low, $close)
trader_cdlharamicross		0;"	f	S:array function trader_cdlharamicross($open, $high, $low, $close)
trader_cdlhighwave		0;"	f	S:array function trader_cdlhighwave($open, $high, $low, $close)
trader_cdlhikkake		0;"	f	S:array function trader_cdlhikkake($open, $high, $low, $close)
trader_cdlhikkakemod		0;"	f	S:array function trader_cdlhikkakemod($open, $high, $low, $close)
trader_cdlhomingpigeon		0;"	f	S:array function trader_cdlhomingpigeon($open, $high, $low, $close)
trader_cdlidentical3crows		0;"	f	S:array function trader_cdlidentical3crows($open, $high, $low, $close)
trader_cdlinneck		0;"	f	S:array function trader_cdlinneck($open, $high, $low, $close)
trader_cdlinvertedhammer		0;"	f	S:array function trader_cdlinvertedhammer($open, $high, $low, $close)
trader_cdlkicking		0;"	f	S:array function trader_cdlkicking($open, $high, $low, $close)
trader_cdlkickingbylength		0;"	f	S:array function trader_cdlkickingbylength($open, $high, $low, $close)
trader_cdlladderbottom		0;"	f	S:array function trader_cdlladderbottom($open, $high, $low, $close)
trader_cdllongleggeddoji		0;"	f	S:array function trader_cdllongleggeddoji($open, $high, $low, $close)
trader_cdllongline		0;"	f	S:array function trader_cdllongline($open, $high, $low, $close)
trader_cdlmarubozu		0;"	f	S:array function trader_cdlmarubozu($open, $high, $low, $close)
trader_cdlmatchinglow		0;"	f	S:array function trader_cdlmatchinglow($open, $high, $low, $close)
trader_cdlmathold		0;"	f	S:array function trader_cdlmathold($open, $high, $low, $close, $penetration)
trader_cdlmorningdojistar		0;"	f	S:array function trader_cdlmorningdojistar($open, $high, $low, $close, $penetration)
trader_cdlmorningstar		0;"	f	S:array function trader_cdlmorningstar($open, $high, $low, $close, $penetration)
trader_cdlonneck		0;"	f	S:array function trader_cdlonneck($open, $high, $low, $close)
trader_cdlpiercing		0;"	f	S:array function trader_cdlpiercing($open, $high, $low, $close)
trader_cdlrickshawman		0;"	f	S:array function trader_cdlrickshawman($open, $high, $low, $close)
trader_cdlrisefall3methods		0;"	f	S:array function trader_cdlrisefall3methods($open, $high, $low, $close)
trader_cdlseparatinglines		0;"	f	S:array function trader_cdlseparatinglines($open, $high, $low, $close)
trader_cdlshootingstar		0;"	f	S:array function trader_cdlshootingstar($open, $high, $low, $close)
trader_cdlshortline		0;"	f	S:array function trader_cdlshortline($open, $high, $low, $close)
trader_cdlspinningtop		0;"	f	S:array function trader_cdlspinningtop($open, $high, $low, $close)
trader_cdlstalledpattern		0;"	f	S:array function trader_cdlstalledpattern($open, $high, $low, $close)
trader_cdlsticksandwich		0;"	f	S:array function trader_cdlsticksandwich($open, $high, $low, $close)
trader_cdltakuri		0;"	f	S:array function trader_cdltakuri($open, $high, $low, $close)
trader_cdltasukigap		0;"	f	S:array function trader_cdltasukigap($open, $high, $low, $close)
trader_cdlthrusting		0;"	f	S:array function trader_cdlthrusting($open, $high, $low, $close)
trader_cdltristar		0;"	f	S:array function trader_cdltristar($open, $high, $low, $close)
trader_cdlunique3river		0;"	f	S:array function trader_cdlunique3river($open, $high, $low, $close)
trader_cdlupsidegap2crows		0;"	f	S:array function trader_cdlupsidegap2crows($open, $high, $low, $close)
trader_cdlxsidegap3methods		0;"	f	S:array function trader_cdlxsidegap3methods($open, $high, $low, $close)
trader_ceil		0;"	f	S:array function trader_ceil($real)
trader_cmo		0;"	f	S:array function trader_cmo($real, $timePeriod)
trader_correl		0;"	f	S:array function trader_correl($real0, $real1, $timePeriod)
trader_cos		0;"	f	S:array function trader_cos($real)
trader_cosh		0;"	f	S:array function trader_cosh($real)
trader_dema		0;"	f	S:array function trader_dema($real, $timePeriod)
trader_div		0;"	f	S:array function trader_div($real0, $real1)
trader_dx		0;"	f	S:array function trader_dx($high, $low, $close, $timePeriod)
trader_ema		0;"	f	S:array function trader_ema($real, $timePeriod)
trader_errno		0;"	f	S:integer function trader_errno()
trader_exp		0;"	f	S:array function trader_exp($real)
trader_floor		0;"	f	S:array function trader_floor($real)
trader_get_compat		0;"	f	S:integer function trader_get_compat()
trader_get_unstable_period		0;"	f	S:integer function trader_get_unstable_period($functionId)
trader_ht_dcperiod		0;"	f	S:array function trader_ht_dcperiod($real)
trader_ht_dcphase		0;"	f	S:array function trader_ht_dcphase($real)
trader_ht_phasor		0;"	f	S:array function trader_ht_phasor($real)
trader_ht_sine		0;"	f	S:array function trader_ht_sine($real)
trader_ht_trendline		0;"	f	S:array function trader_ht_trendline($real)
trader_ht_trendmode		0;"	f	S:array function trader_ht_trendmode($real)
trader_kama		0;"	f	S:array function trader_kama($real, $timePeriod)
trader_linearreg_angle		0;"	f	S:array function trader_linearreg_angle($real, $timePeriod)
trader_linearreg_intercept		0;"	f	S:array function trader_linearreg_intercept($real, $timePeriod)
trader_linearreg_slope		0;"	f	S:array function trader_linearreg_slope($real, $timePeriod)
trader_linearreg		0;"	f	S:array function trader_linearreg($real, $timePeriod)
trader_ln		0;"	f	S:array function trader_ln($real)
trader_log10		0;"	f	S:array function trader_log10($real)
trader_ma		0;"	f	S:array function trader_ma($real, $timePeriod, $mAType)
trader_macd		0;"	f	S:array function trader_macd($real, $fastPeriod, $slowPeriod, $signalPeriod)
trader_macdext		0;"	f	S:array function trader_macdext($real, $fastPeriod, $fastMAType, $slowPeriod, $slowMAType, $signalPeriod, $signalMAType)
trader_macdfix		0;"	f	S:array function trader_macdfix($real, $signalPeriod)
trader_mama		0;"	f	S:array function trader_mama($real, $fastLimit, $slowLimit)
trader_mavp		0;"	f	S:array function trader_mavp($real, $periods, $minPeriod, $maxPeriod, $mAType)
trader_max		0;"	f	S:array function trader_max($real, $timePeriod)
trader_maxindex		0;"	f	S:array function trader_maxindex($real, $timePeriod)
trader_medprice		0;"	f	S:array function trader_medprice($high, $low)
trader_mfi		0;"	f	S:array function trader_mfi($high, $low, $close, $volume, $timePeriod)
trader_midpoint		0;"	f	S:array function trader_midpoint($real, $timePeriod)
trader_midprice		0;"	f	S:array function trader_midprice($high, $low, $timePeriod)
trader_min		0;"	f	S:array function trader_min($real, $timePeriod)
trader_minindex		0;"	f	S:array function trader_minindex($real, $timePeriod)
trader_minmax		0;"	f	S:array function trader_minmax($real, $timePeriod)
trader_minmaxindex		0;"	f	S:array function trader_minmaxindex($real, $timePeriod)
trader_minus_di		0;"	f	S:array function trader_minus_di($high, $low, $close, $timePeriod)
trader_minus_dm		0;"	f	S:array function trader_minus_dm($high, $low, $timePeriod)
trader_mom		0;"	f	S:array function trader_mom($real, $timePeriod)
trader_mult		0;"	f	S:array function trader_mult($real0, $real1)
trader_natr		0;"	f	S:array function trader_natr($high, $low, $close, $timePeriod)
trader_obv		0;"	f	S:array function trader_obv($real, $volume)
trader_plus_di		0;"	f	S:array function trader_plus_di($high, $low, $close, $timePeriod)
trader_plus_dm		0;"	f	S:array function trader_plus_dm($high, $low, $timePeriod)
trader_ppo		0;"	f	S:array function trader_ppo($real, $fastPeriod, $slowPeriod, $mAType)
trader_roc		0;"	f	S:array function trader_roc($real, $timePeriod)
trader_rocp		0;"	f	S:array function trader_rocp($real, $timePeriod)
trader_rocr100		0;"	f	S:array function trader_rocr100($real, $timePeriod)
trader_rocr		0;"	f	S:array function trader_rocr($real, $timePeriod)
trader_rsi		0;"	f	S:array function trader_rsi($real, $timePeriod)
trader_sar		0;"	f	S:array function trader_sar($high, $low, $acceleration, $maximum)
trader_sarext		0;"	f	S:array function trader_sarext($high, $low, $startValue, $offsetOnReverse, $accelerationInitLong, $accelerationLong, $accelerationMaxLong, $accelerationInitShort, $accelerationShort, $accelerationMaxShort)
trader_set_compat		0;"	f	S:void function trader_set_compat($compatId)
trader_set_unstable_period		0;"	f	S:void function trader_set_unstable_period($functionId, $timePeriod)
trader_sin		0;"	f	S:array function trader_sin($real)
trader_sinh		0;"	f	S:array function trader_sinh($real)
trader_sma		0;"	f	S:array function trader_sma($real, $timePeriod)
trader_sqrt		0;"	f	S:array function trader_sqrt($real)
trader_stddev		0;"	f	S:array function trader_stddev($real, $timePeriod, $nbDev)
trader_stoch		0;"	f	S:array function trader_stoch($high, $low, $close, $fastK_Period, $slowK_Period, $slowK_MAType, $slowD_Period, $slowD_MAType)
trader_stochf		0;"	f	S:array function trader_stochf($high, $low, $close, $fastK_Period, $fastD_Period, $fastD_MAType)
trader_stochrsi		0;"	f	S:array function trader_stochrsi($real, $timePeriod, $fastK_Period, $fastD_Period, $fastD_MAType)
trader_sub		0;"	f	S:array function trader_sub($real0, $real1)
trader_sum		0;"	f	S:array function trader_sum($real, $timePeriod)
trader_t3		0;"	f	S:array function trader_t3($real, $timePeriod, $vFactor)
trader_tan		0;"	f	S:array function trader_tan($real)
trader_tanh		0;"	f	S:array function trader_tanh($real)
trader_tema		0;"	f	S:array function trader_tema($real, $timePeriod)
trader_trange		0;"	f	S:array function trader_trange($high, $low, $close)
trader_trima		0;"	f	S:array function trader_trima($real, $timePeriod)
trader_trix		0;"	f	S:array function trader_trix($real, $timePeriod)
trader_tsf		0;"	f	S:array function trader_tsf($real, $timePeriod)
trader_typprice		0;"	f	S:array function trader_typprice($high, $low, $close)
trader_ultosc		0;"	f	S:array function trader_ultosc($high, $low, $close, $timePeriod1, $timePeriod2, $timePeriod3)
trader_var		0;"	f	S:array function trader_var($real, $timePeriod, $nbDev)
trader_wclprice		0;"	f	S:array function trader_wclprice($high, $low, $close)
trader_willr		0;"	f	S:array function trader_willr($high, $low, $close, $timePeriod)
trader_wma		0;"	f	S:array function trader_wma($real, $timePeriod)
FDFValue		0;"	d
FDFStatus		0;"	d
FDFFile		0;"	d
FDFID		0;"	d
FDFFf		0;"	d
FDFSetFf		0;"	d
FDFClearFf		0;"	d
FDFFlags		0;"	d
FDFSetF		0;"	d
FDFClrF		0;"	d
FDFAP		0;"	d
FDFAS		0;"	d
FDFAction		0;"	d
FDFAA		0;"	d
FDFAPRef		0;"	d
FDFIF		0;"	d
FDFEnter		0;"	d
FDFExit		0;"	d
FDFDown		0;"	d
FDFUp		0;"	d
FDFFormat		0;"	d
FDFValidate		0;"	d
FDFKeystroke		0;"	d
FDFCalculate		0;"	d
FDFNormalAP		0;"	d
FDFRolloverAP		0;"	d
FDFDownAP		0;"	d
fdf_add_doc_javascript		0;"	f	S:bool function fdf_add_doc_javascript($fdf_document, $script_name, $script_code)
fdf_add_template		0;"	f	S:bool function fdf_add_template($fdf_document, $newpage, $filename, $template, $rename)
fdf_close		0;"	f	S:void function fdf_close($fdf_document)
fdf_create		0;"	f	S:resource function fdf_create()
fdf_enum_values		0;"	f	S:bool function fdf_enum_values($fdf_document, $function, $userdata)
fdf_errno		0;"	f	S:int function fdf_errno()
fdf_error		0;"	f	S:string function fdf_error($error_code = -1)
fdf_get_ap		0;"	f	S:bool function fdf_get_ap($fdf_document, $field, $face, $filename)
fdf_get_attachment		0;"	f	S:array function fdf_get_attachment($fdf_document, $fieldname, $savepath)
fdf_get_encoding		0;"	f	S:string function fdf_get_encoding($fdf_document)
fdf_get_file		0;"	f	S:string function fdf_get_file($fdf_document)
fdf_get_flags		0;"	f	S:int function fdf_get_flags($fdf_document, $fieldname, $whichflags)
fdf_get_opt		0;"	f	S:mixed function fdf_get_opt($fdf_document, $fieldname, $element = -1)
fdf_get_status		0;"	f	S:string function fdf_get_status($fdf_document)
fdf_get_value		0;"	f	S:mixed function fdf_get_value($fdf_document, $fieldname, $which = -1)
fdf_get_version		0;"	f	S:string function fdf_get_version($fdf_document)
fdf_header		0;"	f	S:void function fdf_header()
fdf_next_field_name		0;"	f	S:string function fdf_next_field_name($fdf_document, $fieldname)
fdf_open_string		0;"	f	S:resource function fdf_open_string($fdf_data)
fdf_open		0;"	f	S:resource function fdf_open($filename)
fdf_remove_item		0;"	f	S:bool function fdf_remove_item($fdf_document, $fieldname, $item)
fdf_save_string		0;"	f	S:string function fdf_save_string($fdf_document)
fdf_save		0;"	f	S:bool function fdf_save($fdf_document, $filename)
fdf_set_ap		0;"	f	S:bool function fdf_set_ap($fdf_document, $field_name, $face, $filename, $page_number)
fdf_set_encoding		0;"	f	S:bool function fdf_set_encoding($fdf_document, $encoding)
fdf_set_file		0;"	f	S:bool function fdf_set_file($fdf_document, $url, $target_frame)
fdf_set_flags		0;"	f	S:bool function fdf_set_flags($fdf_document, $fieldname, $whichFlags, $newFlags)
fdf_set_javascript_action		0;"	f	S:bool function fdf_set_javascript_action($fdf_document, $fieldname, $trigger, $script)
fdf_set_on_import_javascript		0;"	f	S:bool function fdf_set_on_import_javascript($fdf_document, $script, $before_data_import)
fdf_set_opt		0;"	f	S:bool function fdf_set_opt($fdf_document, $fieldname, $element, $str1, $str2)
fdf_set_status		0;"	f	S:bool function fdf_set_status($fdf_document, $status)
fdf_set_submit_form_action		0;"	f	S:bool function fdf_set_submit_form_action($fdf_document, $fieldname, $trigger, $script, $flags)
fdf_set_target_frame		0;"	f	S:bool function fdf_set_target_frame($fdf_document, $frame_name)
fdf_set_value		0;"	f	S:bool function fdf_set_value($fdf_document, $fieldname, $value, $isName)
fdf_set_version		0;"	f	S:bool function fdf_set_version($fdf_document, $version)
GNUPG_SIG_MODE_NORMAL		0;"	d
GNUPG_SIG_MODE_DETACH		0;"	d
GNUPG_SIG_MODE_CLEAR		0;"	d
GNUPG_VALIDITY_UNKNOWN		0;"	d
GNUPG_VALIDITY_UNDEFINED		0;"	d
GNUPG_VALIDITY_NEVER		0;"	d
GNUPG_VALIDITY_MARGINAL		0;"	d
GNUPG_VALIDITY_FULL		0;"	d
GNUPG_VALIDITY_ULTIMATE		0;"	d
GNUPG_PROTOCOL_OpenPGP		0;"	d
GNUPG_PROTOCOL_CMS		0;"	d
GNUPG_SIGSUM_VALID		0;"	d
GNUPG_SIGSUM_GREEN		0;"	d
GNUPG_SIGSUM_RED		0;"	d
GNUPG_SIGSUM_KEY_REVOKED		0;"	d
GNUPG_SIGSUM_KEY_EXPIRED		0;"	d
GNUPG_SIGSUM_KEY_MISSING		0;"	d
GNUPG_SIGSUM_SIG_EXPIRED		0;"	d
GNUPG_SIGSUM_CRL_MISSING		0;"	d
GNUPG_SIGSUM_CRL_TOO_OLD		0;"	d
GNUPG_SIGSUM_BAD_POLICY		0;"	d
GNUPG_SIGSUM_SYS_ERROR		0;"	d
GNUPG_ERROR_WARNING		0;"	d
GNUPG_ERROR_EXCEPTION		0;"	d
GNUPG_ERROR_SILENT		0;"	d
gnupg_adddecryptkey		0;"	f	S:bool function gnupg_adddecryptkey($identifier, $fingerprint, $passphrase)
gnupg_addencryptkey		0;"	f	S:bool function gnupg_addencryptkey($identifier, $fingerprint)
gnupg_addsignkey		0;"	f	S:bool function gnupg_addsignkey($identifier, $fingerprint, $passphrase)
gnupg_cleardecryptkeys		0;"	f	S:bool function gnupg_cleardecryptkeys($identifier)
gnupg_clearencryptkeys		0;"	f	S:bool function gnupg_clearencryptkeys($identifier)
gnupg_clearsignkeys		0;"	f	S:bool function gnupg_clearsignkeys($identifier)
gnupg_decrypt		0;"	f	S:string function gnupg_decrypt($identifier, $text)
gnupg_decryptverify		0;"	f	S:array function gnupg_decryptverify($identifier, $text, &$plaintext)
gnupg_encrypt		0;"	f	S:string function gnupg_encrypt($identifier, $plaintext)
gnupg_encryptsign		0;"	f	S:string function gnupg_encryptsign($identifier, $plaintext)
gnupg_export		0;"	f	S:string function gnupg_export($identifier, $fingerprint)
gnupg_geterror		0;"	f	S:string function gnupg_geterror($identifier)
gnupg_getprotocol		0;"	f	S:int function gnupg_getprotocol($identifier)
gnupg_import		0;"	f	S:array function gnupg_import($identifier, $keydata)
gnupg_init		0;"	f	S:resource function gnupg_init()
gnupg_keyinfo		0;"	f	S:array function gnupg_keyinfo($identifier, $pattern)
gnupg_setarmor		0;"	f	S:bool function gnupg_setarmor($identifier, $armor)
gnupg_seterrormode		0;"	f	S:void function gnupg_seterrormode($identifier, $errormode)
gnupg_setsignmode		0;"	f	S:bool function gnupg_setsignmode($identifier, $signmode)
gnupg_sign		0;"	f	S:string function gnupg_sign($identifier, $plaintext)
gnupg_verify		0;"	f	S:array function gnupg_verify($identifier, $signed_text, $signature, &$plaintext)
HaruException		0;"	c	i:Exception
HaruDoc		0;"	c
addPage		0;"	f	S:object function addPage()	class:HaruDoc
addPageLabel		0;"	f	S:bool function addPageLabel($first_page, $style, $first_num, $prefix = "")	class:HaruDoc
__construct		0;"	f	S: function __construct()	class:HaruDoc
createOutline		0;"	f	S:object function createOutline($title, $parent_outline, $encoder)	class:HaruDoc
getCurrentEncoder		0;"	f	S:object function getCurrentEncoder()	class:HaruDoc
getCurrentPage		0;"	f	S:object function getCurrentPage()	class:HaruDoc
getEncoder		0;"	f	S:object function getEncoder($encoding)	class:HaruDoc
getFont		0;"	f	S:object function getFont($fontname, $encoding)	class:HaruDoc
getInfoAttr		0;"	f	S:string function getInfoAttr($type)	class:HaruDoc
getPageLayout		0;"	f	S:int function getPageLayout()	class:HaruDoc
getPageMode		0;"	f	S:int function getPageMode()	class:HaruDoc
getStreamSize		0;"	f	S:int function getStreamSize()	class:HaruDoc
insertPage		0;"	f	S:object function insertPage($page)	class:HaruDoc
loadJPEG		0;"	f	S:object function loadJPEG($filename)	class:HaruDoc
loadPNG		0;"	f	S:object function loadPNG($filename, $deferred = false)	class:HaruDoc
loadRaw		0;"	f	S:object function loadRaw($filename, $width, $height, $color_space)	class:HaruDoc
loadTTC		0;"	f	S:string function loadTTC($fontfile, $index, $embed = false)	class:HaruDoc
loadTTF		0;"	f	S:string function loadTTF($fontfile, $embed = false)	class:HaruDoc
loadType1		0;"	f	S:string function loadType1($afmfile, $pfmfile)	class:HaruDoc
output		0;"	f	S:bool function output()	class:HaruDoc
readFromStream		0;"	f	S:string function readFromStream($bytes)	class:HaruDoc
resetError		0;"	f	S:bool function resetError()	class:HaruDoc
resetStream		0;"	f	S:bool function resetStream()	class:HaruDoc
save		0;"	f	S:bool function save($file)	class:HaruDoc
saveToStream		0;"	f	S:bool function saveToStream()	class:HaruDoc
setCompressionMode		0;"	f	S:bool function setCompressionMode($mode)	class:HaruDoc
setCurrentEncoder		0;"	f	S:bool function setCurrentEncoder($encoding)	class:HaruDoc
setEncryptionMode		0;"	f	S:bool function setEncryptionMode($mode, $key_len = 5)	class:HaruDoc
setInfoAttr		0;"	f	S:bool function setInfoAttr($type, $info)	class:HaruDoc
setInfoDateAttr		0;"	f	S:bool function setInfoDateAttr($type, $year, $month, $day, $hour, $min, $sec, $ind, $off_hour, $off_min)	class:HaruDoc
setOpenAction		0;"	f	S:bool function setOpenAction($destination)	class:HaruDoc
setPageLayout		0;"	f	S:bool function setPageLayout($layout)	class:HaruDoc
setPageMode		0;"	f	S:bool function setPageMode($mode)	class:HaruDoc
setPagesConfiguration		0;"	f	S:bool function setPagesConfiguration($page_per_pages)	class:HaruDoc
setPassword		0;"	f	S:bool function setPassword($owner_password, $user_password)	class:HaruDoc
setPermission		0;"	f	S:bool function setPermission($permission)	class:HaruDoc
useCNSEncodings		0;"	f	S:bool function useCNSEncodings()	class:HaruDoc
useCNSFonts		0;"	f	S:bool function useCNSFonts()	class:HaruDoc
useCNTEncodings		0;"	f	S:bool function useCNTEncodings()	class:HaruDoc
useCNTFonts		0;"	f	S:bool function useCNTFonts()	class:HaruDoc
useJPEncodings		0;"	f	S:bool function useJPEncodings()	class:HaruDoc
useJPFonts		0;"	f	S:bool function useJPFonts()	class:HaruDoc
useKREncodings		0;"	f	S:bool function useKREncodings()	class:HaruDoc
useKRFonts		0;"	f	S:bool function useKRFonts()	class:HaruDoc
HaruPage		0;"	c
arc		0;"	f	S:bool function arc($x, $y, $ray, $ang1, $ang2)	class:HaruPage
beginText		0;"	f	S:bool function beginText()	class:HaruPage
circle		0;"	f	S:bool function circle($x, $y, $ray)	class:HaruPage
closePath		0;"	f	S:bool function closePath()	class:HaruPage
concat		0;"	f	S:bool function concat($a, $b, $c, $d, $x, $y)	class:HaruPage
createDestination		0;"	f	S:object function createDestination()	class:HaruPage
createLinkAnnotation		0;"	f	S:object function createLinkAnnotation($rectangle, $destination)	class:HaruPage
createTextAnnotation		0;"	f	S:object function createTextAnnotation($rectangle, $text, $encoder)	class:HaruPage
createURLAnnotation		0;"	f	S:object function createURLAnnotation($rectangle, $url)	class:HaruPage
curveTo2		0;"	f	S:bool function curveTo2($x2, $y2, $x3, $y3)	class:HaruPage
curveTo3		0;"	f	S:bool function curveTo3($x1, $y1, $x3, $y3)	class:HaruPage
curveTo		0;"	f	S:bool function curveTo($x1, $y1, $x2, $y2, $x3, $y3)	class:HaruPage
drawImage		0;"	f	S:bool function drawImage($image, $x, $y, $width, $height)	class:HaruPage
ellipse		0;"	f	S:bool function ellipse($x, $y, $xray, $yray)	class:HaruPage
endPath		0;"	f	S:bool function endPath()	class:HaruPage
endText		0;"	f	S:bool function endText()	class:HaruPage
eofill		0;"	f	S:bool function eofill()	class:HaruPage
eoFillStroke		0;"	f	S:bool function eoFillStroke($close_path = false)	class:HaruPage
fill		0;"	f	S:bool function fill()	class:HaruPage
fillStroke		0;"	f	S:bool function fillStroke($close_path = false)	class:HaruPage
getCharSpace		0;"	f	S:float function getCharSpace()	class:HaruPage
getCMYKFill		0;"	f	S:array function getCMYKFill()	class:HaruPage
getCMYKStroke		0;"	f	S:array function getCMYKStroke()	class:HaruPage
getCurrentFont		0;"	f	S:object function getCurrentFont()	class:HaruPage
getCurrentFontSize		0;"	f	S:float function getCurrentFontSize()	class:HaruPage
getCurrentPos		0;"	f	S:array function getCurrentPos()	class:HaruPage
getCurrentTextPos		0;"	f	S:array function getCurrentTextPos()	class:HaruPage
getDash		0;"	f	S:array function getDash()	class:HaruPage
getFillingColorSpace		0;"	f	S:int function getFillingColorSpace()	class:HaruPage
getFlatness		0;"	f	S:float function getFlatness()	class:HaruPage
getGMode		0;"	f	S:int function getGMode()	class:HaruPage
getGrayFill		0;"	f	S:float function getGrayFill()	class:HaruPage
getGrayStroke		0;"	f	S:float function getGrayStroke()	class:HaruPage
getHeight		0;"	f	S:float function getHeight()	class:HaruPage
getHorizontalScaling		0;"	f	S:float function getHorizontalScaling()	class:HaruPage
getLineCap		0;"	f	S:int function getLineCap()	class:HaruPage
getLineJoin		0;"	f	S:int function getLineJoin()	class:HaruPage
getLineWidth		0;"	f	S:float function getLineWidth()	class:HaruPage
getMiterLimit		0;"	f	S:float function getMiterLimit()	class:HaruPage
getRGBFill		0;"	f	S:array function getRGBFill()	class:HaruPage
getRGBStroke		0;"	f	S:array function getRGBStroke()	class:HaruPage
getStrokingColorSpace		0;"	f	S:int function getStrokingColorSpace()	class:HaruPage
getTextLeading		0;"	f	S:float function getTextLeading()	class:HaruPage
getTextMatrix		0;"	f	S:array function getTextMatrix()	class:HaruPage
getTextRenderingMode		0;"	f	S:int function getTextRenderingMode()	class:HaruPage
getTextRise		0;"	f	S:float function getTextRise()	class:HaruPage
getTextWidth		0;"	f	S:float function getTextWidth($text)	class:HaruPage
getTransMatrix		0;"	f	S:array function getTransMatrix()	class:HaruPage
getWidth		0;"	f	S:float function getWidth()	class:HaruPage
getWordSpace		0;"	f	S:float function getWordSpace()	class:HaruPage
lineTo		0;"	f	S:bool function lineTo($x, $y)	class:HaruPage
measureText		0;"	f	S:int function measureText($text, $width, $wordwrap = false)	class:HaruPage
moveTextPos		0;"	f	S:bool function moveTextPos($x, $y, $set_leading = false)	class:HaruPage
moveTo		0;"	f	S:bool function moveTo($x, $y)	class:HaruPage
moveToNextLine		0;"	f	S:bool function moveToNextLine()	class:HaruPage
rectangle		0;"	f	S:bool function rectangle($x, $y, $width, $height)	class:HaruPage
setCharSpace		0;"	f	S:bool function setCharSpace($char_space)	class:HaruPage
setCMYKFill		0;"	f	S:bool function setCMYKFill($c, $m, $y, $k)	class:HaruPage
setCMYKStroke		0;"	f	S:bool function setCMYKStroke($c, $m, $y, $k)	class:HaruPage
setDash		0;"	f	S:bool function setDash($pattern, $phase)	class:HaruPage
setFlatness		0;"	f	S:bool function setFlatness($flatness)	class:HaruPage
setFontAndSize		0;"	f	S:bool function setFontAndSize($font, $size)	class:HaruPage
setGrayFill		0;"	f	S:bool function setGrayFill($value)	class:HaruPage
setGrayStroke		0;"	f	S:bool function setGrayStroke($value)	class:HaruPage
setHeight		0;"	f	S:bool function setHeight($height)	class:HaruPage
setHorizontalScaling		0;"	f	S:bool function setHorizontalScaling($scaling)	class:HaruPage
setLineCap		0;"	f	S:bool function setLineCap($cap)	class:HaruPage
setLineJoin		0;"	f	S:bool function setLineJoin($join)	class:HaruPage
setLineWidth		0;"	f	S:bool function setLineWidth($width)	class:HaruPage
setMiterLimit		0;"	f	S:bool function setMiterLimit($limit)	class:HaruPage
setRGBFill		0;"	f	S:bool function setRGBFill($r, $g, $b)	class:HaruPage
setRGBStroke		0;"	f	S:bool function setRGBStroke($r, $g, $b)	class:HaruPage
setRotate		0;"	f	S:bool function setRotate($angle)	class:HaruPage
setSize		0;"	f	S:bool function setSize($size, $direction)	class:HaruPage
setSlideShow		0;"	f	S:bool function setSlideShow($type, $disp_time, $trans_time)	class:HaruPage
setTextLeading		0;"	f	S:bool function setTextLeading($text_leading)	class:HaruPage
setTextMatrix		0;"	f	S:bool function setTextMatrix($a, $b, $c, $d, $x, $y)	class:HaruPage
setTextRenderingMode		0;"	f	S:bool function setTextRenderingMode($mode)	class:HaruPage
setTextRise		0;"	f	S:bool function setTextRise($rise)	class:HaruPage
setWidth		0;"	f	S:bool function setWidth($width)	class:HaruPage
setWordSpace		0;"	f	S:bool function setWordSpace($word_space)	class:HaruPage
showText		0;"	f	S:bool function showText($text)	class:HaruPage
showTextNextLine		0;"	f	S:bool function showTextNextLine($text, $word_space, $char_space)	class:HaruPage
stroke		0;"	f	S:bool function stroke($close_path = false)	class:HaruPage
textOut		0;"	f	S:bool function textOut($x, $y, $text)	class:HaruPage
textRect		0;"	f	S:bool function textRect($left, $top, $right, $bottom, $text, $align = HaruPage::TALIGN_LEFT)	class:HaruPage
HaruFont		0;"	c
getAscent		0;"	f	S:int function getAscent()	class:HaruFont
getCapHeight		0;"	f	S:int function getCapHeight()	class:HaruFont
getDescent		0;"	f	S:int function getDescent()	class:HaruFont
getEncodingName		0;"	f	S:string function getEncodingName()	class:HaruFont
getFontName		0;"	f	S:string function getFontName()	class:HaruFont
getTextWidth		0;"	f	S:array function getTextWidth($text)	class:HaruFont
getUnicodeWidth		0;"	f	S:int function getUnicodeWidth($character)	class:HaruFont
getXHeight		0;"	f	S:int function getXHeight()	class:HaruFont
measureText		0;"	f	S:int function measureText($text, $width, $font_size, $char_space, $word_space, $word_wrap = false)	class:HaruFont
HaruImage		0;"	c
getBitsPerComponent		0;"	f	S:int function getBitsPerComponent()	class:HaruImage
getColorSpace		0;"	f	S:string function getColorSpace()	class:HaruImage
getHeight		0;"	f	S:int function getHeight()	class:HaruImage
getSize		0;"	f	S:array function getSize()	class:HaruImage
getWidth		0;"	f	S:int function getWidth()	class:HaruImage
setColorMask		0;"	f	S:bool function setColorMask($rmin, $rmax, $gmin, $gmax, $bmin, $bmax)	class:HaruImage
setMaskImage		0;"	f	S:bool function setMaskImage($mask_image)	class:HaruImage
HaruEncoder		0;"	c
getByteType		0;"	f	S:int function getByteType($text, $index)	class:HaruEncoder
getType		0;"	f	S:int function getType()	class:HaruEncoder
getUnicode		0;"	f	S:int function getUnicode($character)	class:HaruEncoder
getWritingMode		0;"	f	S:int function getWritingMode()	class:HaruEncoder
HaruOutline		0;"	c
setDestination		0;"	f	S:bool function setDestination($destination)	class:HaruOutline
setOpened		0;"	f	S:bool function setOpened($opened)	class:HaruOutline
HaruAnnotation		0;"	c
setBorderStyle		0;"	f	S:bool function setBorderStyle($width, $dash_on, $dash_off)	class:HaruAnnotation
setHighlightMode		0;"	f	S:bool function setHighlightMode($mode)	class:HaruAnnotation
setIcon		0;"	f	S:bool function setIcon($icon)	class:HaruAnnotation
setOpened		0;"	f	S:bool function setOpened($opened)	class:HaruAnnotation
HaruDestination		0;"	c
setFit		0;"	f	S:bool function setFit()	class:HaruDestination
setFitB		0;"	f	S:bool function setFitB()	class:HaruDestination
setFitBH		0;"	f	S:bool function setFitBH($top)	class:HaruDestination
setFitBV		0;"	f	S:bool function setFitBV($left)	class:HaruDestination
setFitH		0;"	f	S:bool function setFitH($top)	class:HaruDestination
setFitR		0;"	f	S:bool function setFitR($left, $bottom, $right, $top)	class:HaruDestination
setFitV		0;"	f	S:bool function setFitV($left)	class:HaruDestination
setXYZ		0;"	f	S:bool function setXYZ($left, $top, $zoom)	class:HaruDestination
MING_NEW		0;"	d
MING_ZLIB		0;"	d
SWFBUTTON_HIT		0;"	d
SWFBUTTON_DOWN		0;"	d
SWFBUTTON_OVER		0;"	d
SWFBUTTON_UP		0;"	d
SWFBUTTON_MOUSEUPOUTSIDE		0;"	d
SWFBUTTON_DRAGOVER		0;"	d
SWFBUTTON_DRAGOUT		0;"	d
SWFBUTTON_MOUSEUP		0;"	d
SWFBUTTON_MOUSEDOWN		0;"	d
SWFBUTTON_MOUSEOUT		0;"	d
SWFBUTTON_MOUSEOVER		0;"	d
SWFFILL_RADIAL_GRADIENT		0;"	d
SWFFILL_LINEAR_GRADIENT		0;"	d
SWFFILL_TILED_BITMAP		0;"	d
SWFFILL_CLIPPED_BITMAP		0;"	d
SWFTEXTFIELD_HASLENGTH		0;"	d
SWFTEXTFIELD_NOEDIT		0;"	d
SWFTEXTFIELD_PASSWORD		0;"	d
SWFTEXTFIELD_MULTILINE		0;"	d
SWFTEXTFIELD_WORDWRAP		0;"	d
SWFTEXTFIELD_DRAWBOX		0;"	d
SWFTEXTFIELD_NOSELECT		0;"	d
SWFTEXTFIELD_HTML		0;"	d
SWFTEXTFIELD_ALIGN_LEFT		0;"	d
SWFTEXTFIELD_ALIGN_RIGHT		0;"	d
SWFTEXTFIELD_ALIGN_CENTER		0;"	d
SWFTEXTFIELD_ALIGN_JUSTIFY		0;"	d
SWFACTION_ONLOAD		0;"	d
SWFACTION_ENTERFRAME		0;"	d
SWFACTION_UNLOAD		0;"	d
SWFACTION_MOUSEMOVE		0;"	d
SWFACTION_MOUSEDOWN		0;"	d
SWFACTION_MOUSEUP		0;"	d
SWFACTION_KEYDOWN		0;"	d
SWFACTION_KEYUP		0;"	d
SWFACTION_DATA		0;"	d
ming_keypress		0;"	f	S:int function ming_keypress($char)
ming_setcubicthreshold		0;"	f	S:void function ming_setcubicthreshold($threshold)
ming_setscale		0;"	f	S:void function ming_setscale($scale)
ming_setswfcompression		0;"	f	S:void function ming_setswfcompression($level)
ming_useconstants		0;"	f	S:void function ming_useconstants($use)
ming_useswfversion		0;"	f	S:void function ming_useswfversion($version)
SWFAction		0;"	c
__construct		0;"	f	S: function __construct($script)	class:SWFAction
SWFBitmap		0;"	c
__construct		0;"	f	S: function __construct($file, $alphafile)	class:SWFBitmap
getHeight		0;"	f	S:float function getHeight()	class:SWFBitmap
getWidth		0;"	f	S:float function getWidth()	class:SWFBitmap
SWFButton		0;"	c
addAction		0;"	f	S:void function addAction($action, $flags)	class:SWFButton
addASound		0;"	f	S:SWFSoundInstance function addASound($sound, $flags)	class:SWFButton
addShape		0;"	f	S:void function addShape($shape, $flags)	class:SWFButton
__construct		0;"	f	S: function __construct()	class:SWFButton
setAction		0;"	f	S:void function setAction($action)	class:SWFButton
setDown		0;"	f	S:void function setDown($shape)	class:SWFButton
setHit		0;"	f	S:void function setHit($shape)	class:SWFButton
setMenu		0;"	f	S:void function setMenu($flag)	class:SWFButton
setOver		0;"	f	S:void function setOver($shape)	class:SWFButton
setUp		0;"	f	S:void function setUp($shape)	class:SWFButton
SWFDisplayItem		0;"	c
addAction		0;"	f	S:void function addAction($action, $flags)	class:SWFDisplayItem
addColor		0;"	f	S:void function addColor($red, $green, $blue, $a)	class:SWFDisplayItem
endMask		0;"	f	S:void function endMask()	class:SWFDisplayItem
getRot		0;"	f	S:float function getRot()	class:SWFDisplayItem
getX		0;"	f	S:float function getX()	class:SWFDisplayItem
getXScale		0;"	f	S:float function getXScale()	class:SWFDisplayItem
getXSkew		0;"	f	S:float function getXSkew()	class:SWFDisplayItem
getY		0;"	f	S:float function getY()	class:SWFDisplayItem
getYScale		0;"	f	S:float function getYScale()	class:SWFDisplayItem
getYSkew		0;"	f	S:float function getYSkew()	class:SWFDisplayItem
move		0;"	f	S:void function move($dx, $dy)	class:SWFDisplayItem
moveTo		0;"	f	S:void function moveTo($x, $y)	class:SWFDisplayItem
multColor		0;"	f	S:void function multColor($red, $green, $blue, $a)	class:SWFDisplayItem
remove		0;"	f	S:void function remove()	class:SWFDisplayItem
rotate		0;"	f	S:void function rotate($angle)	class:SWFDisplayItem
rotateTo		0;"	f	S:void function rotateTo($angle)	class:SWFDisplayItem
scale		0;"	f	S:void function scale($dx, $dy)	class:SWFDisplayItem
scaleTo		0;"	f	S:void function scaleTo($x, $y)	class:SWFDisplayItem
setDepth		0;"	f	S:void function setDepth($depth)	class:SWFDisplayItem
setMaskLevel		0;"	f	S:void function setMaskLevel($level)	class:SWFDisplayItem
setMatrix		0;"	f	S:void function setMatrix($a, $b, $c, $d, $x, $y)	class:SWFDisplayItem
setName		0;"	f	S:void function setName($name)	class:SWFDisplayItem
setRatio		0;"	f	S:void function setRatio($ratio)	class:SWFDisplayItem
skewX		0;"	f	S:void function skewX($ddegrees)	class:SWFDisplayItem
skewXTo		0;"	f	S:void function skewXTo($degrees)	class:SWFDisplayItem
skewY		0;"	f	S:void function skewY($ddegrees)	class:SWFDisplayItem
skewYTo		0;"	f	S:void function skewYTo($degrees)	class:SWFDisplayItem
SWFFill		0;"	c
moveTo		0;"	f	S:void function moveTo($x, $y)	class:SWFFill
rotateTo		0;"	f	S:void function rotateTo($angle)	class:SWFFill
scaleTo		0;"	f	S:void function scaleTo($x, $y)	class:SWFFill
skewXTo		0;"	f	S:void function skewXTo($x)	class:SWFFill
skewYTo		0;"	f	S:void function skewYTo($y)	class:SWFFill
SWFFont		0;"	c
__construct		0;"	f	S: function __construct($filename)	class:SWFFont
getAscent		0;"	f	S:float function getAscent()	class:SWFFont
getDescent		0;"	f	S:float function getDescent()	class:SWFFont
getLeading		0;"	f	S:float function getLeading()	class:SWFFont
getShape		0;"	f	S:string function getShape($code)	class:SWFFont
getUTF8Width		0;"	f	S:float function getUTF8Width($string)	class:SWFFont
getWidth		0;"	f	S:float function getWidth($string)	class:SWFFont
SWFFontChar		0;"	c
addChars		0;"	f	S:void function addChars($char)	class:SWFFontChar
addUTF8Chars		0;"	f	S:void function addUTF8Chars($char)	class:SWFFontChar
SWFGradient		0;"	c
addEntry		0;"	f	S:void function addEntry($ratio, $red, $green, $blue, $alpha = 255)	class:SWFGradient
__construct		0;"	f	S: function __construct()	class:SWFGradient
SWFMorph		0;"	c
__construct		0;"	f	S: function __construct()	class:SWFMorph
getShape1		0;"	f	S:SWFShape function getShape1()	class:SWFMorph
getShape2		0;"	f	S:SWFShape function getShape2()	class:SWFMorph
SWFMovie		0;"	c
add		0;"	f	S:mixed function add($instance)	class:SWFMovie
addExport		0;"	f	S:void function addExport($char, $name)	class:SWFMovie
addFont		0;"	f	S:mixed function addFont($font)	class:SWFMovie
__construct		0;"	f	S: function __construct($version)	class:SWFMovie
importChar		0;"	f	S:SWFSprite function importChar($libswf, $name)	class:SWFMovie
importFont		0;"	f	S:SWFFontChar function importFont($libswf, $name)	class:SWFMovie
labelFrame		0;"	f	S:void function labelFrame($label)	class:SWFMovie
nextFrame		0;"	f	S:void function nextFrame()	class:SWFMovie
output		0;"	f	S:int function output($compression)	class:SWFMovie
remove		0;"	f	S:void function remove($instance)	class:SWFMovie
save		0;"	f	S:int function save($filename, $compression = -1)	class:SWFMovie
saveToFile		0;"	f	S:int function saveToFile($x, $compression = -1)	class:SWFMovie
setbackground		0;"	f	S:void function setbackground($red, $green, $blue)	class:SWFMovie
setDimension		0;"	f	S:void function setDimension($width, $height)	class:SWFMovie
setFrames		0;"	f	S:void function setFrames($number)	class:SWFMovie
setRate		0;"	f	S:void function setRate($rate)	class:SWFMovie
startSound		0;"	f	S:SWFSoundInstance function startSound($sound)	class:SWFMovie
stopSound		0;"	f	S:void function stopSound($sound)	class:SWFMovie
streamMP3		0;"	f	S:int function streamMP3($mp3file, $skip)	class:SWFMovie
writeExports		0;"	f	S:void function writeExports()	class:SWFMovie
SWFPrebuiltClip		0;"	c
__construct		0;"	f	S: function __construct($file)	class:SWFPrebuiltClip
SWFShape		0;"	c
addFill		0;"	f	S:SWFFill function addFill($red, $green, $blue, $alpha = 255, $bitmap, $flags, $gradient)	class:SWFShape
__construct		0;"	f	S: function __construct()	class:SWFShape
drawArc		0;"	f	S:void function drawArc($r, $startAngle, $endAngle)	class:SWFShape
drawCircle		0;"	f	S:void function drawCircle($r)	class:SWFShape
drawCubic		0;"	f	S:int function drawCubic($bx, $by, $cx, $cy, $dx, $dy)	class:SWFShape
drawCubicTo		0;"	f	S:int function drawCubicTo($bx, $by, $cx, $cy, $dx, $dy)	class:SWFShape
drawCurve		0;"	f	S:int function drawCurve($controldx, $controldy, $anchordx, $anchordy, $targetdx, $targetdy)	class:SWFShape
drawCurveTo		0;"	f	S:int function drawCurveTo($controlx, $controly, $anchorx, $anchory, $targetx, $targety)	class:SWFShape
drawGlyph		0;"	f	S:void function drawGlyph($font, $character, $size)	class:SWFShape
drawLine		0;"	f	S:void function drawLine($dx, $dy)	class:SWFShape
drawLineTo		0;"	f	S:void function drawLineTo($x, $y)	class:SWFShape
movePen		0;"	f	S:void function movePen($dx, $dy)	class:SWFShape
movePenTo		0;"	f	S:void function movePenTo($x, $y)	class:SWFShape
setLeftFill		0;"	f	S:void function setLeftFill($fill, $red, $green, $blue, $a)	class:SWFShape
setLine		0;"	f	S:void function setLine($shape, $width, $red, $green, $blue, $a)	class:SWFShape
setRightFill		0;"	f	S:void function setRightFill($fill, $red, $green, $blue, $a)	class:SWFShape
SWFSound		0;"	c
__construct		0;"	f	S: function __construct($filename, $flags)	class:SWFSound
SWFSoundInstance		0;"	c
loopCount		0;"	f	S:void function loopCount($point)	class:SWFSoundInstance
loopInPoint		0;"	f	S:void function loopInPoint($point)	class:SWFSoundInstance
loopOutPoint		0;"	f	S:void function loopOutPoint($point)	class:SWFSoundInstance
noMultiple		0;"	f	S:void function noMultiple()	class:SWFSoundInstance
SWFSprite		0;"	c
add		0;"	f	S:void function add($object)	class:SWFSprite
__construct		0;"	f	S: function __construct()	class:SWFSprite
labelFrame		0;"	f	S:void function labelFrame($label)	class:SWFSprite
nextFrame		0;"	f	S:void function nextFrame()	class:SWFSprite
remove		0;"	f	S:void function remove($object)	class:SWFSprite
setFrames		0;"	f	S:void function setFrames($number)	class:SWFSprite
startSound		0;"	f	S:SWFSoundInstance function startSound($sount)	class:SWFSprite
stopSound		0;"	f	S:void function stopSound($sount)	class:SWFSprite
SWFText		0;"	c
addString		0;"	f	S:void function addString($string)	class:SWFText
addUTF8String		0;"	f	S:void function addUTF8String($text)	class:SWFText
__construct		0;"	f	S: function __construct()	class:SWFText
getAscent		0;"	f	S:float function getAscent()	class:SWFText
getDescent		0;"	f	S:float function getDescent()	class:SWFText
getLeading		0;"	f	S:float function getLeading()	class:SWFText
getUTF8Width		0;"	f	S:float function getUTF8Width($string)	class:SWFText
getWidth		0;"	f	S:float function getWidth($string)	class:SWFText
moveTo		0;"	f	S:void function moveTo($x, $y)	class:SWFText
setColor		0;"	f	S:void function setColor($red, $green, $blue, $a = 255)	class:SWFText
setFont		0;"	f	S:void function setFont($font)	class:SWFText
setHeight		0;"	f	S:void function setHeight($height)	class:SWFText
setSpacing		0;"	f	S:void function setSpacing($spacing)	class:SWFText
SWFTextField		0;"	c
addChars		0;"	f	S:void function addChars($chars)	class:SWFTextField
addString		0;"	f	S:void function addString($string)	class:SWFTextField
align		0;"	f	S:void function align($alignement)	class:SWFTextField
__construct		0;"	f	S: function __construct($flags)	class:SWFTextField
setBounds		0;"	f	S:void function setBounds($width, $height)	class:SWFTextField
setColor		0;"	f	S:void function setColor($red, $green, $blue, $a = 255)	class:SWFTextField
setFont		0;"	f	S:void function setFont($font)	class:SWFTextField
setHeight		0;"	f	S:void function setHeight($height)	class:SWFTextField
setIndentation		0;"	f	S:void function setIndentation($width)	class:SWFTextField
setLeftMargin		0;"	f	S:void function setLeftMargin($width)	class:SWFTextField
setLineSpacing		0;"	f	S:void function setLineSpacing($height)	class:SWFTextField
setMargins		0;"	f	S:void function setMargins($left, $right)	class:SWFTextField
setName		0;"	f	S:void function setName($name)	class:SWFTextField
setPadding		0;"	f	S:void function setPadding($padding)	class:SWFTextField
setRightMargin		0;"	f	S:void function setRightMargin($width)	class:SWFTextField
SWFVideoStream		0;"	c
__construct		0;"	f	S: function __construct($file)	class:SWFVideoStream
getNumFrames		0;"	f	S:int function getNumFrames()	class:SWFVideoStream
setDimension		0;"	f	S:void function setDimension($x, $y)	class:SWFVideoStream
PDF_activate_item		0;"	f	S:bool function PDF_activate_item($pdfdoc, $id)
PDF_add_annotation		0;"	f	S: function PDF_add_annotation()
PDF_add_bookmark		0;"	f	S: function PDF_add_bookmark()
PDF_add_launchlink		0;"	f	S:bool function PDF_add_launchlink($pdfdoc, $llx, $lly, $urx, $ury, $filename)
PDF_add_locallink		0;"	f	S:bool function PDF_add_locallink($pdfdoc, $lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $page, $dest)
PDF_add_nameddest		0;"	f	S:bool function PDF_add_nameddest($pdfdoc, $name, $optlist)
PDF_add_note		0;"	f	S:bool function PDF_add_note($pdfdoc, $llx, $lly, $urx, $ury, $contents, $title, $icon, $open)
PDF_add_outline		0;"	f	S: function PDF_add_outline()
PDF_add_pdflink		0;"	f	S:bool function PDF_add_pdflink($pdfdoc, $bottom_left_x, $bottom_left_y, $up_right_x, $up_right_y, $filename, $page, $dest)
PDF_add_table_cell		0;"	f	S:int function PDF_add_table_cell($pdfdoc, $table, $column, $row, $text, $optlist)
PDF_add_textflow		0;"	f	S:int function PDF_add_textflow($pdfdoc, $textflow, $text, $optlist)
PDF_add_thumbnail		0;"	f	S:bool function PDF_add_thumbnail($pdfdoc, $image)
PDF_add_weblink		0;"	f	S:bool function PDF_add_weblink($pdfdoc, $lowerleftx, $lowerlefty, $upperrightx, $upperrighty, $url)
PDF_arc		0;"	f	S:bool function PDF_arc($p, $x, $y, $r, $alpha, $beta)
PDF_arcn		0;"	f	S:bool function PDF_arcn($p, $x, $y, $r, $alpha, $beta)
PDF_attach_file		0;"	f	S:bool function PDF_attach_file($pdfdoc, $llx, $lly, $urx, $ury, $filename, $description, $author, $mimetype, $icon)
PDF_begin_document		0;"	f	S:int function PDF_begin_document($pdfdoc, $filename, $optlist)
PDF_begin_font		0;"	f	S:bool function PDF_begin_font($pdfdoc, $filename, $a, $b, $c, $d, $e, $f, $optlist)
PDF_begin_glyph		0;"	f	S:bool function PDF_begin_glyph($pdfdoc, $glyphname, $wx, $llx, $lly, $urx, $ury)
PDF_begin_item		0;"	f	S:int function PDF_begin_item($pdfdoc, $tag, $optlist)
PDF_begin_layer		0;"	f	S:bool function PDF_begin_layer($pdfdoc, $layer)
PDF_begin_page_ext		0;"	f	S:bool function PDF_begin_page_ext($pdfdoc, $width, $height, $optlist)
PDF_begin_page		0;"	f	S:bool function PDF_begin_page($pdfdoc, $width, $height)
PDF_begin_pattern		0;"	f	S:int function PDF_begin_pattern($pdfdoc, $width, $height, $xstep, $ystep, $painttype)
PDF_begin_template_ext		0;"	f	S:int function PDF_begin_template_ext($pdfdoc, $width, $height, $optlist)
PDF_begin_template		0;"	f	S:int function PDF_begin_template($pdfdoc, $width, $height)
PDF_circle		0;"	f	S:bool function PDF_circle($pdfdoc, $x, $y, $r)
PDF_clip		0;"	f	S:bool function PDF_clip($p)
PDF_close_image		0;"	f	S:bool function PDF_close_image($p, $image)
PDF_close_pdi_page		0;"	f	S:bool function PDF_close_pdi_page($p, $page)
PDF_close_pdi		0;"	f	S:bool function PDF_close_pdi($p, $doc)
PDF_close		0;"	f	S:bool function PDF_close($p)
PDF_closepath_fill_stroke		0;"	f	S:bool function PDF_closepath_fill_stroke($p)
PDF_closepath_stroke		0;"	f	S:bool function PDF_closepath_stroke($p)
PDF_closepath		0;"	f	S:bool function PDF_closepath($p)
PDF_concat		0;"	f	S:bool function PDF_concat($p, $a, $b, $c, $d, $e, $f)
PDF_continue_text		0;"	f	S:bool function PDF_continue_text($p, $text)
PDF_create_3dview		0;"	f	S:int function PDF_create_3dview($pdfdoc, $username, $optlist)
PDF_create_action		0;"	f	S:int function PDF_create_action($pdfdoc, $type, $optlist)
PDF_create_annotation		0;"	f	S:bool function PDF_create_annotation($pdfdoc, $llx, $lly, $urx, $ury, $type, $optlist)
PDF_create_bookmark		0;"	f	S:int function PDF_create_bookmark($pdfdoc, $text, $optlist)
PDF_create_field		0;"	f	S:bool function PDF_create_field($pdfdoc, $llx, $lly, $urx, $ury, $name, $type, $optlist)
PDF_create_fieldgroup		0;"	f	S:bool function PDF_create_fieldgroup($pdfdoc, $name, $optlist)
PDF_create_gstate		0;"	f	S:int function PDF_create_gstate($pdfdoc, $optlist)
PDF_create_pvf		0;"	f	S:bool function PDF_create_pvf($pdfdoc, $filename, $data, $optlist)
PDF_create_textflow		0;"	f	S:int function PDF_create_textflow($pdfdoc, $text, $optlist)
PDF_curveto		0;"	f	S:bool function PDF_curveto($p, $x1, $y1, $x2, $y2, $x3, $y3)
PDF_define_layer		0;"	f	S:int function PDF_define_layer($pdfdoc, $name, $optlist)
PDF_delete_pvf		0;"	f	S:int function PDF_delete_pvf($pdfdoc, $filename)
PDF_delete_table		0;"	f	S:bool function PDF_delete_table($pdfdoc, $table, $optlist)
PDF_delete_textflow		0;"	f	S:bool function PDF_delete_textflow($pdfdoc, $textflow)
PDF_delete		0;"	f	S:bool function PDF_delete($pdfdoc)
PDF_encoding_set_char		0;"	f	S:bool function PDF_encoding_set_char($pdfdoc, $encoding, $slot, $glyphname, $uv)
PDF_end_document		0;"	f	S:bool function PDF_end_document($pdfdoc, $optlist)
PDF_end_font		0;"	f	S:bool function PDF_end_font($pdfdoc)
PDF_end_glyph		0;"	f	S:bool function PDF_end_glyph($pdfdoc)
PDF_end_item		0;"	f	S:bool function PDF_end_item($pdfdoc, $id)
PDF_end_layer		0;"	f	S:bool function PDF_end_layer($pdfdoc)
PDF_end_page_ext		0;"	f	S:bool function PDF_end_page_ext($pdfdoc, $optlist)
PDF_end_page		0;"	f	S:bool function PDF_end_page($p)
PDF_end_pattern		0;"	f	S:bool function PDF_end_pattern($p)
PDF_end_template		0;"	f	S:bool function PDF_end_template($p)
PDF_endpath		0;"	f	S:bool function PDF_endpath($p)
PDF_fill_imageblock		0;"	f	S:int function PDF_fill_imageblock($pdfdoc, $page, $blockname, $image, $optlist)
PDF_fill_pdfblock		0;"	f	S:int function PDF_fill_pdfblock($pdfdoc, $page, $blockname, $contents, $optlist)
PDF_fill_stroke		0;"	f	S:bool function PDF_fill_stroke($p)
PDF_fill_textblock		0;"	f	S:int function PDF_fill_textblock($pdfdoc, $page, $blockname, $text, $optlist)
PDF_fill		0;"	f	S:bool function PDF_fill($p)
PDF_findfont		0;"	f	S:int function PDF_findfont($p, $fontname, $encoding, $embed)
PDF_fit_image		0;"	f	S:bool function PDF_fit_image($pdfdoc, $image, $x, $y, $optlist)
PDF_fit_pdi_page		0;"	f	S:bool function PDF_fit_pdi_page($pdfdoc, $page, $x, $y, $optlist)
PDF_fit_table		0;"	f	S:string function PDF_fit_table($pdfdoc, $table, $llx, $lly, $urx, $ury, $optlist)
PDF_fit_textflow		0;"	f	S:string function PDF_fit_textflow($pdfdoc, $textflow, $llx, $lly, $urx, $ury, $optlist)
PDF_fit_textline		0;"	f	S:bool function PDF_fit_textline($pdfdoc, $text, $x, $y, $optlist)
PDF_get_apiname		0;"	f	S:string function PDF_get_apiname($pdfdoc)
PDF_get_buffer		0;"	f	S:string function PDF_get_buffer($p)
PDF_get_errmsg		0;"	f	S:string function PDF_get_errmsg($pdfdoc)
PDF_get_errnum		0;"	f	S:int function PDF_get_errnum($pdfdoc)
PDF_get_font		0;"	f	S: function PDF_get_font()
PDF_get_fontname		0;"	f	S: function PDF_get_fontname()
PDF_get_fontsize		0;"	f	S: function PDF_get_fontsize()
PDF_get_image_height		0;"	f	S: function PDF_get_image_height()
PDF_get_image_width		0;"	f	S: function PDF_get_image_width()
PDF_get_majorversion		0;"	f	S:int function PDF_get_majorversion()
PDF_get_minorversion		0;"	f	S:int function PDF_get_minorversion()
PDF_get_parameter		0;"	f	S:string function PDF_get_parameter($p, $key, $modifier)
PDF_get_pdi_parameter		0;"	f	S:string function PDF_get_pdi_parameter($p, $key, $doc, $page, $reserved)
PDF_get_pdi_value		0;"	f	S:float function PDF_get_pdi_value($p, $key, $doc, $page, $reserved)
PDF_get_value		0;"	f	S:float function PDF_get_value($p, $key, $modifier)
PDF_info_font		0;"	f	S:float function PDF_info_font($pdfdoc, $font, $keyword, $optlist)
PDF_info_matchbox		0;"	f	S:float function PDF_info_matchbox($pdfdoc, $boxname, $num, $keyword)
PDF_info_table		0;"	f	S:float function PDF_info_table($pdfdoc, $table, $keyword)
PDF_info_textflow		0;"	f	S:float function PDF_info_textflow($pdfdoc, $textflow, $keyword)
PDF_info_textline		0;"	f	S:float function PDF_info_textline($pdfdoc, $text, $keyword, $optlist)
PDF_initgraphics		0;"	f	S:bool function PDF_initgraphics($p)
PDF_lineto		0;"	f	S:bool function PDF_lineto($p, $x, $y)
PDF_load_3ddata		0;"	f	S:int function PDF_load_3ddata($pdfdoc, $filename, $optlist)
PDF_load_font		0;"	f	S:int function PDF_load_font($pdfdoc, $fontname, $encoding, $optlist)
PDF_load_iccprofile		0;"	f	S:int function PDF_load_iccprofile($pdfdoc, $profilename, $optlist)
PDF_load_image		0;"	f	S:int function PDF_load_image($pdfdoc, $imagetype, $filename, $optlist)
PDF_makespotcolor		0;"	f	S:int function PDF_makespotcolor($p, $spotname)
PDF_moveto		0;"	f	S:bool function PDF_moveto($p, $x, $y)
PDF_new		0;"	f	S:resource function PDF_new()
PDF_open_ccitt		0;"	f	S:int function PDF_open_ccitt($pdfdoc, $filename, $width, $height, $BitReverse, $k, $Blackls1)
PDF_open_file		0;"	f	S:bool function PDF_open_file($p, $filename)
PDF_open_gif		0;"	f	S: function PDF_open_gif()
PDF_open_image_file		0;"	f	S:int function PDF_open_image_file($p, $imagetype, $filename, $stringparam, $intparam)
PDF_open_image		0;"	f	S:int function PDF_open_image($p, $imagetype, $source, $data, $length, $width, $height, $components, $bpc, $params)
PDF_open_jpeg		0;"	f	S: function PDF_open_jpeg()
PDF_open_memory_image		0;"	f	S:int function PDF_open_memory_image($p, $image)
PDF_open_pdi_document		0;"	f	S:int function PDF_open_pdi_document($p, $filename, $optlist)
PDF_open_pdi_page		0;"	f	S:int function PDF_open_pdi_page($p, $doc, $pagenumber, $optlist)
PDF_open_pdi		0;"	f	S:int function PDF_open_pdi($pdfdoc, $filename, $optlist, $len)
PDF_open_tiff		0;"	f	S: function PDF_open_tiff()
PDF_pcos_get_number		0;"	f	S:float function PDF_pcos_get_number($p, $doc, $path)
PDF_pcos_get_stream		0;"	f	S:string function PDF_pcos_get_stream($p, $doc, $optlist, $path)
PDF_pcos_get_string		0;"	f	S:string function PDF_pcos_get_string($p, $doc, $path)
PDF_place_image		0;"	f	S:bool function PDF_place_image($pdfdoc, $image, $x, $y, $scale)
PDF_place_pdi_page		0;"	f	S:bool function PDF_place_pdi_page($pdfdoc, $page, $x, $y, $sx, $sy)
PDF_process_pdi		0;"	f	S:int function PDF_process_pdi($pdfdoc, $doc, $page, $optlist)
PDF_rect		0;"	f	S:bool function PDF_rect($p, $x, $y, $width, $height)
PDF_restore		0;"	f	S:bool function PDF_restore($p)
PDF_resume_page		0;"	f	S:bool function PDF_resume_page($pdfdoc, $optlist)
PDF_rotate		0;"	f	S:bool function PDF_rotate($p, $phi)
PDF_save		0;"	f	S:bool function PDF_save($p)
PDF_scale		0;"	f	S:bool function PDF_scale($p, $sx, $sy)
PDF_set_border_color		0;"	f	S:bool function PDF_set_border_color($p, $red, $green, $blue)
PDF_set_border_dash		0;"	f	S:bool function PDF_set_border_dash($pdfdoc, $black, $white)
PDF_set_border_style		0;"	f	S:bool function PDF_set_border_style($pdfdoc, $style, $width)
PDF_set_char_spacing		0;"	f	S: function PDF_set_char_spacing()
PDF_set_duration		0;"	f	S: function PDF_set_duration()
PDF_set_gstate		0;"	f	S:bool function PDF_set_gstate($pdfdoc, $gstate)
PDF_set_horiz_scaling		0;"	f	S: function PDF_set_horiz_scaling()
PDF_set_info_author		0;"	f	S: function PDF_set_info_author()
PDF_set_info_creator		0;"	f	S: function PDF_set_info_creator()
PDF_set_info_keywords		0;"	f	S: function PDF_set_info_keywords()
PDF_set_info_subject		0;"	f	S: function PDF_set_info_subject()
PDF_set_info_title		0;"	f	S: function PDF_set_info_title()
PDF_set_info		0;"	f	S:bool function PDF_set_info($p, $key, $value)
PDF_set_layer_dependency		0;"	f	S:bool function PDF_set_layer_dependency($pdfdoc, $type, $optlist)
PDF_set_leading		0;"	f	S: function PDF_set_leading()
PDF_set_parameter		0;"	f	S:bool function PDF_set_parameter($p, $key, $value)
PDF_set_text_matrix		0;"	f	S: function PDF_set_text_matrix()
PDF_set_text_pos		0;"	f	S:bool function PDF_set_text_pos($p, $x, $y)
PDF_set_text_rendering		0;"	f	S: function PDF_set_text_rendering()
PDF_set_text_rise		0;"	f	S: function PDF_set_text_rise()
PDF_set_value		0;"	f	S:bool function PDF_set_value($p, $key, $value)
PDF_set_word_spacing		0;"	f	S: function PDF_set_word_spacing()
PDF_setcolor		0;"	f	S:bool function PDF_setcolor($p, $fstype, $colorspace, $c1, $c2, $c3, $c4)
PDF_setdash		0;"	f	S:bool function PDF_setdash($pdfdoc, $b, $w)
PDF_setdashpattern		0;"	f	S:bool function PDF_setdashpattern($pdfdoc, $optlist)
PDF_setflat		0;"	f	S:bool function PDF_setflat($pdfdoc, $flatness)
PDF_setfont		0;"	f	S:bool function PDF_setfont($pdfdoc, $font, $fontsize)
PDF_setgray_fill		0;"	f	S:bool function PDF_setgray_fill($p, $g)
PDF_setgray_stroke		0;"	f	S:bool function PDF_setgray_stroke($p, $g)
PDF_setgray		0;"	f	S:bool function PDF_setgray($p, $g)
PDF_setlinecap		0;"	f	S:bool function PDF_setlinecap($p, $linecap)
PDF_setlinejoin		0;"	f	S:bool function PDF_setlinejoin($p, $value)
PDF_setlinewidth		0;"	f	S:bool function PDF_setlinewidth($p, $width)
PDF_setmatrix		0;"	f	S:bool function PDF_setmatrix($p, $a, $b, $c, $d, $e, $f)
PDF_setmiterlimit		0;"	f	S:bool function PDF_setmiterlimit($pdfdoc, $miter)
PDF_setpolydash		0;"	f	S: function PDF_setpolydash()
PDF_setrgbcolor_fill		0;"	f	S:bool function PDF_setrgbcolor_fill($p, $red, $green, $blue)
PDF_setrgbcolor_stroke		0;"	f	S:bool function PDF_setrgbcolor_stroke($p, $red, $green, $blue)
PDF_setrgbcolor		0;"	f	S:bool function PDF_setrgbcolor($p, $red, $green, $blue)
PDF_shading_pattern		0;"	f	S:int function PDF_shading_pattern($pdfdoc, $shading, $optlist)
PDF_shading		0;"	f	S:int function PDF_shading($pdfdoc, $shtype, $x0, $y0, $x1, $y1, $c1, $c2, $c3, $c4, $optlist)
PDF_shfill		0;"	f	S:bool function PDF_shfill($pdfdoc, $shading)
PDF_show_boxed		0;"	f	S:int function PDF_show_boxed($p, $text, $left, $top, $width, $height, $mode, $feature)
PDF_show_xy		0;"	f	S:bool function PDF_show_xy($p, $text, $x, $y)
PDF_show		0;"	f	S:bool function PDF_show($pdfdoc, $text)
PDF_skew		0;"	f	S:bool function PDF_skew($p, $alpha, $beta)
PDF_stringwidth		0;"	f	S:float function PDF_stringwidth($p, $text, $font, $fontsize)
PDF_stroke		0;"	f	S:bool function PDF_stroke($p)
PDF_suspend_page		0;"	f	S:bool function PDF_suspend_page($pdfdoc, $optlist)
PDF_translate		0;"	f	S:bool function PDF_translate($p, $tx, $ty)
PDF_utf16_to_utf8		0;"	f	S:string function PDF_utf16_to_utf8($pdfdoc, $utf16string)
PDF_utf32_to_utf16		0;"	f	S:string function PDF_utf32_to_utf16($pdfdoc, $utf32string, $ordering)
PDF_utf8_to_utf16		0;"	f	S:string function PDF_utf8_to_utf16($pdfdoc, $utf8string, $ordering)
ps_add_bookmark		0;"	f	S:int function ps_add_bookmark($psdoc, $text, $parent, $open)
ps_add_launchlink		0;"	f	S:bool function ps_add_launchlink($psdoc, $llx, $lly, $urx, $ury, $filename)
ps_add_locallink		0;"	f	S:bool function ps_add_locallink($psdoc, $llx, $lly, $urx, $ury, $page, $dest)
ps_add_note		0;"	f	S:bool function ps_add_note($psdoc, $llx, $lly, $urx, $ury, $contents, $title, $icon, $open)
ps_add_pdflink		0;"	f	S:bool function ps_add_pdflink($psdoc, $llx, $lly, $urx, $ury, $filename, $page, $dest)
ps_add_weblink		0;"	f	S:bool function ps_add_weblink($psdoc, $llx, $lly, $urx, $ury, $url)
ps_arc		0;"	f	S:bool function ps_arc($psdoc, $x, $y, $radius, $alpha, $beta)
ps_arcn		0;"	f	S:bool function ps_arcn($psdoc, $x, $y, $radius, $alpha, $beta)
ps_begin_page		0;"	f	S:bool function ps_begin_page($psdoc, $width, $height)
ps_begin_pattern		0;"	f	S:int function ps_begin_pattern($psdoc, $width, $height, $xstep, $ystep, $painttype)
ps_begin_template		0;"	f	S:int function ps_begin_template($psdoc, $width, $height)
ps_circle		0;"	f	S:bool function ps_circle($psdoc, $x, $y, $radius)
ps_clip		0;"	f	S:bool function ps_clip($psdoc)
ps_close_image		0;"	f	S:void function ps_close_image($psdoc, $imageid)
ps_close		0;"	f	S:bool function ps_close($psdoc)
ps_closepath_stroke		0;"	f	S:bool function ps_closepath_stroke($psdoc)
ps_closepath		0;"	f	S:bool function ps_closepath($psdoc)
ps_continue_text		0;"	f	S:bool function ps_continue_text($psdoc, $text)
ps_curveto		0;"	f	S:bool function ps_curveto($psdoc, $x1, $y1, $x2, $y2, $x3, $y3)
ps_delete		0;"	f	S:bool function ps_delete($psdoc)
ps_end_page		0;"	f	S:bool function ps_end_page($psdoc)
ps_end_pattern		0;"	f	S:bool function ps_end_pattern($psdoc)
ps_end_template		0;"	f	S:bool function ps_end_template($psdoc)
ps_fill_stroke		0;"	f	S:bool function ps_fill_stroke($psdoc)
ps_fill		0;"	f	S:bool function ps_fill($psdoc)
ps_findfont		0;"	f	S:int function ps_findfont($psdoc, $fontname, $encoding, $embed = false)
ps_get_buffer		0;"	f	S:string function ps_get_buffer($psdoc)
ps_get_parameter		0;"	f	S:string function ps_get_parameter($psdoc, $name, $modifier)
ps_get_value		0;"	f	S:float function ps_get_value($psdoc, $name, $modifier)
ps_hyphenate		0;"	f	S:array function ps_hyphenate($psdoc, $text)
ps_include_file		0;"	f	S:bool function ps_include_file($psdoc, $file)
ps_lineto		0;"	f	S:bool function ps_lineto($psdoc, $x, $y)
ps_makespotcolor		0;"	f	S:int function ps_makespotcolor($psdoc, $name, $reserved)
ps_moveto		0;"	f	S:bool function ps_moveto($psdoc, $x, $y)
ps_new		0;"	f	S:resource function ps_new()
ps_open_file		0;"	f	S:bool function ps_open_file($psdoc, $filename)
ps_open_image_file		0;"	f	S:int function ps_open_image_file($psdoc, $type, $filename, $stringparam, $intparam)
ps_open_image		0;"	f	S:int function ps_open_image($psdoc, $type, $source, $data, $lenght, $width, $height, $components, $bpc, $params)
ps_open_memory_image		0;"	f	S:int function ps_open_memory_image($psdoc, $gd)
ps_place_image		0;"	f	S:bool function ps_place_image($psdoc, $imageid, $x, $y, $scale)
ps_rect		0;"	f	S:bool function ps_rect($psdoc, $x, $y, $width, $height)
ps_restore		0;"	f	S:bool function ps_restore($psdoc)
ps_rotate		0;"	f	S:bool function ps_rotate($psdoc, $rot)
ps_save		0;"	f	S:bool function ps_save($psdoc)
ps_scale		0;"	f	S:bool function ps_scale($psdoc, $x, $y)
ps_set_border_color		0;"	f	S:bool function ps_set_border_color($psdoc, $red, $green, $blue)
ps_set_border_dash		0;"	f	S:bool function ps_set_border_dash($psdoc, $black, $white)
ps_set_border_style		0;"	f	S:bool function ps_set_border_style($psdoc, $style, $width)
ps_set_info		0;"	f	S:bool function ps_set_info($p, $key, $val)
ps_set_parameter		0;"	f	S:bool function ps_set_parameter($psdoc, $name, $value)
ps_set_text_pos		0;"	f	S:bool function ps_set_text_pos($psdoc, $x, $y)
ps_set_value		0;"	f	S:bool function ps_set_value($psdoc, $name, $value)
ps_setcolor		0;"	f	S:bool function ps_setcolor($psdoc, $type, $colorspace, $c1, $c2, $c3, $c4)
ps_setdash		0;"	f	S:bool function ps_setdash($psdoc, $on, $off)
ps_setflat		0;"	f	S:bool function ps_setflat($psdoc, $value)
ps_setfont		0;"	f	S:bool function ps_setfont($psdoc, $fontid, $size)
ps_setgray		0;"	f	S:bool function ps_setgray($psdoc, $gray)
ps_setlinecap		0;"	f	S:bool function ps_setlinecap($psdoc, $type)
ps_setlinejoin		0;"	f	S:bool function ps_setlinejoin($psdoc, $type)
ps_setlinewidth		0;"	f	S:bool function ps_setlinewidth($psdoc, $width)
ps_setmiterlimit		0;"	f	S:bool function ps_setmiterlimit($psdoc, $value)
ps_setoverprintmode		0;"	f	S:bool function ps_setoverprintmode($psdoc, $mode)
ps_setpolydash		0;"	f	S:bool function ps_setpolydash($psdoc, $arr)
ps_shading_pattern		0;"	f	S:int function ps_shading_pattern($psdoc, $shadingid, $optlist)
ps_shading		0;"	f	S:int function ps_shading($psdoc, $type, $x0, $y0, $x1, $y1, $c1, $c2, $c3, $c4, $optlist)
ps_shfill		0;"	f	S:bool function ps_shfill($psdoc, $shadingid)
ps_show_boxed		0;"	f	S:int function ps_show_boxed($psdoc, $text, $left, $bottom, $width, $height, $hmode, $feature)
ps_show_xy2		0;"	f	S:bool function ps_show_xy2($psdoc, $text, $len, $xcoor, $ycoor)
ps_show_xy		0;"	f	S:bool function ps_show_xy($psdoc, $text, $x, $y)
ps_show2		0;"	f	S:bool function ps_show2($psdoc, $text, $len)
ps_show		0;"	f	S:bool function ps_show($psdoc, $text)
ps_string_geometry		0;"	f	S:array function ps_string_geometry($psdoc, $text, $fontid, $size = 0.0)
ps_stringwidth		0;"	f	S:float function ps_stringwidth($psdoc, $text, $fontid, $size = 0.0)
ps_stroke		0;"	f	S:bool function ps_stroke($psdoc)
ps_symbol_name		0;"	f	S:string function ps_symbol_name($psdoc, $ord, $fontid)
ps_symbol_width		0;"	f	S:float function ps_symbol_width($psdoc, $ord, $fontid, $size = 0.0)
ps_symbol		0;"	f	S:bool function ps_symbol($psdoc, $ord)
ps_translate		0;"	f	S:bool function ps_translate($psdoc, $x, $y)
RPMREADER_MINIMUM		0;"	d
RPMREADER_NAME		0;"	d
RPMREADER_VERSION		0;"	d
RPMREADER_RELEASE		0;"	d
RPMREADER_EPOCH		0;"	d
RPMREADER_SERIAL		0;"	d
RPMREADER_SUMMARY		0;"	d
RPMREADER_DESCRIPTION		0;"	d
RPMREADER_BUILDTIME		0;"	d
RPMREADER_BUILDHOST		0;"	d
RPMREADER_INSTALLTIME		0;"	d
RPMREADER_SIZE		0;"	d
RPMREADER_DISTRIBUTION		0;"	d
RPMREADER_VENDOR		0;"	d
RPMREADER_GIF		0;"	d
RPMREADER_XPM		0;"	d
RPMREADER_LICENSE		0;"	d
RPMREADER_COPYRIGHT		0;"	d
RPMREADER_PACKAGER		0;"	d
RPMREADER_GROUP		0;"	d
RPMREADER_SOURCE		0;"	d
RPMREADER_PATCH		0;"	d
RPMREADER_URL		0;"	d
RPMREADER_OS		0;"	d
RPMREADER_ARCH		0;"	d
RPMREADER_PREIN		0;"	d
RPMREADER_POSTIN		0;"	d
RPMREADER_PREUN		0;"	d
RPMREADER_POSTUN		0;"	d
RPMREADER_OLDFILENAMES		0;"	d
RPMREADER_FILESIZES		0;"	d
RPMREADER_FILESTATES		0;"	d
RPMREADER_FILEMODES		0;"	d
RPMREADER_FILERDEVS		0;"	d
RPMREADER_FILEMTIMES		0;"	d
RPMREADER_FILEMD5S		0;"	d
RPMREADER_FILELINKTOS		0;"	d
RPMREADER_FILEFLAGS		0;"	d
RPMREADER_FILEUSERNAME		0;"	d
RPMREADER_FILEGROUPNAME		0;"	d
RPMREADER_ICON		0;"	d
RPMREADER_SOURCERPM		0;"	d
RPMREADER_FILEVERIFYFLAGS		0;"	d
RPMREADER_ARCHIVESIZE		0;"	d
RPMREADER_PROVIDENAME		0;"	d
RPMREADER_PROVIDES		0;"	d
RPMREADER_REQUIREFLAGS		0;"	d
RPMREADER_REQUIRENAME		0;"	d
RPMREADER_REQUIREVERSION		0;"	d
RPMREADER_CONFLICTFLAGS		0;"	d
RPMREADER_CONFLICTNAME		0;"	d
RPMREADER_CONFLICTVERSION		0;"	d
RPMREADER_EXCLUDEARCH		0;"	d
RPMREADER_EXCLUDEOS		0;"	d
RPMREADER_EXCLUSIVEARCH		0;"	d
RPMREADER_EXCLUSIVEOS		0;"	d
RPMREADER_RPMVERSION		0;"	d
RPMREADER_TRIGGERSCRIPTS		0;"	d
RPMREADER_TRIGGERNAME		0;"	d
RPMREADER_TRIGGERVERSION		0;"	d
RPMREADER_TRIGGERFLAGS		0;"	d
RPMREADER_TRIGGERINDEX		0;"	d
RPMREADER_VERIFYSCRIPT		0;"	d
RPMREADER_CHANGELOGTIME		0;"	d
RPMREADER_CHANGELOGNAME		0;"	d
RPMREADER_CHANGELOGTEXT		0;"	d
RPMREADER_PREINPROG		0;"	d
RPMREADER_POSTINPROG		0;"	d
RPMREADER_PREUNPROG		0;"	d
RPMREADER_POSTUNPROG		0;"	d
RPMREADER_BUILDARCHS		0;"	d
RPMREADER_OBSOLETENAME		0;"	d
RPMREADER_OBSOLETES		0;"	d
RPMREADER_VERIFYSCRIPTPROG		0;"	d
RPMREADER_TRIGGERSCRIPTPROG		0;"	d
RPMREADER_COOKIE		0;"	d
RPMREADER_FILEDEVICES		0;"	d
RPMREADER_FILEINODES		0;"	d
RPMREADER_FILELANGS		0;"	d
RPMREADER_PREFIXES		0;"	d
RPMREADER_INSTPREFIXES		0;"	d
RPMREADER_PROVIDEFLAGS		0;"	d
RPMREADER_PROVIDEVERSION		0;"	d
RPMREADER_OBSOLETEFLAGS		0;"	d
RPMREADER_OBSOLETEVERSION		0;"	d
RPMREADER_DIRINDEXES		0;"	d
RPMREADER_BASENAMES		0;"	d
RPMREADER_DIRNAMES		0;"	d
RPMREADER_OPTFLAGS		0;"	d
RPMREADER_DISTURL		0;"	d
RPMREADER_PAYLOADFORMAT		0;"	d
RPMREADER_PAYLOADCOMPRESSOR		0;"	d
RPMREADER_PAYLOADFLAGS		0;"	d
RPMREADER_INSTALLCOLOR		0;"	d
RPMREADER_INSTALLTID		0;"	d
RPMREADER_REMOVETID		0;"	d
RPMREADER_RHNPLATFORM		0;"	d
RPMREADER_PLATFORM		0;"	d
RPMREADER_PATCHESNAME		0;"	d
RPMREADER_PATCHESFLAGS		0;"	d
RPMREADER_PATCHESVERSION		0;"	d
RPMREADER_CACHECTIME		0;"	d
RPMREADER_CACHEPKGPATH		0;"	d
RPMREADER_CACHEPKGSIZE		0;"	d
RPMREADER_CACHEPKGMTIME		0;"	d
RPMREADER_FILECOLORS		0;"	d
RPMREADER_FILECLASS		0;"	d
RPMREADER_CLASSDICT		0;"	d
RPMREADER_FILEDEPENDSX		0;"	d
RPMREADER_FILEDEPENDSN		0;"	d
RPMREADER_DEPENDSDICT		0;"	d
RPMREADER_SOURCEPKGID		0;"	d
RPMREADER_FILECONTEXTS		0;"	d
RPMREADER_FSCONTEXTS		0;"	d
RPMREADER_RECONTEXTS		0;"	d
RPMREADER_POLICIES		0;"	d
RPMREADER_MAXIMUM		0;"	d
rpm_close		0;"	f	S:bool function rpm_close($rpmr)
rpm_get_tag		0;"	f	S:mixed function rpm_get_tag($rpmr, $tagnum)
rpm_is_valid		0;"	f	S:bool function rpm_is_valid($filename)
rpm_open		0;"	f	S:resource function rpm_open($filename)
rpm_version		0;"	f	S:string function rpm_version()
EIO_PRI_MIN		0;"	d
EIO_PRI_DEFAULT		0;"	d
EIO_PRI_MAX		0;"	d
EIO_SEEK_SET		0;"	d
EIO_SEEK_CUR		0;"	d
EIO_SEEK_END		0;"	d
EIO_READDIR_DENTS		0;"	d
EIO_READDIR_DIRS_FIRST		0;"	d
EIO_READDIR_STAT_ORDER		0;"	d
EIO_READDIR_FOUND_UNKNOWN		0;"	d
EIO_DT_UNKNOWN		0;"	d
EIO_DT_FIFO		0;"	d
EIO_DT_CHR		0;"	d
EIO_DT_MPC		0;"	d
EIO_DT_DIR		0;"	d
EIO_DT_NAM		0;"	d
EIO_DT_BLK		0;"	d
EIO_DT_MPB		0;"	d
EIO_DT_REG		0;"	d
EIO_DT_NWK		0;"	d
EIO_DT_CMP		0;"	d
EIO_DT_LNK		0;"	d
EIO_DT_SOCK		0;"	d
EIO_DT_DOOR		0;"	d
EIO_DT_WHT		0;"	d
EIO_DT_MAX		0;"	d
EIO_O_RDONLY		0;"	d
EIO_O_WRONLY		0;"	d
EIO_O_RDWR		0;"	d
EIO_O_NONBLOCK		0;"	d
EIO_O_APPEND		0;"	d
EIO_O_CREAT		0;"	d
EIO_O_TRUNC		0;"	d
EIO_O_EXCL		0;"	d
EIO_O_FSYNC		0;"	d
EIO_S_IRUSR		0;"	d
EIO_S_IWUSR		0;"	d
EIO_S_IXUSR		0;"	d
EIO_S_IRGRP		0;"	d
EIO_S_IWGRP		0;"	d
EIO_S_IXGRP		0;"	d
EIO_S_IROTH		0;"	d
EIO_S_IWOTH		0;"	d
EIO_S_IXOTH		0;"	d
EIO_S_IFREG		0;"	d
EIO_S_IFCHR		0;"	d
EIO_S_IFBLK		0;"	d
EIO_S_IFIFO		0;"	d
EIO_S_IFSOCK		0;"	d
EIO_SYNC_FILE_RANGE_WAIT_BEFORE		0;"	d
EIO_SYNC_FILE_RANGE_WRITE		0;"	d
EIO_SYNC_FILE_RANGE_WAIT_AFTER		0;"	d
EIO_FALLOC_FL_KEEP_SIZE		0;"	d
eio_busy		0;"	f	S:resource function eio_busy($delay, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_cancel		0;"	f	S:void function eio_cancel($req)
eio_chmod		0;"	f	S:resource function eio_chmod($path, $mode, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_chown		0;"	f	S:resource function eio_chown($path, $uid, $gid = -1, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_close		0;"	f	S:resource function eio_close($fd, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_custom		0;"	f	S:resource function eio_custom($execute, $pri, $callback, $data = NULL)
eio_dup2		0;"	f	S:resource function eio_dup2($fd, $fd2, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_event_loop		0;"	f	S:bool function eio_event_loop()
eio_fallocate		0;"	f	S:resource function eio_fallocate($fd, $mode, $offset, $length, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_fchmod		0;"	f	S:resource function eio_fchmod($fd, $mode, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_fchown		0;"	f	S:resource function eio_fchown($fd, $uid, $gid = -1, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_fdatasync		0;"	f	S:resource function eio_fdatasync($fd, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_fstat		0;"	f	S:resource function eio_fstat($fd, $pri, $callback, $data)
eio_fstatvfs		0;"	f	S:resource function eio_fstatvfs($fd, $pri, $callback, $data)
eio_fsync		0;"	f	S:resource function eio_fsync($fd, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_ftruncate		0;"	f	S:resource function eio_ftruncate($fd, $offset, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_futime		0;"	f	S:resource function eio_futime($fd, $atime, $mtime, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_get_event_stream		0;"	f	S:mixed function eio_get_event_stream()
eio_get_last_error		0;"	f	S:string function eio_get_last_error($req)
eio_grp_add		0;"	f	S:void function eio_grp_add($grp, $req)
eio_grp_cancel		0;"	f	S:void function eio_grp_cancel($grp)
eio_grp_limit		0;"	f	S:void function eio_grp_limit($grp, $limit)
eio_grp		0;"	f	S:resource function eio_grp($callback, $data = NULL)
eio_init		0;"	f	S:void function eio_init()
eio_link		0;"	f	S:resource function eio_link($path, $new_path, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_lstat		0;"	f	S:resource function eio_lstat($path, $pri, $callback, $data = NULL)
eio_mkdir		0;"	f	S:resource function eio_mkdir($path, $mode, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_mknod		0;"	f	S:resource function eio_mknod($path, $mode, $dev, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_nop		0;"	f	S:resource function eio_nop($pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_npending		0;"	f	S:int function eio_npending()
eio_nready		0;"	f	S:int function eio_nready()
eio_nreqs		0;"	f	S:int function eio_nreqs()
eio_nthreads		0;"	f	S:int function eio_nthreads()
eio_open		0;"	f	S:resource function eio_open($path, $flags, $mode, $pri, $callback, $data = NULL)
eio_poll		0;"	f	S:int function eio_poll()
eio_read		0;"	f	S:resource function eio_read($fd, $length, $offset, $pri, $callback, $data = NULL)
eio_readahead		0;"	f	S:resource function eio_readahead($fd, $offset, $length, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_readdir		0;"	f	S:resource function eio_readdir($path, $flags, $pri, $callback, $data = NULL)
eio_readlink		0;"	f	S:resource function eio_readlink($path, $pri, $callback, $data = NULL)
eio_realpath		0;"	f	S:resource function eio_realpath($path, $pri, $callback, $data = NULL)
eio_rename		0;"	f	S:resource function eio_rename($path, $new_path, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_rmdir		0;"	f	S:resource function eio_rmdir($path, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_seek		0;"	f	S:resource function eio_seek($fd, $offset, $whence, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_sendfile		0;"	f	S:resource function eio_sendfile($out_fd, $in_fd, $offset, $length, $pri, $callback, $data)
eio_set_max_idle		0;"	f	S:void function eio_set_max_idle($nthreads)
eio_set_max_parallel		0;"	f	S:void function eio_set_max_parallel($nthreads)
eio_set_max_poll_reqs		0;"	f	S:void function eio_set_max_poll_reqs($nreqs)
eio_set_max_poll_time		0;"	f	S:void function eio_set_max_poll_time($nseconds)
eio_set_min_parallel		0;"	f	S:void function eio_set_min_parallel($nthreads)
eio_stat		0;"	f	S:resource function eio_stat($path, $pri, $callback, $data = NULL)
eio_statvfs		0;"	f	S:resource function eio_statvfs($path, $pri, $callback, $data)
eio_symlink		0;"	f	S:resource function eio_symlink($path, $new_path, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_sync_file_range		0;"	f	S:resource function eio_sync_file_range($fd, $offset, $nbytes, $flags, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_sync		0;"	f	S:resource function eio_sync($pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_syncfs		0;"	f	S:resource function eio_syncfs($fd, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_truncate		0;"	f	S:resource function eio_truncate($path, $offset, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_unlink		0;"	f	S:resource function eio_unlink($path, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_utime		0;"	f	S:resource function eio_utime($path, $atime, $mtime, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
eio_write		0;"	f	S:resource function eio_write($fd, $str, $length, $offset, $pri = EIO_PRI_DEFAULT, $callback = NULL, $data = NULL)
Ev		0;"	c
FLAG_AUTO		0;"	o	class:Ev	a:const	S:const Ev::FLAG_AUTO
FLAG_NOENV		0;"	o	class:Ev	a:const	S:const Ev::FLAG_NOENV
FLAG_FORKCHECK		0;"	o	class:Ev	a:const	S:const Ev::FLAG_FORKCHECK
FLAG_NOINOTIFY		0;"	o	class:Ev	a:const	S:const Ev::FLAG_NOINOTIFY
FLAG_SIGNALFD		0;"	o	class:Ev	a:const	S:const Ev::FLAG_SIGNALFD
FLAG_NOSIGMASK		0;"	o	class:Ev	a:const	S:const Ev::FLAG_NOSIGMASK
RUN_NOWAIT		0;"	o	class:Ev	a:const	S:const Ev::RUN_NOWAIT
RUN_ONCE		0;"	o	class:Ev	a:const	S:const Ev::RUN_ONCE
BREAK_CANCEL		0;"	o	class:Ev	a:const	S:const Ev::BREAK_CANCEL
BREAK_ONE		0;"	o	class:Ev	a:const	S:const Ev::BREAK_ONE
BREAK_ALL		0;"	o	class:Ev	a:const	S:const Ev::BREAK_ALL
MINPRI		0;"	o	class:Ev	a:const	S:const Ev::MINPRI
MAXPRI		0;"	o	class:Ev	a:const	S:const Ev::MAXPRI
READ		0;"	o	class:Ev	a:const	S:const Ev::READ
WRITE		0;"	o	class:Ev	a:const	S:const Ev::WRITE
TIMER		0;"	o	class:Ev	a:const	S:const Ev::TIMER
PERIODIC		0;"	o	class:Ev	a:const	S:const Ev::PERIODIC
SIGNAL		0;"	o	class:Ev	a:const	S:const Ev::SIGNAL
CHILD		0;"	o	class:Ev	a:const	S:const Ev::CHILD
STAT		0;"	o	class:Ev	a:const	S:const Ev::STAT
IDLE		0;"	o	class:Ev	a:const	S:const Ev::IDLE
PREPARE		0;"	o	class:Ev	a:const	S:const Ev::PREPARE
CHECK		0;"	o	class:Ev	a:const	S:const Ev::CHECK
EMBED		0;"	o	class:Ev	a:const	S:const Ev::EMBED
CUSTOM		0;"	o	class:Ev	a:const	S:const Ev::CUSTOM
ERROR		0;"	o	class:Ev	a:const	S:const Ev::ERROR
BACKEND_SELECT		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_SELECT
BACKEND_POLL		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_POLL
BACKEND_EPOLL		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_EPOLL
BACKEND_KQUEUE		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_KQUEUE
BACKEND_DEVPOLL		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_DEVPOLL
BACKEND_PORT		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_PORT
BACKEND_ALL		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_ALL
BACKEND_MASK		0;"	o	class:Ev	a:const	S:const Ev::BACKEND_MASK
backend		0;"	f	S:int function backend()	class:Ev	a:final,static
depth		0;"	f	S:int function depth()	class:Ev	a:final,static
embeddableBackends		0;"	f	S:void function embeddableBackends()	class:Ev	a:final,static
feedSignal		0;"	f	S:void function feedSignal($signum)	class:Ev	a:final,static
feedSignalEvent		0;"	f	S:void function feedSignalEvent($signum)	class:Ev	a:final,static
iteration		0;"	f	S:int function iteration()	class:Ev	a:final,static
now		0;"	f	S:double function now()	class:Ev	a:final,static
nowUpdate		0;"	f	S:void function nowUpdate()	class:Ev	a:final,static
recommendedBackends		0;"	f	S:void function recommendedBackends()	class:Ev	a:final,static
resume		0;"	f	S:void function resume()	class:Ev	a:final,static
run		0;"	f	S:void function run($flags)	class:Ev	a:final,static
sleep		0;"	f	S:void function sleep($seconds)	class:Ev	a:final,static
stop		0;"	f	S:void function stop($how)	class:Ev	a:final,static
supportedBackends		0;"	f	S:void function supportedBackends()	class:Ev	a:final,static
suspend		0;"	f	S:void function suspend()	class:Ev	a:final,static
time		0;"	f	S:double function time()	class:Ev	a:final,static
verify		0;"	f	S:void function verify()	class:Ev	a:final,static
EvCheck		0;"	c	i:EvWatcher
is_active		0;"	p	class:EvCheck	S: EvCheck::is_active
data		0;"	p	class:EvCheck	S: EvCheck::data
is_pending		0;"	p	class:EvCheck	S: EvCheck::is_pending
priority		0;"	p	class:EvCheck	S: EvCheck::priority
__construct		0;"	f	S: function __construct($callback, $data, $priority)	class:EvCheck
createStopped		0;"	f	S:object function createStopped($callback, $data, $priority)	class:EvCheck	a:final,static
EvChild		0;"	c	i:EvWatcher
pid		0;"	p	class:EvChild	S: EvChild::pid
rpid		0;"	p	class:EvChild	S: EvChild::rpid
rstatus		0;"	p	class:EvChild	S: EvChild::rstatus
is_active		0;"	p	class:EvChild	S: EvChild::is_active
data		0;"	p	class:EvChild	S: EvChild::data
is_pending		0;"	p	class:EvChild	S: EvChild::is_pending
priority		0;"	p	class:EvChild	S: EvChild::priority
__construct		0;"	f	S: function __construct($pid, $trace, $callback, $data, $priority)	class:EvChild
createStopped		0;"	f	S:object function createStopped($pid, $trace, $callback, $data, $priority)	class:EvChild	a:final,static
set		0;"	f	S:void function set($pid, $trace)	class:EvChild
EvEmbed		0;"	c	i:EvWatcher
embed		0;"	p	class:EvEmbed	S: EvEmbed::embed
__construct		0;"	f	S: function __construct($other, $callback, $data, $priority)	class:EvEmbed
createStopped		0;"	f	S:void function createStopped($other, $callback, $data, $priority)	class:EvEmbed	a:final,static
set		0;"	f	S:void function set($other)	class:EvEmbed
sweep		0;"	f	S:void function sweep()	class:EvEmbed
EvFork		0;"	c	i:EvWatcher
is_active		0;"	p	class:EvFork	S: EvFork::is_active
data		0;"	p	class:EvFork	S: EvFork::data
is_pending		0;"	p	class:EvFork	S: EvFork::is_pending
priority		0;"	p	class:EvFork	S: EvFork::priority
__construct		0;"	f	S: function __construct($callback, $data, $priority)	class:EvFork
createStopped		0;"	f	S:object function createStopped($callback, $data, $priority)	class:EvFork	a:final,static
EvIdle		0;"	c	i:EvWatcher
is_active		0;"	p	class:EvIdle	S: EvIdle::is_active
data		0;"	p	class:EvIdle	S: EvIdle::data
is_pending		0;"	p	class:EvIdle	S: EvIdle::is_pending
priority		0;"	p	class:EvIdle	S: EvIdle::priority
__construct		0;"	f	S: function __construct($callback, $data, $priority)	class:EvIdle
createStopped		0;"	f	S:object function createStopped($callback, $data, $priority)	class:EvIdle	a:final,static
EvIo		0;"	c	i:EvWatcher
fd		0;"	p	class:EvIo	S: EvIo::fd
events		0;"	p	class:EvIo	S: EvIo::events
is_active		0;"	p	class:EvIo	S: EvIo::is_active
data		0;"	p	class:EvIo	S: EvIo::data
is_pending		0;"	p	class:EvIo	S: EvIo::is_pending
priority		0;"	p	class:EvIo	S: EvIo::priority
__construct		0;"	f	S: function __construct($fd, $events, $callback, $data, $priority)	class:EvIo
createStopped		0;"	f	S:EvIo function createStopped($fd, $events, $callback, $data, $priority)	class:EvIo	a:final,static
set		0;"	f	S:void function set($fd, $events)	class:EvIo
EvLoop		0;"	c
data		0;"	p	class:EvLoop	S: EvLoop::data
backend		0;"	p	class:EvLoop	S: EvLoop::backend
is_default_loop		0;"	p	class:EvLoop	S: EvLoop::is_default_loop
iteration		0;"	p	class:EvLoop	S: EvLoop::iteration
pending		0;"	p	class:EvLoop	S: EvLoop::pending
io_interval		0;"	p	class:EvLoop	S: EvLoop::io_interval
timeout_interval		0;"	p	class:EvLoop	S: EvLoop::timeout_interval
depth		0;"	p	class:EvLoop	S: EvLoop::depth
backend		0;"	f	S:int function backend()	class:EvLoop
check		0;"	f	S:EvCheck function check($callback, $data, $priority)	class:EvLoop	a:final
child		0;"	f	S:EvChild function child($pid, $trace, $callback, $data, $priority)	class:EvLoop	a:final
__construct		0;"	f	S: function __construct($flags, $data = NULL, $io_interval = 0.0, $timeout_interval = 0.0)	class:EvLoop
defaultLoop		0;"	f	S:EvLoop function defaultLoop($flags = Ev::FLAG_AUTO, $data = NULL, $io_interval = 0., $timeout_interval = 0.)	class:EvLoop	a:static
embed		0;"	f	S:EvEmbed function embed($other, $callback, $data, $priority)	class:EvLoop	a:final
fork		0;"	f	S:EvFork function fork($callback, $data, $priority)	class:EvLoop	a:final
idle		0;"	f	S:EvIdle function idle($callback, $data, $priority)	class:EvLoop	a:final
invokePending		0;"	f	S:void function invokePending()	class:EvLoop
io		0;"	f	S:EvIo function io($fd, $events, $callback, $data, $priority)	class:EvLoop	a:final
loopFork		0;"	f	S:void function loopFork()	class:EvLoop
now		0;"	f	S:double function now()	class:EvLoop
nowUpdate		0;"	f	S:void function nowUpdate()	class:EvLoop
periodic		0;"	f	S:EvPeriodic function periodic($offset, $interval, $callback, $data, $priority)	class:EvLoop	a:final
prepare		0;"	f	S:EvPrepare function prepare($callback, $data, $priority)	class:EvLoop	a:final
resume		0;"	f	S:void function resume()	class:EvLoop
run		0;"	f	S:void function run($flags)	class:EvLoop
signal		0;"	f	S:EvSignal function signal($signum, $callback, $data, $priority)	class:EvLoop	a:final
stat		0;"	f	S:EvStat function stat($path, $interval, $callback, $data, $priority)	class:EvLoop	a:final
stop		0;"	f	S:void function stop($how)	class:EvLoop
suspend		0;"	f	S:void function suspend()	class:EvLoop
timer		0;"	f	S:EvTimer function timer($after, $repeat, $callback, $data, $priority)	class:EvLoop	a:final
verify		0;"	f	S:void function verify()	class:EvLoop
EvPeriodic		0;"	c	i:EvWatcher
offset		0;"	p	class:EvPeriodic	S: EvPeriodic::offset
interval		0;"	p	class:EvPeriodic	S: EvPeriodic::interval
is_active		0;"	p	class:EvPeriodic	S: EvPeriodic::is_active
data		0;"	p	class:EvPeriodic	S: EvPeriodic::data
is_pending		0;"	p	class:EvPeriodic	S: EvPeriodic::is_pending
priority		0;"	p	class:EvPeriodic	S: EvPeriodic::priority
again		0;"	f	S:void function again()	class:EvPeriodic
at		0;"	f	S:double function at()	class:EvPeriodic
__construct		0;"	f	S: function __construct($offset, $interval, $reschedule_cb, $callback, $data, $priority)	class:EvPeriodic
createStopped		0;"	f	S:EvPeriodic function createStopped($offset, $interval, $reschedule_cb, $callback, $data, $priority)	class:EvPeriodic	a:final,static
set		0;"	f	S:void function set($offset, $interval)	class:EvPeriodic
EvPrepare		0;"	c	i:EvWatcher
is_active		0;"	p	class:EvPrepare	S: EvPrepare::is_active
data		0;"	p	class:EvPrepare	S: EvPrepare::data
is_pending		0;"	p	class:EvPrepare	S: EvPrepare::is_pending
priority		0;"	p	class:EvPrepare	S: EvPrepare::priority
__construct		0;"	f	S: function __construct($callback, $data, $priority)	class:EvPrepare
createStopped		0;"	f	S:EvPrepare function createStopped($callback, $data, $priority)	class:EvPrepare	a:final,static
EvSignal		0;"	c	i:EvWatcher
signum		0;"	p	class:EvSignal	S: EvSignal::signum
is_active		0;"	p	class:EvSignal	S: EvSignal::is_active
data		0;"	p	class:EvSignal	S: EvSignal::data
is_pending		0;"	p	class:EvSignal	S: EvSignal::is_pending
priority		0;"	p	class:EvSignal	S: EvSignal::priority
__construct		0;"	f	S: function __construct($signum, $callback, $data, $priority)	class:EvSignal
createStopped		0;"	f	S:EvSignal function createStopped($signum, $callback, $data, $priority)	class:EvSignal	a:final,static
set		0;"	f	S:void function set($signum)	class:EvSignal
EvStat		0;"	c	i:EvWatcher
path		0;"	p	class:EvStat	S: EvStat::path
interval		0;"	p	class:EvStat	S: EvStat::interval
is_active		0;"	p	class:EvStat	S: EvStat::is_active
data		0;"	p	class:EvStat	S: EvStat::data
is_pending		0;"	p	class:EvStat	S: EvStat::is_pending
priority		0;"	p	class:EvStat	S: EvStat::priority
attr		0;"	f	S:array function attr()	class:EvStat
__construct		0;"	f	S: function __construct($path, $interval, $callback, $data, $priority)	class:EvStat
createStopped		0;"	f	S:void function createStopped($path, $interval, $callback, $data, $priority)	class:EvStat	a:final,static
prev		0;"	f	S:void function prev()	class:EvStat
set		0;"	f	S:void function set($path, $interval)	class:EvStat
stat		0;"	f	S:bool function stat()	class:EvStat
EvTimer		0;"	c	i:EvWatcher
repeat		0;"	p	class:EvTimer	S: EvTimer::repeat
remaining		0;"	p	class:EvTimer	S: EvTimer::remaining
is_active		0;"	p	class:EvTimer	S: EvTimer::is_active
data		0;"	p	class:EvTimer	S: EvTimer::data
is_pending		0;"	p	class:EvTimer	S: EvTimer::is_pending
priority		0;"	p	class:EvTimer	S: EvTimer::priority
again		0;"	f	S:void function again()	class:EvTimer
__construct		0;"	f	S: function __construct($after, $repeat, $callback, $data, $priority)	class:EvTimer
createStopped		0;"	f	S:EvTimer function createStopped($after, $repeat, $callback, $data, $priority)	class:EvTimer	a:final,static
set		0;"	f	S:void function set($after, $repeat)	class:EvTimer
EvWatcher		0;"	c
is_active		0;"	p	class:EvWatcher	S: EvWatcher::is_active
data		0;"	p	class:EvWatcher	S: EvWatcher::data
is_pending		0;"	p	class:EvWatcher	S: EvWatcher::is_pending
priority		0;"	p	class:EvWatcher	S: EvWatcher::priority
clear		0;"	f	S:int function clear()	class:EvWatcher
__construct		0;"	f	S: function __construct()	class:EvWatcher	m: abstract
feed		0;"	f	S:void function feed($revents)	class:EvWatcher
getLoop		0;"	f	S:EvLoop function getLoop()	class:EvWatcher
invoke		0;"	f	S:void function invoke($revents)	class:EvWatcher
keepalive		0;"	f	S:bool function keepalive($value)	class:EvWatcher
setCallback		0;"	f	S:void function setCallback($callback)	class:EvWatcher
start		0;"	f	S:void function start()	class:EvWatcher
stop		0;"	f	S:void function stop()	class:EvWatcher
EXP_GLOB		0;"	d
EXP_EXACT		0;"	d
EXP_REGEXP		0;"	d
EXP_EOF		0;"	d
EXP_TIMEOUT		0;"	d
EXP_FULLBUFFER		0;"	d
expect_expectl		0;"	f	S:int function expect_expectl($expect, $cases, &$match)
expect_popen		0;"	f	S:resource function expect_popen($command)
EV_TIMEOUT		0;"	d
EV_READ		0;"	d
EV_WRITE		0;"	d
EV_SIGNAL		0;"	d
EV_PERSIST		0;"	d
EVLOOP_NONBLOCK		0;"	d
EVLOOP_ONCE		0;"	d
event_add		0;"	f	S:bool function event_add($event, $timeout = -1)
event_base_free		0;"	f	S:void function event_base_free($event_base)
event_base_loop		0;"	f	S:int function event_base_loop($event_base, $flags)
event_base_loopbreak		0;"	f	S:bool function event_base_loopbreak($event_base)
event_base_loopexit		0;"	f	S:bool function event_base_loopexit($event_base, $timeout = -1)
event_base_new		0;"	f	S:resource function event_base_new()
event_base_priority_init		0;"	f	S:bool function event_base_priority_init($event_base, $npriorities)
event_base_reinit		0;"	f	S:bool function event_base_reinit($event_base)
event_base_set		0;"	f	S:bool function event_base_set($event, $event_base)
event_buffer_base_set		0;"	f	S:bool function event_buffer_base_set($bevent, $event_base)
event_buffer_disable		0;"	f	S:bool function event_buffer_disable($bevent, $events)
event_buffer_enable		0;"	f	S:bool function event_buffer_enable($bevent, $events)
event_buffer_fd_set		0;"	f	S:void function event_buffer_fd_set($bevent, $fd)
event_buffer_free		0;"	f	S:void function event_buffer_free($bevent)
event_buffer_new		0;"	f	S:resource function event_buffer_new($stream, $readcb, $writecb, $errorcb, $arg)
event_buffer_priority_set		0;"	f	S:bool function event_buffer_priority_set($bevent, $priority)
event_buffer_read		0;"	f	S:string function event_buffer_read($bevent, $data_size)
event_buffer_set_callback		0;"	f	S:bool function event_buffer_set_callback($event, $readcb, $writecb, $errorcb, $arg)
event_buffer_timeout_set		0;"	f	S:void function event_buffer_timeout_set($bevent, $read_timeout, $write_timeout)
event_buffer_watermark_set		0;"	f	S:void function event_buffer_watermark_set($bevent, $events, $lowmark, $highmark)
event_buffer_write		0;"	f	S:bool function event_buffer_write($bevent, $data, $data_size = -1)
event_del		0;"	f	S:bool function event_del($event)
event_free		0;"	f	S:void function event_free($event)
event_new		0;"	f	S:resource function event_new()
event_priority_set		0;"	f	S:bool function event_priority_set($event, $priority)
event_set		0;"	f	S:bool function event_set($event, $fd, $events, $callback, $arg)
event_timer_add		0;"	f	S: function event_timer_add()
event_timer_del		0;"	f	S: function event_timer_del()
event_timer_new		0;"	f	S: function event_timer_new()
event_timer_set		0;"	f	S:bool function event_timer_set($event, $callback, $arg)
WNOHANG		0;"	d
WUNTRACED		0;"	d
SIG_IGN		0;"	d
SIG_DFL		0;"	d
SIG_ERR		0;"	d
SIGHUP		0;"	d
SIGINT		0;"	d
SIGQUIT		0;"	d
SIGILL		0;"	d
SIGTRAP		0;"	d
SIGABRT		0;"	d
SIGIOT		0;"	d
SIGBUS		0;"	d
SIGFPE		0;"	d
SIGKILL		0;"	d
SIGUSR1		0;"	d
SIGSEGV		0;"	d
SIGUSR2		0;"	d
SIGPIPE		0;"	d
SIGALRM		0;"	d
SIGTERM		0;"	d
SIGSTKFLT		0;"	d
SIGCLD		0;"	d
SIGCHLD		0;"	d
SIGCONT		0;"	d
SIGSTOP		0;"	d
SIGTSTP		0;"	d
SIGTTIN		0;"	d
SIGTTOU		0;"	d
SIGURG		0;"	d
SIGXCPU		0;"	d
SIGXFSZ		0;"	d
SIGVTALRM		0;"	d
SIGPROF		0;"	d
SIGWINCH		0;"	d
SIGPOLL		0;"	d
SIGIO		0;"	d
SIGPWR		0;"	d
SIGSYS		0;"	d
SIGBABY		0;"	d
SIG_BLOCK		0;"	d
SIG_UNBLOCK		0;"	d
SIG_SETMASK		0;"	d
SI_USER		0;"	d
SI_NOINFO		0;"	d
SI_KERNEL		0;"	d
SI_QUEUE		0;"	d
SI_TIMER		0;"	d
SI_MSGGQ		0;"	d
SI_ASYNCIO		0;"	d
SI_SIGIO		0;"	d
SI_TKILL		0;"	d
CLD_EXITED		0;"	d
CLD_KILLED		0;"	d
CLD_DUMPED		0;"	d
CLD_TRAPPED		0;"	d
CLD_STOPPED		0;"	d
CLD_CONTINUED		0;"	d
TRAP_BRKPT		0;"	d
TRAP_TRACE		0;"	d
POLL_IN		0;"	d
POLL_OUT		0;"	d
POLL_MSG		0;"	d
POLL_ERR		0;"	d
POLL_PRI		0;"	d
POLL_HUP		0;"	d
ILL_ILLOPC		0;"	d
ILL_ILLOPN		0;"	d
ILL_ILLADR		0;"	d
ILL_ILLTRP		0;"	d
ILL_PRVOPC		0;"	d
ILL_PRVREG		0;"	d
ILL_COPROC		0;"	d
ILL_BADSTK		0;"	d
FPE_INTDIV		0;"	d
FPE_INTOVF		0;"	d
FPE_FLTDIV		0;"	d
FPE_FLTOVF		0;"	d
FPE_FLTUND		0;"	d
FPE_FLTRES		0;"	d
FPE_FLTINV		0;"	d
FPE_FLTSUB		0;"	d
SEGV_MAPERR		0;"	d
SEGV_ACCERR		0;"	d
BUS_ADRALN		0;"	d
BUS_ADRERR		0;"	d
BUS_OBJERR		0;"	d
pcntl_alarm		0;"	f	S:int function pcntl_alarm($seconds)
pcntl_errno		0;"	f	S: function pcntl_errno()
pcntl_exec		0;"	f	S:void function pcntl_exec($path, $args, $envs)
pcntl_fork		0;"	f	S:int function pcntl_fork()
pcntl_get_last_error		0;"	f	S:int function pcntl_get_last_error()
pcntl_getpriority		0;"	f	S:int function pcntl_getpriority($pid = getmypid(), $process_identifier = PRIO_PROCESS)
pcntl_setpriority		0;"	f	S:bool function pcntl_setpriority($priority, $pid = getmypid(), $process_identifier = PRIO_PROCESS)
pcntl_signal_dispatch		0;"	f	S:bool function pcntl_signal_dispatch()
pcntl_signal		0;"	f	S:bool function pcntl_signal($signo, $handler, $restart_syscalls = true)
pcntl_sigprocmask		0;"	f	S:bool function pcntl_sigprocmask($how, $set, &$oldset)
pcntl_sigtimedwait		0;"	f	S:int function pcntl_sigtimedwait($set, &$siginfo, $seconds, $nanoseconds)
pcntl_sigwaitinfo		0;"	f	S:int function pcntl_sigwaitinfo($set, &$siginfo)
pcntl_strerror		0;"	f	S:string function pcntl_strerror($errno)
pcntl_wait		0;"	f	S:int function pcntl_wait(&$status, $options)
pcntl_waitpid		0;"	f	S:int function pcntl_waitpid($pid, &$status, $options)
pcntl_wexitstatus		0;"	f	S:int function pcntl_wexitstatus($status)
pcntl_wifexited		0;"	f	S:bool function pcntl_wifexited($status)
pcntl_wifsignaled		0;"	f	S:bool function pcntl_wifsignaled($status)
pcntl_wifstopped		0;"	f	S:bool function pcntl_wifstopped($status)
pcntl_wstopsig		0;"	f	S:int function pcntl_wstopsig($status)
pcntl_wtermsig		0;"	f	S:int function pcntl_wtermsig($status)
POSIX_F_OK		0;"	d
POSIX_R_OK		0;"	d
POSIX_W_OK		0;"	d
POSIX_X_OK		0;"	d
POSIX_S_IFBLK		0;"	d
POSIX_S_IFCHR		0;"	d
POSIX_S_IFIFO		0;"	d
POSIX_S_IFREG		0;"	d
POSIX_S_IFSOCK		0;"	d
posix_access		0;"	f	S:bool function posix_access($file, $mode = POSIX_F_OK)
posix_ctermid		0;"	f	S:string function posix_ctermid()
posix_errno		0;"	f	S: function posix_errno()
posix_get_last_error		0;"	f	S:int function posix_get_last_error()
posix_getcwd		0;"	f	S:string function posix_getcwd()
posix_getegid		0;"	f	S:int function posix_getegid()
posix_geteuid		0;"	f	S:int function posix_geteuid()
posix_getgid		0;"	f	S:int function posix_getgid()
posix_getgrgid		0;"	f	S:array function posix_getgrgid($gid)
posix_getgrnam		0;"	f	S:array function posix_getgrnam($name)
posix_getgroups		0;"	f	S:array function posix_getgroups()
posix_getlogin		0;"	f	S:string function posix_getlogin()
posix_getpgid		0;"	f	S:int function posix_getpgid($pid)
posix_getpgrp		0;"	f	S:int function posix_getpgrp()
posix_getpid		0;"	f	S:int function posix_getpid()
posix_getppid		0;"	f	S:int function posix_getppid()
posix_getpwnam		0;"	f	S:array function posix_getpwnam($username)
posix_getpwuid		0;"	f	S:array function posix_getpwuid($uid)
posix_getrlimit		0;"	f	S:array function posix_getrlimit()
posix_getsid		0;"	f	S:int function posix_getsid($pid)
posix_getuid		0;"	f	S:int function posix_getuid()
posix_initgroups		0;"	f	S:bool function posix_initgroups($name, $base_group_id)
posix_isatty		0;"	f	S:bool function posix_isatty($fd)
posix_kill		0;"	f	S:bool function posix_kill($pid, $sig)
posix_mkfifo		0;"	f	S:bool function posix_mkfifo($pathname, $mode)
posix_mknod		0;"	f	S:bool function posix_mknod($pathname, $mode, $major, $minor)
posix_setegid		0;"	f	S:bool function posix_setegid($gid)
posix_seteuid		0;"	f	S:bool function posix_seteuid($uid)
posix_setgid		0;"	f	S:bool function posix_setgid($gid)
posix_setpgid		0;"	f	S:bool function posix_setpgid($pid, $pgid)
posix_setsid		0;"	f	S:int function posix_setsid()
posix_setuid		0;"	f	S:bool function posix_setuid($uid)
posix_strerror		0;"	f	S:string function posix_strerror($errno)
posix_times		0;"	f	S:array function posix_times()
posix_ttyname		0;"	f	S:string function posix_ttyname($fd)
posix_uname		0;"	f	S:array function posix_uname()
escapeshellarg		0;"	f	S:string function escapeshellarg($arg)
escapeshellcmd		0;"	f	S:string function escapeshellcmd($command)
exec		0;"	f	S:string function exec($command, &$output, &$return_var)
passthru		0;"	f	S:void function passthru($command, &$return_var)
proc_close		0;"	f	S:int function proc_close($process)
proc_get_status		0;"	f	S:array function proc_get_status($process)
proc_nice		0;"	f	S:bool function proc_nice($increment)
proc_open		0;"	f	S:resource function proc_open($cmd, $descriptorspec, &$pipes, $cwd, $env, $other_options)
proc_terminate		0;"	f	S:bool function proc_terminate($process, $signal = 15)
shell_exec		0;"	f	S:string function shell_exec($cmd)
system		0;"	f	S:string function system($command, &$return_var)
PTHREADS_INHERIT_ALL		0;"	d
PTHREADS_INHERIT_NONE		0;"	d
PTHREADS_INHERIT_INI		0;"	d
PTHREADS_INHERIT_CONSTANTS		0;"	d
PTHREADS_INHERIT_CLASSES		0;"	d
PTHREADS_INHERIT_FUNCTIONS		0;"	d
PTHREADS_INHERIT_INCLUDES		0;"	d
PTHREADS_INHERIT_COMMENTS		0;"	d
PTHREADS_ALLOW_HEADERS		0;"	d
Threaded		0;"	c
chunk		0;"	f	S:array function chunk($size, $preserve)	class:Threaded
count		0;"	f	S:integer function count()	class:Threaded
extend		0;"	f	S:bool function extend($class)	class:Threaded
from		0;"	f	S:Threaded function from($run, $construct, $args)	class:Threaded
getTerminationInfo		0;"	f	S:array function getTerminationInfo()	class:Threaded
isRunning		0;"	f	S:boolean function isRunning()	class:Threaded
isTerminated		0;"	f	S:boolean function isTerminated()	class:Threaded
isWaiting		0;"	f	S:boolean function isWaiting()	class:Threaded
lock		0;"	f	S:boolean function lock()	class:Threaded
merge		0;"	f	S:boolean function merge($from, $overwrite)	class:Threaded
notify		0;"	f	S:boolean function notify()	class:Threaded
pop		0;"	f	S:boolean function pop()	class:Threaded
run		0;"	f	S:void function run()	class:Threaded
shift		0;"	f	S:mixed function shift()	class:Threaded
synchronized		0;"	f	S:mixed function synchronized($block, $...)	class:Threaded
unlock		0;"	f	S:boolean function unlock()	class:Threaded
wait		0;"	f	S:boolean function wait($timeout)	class:Threaded
Thread		0;"	c	i:Threaded
detach		0;"	f	S:void function detach()	class:Thread
getCreatorId		0;"	f	S:integer function getCreatorId()	class:Thread
getCurrentThread		0;"	f	S:Thread function getCurrentThread()	class:Thread	a:static
getCurrentThreadId		0;"	f	S:integer function getCurrentThreadId()	class:Thread	a:static
getThreadId		0;"	f	S:integer function getThreadId()	class:Thread
globally		0;"	f	S:mixed function globally()	class:Thread	a:static
isJoined		0;"	f	S:boolean function isJoined()	class:Thread
isStarted		0;"	f	S:boolean function isStarted()	class:Thread
join		0;"	f	S:boolean function join()	class:Thread
kill		0;"	f	S:void function kill()	class:Thread
start		0;"	f	S:boolean function start($options)	class:Thread
Worker		0;"	c	i:Thread
getStacked		0;"	f	S:integer function getStacked()	class:Worker
isShutdown		0;"	f	S:boolean function isShutdown()	class:Worker
isWorking		0;"	f	S:boolean function isWorking()	class:Worker
shutdown		0;"	f	S:boolean function shutdown()	class:Worker
stack		0;"	f	S:integer function stack(&$work)	class:Worker
unstack		0;"	f	S:integer function unstack(&$work)	class:Worker
Collectable		0;"	c	i:Threaded
isGarbage		0;"	f	S:bool function isGarbage()	class:Collectable
setGarbage		0;"	f	S:void function setGarbage()	class:Collectable
Pool		0;"	c
size		0;"	p	class:Pool	a:protected	S:protected Pool::size
class		0;"	p	class:Pool	a:protected	S:protected Pool::class
workers		0;"	p	class:Pool	a:protected	S:protected Pool::workers
work		0;"	p	class:Pool	a:protected	S:protected Pool::work
ctor		0;"	p	class:Pool	a:protected	S:protected Pool::ctor
last		0;"	p	class:Pool	a:protected	S:protected Pool::last
collect		0;"	f	S:void function collect($collector)	class:Pool
__construct		0;"	f	S:Pool function __construct($size, $class, $ctor)	class:Pool
resize		0;"	f	S:void function resize($size)	class:Pool
shutdown		0;"	f	S:void function shutdown()	class:Pool
submit		0;"	f	S:integer function submit($task)	class:Pool
submitTo		0;"	f	S:integer function submitTo($worker, $task)	class:Pool
Mutex		0;"	c
create		0;"	f	S:long function create($lock)	class:Mutex	a:final,static
destroy		0;"	f	S:boolean function destroy($mutex)	class:Mutex	a:final,static
lock		0;"	f	S:boolean function lock($mutex)	class:Mutex	a:final,static
trylock		0;"	f	S:boolean function trylock($mutex)	class:Mutex	a:final,static
unlock		0;"	f	S:boolean function unlock($mutex, $destroy)	class:Mutex	a:final,static
Cond		0;"	c
broadcast		0;"	f	S:boolean function broadcast($condition)	class:Cond	a:final,static
create		0;"	f	S:long function create()	class:Cond	a:final,static
destroy		0;"	f	S:boolean function destroy($condition)	class:Cond	a:final,static
signal		0;"	f	S:boolean function signal($condition)	class:Cond	a:final,static
wait		0;"	f	S:boolean function wait($condition, $mutex, $timeout)	class:Cond	a:final,static
ftok		0;"	f	S:int function ftok($pathname, $proj)
msg_get_queue		0;"	f	S:resource function msg_get_queue($key, $perms = 0666)
msg_queue_exists		0;"	f	S:bool function msg_queue_exists($key)
msg_receive		0;"	f	S:bool function msg_receive($queue, $desiredmsgtype, &$msgtype, $maxsize, &$message, $unserialize = true, $flags, &$errorcode)
msg_remove_queue		0;"	f	S:bool function msg_remove_queue($queue)
msg_send		0;"	f	S:bool function msg_send($queue, $msgtype, $message, $serialize = true, $blocking = true, &$errorcode)
msg_set_queue		0;"	f	S:bool function msg_set_queue($queue, $data)
msg_stat_queue		0;"	f	S:array function msg_stat_queue($queue)
sem_acquire		0;"	f	S:bool function sem_acquire($sem_identifier)
sem_get		0;"	f	S:resource function sem_get($key, $max_acquire = 1, $perm = 0666, $auto_release = 1)
sem_release		0;"	f	S:bool function sem_release($sem_identifier)
sem_remove		0;"	f	S:bool function sem_remove($sem_identifier)
shm_attach		0;"	f	S:resource function shm_attach($key, $memsize, $perm = 0666)
shm_detach		0;"	f	S:bool function shm_detach($shm_identifier)
shm_get_var		0;"	f	S:mixed function shm_get_var($shm_identifier, $variable_key)
shm_has_var		0;"	f	S:bool function shm_has_var($shm_identifier, $variable_key)
shm_put_var		0;"	f	S:bool function shm_put_var($shm_identifier, $variable_key, $variable)
shm_remove_var		0;"	f	S:bool function shm_remove_var($shm_identifier, $variable_key)
shm_remove		0;"	f	S:bool function shm_remove($shm_identifier)
shmop_close		0;"	f	S:void function shmop_close($shmid)
shmop_delete		0;"	f	S:bool function shmop_delete($shmid)
shmop_open		0;"	f	S:int function shmop_open($key, $flags, $mode, $size)
shmop_read		0;"	f	S:string function shmop_read($shmid, $start, $count)
shmop_size		0;"	f	S:int function shmop_size($shmid)
shmop_write		0;"	f	S:int function shmop_write($shmid, $data, $offset)
SyncMutex		0;"	c
__construct		0;"	f	S: function __construct($name)	class:SyncMutex
lock		0;"	f	S:bool function lock($wait)	class:SyncMutex
unlock		0;"	f	S:bool function unlock($all)	class:SyncMutex
SyncSemaphore		0;"	c
__construct		0;"	f	S: function __construct($name, $initialval, $autounlock)	class:SyncSemaphore
lock		0;"	f	S:bool function lock($wait)	class:SyncSemaphore
unlock		0;"	f	S:bool function unlock(&$prevcount)	class:SyncSemaphore
SyncEvent		0;"	c
__construct		0;"	f	S: function __construct($name, $manual)	class:SyncEvent
fire		0;"	f	S:bool function fire()	class:SyncEvent
reset		0;"	f	S:bool function reset()	class:SyncEvent
wait		0;"	f	S:bool function wait($wait)	class:SyncEvent
SyncReaderWriter		0;"	c
__construct		0;"	f	S: function __construct($name, $autounlock)	class:SyncReaderWriter
readlock		0;"	f	S:bool function readlock($wait)	class:SyncReaderWriter
readunlock		0;"	f	S:bool function readunlock()	class:SyncReaderWriter
writelock		0;"	f	S:bool function writelock($wait)	class:SyncReaderWriter
writeunlock		0;"	f	S:bool function writeunlock()	class:SyncReaderWriter
GEOIP_COUNTRY_EDITION		0;"	d
GEOIP_REGION_EDITION_REV0		0;"	d
GEOIP_CITY_EDITION_REV0		0;"	d
GEOIP_ORG_EDITION		0;"	d
GEOIP_ISP_EDITION		0;"	d
GEOIP_CITY_EDITION_REV1		0;"	d
GEOIP_REGION_EDITION_REV1		0;"	d
GEOIP_PROXY_EDITION		0;"	d
GEOIP_ASNUM_EDITION		0;"	d
GEOIP_NETSPEED_EDITION		0;"	d
GEOIP_DOMAIN_EDITION		0;"	d
GEOIP_UNKNOWN_SPEED		0;"	d
GEOIP_DIALUP_SPEED		0;"	d
GEOIP_CABLEDSL_SPEED		0;"	d
GEOIP_CORPORATE_SPEED		0;"	d
geoip_asnum_by_name		0;"	f	S:string function geoip_asnum_by_name($hostname)
geoip_continent_code_by_name		0;"	f	S:string function geoip_continent_code_by_name($hostname)
geoip_country_code_by_name		0;"	f	S:string function geoip_country_code_by_name($hostname)
geoip_country_code3_by_name		0;"	f	S:string function geoip_country_code3_by_name($hostname)
geoip_country_name_by_name		0;"	f	S:string function geoip_country_name_by_name($hostname)
geoip_database_info		0;"	f	S:string function geoip_database_info($database = GEOIP_COUNTRY_EDITION)
geoip_db_avail		0;"	f	S:bool function geoip_db_avail($database)
geoip_db_filename		0;"	f	S:string function geoip_db_filename($database)
geoip_db_get_all_info		0;"	f	S:array function geoip_db_get_all_info()
geoip_domain_by_name		0;"	f	S:string function geoip_domain_by_name($hostname)
geoip_id_by_name		0;"	f	S:int function geoip_id_by_name($hostname)
geoip_isp_by_name		0;"	f	S:string function geoip_isp_by_name($hostname)
geoip_netspeedcell_by_name		0;"	f	S:string function geoip_netspeedcell_by_name($hostname)
geoip_org_by_name		0;"	f	S:string function geoip_org_by_name($hostname)
geoip_record_by_name		0;"	f	S:array function geoip_record_by_name($hostname)
geoip_region_by_name		0;"	f	S:array function geoip_region_by_name($hostname)
geoip_region_name_by_code		0;"	f	S:string function geoip_region_name_by_code($country_code, $region_code)
geoip_setup_custom_directory		0;"	f	S:void function geoip_setup_custom_directory($path)
geoip_time_zone_by_country_and_region		0;"	f	S:string function geoip_time_zone_by_country_and_region($country_code, $region_code)
FANN_TRAIN_INCREMENTAL		0;"	d
FANN_TRAIN_BATCH		0;"	d
FANN_TRAIN_RPROP		0;"	d
FANN_TRAIN_QUICKPROP		0;"	d
FANN_TRAIN_SARPROP		0;"	d
FANN_LINEAR		0;"	d
FANN_THRESHOLD		0;"	d
FANN_THRESHOLD_SYMMETRIC		0;"	d
FANN_SIGMOID		0;"	d
FANN_SIGMOID_STEPWISE		0;"	d
FANN_SIGMOID_SYMMETRIC		0;"	d
FANN_SIGMOID_SYMMETRIC_STEPWISE		0;"	d
FANN_GAUSSIAN		0;"	d
FANN_GAUSSIAN_SYMMETRIC		0;"	d
FANN_GAUSSIAN_STEPWISE		0;"	d
FANN_ELLIOT		0;"	d
FANN_ELLIOT_SYMMETRIC		0;"	d
FANN_LINEAR_PIECE		0;"	d
FANN_LINEAR_PIECE_SYMMETRIC		0;"	d
FANN_SIN_SYMMETRIC		0;"	d
FANN_COS_SYMMETRIC		0;"	d
FANN_SIN		0;"	d
FANN_COS		0;"	d
FANN_ERRORFUNC_LINEAR		0;"	d
FANN_ERRORFUNC_TANH		0;"	d
FANN_STOPFUNC_MSE		0;"	d
FANN_STOPFUNC_BIT		0;"	d
FANN_NETTYPE_LAYER		0;"	d
FANN_NETTYPE_SHORTCUT		0;"	d
FANN_E_NO_ERROR		0;"	d
FANN_E_CANT_OPEN_CONFIG_R		0;"	d
FANN_E_CANT_OPEN_CONFIG_W		0;"	d
FANN_E_WRONG_CONFIG_VERSION		0;"	d
FANN_E_CANT_READ_CONFIG		0;"	d
FANN_E_CANT_READ_NEURON		0;"	d
FANN_E_CANT_READ_CONNECTIONS		0;"	d
FANN_E_WRONG_NUM_CONNECTIONS		0;"	d
FANN_E_CANT_OPEN_TD_W		0;"	d
FANN_E_CANT_OPEN_TD_R		0;"	d
FANN_E_CANT_READ_TD		0;"	d
FANN_E_CANT_ALLOCATE_MEM		0;"	d
FANN_E_CANT_TRAIN_ACTIVATION		0;"	d
FANN_E_CANT_USE_ACTIVATION		0;"	d
FANN_E_TRAIN_DATA_MISMATCH		0;"	d
FANN_E_CANT_USE_TRAIN_ALG		0;"	d
FANN_E_TRAIN_DATA_SUBSET		0;"	d
FANN_E_INDEX_OUT_OF_BOUND		0;"	d
FANN_E_SCALE_NOT_PRESENT		0;"	d
FANN_E_INPUT_NO_MATCH		0;"	d
FANN_E_OUTPUT_NO_MATCH		0;"	d
fann_cascadetrain_on_data		0;"	f	S:bool function fann_cascadetrain_on_data($ann, $data, $max_neurons, $neurons_between_reports, $desired_error)
fann_cascadetrain_on_file		0;"	f	S:bool function fann_cascadetrain_on_file($ann, $filename, $max_neurons, $neurons_between_reports, $desired_error)
fann_clear_scaling_params		0;"	f	S:bool function fann_clear_scaling_params($ann)
fann_copy		0;"	f	S:resource function fann_copy($ann)
fann_create_from_file		0;"	f	S:resource function fann_create_from_file($configuration_file)
fann_create_shortcut_array		0;"	f	S:resource function fann_create_shortcut_array($num_layers, $layers)
fann_create_shortcut		0;"	f	S:reference function fann_create_shortcut($num_layers, $num_neurons1, $num_neurons2, $...)
fann_create_sparse_array		0;"	f	S:ReturnType function fann_create_sparse_array($connection_rate, $num_layers, $layers)
fann_create_sparse		0;"	f	S:ReturnType function fann_create_sparse($connection_rate, $num_layers, $num_neurons1, $num_neurons2, $...)
fann_create_standard_array		0;"	f	S:resource function fann_create_standard_array($num_layers, $layers)
fann_create_standard		0;"	f	S:resource function fann_create_standard($num_layers, $num_neurons1, $num_neurons2, $...)
fann_create_train_from_callback		0;"	f	S:resource function fann_create_train_from_callback($num_data, $num_input, $num_output, $user_function)
fann_create_train		0;"	f	S:resource function fann_create_train($num_data, $num_input, $num_output)
fann_descale_input		0;"	f	S:bool function fann_descale_input($ann, $input_vector)
fann_descale_output		0;"	f	S:bool function fann_descale_output($ann, $output_vector)
fann_descale_train		0;"	f	S:bool function fann_descale_train($ann, $train_data)
fann_destroy_train		0;"	f	S:bool function fann_destroy_train($train_data)
fann_destroy		0;"	f	S:bool function fann_destroy($ann)
fann_duplicate_train_data		0;"	f	S:resource function fann_duplicate_train_data($data)
fann_get_activation_function		0;"	f	S:int function fann_get_activation_function($ann, $layer, $neuron)
fann_get_activation_steepness		0;"	f	S:float function fann_get_activation_steepness($ann, $layer, $neuron)
fann_get_bias_array		0;"	f	S:array function fann_get_bias_array($ann)
fann_get_bit_fail_limit		0;"	f	S:float function fann_get_bit_fail_limit($ann)
fann_get_bit_fail		0;"	f	S:int function fann_get_bit_fail($ann)
fann_get_cascade_activation_functions_count		0;"	f	S:int function fann_get_cascade_activation_functions_count($ann)
fann_get_cascade_activation_functions		0;"	f	S:array function fann_get_cascade_activation_functions($ann)
fann_get_cascade_activation_steepnesses_count		0;"	f	S:int function fann_get_cascade_activation_steepnesses_count($ann)
fann_get_cascade_activation_steepnesses		0;"	f	S:array function fann_get_cascade_activation_steepnesses($ann)
fann_get_cascade_candidate_change_fraction		0;"	f	S:float function fann_get_cascade_candidate_change_fraction($ann)
fann_get_cascade_candidate_limit		0;"	f	S:float function fann_get_cascade_candidate_limit($ann)
fann_get_cascade_candidate_stagnation_epochs		0;"	f	S:float function fann_get_cascade_candidate_stagnation_epochs($ann)
fann_get_cascade_max_cand_epochs		0;"	f	S:int function fann_get_cascade_max_cand_epochs($ann)
fann_get_cascade_max_out_epochs		0;"	f	S:int function fann_get_cascade_max_out_epochs($ann)
fann_get_cascade_min_cand_epochs		0;"	f	S:int function fann_get_cascade_min_cand_epochs($ann)
fann_get_cascade_min_out_epochs		0;"	f	S:int function fann_get_cascade_min_out_epochs($ann)
fann_get_cascade_num_candidate_groups		0;"	f	S:int function fann_get_cascade_num_candidate_groups($ann)
fann_get_cascade_num_candidates		0;"	f	S:int function fann_get_cascade_num_candidates($ann)
fann_get_cascade_output_change_fraction		0;"	f	S:float function fann_get_cascade_output_change_fraction($ann)
fann_get_cascade_output_stagnation_epochs		0;"	f	S:int function fann_get_cascade_output_stagnation_epochs($ann)
fann_get_cascade_weight_multiplier		0;"	f	S:float function fann_get_cascade_weight_multiplier($ann)
fann_get_connection_array		0;"	f	S:array function fann_get_connection_array($ann)
fann_get_connection_rate		0;"	f	S:float function fann_get_connection_rate($ann)
fann_get_errno		0;"	f	S:int function fann_get_errno($errdat)
fann_get_errstr		0;"	f	S:string function fann_get_errstr($errdat)
fann_get_layer_array		0;"	f	S:array function fann_get_layer_array($ann)
fann_get_learning_momentum		0;"	f	S:float function fann_get_learning_momentum($ann)
fann_get_learning_rate		0;"	f	S:float function fann_get_learning_rate($ann)
fann_get_MSE		0;"	f	S:float function fann_get_MSE($ann)
fann_get_network_type		0;"	f	S:int function fann_get_network_type($ann)
fann_get_num_input		0;"	f	S:int function fann_get_num_input($ann)
fann_get_num_layers		0;"	f	S:int function fann_get_num_layers($ann)
fann_get_num_output		0;"	f	S:int function fann_get_num_output($ann)
fann_get_quickprop_decay		0;"	f	S:float function fann_get_quickprop_decay($ann)
fann_get_quickprop_mu		0;"	f	S:float function fann_get_quickprop_mu($ann)
fann_get_rprop_decrease_factor		0;"	f	S:float function fann_get_rprop_decrease_factor($ann)
fann_get_rprop_delta_max		0;"	f	S:float function fann_get_rprop_delta_max($ann)
fann_get_rprop_delta_min		0;"	f	S:float function fann_get_rprop_delta_min($ann)
fann_get_rprop_delta_zero		0;"	f	S:ReturnType function fann_get_rprop_delta_zero($ann)
fann_get_rprop_increase_factor		0;"	f	S:float function fann_get_rprop_increase_factor($ann)
fann_get_sarprop_step_error_shift		0;"	f	S:float function fann_get_sarprop_step_error_shift($ann)
fann_get_sarprop_step_error_threshold_factor		0;"	f	S:float function fann_get_sarprop_step_error_threshold_factor($ann)
fann_get_sarprop_temperature		0;"	f	S:float function fann_get_sarprop_temperature($ann)
fann_get_sarprop_weight_decay_shift		0;"	f	S:float function fann_get_sarprop_weight_decay_shift($ann)
fann_get_total_connections		0;"	f	S:int function fann_get_total_connections($ann)
fann_get_total_neurons		0;"	f	S:int function fann_get_total_neurons($ann)
fann_get_train_error_function		0;"	f	S:int function fann_get_train_error_function($ann)
fann_get_train_stop_function		0;"	f	S:int function fann_get_train_stop_function($ann)
fann_get_training_algorithm		0;"	f	S:int function fann_get_training_algorithm($ann)
fann_init_weights		0;"	f	S:bool function fann_init_weights($ann, $train_data)
fann_length_train_data		0;"	f	S:resource function fann_length_train_data($data)
fann_merge_train_data		0;"	f	S:resource function fann_merge_train_data($data1, $data2)
fann_num_input_train_data		0;"	f	S:resource function fann_num_input_train_data($data)
fann_num_output_train_data		0;"	f	S:resource function fann_num_output_train_data($data)
fann_print_error		0;"	f	S:void function fann_print_error($errdat)
fann_randomize_weights		0;"	f	S:bool function fann_randomize_weights($ann, $min_weight, $max_weight)
fann_read_train_from_file		0;"	f	S:resource function fann_read_train_from_file($filename)
fann_reset_errno		0;"	f	S:void function fann_reset_errno($errdat)
fann_reset_errstr		0;"	f	S:void function fann_reset_errstr($errdat)
fann_reset_MSE		0;"	f	S:bool function fann_reset_MSE($ann)
fann_run		0;"	f	S:array function fann_run($ann, $input)
fann_save_train		0;"	f	S:bool function fann_save_train($data, $file_name)
fann_save		0;"	f	S:bool function fann_save($ann, $configuration_file)
fann_scale_input_train_data		0;"	f	S:bool function fann_scale_input_train_data($train_data, $new_min, $new_max)
fann_scale_input		0;"	f	S:bool function fann_scale_input($ann, $input_vector)
fann_scale_output_train_data		0;"	f	S:bool function fann_scale_output_train_data($train_data, $new_min, $new_max)
fann_scale_output		0;"	f	S:bool function fann_scale_output($ann, $output_vector)
fann_scale_train_data		0;"	f	S:bool function fann_scale_train_data($train_data, $new_min, $new_max)
fann_scale_train		0;"	f	S:bool function fann_scale_train($ann, $train_data)
fann_set_activation_function_hidden		0;"	f	S:bool function fann_set_activation_function_hidden($ann, $activation_function)
fann_set_activation_function_layer		0;"	f	S:bool function fann_set_activation_function_layer($ann, $activation_function, $layer)
fann_set_activation_function_output		0;"	f	S:bool function fann_set_activation_function_output($ann, $activation_function)
fann_set_activation_function		0;"	f	S:bool function fann_set_activation_function($ann, $activation_function, $layer, $neuron)
fann_set_activation_steepness_hidden		0;"	f	S:bool function fann_set_activation_steepness_hidden($ann, $activation_steepness)
fann_set_activation_steepness_layer		0;"	f	S:bool function fann_set_activation_steepness_layer($ann, $activation_steepness, $layer)
fann_set_activation_steepness_output		0;"	f	S:bool function fann_set_activation_steepness_output($ann, $activation_steepness)
fann_set_activation_steepness		0;"	f	S:bool function fann_set_activation_steepness($ann, $activation_steepness, $layer, $neuron)
fann_set_bit_fail_limit		0;"	f	S:bool function fann_set_bit_fail_limit($ann, $bit_fail_limit)
fann_set_callback		0;"	f	S:bool function fann_set_callback($ann, $callback)
fann_set_cascade_activation_functions		0;"	f	S:bool function fann_set_cascade_activation_functions($ann, $cascade_activation_functions)
fann_set_cascade_activation_steepnesses		0;"	f	S:bool function fann_set_cascade_activation_steepnesses($ann, $cascade_activation_steepnesses_count)
fann_set_cascade_candidate_change_fraction		0;"	f	S:bool function fann_set_cascade_candidate_change_fraction($ann, $cascade_candidate_change_fraction)
fann_set_cascade_candidate_limit		0;"	f	S:bool function fann_set_cascade_candidate_limit($ann, $cascade_candidate_limit)
fann_set_cascade_candidate_stagnation_epochs		0;"	f	S:bool function fann_set_cascade_candidate_stagnation_epochs($ann, $cascade_candidate_stagnation_epochs)
fann_set_cascade_max_cand_epochs		0;"	f	S:bool function fann_set_cascade_max_cand_epochs($ann, $cascade_max_cand_epochs)
fann_set_cascade_max_out_epochs		0;"	f	S:bool function fann_set_cascade_max_out_epochs($ann, $cascade_max_out_epochs)
fann_set_cascade_min_cand_epochs		0;"	f	S:bool function fann_set_cascade_min_cand_epochs($ann, $cascade_min_cand_epochs)
fann_set_cascade_min_out_epochs		0;"	f	S:bool function fann_set_cascade_min_out_epochs($ann, $cascade_min_out_epochs)
fann_set_cascade_num_candidate_groups		0;"	f	S:bool function fann_set_cascade_num_candidate_groups($ann, $cascade_num_candidate_groups)
fann_set_cascade_output_change_fraction		0;"	f	S:bool function fann_set_cascade_output_change_fraction($ann, $cascade_output_change_fraction)
fann_set_cascade_output_stagnation_epochs		0;"	f	S:bool function fann_set_cascade_output_stagnation_epochs($ann, $cascade_output_stagnation_epochs)
fann_set_cascade_weight_multiplier		0;"	f	S:bool function fann_set_cascade_weight_multiplier($ann, $cascade_weight_multiplier)
fann_set_error_log		0;"	f	S:void function fann_set_error_log($errdat, $log_file)
fann_set_input_scaling_params		0;"	f	S:bool function fann_set_input_scaling_params($ann, $train_data, $new_input_min, $new_input_max)
fann_set_learning_momentum		0;"	f	S:bool function fann_set_learning_momentum($ann, $learning_momentum)
fann_set_learning_rate		0;"	f	S:bool function fann_set_learning_rate($ann, $learning_rate)
fann_set_output_scaling_params		0;"	f	S:bool function fann_set_output_scaling_params($ann, $train_data, $new_output_min, $new_output_max)
fann_set_quickprop_decay		0;"	f	S:bool function fann_set_quickprop_decay($ann, $quickprop_decay)
fann_set_quickprop_mu		0;"	f	S:bool function fann_set_quickprop_mu($ann, $quickprop_mu)
fann_set_rprop_decrease_factor		0;"	f	S:bool function fann_set_rprop_decrease_factor($ann, $rprop_decrease_factor)
fann_set_rprop_delta_max		0;"	f	S:bool function fann_set_rprop_delta_max($ann, $rprop_delta_max)
fann_set_rprop_delta_min		0;"	f	S:bool function fann_set_rprop_delta_min($ann, $rprop_delta_min)
fann_set_rprop_delta_zero		0;"	f	S:bool function fann_set_rprop_delta_zero($ann, $rprop_delta_zero)
fann_set_rprop_increase_factor		0;"	f	S:bool function fann_set_rprop_increase_factor($ann, $rprop_increase_factor)
fann_set_sarprop_step_error_shift		0;"	f	S:bool function fann_set_sarprop_step_error_shift($ann, $sarprop_step_error_shift)
fann_set_sarprop_step_error_threshold_factor		0;"	f	S:bool function fann_set_sarprop_step_error_threshold_factor($ann, $sarprop_step_error_threshold_factor)
fann_set_sarprop_temperature		0;"	f	S:bool function fann_set_sarprop_temperature($ann, $sarprop_temperature)
fann_set_sarprop_weight_decay_shift		0;"	f	S:bool function fann_set_sarprop_weight_decay_shift($ann, $sarprop_weight_decay_shift)
fann_set_scaling_params		0;"	f	S:bool function fann_set_scaling_params($ann, $train_data, $new_input_min, $new_input_max, $new_output_min, $new_output_max)
fann_set_train_error_function		0;"	f	S:bool function fann_set_train_error_function($ann, $error_function)
fann_set_train_stop_function		0;"	f	S:bool function fann_set_train_stop_function($ann, $stop_function)
fann_set_training_algorithm		0;"	f	S:bool function fann_set_training_algorithm($ann, $training_algorithm)
fann_set_weight_array		0;"	f	S:bool function fann_set_weight_array($ann, $connections)
fann_set_weight		0;"	f	S:bool function fann_set_weight($ann, $from_neuron, $to_neuron, $weight)
fann_shuffle_train_data		0;"	f	S:bool function fann_shuffle_train_data($train_data)
fann_subset_train_data		0;"	f	S:resource function fann_subset_train_data($data, $pos, $length)
fann_test_data		0;"	f	S:float function fann_test_data($ann, $data)
fann_test		0;"	f	S:bool function fann_test($ann, $input, $desired_output)
fann_train_epoch		0;"	f	S:float function fann_train_epoch($ann, $data)
fann_train_on_data		0;"	f	S:bool function fann_train_on_data($ann, $data, $max_epochs, $epochs_between_reports, $desired_error)
fann_train_on_file		0;"	f	S:bool function fann_train_on_file($ann, $filename, $max_epochs, $epochs_between_reports, $desired_error)
fann_train		0;"	f	S:bool function fann_train($ann, $input, $desired_output)
FANNConnection		0;"	c
from_neuron		0;"	p	class:FANNConnection	S: FANNConnection::from_neuron
to_neuron		0;"	p	class:FANNConnection	S: FANNConnection::to_neuron
weight		0;"	p	class:FANNConnection	S: FANNConnection::weight
__construct		0;"	f	S: function __construct($from_neuron, $to_neuron, $weight)	class:FANNConnection
getFromNeuron		0;"	f	S:int function getFromNeuron()	class:FANNConnection
getToNeuron		0;"	f	S:int function getToNeuron()	class:FANNConnection
getWeight		0;"	f	S:void function getWeight()	class:FANNConnection
setWeight		0;"	f	S:bool function setWeight($weight)	class:FANNConnection
JSON_ERROR_NONE		0;"	d
JSON_ERROR_DEPTH		0;"	d
JSON_ERROR_STATE_MISMATCH		0;"	d
JSON_ERROR_CTRL_CHAR		0;"	d
JSON_ERROR_SYNTAX		0;"	d
JSON_ERROR_UTF8		0;"	d
JSON_ERROR_RECURSION		0;"	d
JSON_ERROR_INF_OR_NAN		0;"	d
JSON_ERROR_UNSUPPORTED_TYPE		0;"	d
JSON_HEX_TAG		0;"	d
JSON_HEX_AMP		0;"	d
JSON_HEX_APOS		0;"	d
JSON_HEX_QUOT		0;"	d
JSON_FORCE_OBJECT		0;"	d
JSON_NUMERIC_CHECK		0;"	d
JSON_BIGINT_AS_STRING		0;"	d
JSON_PRETTY_PRINT		0;"	d
JSON_UNESCAPED_SLASHES		0;"	d
JSON_UNESCAPED_UNICODE		0;"	d
JsonSerializable		0;"	c
jsonSerialize		0;"	f	S:mixed function jsonSerialize()	class:JsonSerializable	m: abstract
json_decode		0;"	f	S:mixed function json_decode($json, $assoc = false, $depth = 512, $options)
json_encode		0;"	f	S:string function json_encode($value, $options, $depth = 512)
json_last_error_msg		0;"	f	S:string function json_last_error_msg()
json_last_error		0;"	f	S:int function json_last_error()
Judy		0;"	c
BITSET		0;"	o	class:Judy	a:const	S:const Judy::BITSET
INT_TO_INT		0;"	o	class:Judy	a:const	S:const Judy::INT_TO_INT
INT_TO_MIXED		0;"	o	class:Judy	a:const	S:const Judy::INT_TO_MIXED
STRING_TO_INT		0;"	o	class:Judy	a:const	S:const Judy::STRING_TO_INT
STRING_TO_MIXED		0;"	o	class:Judy	a:const	S:const Judy::STRING_TO_MIXED
byCount		0;"	f	S:int function byCount($nth_index)	class:Judy
__construct		0;"	f	S: function __construct($judy_type)	class:Judy
count		0;"	f	S:int function count($index_start, $index_end = -1)	class:Judy
__destruct		0;"	f	S:void function __destruct()	class:Judy
first		0;"	f	S:mixed function first($index)	class:Judy
firstEmpty		0;"	f	S:int function firstEmpty($index)	class:Judy
free		0;"	f	S:int function free()	class:Judy
getType		0;"	f	S:int function getType()	class:Judy
last		0;"	f	S:void function last($index)	class:Judy
lastEmpty		0;"	f	S:int function lastEmpty($index = -1)	class:Judy
memoryUsage		0;"	f	S:int function memoryUsage()	class:Judy
next		0;"	f	S:mixed function next($index)	class:Judy
nextEmpty		0;"	f	S:int function nextEmpty($index)	class:Judy
offsetExists		0;"	f	S:bool function offsetExists($offset)	class:Judy
offsetGet		0;"	f	S:mixed function offsetGet($offset)	class:Judy
offsetSet		0;"	f	S:bool function offsetSet($offset, $value)	class:Judy
offsetUnset		0;"	f	S:bool function offsetUnset($offset)	class:Judy
prev		0;"	f	S:mixed function prev($index)	class:Judy
prevEmpty		0;"	f	S:int function prevEmpty($index)	class:Judy
size		0;"	f	S:void function size()	class:Judy
judy_type		0;"	f	S:int function judy_type($array)
judy_version		0;"	f	S:string function judy_version()
Lua		0;"	c
LUA_VERSION		0;"	o	class:Lua	a:const	S:const Lua::LUA_VERSION
assign		0;"	f	S:mixed function assign($name, $value)	class:Lua
call		0;"	f	S:mixed function call($lua_func, $args, $use_self)	class:Lua
__construct		0;"	f	S: function __construct($lua_script_file = NULL)	class:Lua
eval		0;"	f	S:mixed function eval($statements)	class:Lua
getVersion		0;"	f	S:string function getVersion()	class:Lua
include		0;"	f	S:mixed function include($file)	class:Lua
registerCallback		0;"	f	S:mixed function registerCallback($name, $function)	class:Lua
LuaClosure		0;"	c
__invoke		0;"	f	S:void function __invoke($arg, $...)	class:LuaClosure
CONNECTION_ABORTED		0;"	d
CONNECTION_NORMAL		0;"	d
CONNECTION_TIMEOUT		0;"	d
__COMPILER_HALT_OFFSET__		0;"	d
connection_aborted		0;"	f	S:int function connection_aborted()
connection_status		0;"	f	S:int function connection_status()
constant		0;"	f	S:mixed function constant($name)
define		0;"	f	S:bool function define($name, $value, $case_insensitive = false)
defined		0;"	f	S:bool function defined($name)
die		0;"	f	S: function die()
eval		0;"	f	S:mixed function eval($code)
exit		0;"	f	S:void function exit($status)
get_browser		0;"	f	S:mixed function get_browser($user_agent, $return_array = false)
__halt_compiler		0;"	f	S:void function __halt_compiler()
highlight_file		0;"	f	S:mixed function highlight_file($filename, $return = false)
highlight_string		0;"	f	S:mixed function highlight_string($str, $return = false)
ignore_user_abort		0;"	f	S:int function ignore_user_abort($value)
pack		0;"	f	S:string function pack($format, $args, $...)
php_check_syntax		0;"	f	S:bool function php_check_syntax($filename, &$error_message)
php_strip_whitespace		0;"	f	S:string function php_strip_whitespace($filename)
show_source		0;"	f	S: function show_source()
sleep		0;"	f	S:int function sleep($seconds)
sys_getloadavg		0;"	f	S:array function sys_getloadavg()
time_nanosleep		0;"	f	S:mixed function time_nanosleep($seconds, $nanoseconds)
time_sleep_until		0;"	f	S:bool function time_sleep_until($timestamp)
uniqid		0;"	f	S:string function uniqid($prefix = "", $more_entropy = false)
unpack		0;"	f	S:array function unpack($format, $data)
usleep		0;"	f	S:void function usleep($micro_seconds)
PARSEKIT_QUIET		0;"	d
PARSEKIT_SIMPLE		0;"	d
PARSEKIT_EXTENDED_VALUE		0;"	d
PARSEKIT_RESULT_CONST		0;"	d
PARSEKIT_RESULT_EA_TYPE		0;"	d
PARSEKIT_RESULT_JMP_ADDR		0;"	d
PARSEKIT_RESULT_OPARRAY		0;"	d
PARSEKIT_RESULT_OPLINE		0;"	d
PARSEKIT_RESULT_VAR		0;"	d
PARSEKIT_USAGE_UNKNOWN		0;"	d
PARSEKIT_ZEND_INTERNAL_CLASS		0;"	d
PARSEKIT_ZEND_USER_CLASS		0;"	d
PARSEKIT_ZEND_EVAL_CODE		0;"	d
PARSEKIT_ZEND_INTERNAL_FUNCTION		0;"	d
PARSEKIT_ZEND_OVERLOADED_FUNCTION		0;"	d
PARSEKIT_ZEND_OVERLOADED_FUNCTION_TEMPORARY		0;"	d
PARSEKIT_ZEND_USER_FUNCTION		0;"	d
PARSEKIT_IS_CONST		0;"	d
PARSEKIT_IS_TMP_VAR		0;"	d
PARSEKIT_IS_UNUSED		0;"	d
PARSEKIT_IS_VAR		0;"	d
PARSEKIT_ZEND_ADD		0;"	d
PARSEKIT_ZEND_ADD_ARRAY_ELEMENT		0;"	d
PARSEKIT_ZEND_ADD_CHAR		0;"	d
PARSEKIT_ZEND_ADD_INTERFACE		0;"	d
PARSEKIT_ZEND_ADD_STRING		0;"	d
PARSEKIT_ZEND_ADD_VAR		0;"	d
PARSEKIT_ZEND_ASSIGN		0;"	d
PARSEKIT_ZEND_ASSIGN_ADD		0;"	d
PARSEKIT_ZEND_ASSIGN_BW_AND		0;"	d
PARSEKIT_ZEND_ASSIGN_BW_OR		0;"	d
PARSEKIT_ZEND_ASSIGN_BW_XOR		0;"	d
PARSEKIT_ZEND_ASSIGN_CONCAT		0;"	d
PARSEKIT_ZEND_ASSIGN_DIM		0;"	d
PARSEKIT_ZEND_ASSIGN_DIV		0;"	d
PARSEKIT_ZEND_ASSIGN_MOD		0;"	d
PARSEKIT_ZEND_ASSIGN_MUL		0;"	d
PARSEKIT_ZEND_ASSIGN_OBJ		0;"	d
PARSEKIT_ZEND_ASSIGN_REF		0;"	d
PARSEKIT_ZEND_ASSIGN_SL		0;"	d
PARSEKIT_ZEND_ASSIGN_SR		0;"	d
PARSEKIT_ZEND_ASSIGN_SUB		0;"	d
PARSEKIT_ZEND_BEGIN_SILENCE		0;"	d
PARSEKIT_ZEND_BOOL		0;"	d
PARSEKIT_ZEND_BOOL_NOT		0;"	d
PARSEKIT_ZEND_BOOL_XOR		0;"	d
PARSEKIT_ZEND_BRK		0;"	d
PARSEKIT_ZEND_BW_AND		0;"	d
PARSEKIT_ZEND_BW_NOT		0;"	d
PARSEKIT_ZEND_BW_OR		0;"	d
PARSEKIT_ZEND_BW_XOR		0;"	d
PARSEKIT_ZEND_CASE		0;"	d
PARSEKIT_ZEND_CAST		0;"	d
PARSEKIT_ZEND_CATCH		0;"	d
PARSEKIT_ZEND_CLONE		0;"	d
PARSEKIT_ZEND_CONCAT		0;"	d
PARSEKIT_ZEND_CONT		0;"	d
PARSEKIT_ZEND_DECLARE_CLASS		0;"	d
PARSEKIT_ZEND_DECLARE_FUNCTION		0;"	d
PARSEKIT_ZEND_DECLARE_INHERITED_CLASS		0;"	d
PARSEKIT_ZEND_DIV		0;"	d
PARSEKIT_ZEND_DO_FCALL		0;"	d
PARSEKIT_ZEND_DO_FCALL_BY_NAME		0;"	d
PARSEKIT_ZEND_ECHO		0;"	d
PARSEKIT_ZEND_END_SILENCE		0;"	d
PARSEKIT_ZEND_EXIT		0;"	d
PARSEKIT_ZEND_EXT_FCALL_BEGIN		0;"	d
PARSEKIT_ZEND_EXT_FCALL_END		0;"	d
PARSEKIT_ZEND_EXT_NOP		0;"	d
PARSEKIT_ZEND_EXT_STMT		0;"	d
PARSEKIT_ZEND_FETCH_CLASS		0;"	d
PARSEKIT_ZEND_FETCH_CONSTANT		0;"	d
PARSEKIT_ZEND_FETCH_DIM_FUNC_ARG		0;"	d
PARSEKIT_ZEND_FETCH_DIM_IS		0;"	d
PARSEKIT_ZEND_FETCH_DIM_R		0;"	d
PARSEKIT_ZEND_FETCH_DIM_RW		0;"	d
PARSEKIT_ZEND_FETCH_DIM_TMP_VAR		0;"	d
PARSEKIT_ZEND_FETCH_DIM_UNSET		0;"	d
PARSEKIT_ZEND_FETCH_DIM_W		0;"	d
PARSEKIT_ZEND_FETCH_FUNC_ARG		0;"	d
PARSEKIT_ZEND_FETCH_IS		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_FUNC_ARG		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_IS		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_R		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_RW		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_UNSET		0;"	d
PARSEKIT_ZEND_FETCH_OBJ_W		0;"	d
PARSEKIT_ZEND_FETCH_R		0;"	d
PARSEKIT_ZEND_FETCH_RW		0;"	d
PARSEKIT_ZEND_FETCH_UNSET		0;"	d
PARSEKIT_ZEND_FETCH_W		0;"	d
PARSEKIT_ZEND_FE_FETCH		0;"	d
PARSEKIT_ZEND_FE_RESET		0;"	d
PARSEKIT_ZEND_FREE		0;"	d
PARSEKIT_ZEND_HANDLE_EXCEPTION		0;"	d
PARSEKIT_ZEND_IMPORT_CLASS		0;"	d
PARSEKIT_ZEND_IMPORT_CONST		0;"	d
PARSEKIT_ZEND_IMPORT_FUNCTION		0;"	d
PARSEKIT_ZEND_INCLUDE_OR_EVAL		0;"	d
PARSEKIT_ZEND_INIT_ARRAY		0;"	d
PARSEKIT_ZEND_INIT_CTOR_CALL		0;"	d
PARSEKIT_ZEND_INIT_FCALL_BY_NAME		0;"	d
PARSEKIT_ZEND_INIT_METHOD_CALL		0;"	d
PARSEKIT_ZEND_INIT_STATIC_METHOD_CALL		0;"	d
PARSEKIT_ZEND_INIT_STRING		0;"	d
PARSEKIT_ZEND_INSTANCEOF		0;"	d
PARSEKIT_ZEND_ISSET_ISEMPTY		0;"	d
PARSEKIT_ZEND_ISSET_ISEMPTY_DIM_OBJ		0;"	d
PARSEKIT_ZEND_ISSET_ISEMPTY_PROP_OBJ		0;"	d
PARSEKIT_ZEND_ISSET_ISEMPTY_VAR		0;"	d
PARSEKIT_ZEND_IS_EQUAL		0;"	d
PARSEKIT_ZEND_IS_IDENTICAL		0;"	d
PARSEKIT_ZEND_IS_NOT_EQUAL		0;"	d
PARSEKIT_ZEND_IS_NOT_IDENTICAL		0;"	d
PARSEKIT_ZEND_IS_SMALLER		0;"	d
PARSEKIT_ZEND_IS_SMALLER_OR_EQUAL		0;"	d
PARSEKIT_ZEND_JMP		0;"	d
PARSEKIT_ZEND_JMPNZ		0;"	d
PARSEKIT_ZEND_JMPNZ_EX		0;"	d
PARSEKIT_ZEND_JMPZ		0;"	d
PARSEKIT_ZEND_JMPZNZ		0;"	d
PARSEKIT_ZEND_JMPZ_EX		0;"	d
PARSEKIT_ZEND_JMP_NO_CTOR		0;"	d
PARSEKIT_ZEND_MOD		0;"	d
PARSEKIT_ZEND_MUL		0;"	d
PARSEKIT_ZEND_NEW		0;"	d
PARSEKIT_ZEND_NOP		0;"	d
PARSEKIT_ZEND_OP_DATA		0;"	d
PARSEKIT_ZEND_POST_DEC		0;"	d
PARSEKIT_ZEND_POST_DEC_OBJ		0;"	d
PARSEKIT_ZEND_POST_INC		0;"	d
PARSEKIT_ZEND_POST_INC_OBJ		0;"	d
PARSEKIT_ZEND_PRE_DEC		0;"	d
PARSEKIT_ZEND_PRE_DEC_OBJ		0;"	d
PARSEKIT_ZEND_PRE_INC		0;"	d
PARSEKIT_ZEND_PRE_INC_OBJ		0;"	d
PARSEKIT_ZEND_PRINT		0;"	d
PARSEKIT_ZEND_QM_ASSIGN		0;"	d
PARSEKIT_ZEND_RAISE_ABSTRACT_ERROR		0;"	d
PARSEKIT_ZEND_RECV		0;"	d
PARSEKIT_ZEND_RECV_INIT		0;"	d
PARSEKIT_ZEND_RETURN		0;"	d
PARSEKIT_ZEND_SEND_REF		0;"	d
PARSEKIT_ZEND_SEND_VAL		0;"	d
PARSEKIT_ZEND_SEND_VAR		0;"	d
PARSEKIT_ZEND_SEND_VAR_NO_REF		0;"	d
PARSEKIT_ZEND_SL		0;"	d
PARSEKIT_ZEND_SR		0;"	d
PARSEKIT_ZEND_SUB		0;"	d
PARSEKIT_ZEND_SWITCH_FREE		0;"	d
PARSEKIT_ZEND_THROW		0;"	d
PARSEKIT_ZEND_TICKS		0;"	d
PARSEKIT_ZEND_UNSET_DIM_OBJ		0;"	d
PARSEKIT_ZEND_UNSET_VAR		0;"	d
PARSEKIT_ZEND_VERIFY_ABSTRACT_CLASS		0;"	d
parsekit_compile_file		0;"	f	S:array function parsekit_compile_file($filename, &$errors, $options = PARSEKIT_QUIET)
parsekit_compile_string		0;"	f	S:array function parsekit_compile_string($phpcode, &$errors, $options = PARSEKIT_QUIET)
parsekit_func_arginfo		0;"	f	S:array function parsekit_func_arginfo($function)
SplDoublyLinkedList		0;"	c
add		0;"	f	S:void function add($index, $newval)	class:SplDoublyLinkedList
bottom		0;"	f	S:mixed function bottom()	class:SplDoublyLinkedList
__construct		0;"	f	S: function __construct()	class:SplDoublyLinkedList
count		0;"	f	S:int function count()	class:SplDoublyLinkedList
current		0;"	f	S:mixed function current()	class:SplDoublyLinkedList
getIteratorMode		0;"	f	S:int function getIteratorMode()	class:SplDoublyLinkedList
isEmpty		0;"	f	S:bool function isEmpty()	class:SplDoublyLinkedList
key		0;"	f	S:mixed function key()	class:SplDoublyLinkedList
next		0;"	f	S:void function next()	class:SplDoublyLinkedList
offsetExists		0;"	f	S:bool function offsetExists($index)	class:SplDoublyLinkedList
offsetGet		0;"	f	S:mixed function offsetGet($index)	class:SplDoublyLinkedList
offsetSet		0;"	f	S:void function offsetSet($index, $newval)	class:SplDoublyLinkedList
offsetUnset		0;"	f	S:void function offsetUnset($index)	class:SplDoublyLinkedList
pop		0;"	f	S:mixed function pop()	class:SplDoublyLinkedList
prev		0;"	f	S:void function prev()	class:SplDoublyLinkedList
push		0;"	f	S:void function push($value)	class:SplDoublyLinkedList
rewind		0;"	f	S:void function rewind()	class:SplDoublyLinkedList
serialize		0;"	f	S:string function serialize()	class:SplDoublyLinkedList
setIteratorMode		0;"	f	S:void function setIteratorMode($mode)	class:SplDoublyLinkedList
shift		0;"	f	S:mixed function shift()	class:SplDoublyLinkedList
top		0;"	f	S:mixed function top()	class:SplDoublyLinkedList
unserialize		0;"	f	S:void function unserialize($serialized)	class:SplDoublyLinkedList
unshift		0;"	f	S:void function unshift($value)	class:SplDoublyLinkedList
valid		0;"	f	S:bool function valid()	class:SplDoublyLinkedList
SplStack		0;"	c	i:SplDoublyLinkedList
__construct		0;"	f	S: function __construct()	class:SplStack
setIteratorMode		0;"	f	S:void function setIteratorMode($mode)	class:SplStack
SplQueue		0;"	c	i:SplDoublyLinkedList
__construct		0;"	f	S: function __construct()	class:SplQueue
dequeue		0;"	f	S:mixed function dequeue()	class:SplQueue
enqueue		0;"	f	S:void function enqueue($value)	class:SplQueue
setIteratorMode		0;"	f	S:void function setIteratorMode($mode)	class:SplQueue
SplHeap		0;"	c
compare		0;"	f	S:int function compare($value1, $value2)	class:SplHeap	a:protected	m: abstract
__construct		0;"	f	S: function __construct()	class:SplHeap
count		0;"	f	S:int function count()	class:SplHeap
current		0;"	f	S:mixed function current()	class:SplHeap
extract		0;"	f	S:mixed function extract()	class:SplHeap
insert		0;"	f	S:void function insert($value)	class:SplHeap
isEmpty		0;"	f	S:bool function isEmpty()	class:SplHeap
key		0;"	f	S:mixed function key()	class:SplHeap
next		0;"	f	S:void function next()	class:SplHeap
recoverFromCorruption		0;"	f	S:void function recoverFromCorruption()	class:SplHeap
rewind		0;"	f	S:void function rewind()	class:SplHeap
top		0;"	f	S:mixed function top()	class:SplHeap
valid		0;"	f	S:bool function valid()	class:SplHeap
SplMaxHeap		0;"	c	i:SplHeap
compare		0;"	f	S:int function compare($value1, $value2)	class:SplMaxHeap	a:protected
SplMinHeap		0;"	c	i:SplHeap
compare		0;"	f	S:int function compare($value1, $value2)	class:SplMinHeap	a:protected
SplPriorityQueue		0;"	c
compare		0;"	f	S:int function compare($priority1, $priority2)	class:SplPriorityQueue
__construct		0;"	f	S: function __construct()	class:SplPriorityQueue
count		0;"	f	S:int function count()	class:SplPriorityQueue
current		0;"	f	S:mixed function current()	class:SplPriorityQueue
extract		0;"	f	S:mixed function extract()	class:SplPriorityQueue
insert		0;"	f	S:void function insert($value, $priority)	class:SplPriorityQueue
isEmpty		0;"	f	S:bool function isEmpty()	class:SplPriorityQueue
key		0;"	f	S:mixed function key()	class:SplPriorityQueue
next		0;"	f	S:void function next()	class:SplPriorityQueue
recoverFromCorruption		0;"	f	S:void function recoverFromCorruption()	class:SplPriorityQueue
rewind		0;"	f	S:void function rewind()	class:SplPriorityQueue
setExtractFlags		0;"	f	S:void function setExtractFlags($flags)	class:SplPriorityQueue
top		0;"	f	S:mixed function top()	class:SplPriorityQueue
valid		0;"	f	S:bool function valid()	class:SplPriorityQueue
SplFixedArray		0;"	c
__construct		0;"	f	S: function __construct($size)	class:SplFixedArray
count		0;"	f	S:int function count()	class:SplFixedArray
current		0;"	f	S:mixed function current()	class:SplFixedArray
fromArray		0;"	f	S:SplFixedArray function fromArray($array, $save_indexes = true)	class:SplFixedArray	a:static
getSize		0;"	f	S:int function getSize()	class:SplFixedArray
key		0;"	f	S:int function key()	class:SplFixedArray
next		0;"	f	S:void function next()	class:SplFixedArray
offsetExists		0;"	f	S:bool function offsetExists($index)	class:SplFixedArray
offsetGet		0;"	f	S:mixed function offsetGet($index)	class:SplFixedArray
offsetSet		0;"	f	S:void function offsetSet($index, $newval)	class:SplFixedArray
offsetUnset		0;"	f	S:void function offsetUnset($index)	class:SplFixedArray
rewind		0;"	f	S:void function rewind()	class:SplFixedArray
setSize		0;"	f	S:int function setSize($size)	class:SplFixedArray
toArray		0;"	f	S:array function toArray()	class:SplFixedArray
valid		0;"	f	S:bool function valid()	class:SplFixedArray
__wakeup		0;"	f	S:void function __wakeup()	class:SplFixedArray
SplObjectStorage		0;"	c
addAll		0;"	f	S:void function addAll($storage)	class:SplObjectStorage
attach		0;"	f	S:object function attach($object, $data)	class:SplObjectStorage
contains		0;"	f	S:object function contains($object)	class:SplObjectStorage
count		0;"	f	S:int function count()	class:SplObjectStorage
current		0;"	f	S:object function current()	class:SplObjectStorage
detach		0;"	f	S:object function detach($object)	class:SplObjectStorage
getHash		0;"	f	S:string function getHash($object)	class:SplObjectStorage
getInfo		0;"	f	S:mixed function getInfo()	class:SplObjectStorage
key		0;"	f	S:int function key()	class:SplObjectStorage
next		0;"	f	S:object function next()	class:SplObjectStorage
offsetExists		0;"	f	S:object function offsetExists($object)	class:SplObjectStorage
offsetGet		0;"	f	S:object function offsetGet($object)	class:SplObjectStorage
offsetSet		0;"	f	S:object function offsetSet($object, $data)	class:SplObjectStorage
offsetUnset		0;"	f	S:object function offsetUnset($object)	class:SplObjectStorage
removeAll		0;"	f	S:void function removeAll($storage)	class:SplObjectStorage
removeAllExcept		0;"	f	S:void function removeAllExcept($storage)	class:SplObjectStorage
rewind		0;"	f	S:void function rewind()	class:SplObjectStorage
serialize		0;"	f	S:string function serialize()	class:SplObjectStorage
setInfo		0;"	f	S:void function setInfo($data)	class:SplObjectStorage
unserialize		0;"	f	S:void function unserialize($serialized)	class:SplObjectStorage
valid		0;"	f	S:bool function valid()	class:SplObjectStorage
AppendIterator		0;"	c	i:IteratorIterator
append		0;"	f	S:void function append($iterator)	class:AppendIterator
__construct		0;"	f	S: function __construct()	class:AppendIterator
current		0;"	f	S:mixed function current()	class:AppendIterator
getArrayIterator		0;"	f	S:void function getArrayIterator()	class:AppendIterator
getInnerIterator		0;"	f	S:Iterator function getInnerIterator()	class:AppendIterator
getIteratorIndex		0;"	f	S:int function getIteratorIndex()	class:AppendIterator
key		0;"	f	S:scalar function key()	class:AppendIterator
next		0;"	f	S:void function next()	class:AppendIterator
rewind		0;"	f	S:void function rewind()	class:AppendIterator
valid		0;"	f	S:bool function valid()	class:AppendIterator
ArrayIterator		0;"	c
append		0;"	f	S:void function append($value)	class:ArrayIterator
asort		0;"	f	S:void function asort()	class:ArrayIterator
__construct		0;"	f	S:object function __construct($array = array(), $flags)	class:ArrayIterator
count		0;"	f	S:object function count()	class:ArrayIterator
current		0;"	f	S:array function current()	class:ArrayIterator
getArrayCopy		0;"	f	S:array function getArrayCopy()	class:ArrayIterator
getFlags		0;"	f	S:void function getFlags()	class:ArrayIterator
key		0;"	f	S:mixed function key()	class:ArrayIterator
ksort		0;"	f	S:void function ksort()	class:ArrayIterator
natcasesort		0;"	f	S:void function natcasesort()	class:ArrayIterator
natsort		0;"	f	S:void function natsort()	class:ArrayIterator
next		0;"	f	S:void function next()	class:ArrayIterator
offsetExists		0;"	f	S:void function offsetExists($index)	class:ArrayIterator
offsetGet		0;"	f	S:mixed function offsetGet($index)	class:ArrayIterator
offsetSet		0;"	f	S:void function offsetSet($index, $newval)	class:ArrayIterator
offsetUnset		0;"	f	S:void function offsetUnset($index)	class:ArrayIterator
rewind		0;"	f	S:void function rewind()	class:ArrayIterator
seek		0;"	f	S:void function seek($position)	class:ArrayIterator
serialize		0;"	f	S:string function serialize()	class:ArrayIterator
setFlags		0;"	f	S:void function setFlags($flags)	class:ArrayIterator
uasort		0;"	f	S:void function uasort($cmp_function)	class:ArrayIterator
uksort		0;"	f	S:void function uksort($cmp_function)	class:ArrayIterator
unserialize		0;"	f	S:string function unserialize($serialized)	class:ArrayIterator
valid		0;"	f	S:array function valid()	class:ArrayIterator
CachingIterator		0;"	c	i:IteratorIterator
CALL_TOSTRING		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::CALL_TOSTRING
CATCH_GET_CHILD		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::CATCH_GET_CHILD
TOSTRING_USE_KEY		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::TOSTRING_USE_KEY
TOSTRING_USE_CURRENT		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::TOSTRING_USE_CURRENT
TOSTRING_USE_INNER		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::TOSTRING_USE_INNER
FULL_CACHE		0;"	o	class:CachingIterator	a:const	S:const CachingIterator::FULL_CACHE
__construct		0;"	f	S: function __construct($iterator, $flags = self::CALL_TOSTRING)	class:CachingIterator
count		0;"	f	S:int function count()	class:CachingIterator
current		0;"	f	S:void function current()	class:CachingIterator
getCache		0;"	f	S:array function getCache()	class:CachingIterator
getFlags		0;"	f	S:void function getFlags()	class:CachingIterator
getInnerIterator		0;"	f	S:Iterator function getInnerIterator()	class:CachingIterator
hasNext		0;"	f	S:void function hasNext()	class:CachingIterator
key		0;"	f	S:scalar function key()	class:CachingIterator
next		0;"	f	S:void function next()	class:CachingIterator
offsetExists		0;"	f	S:void function offsetExists($index)	class:CachingIterator
offsetGet		0;"	f	S:void function offsetGet($index)	class:CachingIterator
offsetSet		0;"	f	S:void function offsetSet($index, $newval)	class:CachingIterator
offsetUnset		0;"	f	S:void function offsetUnset($index)	class:CachingIterator
rewind		0;"	f	S:void function rewind()	class:CachingIterator
setFlags		0;"	f	S:void function setFlags($flags)	class:CachingIterator
__toString		0;"	f	S:void function __toString()	class:CachingIterator
valid		0;"	f	S:void function valid()	class:CachingIterator
CallbackFilterIterator		0;"	c	i:FilterIterator
accept		0;"	f	S:string function accept()	class:CallbackFilterIterator
__construct		0;"	f	S: function __construct($iterator, $callback)	class:CallbackFilterIterator
DirectoryIterator		0;"	c	i:SplFileInfo
__construct		0;"	f	S: function __construct($path)	class:DirectoryIterator
current		0;"	f	S:DirectoryIterator function current()	class:DirectoryIterator
getATime		0;"	f	S:int function getATime()	class:DirectoryIterator
getBasename		0;"	f	S:string function getBasename($suffix)	class:DirectoryIterator
getCTime		0;"	f	S:int function getCTime()	class:DirectoryIterator
getExtension		0;"	f	S:string function getExtension()	class:DirectoryIterator
getFilename		0;"	f	S:string function getFilename()	class:DirectoryIterator
getGroup		0;"	f	S:int function getGroup()	class:DirectoryIterator
getInode		0;"	f	S:int function getInode()	class:DirectoryIterator
getMTime		0;"	f	S:int function getMTime()	class:DirectoryIterator
getOwner		0;"	f	S:int function getOwner()	class:DirectoryIterator
getPath		0;"	f	S:string function getPath()	class:DirectoryIterator
getPathname		0;"	f	S:string function getPathname()	class:DirectoryIterator
getPerms		0;"	f	S:int function getPerms()	class:DirectoryIterator
getSize		0;"	f	S:int function getSize()	class:DirectoryIterator
getType		0;"	f	S:string function getType()	class:DirectoryIterator
isDir		0;"	f	S:bool function isDir()	class:DirectoryIterator
isDot		0;"	f	S:bool function isDot()	class:DirectoryIterator
isExecutable		0;"	f	S:bool function isExecutable()	class:DirectoryIterator
isFile		0;"	f	S:bool function isFile()	class:DirectoryIterator
isLink		0;"	f	S:bool function isLink()	class:DirectoryIterator
isReadable		0;"	f	S:bool function isReadable()	class:DirectoryIterator
isWritable		0;"	f	S:bool function isWritable()	class:DirectoryIterator
key		0;"	f	S:string function key()	class:DirectoryIterator
next		0;"	f	S:void function next()	class:DirectoryIterator
rewind		0;"	f	S:void function rewind()	class:DirectoryIterator
seek		0;"	f	S:void function seek($position)	class:DirectoryIterator
__toString		0;"	f	S:string function __toString()	class:DirectoryIterator
valid		0;"	f	S:bool function valid()	class:DirectoryIterator
EmptyIterator		0;"	c
current		0;"	f	S:void function current()	class:EmptyIterator
key		0;"	f	S:void function key()	class:EmptyIterator
next		0;"	f	S:void function next()	class:EmptyIterator
rewind		0;"	f	S:void function rewind()	class:EmptyIterator
valid		0;"	f	S:void function valid()	class:EmptyIterator
FilesystemIterator		0;"	c	i:DirectoryIterator
CURRENT_AS_PATHNAME		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::CURRENT_AS_PATHNAME
CURRENT_AS_FILEINFO		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::CURRENT_AS_FILEINFO
CURRENT_AS_SELF		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::CURRENT_AS_SELF
CURRENT_MODE_MASK		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::CURRENT_MODE_MASK
KEY_AS_PATHNAME		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::KEY_AS_PATHNAME
KEY_AS_FILENAME		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::KEY_AS_FILENAME
FOLLOW_SYMLINKS		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::FOLLOW_SYMLINKS
KEY_MODE_MASK		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::KEY_MODE_MASK
NEW_CURRENT_AND_KEY		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::NEW_CURRENT_AND_KEY
SKIP_DOTS		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::SKIP_DOTS
UNIX_PATHS		0;"	o	class:FilesystemIterator	a:const	S:const FilesystemIterator::UNIX_PATHS
__construct		0;"	f	S: function __construct($path, $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO | FilesystemIterator::SKIP_DOTS)	class:FilesystemIterator
current		0;"	f	S:mixed function current()	class:FilesystemIterator
getFlags		0;"	f	S:int function getFlags()	class:FilesystemIterator
key		0;"	f	S:string function key()	class:FilesystemIterator
next		0;"	f	S:void function next()	class:FilesystemIterator
rewind		0;"	f	S:void function rewind()	class:FilesystemIterator
setFlags		0;"	f	S:void function setFlags($flags)	class:FilesystemIterator
FilterIterator		0;"	c	i:IteratorIterator
accept		0;"	f	S:bool function accept()	class:FilterIterator	m: abstract
__construct		0;"	f	S: function __construct($iterator)	class:FilterIterator
current		0;"	f	S:mixed function current()	class:FilterIterator
getInnerIterator		0;"	f	S:Iterator function getInnerIterator()	class:FilterIterator
key		0;"	f	S:mixed function key()	class:FilterIterator
next		0;"	f	S:void function next()	class:FilterIterator
rewind		0;"	f	S:void function rewind()	class:FilterIterator
valid		0;"	f	S:bool function valid()	class:FilterIterator
GlobIterator		0;"	c	i:FilesystemIterator
__construct		0;"	f	S: function __construct($path, $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO)	class:GlobIterator
count		0;"	f	S:int function count()	class:GlobIterator
InfiniteIterator		0;"	c	i:IteratorIterator
__construct		0;"	f	S: function __construct($iterator)	class:InfiniteIterator
next		0;"	f	S:void function next()	class:InfiniteIterator
IteratorIterator		0;"	c
__construct		0;"	f	S: function __construct($iterator)	class:IteratorIterator
current		0;"	f	S:mixed function current()	class:IteratorIterator
getInnerIterator		0;"	f	S:Traversable function getInnerIterator()	class:IteratorIterator
key		0;"	f	S:scalar function key()	class:IteratorIterator
next		0;"	f	S:void function next()	class:IteratorIterator
rewind		0;"	f	S:void function rewind()	class:IteratorIterator
valid		0;"	f	S:bool function valid()	class:IteratorIterator
LimitIterator		0;"	c	i:IteratorIterator
__construct		0;"	f	S: function __construct($iterator, $offset, $count = -1)	class:LimitIterator
current		0;"	f	S:mixed function current()	class:LimitIterator
getInnerIterator		0;"	f	S:Iterator function getInnerIterator()	class:LimitIterator
getPosition		0;"	f	S:int function getPosition()	class:LimitIterator
key		0;"	f	S:mixed function key()	class:LimitIterator
next		0;"	f	S:void function next()	class:LimitIterator
rewind		0;"	f	S:void function rewind()	class:LimitIterator
seek		0;"	f	S:int function seek($position)	class:LimitIterator
valid		0;"	f	S:bool function valid()	class:LimitIterator
MultipleIterator		0;"	c
MIT_NEED_ANY		0;"	o	class:MultipleIterator	a:const	S:const MultipleIterator::MIT_NEED_ANY
MIT_NEED_ALL		0;"	o	class:MultipleIterator	a:const	S:const MultipleIterator::MIT_NEED_ALL
MIT_KEYS_NUMERIC		0;"	o	class:MultipleIterator	a:const	S:const MultipleIterator::MIT_KEYS_NUMERIC
MIT_KEYS_ASSOC		0;"	o	class:MultipleIterator	a:const	S:const MultipleIterator::MIT_KEYS_ASSOC
attachIterator		0;"	f	S:void function attachIterator($iterator, $infos)	class:MultipleIterator
__construct		0;"	f	S: function __construct($flags = MultipleIterator::MIT_NEED_ALL|MultipleIterator::MIT_KEYS_NUMERIC)	class:MultipleIterator
containsIterator		0;"	f	S:void function containsIterator($iterator)	class:MultipleIterator
countIterators		0;"	f	S:void function countIterators()	class:MultipleIterator
current		0;"	f	S:array function current()	class:MultipleIterator
detachIterator		0;"	f	S:void function detachIterator($iterator)	class:MultipleIterator
getFlags		0;"	f	S:void function getFlags()	class:MultipleIterator
key		0;"	f	S:array function key()	class:MultipleIterator
next		0;"	f	S:void function next()	class:MultipleIterator
rewind		0;"	f	S:void function rewind()	class:MultipleIterator
setFlags		0;"	f	S:void function setFlags($flags)	class:MultipleIterator
valid		0;"	f	S:void function valid()	class:MultipleIterator
NoRewindIterator		0;"	c	i:IteratorIterator
__construct		0;"	f	S: function __construct($iterator)	class:NoRewindIterator
current		0;"	f	S:mixed function current()	class:NoRewindIterator
getInnerIterator		0;"	f	S:iterator function getInnerIterator()	class:NoRewindIterator
key		0;"	f	S:mixed function key()	class:NoRewindIterator
next		0;"	f	S:void function next()	class:NoRewindIterator
rewind		0;"	f	S:void function rewind()	class:NoRewindIterator
valid		0;"	f	S:bool function valid()	class:NoRewindIterator
ParentIterator		0;"	c	i:RecursiveFilterIterator
accept		0;"	f	S:bool function accept()	class:ParentIterator
__construct		0;"	f	S: function __construct($iterator)	class:ParentIterator
getChildren		0;"	f	S:ParentIterator function getChildren()	class:ParentIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:ParentIterator
next		0;"	f	S:void function next()	class:ParentIterator
rewind		0;"	f	S:void function rewind()	class:ParentIterator
RecursiveArrayIterator		0;"	c	i:ArrayIterator
getChildren		0;"	f	S:RecursiveArrayIterator function getChildren()	class:RecursiveArrayIterator
hasChildren		0;"	f	S:object function hasChildren()	class:RecursiveArrayIterator
RecursiveCachingIterator		0;"	c	i:CachingIterator
__construct		0;"	f	S: function __construct($iterator, $flags = self::CALL_TOSTRING)	class:RecursiveCachingIterator
getChildren		0;"	f	S:RecursiveCachingIterator function getChildren()	class:RecursiveCachingIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:RecursiveCachingIterator
RecursiveCallbackFilterIterator		0;"	c	i:CallbackFilterIterator
__construct		0;"	f	S: function __construct($iterator, $callback)	class:RecursiveCallbackFilterIterator
getChildren		0;"	f	S:RecursiveCallbackFilterIterator function getChildren()	class:RecursiveCallbackFilterIterator
hasChildren		0;"	f	S:void function hasChildren()	class:RecursiveCallbackFilterIterator
RecursiveDirectoryIterator		0;"	c	i:FilesystemIterator
__construct		0;"	f	S: function __construct($path, $flags = FilesystemIterator::KEY_AS_PATHNAME | FilesystemIterator::CURRENT_AS_FILEINFO)	class:RecursiveDirectoryIterator
getChildren		0;"	f	S:mixed function getChildren()	class:RecursiveDirectoryIterator
getSubPath		0;"	f	S:string function getSubPath()	class:RecursiveDirectoryIterator
getSubPathname		0;"	f	S:string function getSubPathname()	class:RecursiveDirectoryIterator
hasChildren		0;"	f	S:bool function hasChildren($allow_links = false)	class:RecursiveDirectoryIterator
key		0;"	f	S:string function key()	class:RecursiveDirectoryIterator
next		0;"	f	S:void function next()	class:RecursiveDirectoryIterator
rewind		0;"	f	S:void function rewind()	class:RecursiveDirectoryIterator
RecursiveFilterIterator		0;"	c	i:FilterIterator
__construct		0;"	f	S: function __construct($iterator)	class:RecursiveFilterIterator
getChildren		0;"	f	S:RecursiveFilterIterator function getChildren()	class:RecursiveFilterIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:RecursiveFilterIterator
RecursiveIteratorIterator		0;"	c
LEAVES_ONLY		0;"	o	class:RecursiveIteratorIterator	a:const	S:const RecursiveIteratorIterator::LEAVES_ONLY
SELF_FIRST		0;"	o	class:RecursiveIteratorIterator	a:const	S:const RecursiveIteratorIterator::SELF_FIRST
CHILD_FIRST		0;"	o	class:RecursiveIteratorIterator	a:const	S:const RecursiveIteratorIterator::CHILD_FIRST
CATCH_GET_CHILD		0;"	o	class:RecursiveIteratorIterator	a:const	S:const RecursiveIteratorIterator::CATCH_GET_CHILD
beginChildren		0;"	f	S:void function beginChildren()	class:RecursiveIteratorIterator
beginIteration		0;"	f	S:void function beginIteration()	class:RecursiveIteratorIterator
callGetChildren		0;"	f	S:RecursiveIterator function callGetChildren()	class:RecursiveIteratorIterator
callHasChildren		0;"	f	S:bool function callHasChildren()	class:RecursiveIteratorIterator
__construct		0;"	f	S: function __construct($iterator, $mode = RecursiveIteratorIterator::LEAVES_ONLY, $flags)	class:RecursiveIteratorIterator
current		0;"	f	S:mixed function current()	class:RecursiveIteratorIterator
endChildren		0;"	f	S:void function endChildren()	class:RecursiveIteratorIterator
endIteration		0;"	f	S:void function endIteration()	class:RecursiveIteratorIterator
getDepth		0;"	f	S:int function getDepth()	class:RecursiveIteratorIterator
getInnerIterator		0;"	f	S:iterator function getInnerIterator()	class:RecursiveIteratorIterator
getMaxDepth		0;"	f	S:mixed function getMaxDepth()	class:RecursiveIteratorIterator
getSubIterator		0;"	f	S:RecursiveIterator function getSubIterator($level)	class:RecursiveIteratorIterator
key		0;"	f	S:mixed function key()	class:RecursiveIteratorIterator
next		0;"	f	S:void function next()	class:RecursiveIteratorIterator
nextElement		0;"	f	S:void function nextElement()	class:RecursiveIteratorIterator
rewind		0;"	f	S:void function rewind()	class:RecursiveIteratorIterator
setMaxDepth		0;"	f	S:void function setMaxDepth($max_depth = -1)	class:RecursiveIteratorIterator
valid		0;"	f	S:bool function valid()	class:RecursiveIteratorIterator
RecursiveRegexIterator		0;"	c	i:RegexIterator
__construct		0;"	f	S: function __construct($iterator, $regex, $mode = self::MATCH, $flags, $preg_flags)	class:RecursiveRegexIterator
getChildren		0;"	f	S:RecursiveRegexIterator function getChildren()	class:RecursiveRegexIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:RecursiveRegexIterator
RecursiveTreeIterator		0;"	c	i:RecursiveIteratorIterator
BYPASS_CURRENT		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::BYPASS_CURRENT
BYPASS_KEY		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::BYPASS_KEY
PREFIX_LEFT		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_LEFT
PREFIX_MID_HAS_NEXT		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_MID_HAS_NEXT
PREFIX_MID_LAST		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_MID_LAST
PREFIX_END_HAS_NEXT		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_END_HAS_NEXT
PREFIX_END_LAST		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_END_LAST
PREFIX_RIGHT		0;"	o	class:RecursiveTreeIterator	a:const	S:const RecursiveTreeIterator::PREFIX_RIGHT
beginChildren		0;"	f	S:void function beginChildren()	class:RecursiveTreeIterator
beginIteration		0;"	f	S:RecursiveIterator function beginIteration()	class:RecursiveTreeIterator
callGetChildren		0;"	f	S:RecursiveIterator function callGetChildren()	class:RecursiveTreeIterator
callHasChildren		0;"	f	S:bool function callHasChildren()	class:RecursiveTreeIterator
__construct		0;"	f	S: function __construct($it, $flags = RecursiveTreeIterator::BYPASS_KEY, $cit_flags = CachingIterator::CATCH_GET_CHILD, $mode = RecursiveIteratorIterator::SELF_FIRST)	class:RecursiveTreeIterator
current		0;"	f	S:string function current()	class:RecursiveTreeIterator
endChildren		0;"	f	S:void function endChildren()	class:RecursiveTreeIterator
endIteration		0;"	f	S:void function endIteration()	class:RecursiveTreeIterator
getEntry		0;"	f	S:string function getEntry()	class:RecursiveTreeIterator
getPostfix		0;"	f	S:void function getPostfix()	class:RecursiveTreeIterator
getPrefix		0;"	f	S:string function getPrefix()	class:RecursiveTreeIterator
key		0;"	f	S:string function key()	class:RecursiveTreeIterator
next		0;"	f	S:void function next()	class:RecursiveTreeIterator
nextElement		0;"	f	S:void function nextElement()	class:RecursiveTreeIterator
rewind		0;"	f	S:void function rewind()	class:RecursiveTreeIterator
setPrefixPart		0;"	f	S:void function setPrefixPart($part, $value)	class:RecursiveTreeIterator
valid		0;"	f	S:bool function valid()	class:RecursiveTreeIterator
RegexIterator		0;"	c	i:FilterIterator
MATCH		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::MATCH
GET_MATCH		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::GET_MATCH
ALL_MATCHES		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::ALL_MATCHES
SPLIT		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::SPLIT
REPLACE		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::REPLACE
USE_KEY		0;"	o	class:RegexIterator	a:const	S:const RegexIterator::USE_KEY
accept		0;"	f	S:bool function accept()	class:RegexIterator
__construct		0;"	f	S: function __construct($iterator, $regex, $mode = self::MATCH, $flags, $preg_flags)	class:RegexIterator
getFlags		0;"	f	S:int function getFlags()	class:RegexIterator
getMode		0;"	f	S:int function getMode()	class:RegexIterator
getPregFlags		0;"	f	S:int function getPregFlags()	class:RegexIterator
getRegex		0;"	f	S:string function getRegex()	class:RegexIterator
setFlags		0;"	f	S:void function setFlags($flags)	class:RegexIterator
setMode		0;"	f	S:void function setMode($mode)	class:RegexIterator
setPregFlags		0;"	f	S:void function setPregFlags($preg_flags)	class:RegexIterator
Countable		0;"	c
count		0;"	f	S:int function count($mode = COUNT_NORMAL)	class:Countable	m: abstract
OuterIterator		0;"	c	i:Iterator
getInnerIterator		0;"	f	S:Iterator function getInnerIterator()	class:OuterIterator
RecursiveIterator		0;"	c	i:Iterator
getChildren		0;"	f	S:RecursiveIterator function getChildren()	class:RecursiveIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:RecursiveIterator
SeekableIterator		0;"	c	i:Iterator
seek		0;"	f	S:void function seek($position)	class:SeekableIterator	m: abstract
BadFunctionCallException		0;"	c	i:LogicException
message		0;"	p	class:BadFunctionCallException	a:protected	S:protected BadFunctionCallException::message
code		0;"	p	class:BadFunctionCallException	a:protected	S:protected BadFunctionCallException::code
file		0;"	p	class:BadFunctionCallException	a:protected	S:protected BadFunctionCallException::file
line		0;"	p	class:BadFunctionCallException	a:protected	S:protected BadFunctionCallException::line
BadMethodCallException		0;"	c	i:BadFunctionCallException
message		0;"	p	class:BadMethodCallException	a:protected	S:protected BadMethodCallException::message
code		0;"	p	class:BadMethodCallException	a:protected	S:protected BadMethodCallException::code
file		0;"	p	class:BadMethodCallException	a:protected	S:protected BadMethodCallException::file
line		0;"	p	class:BadMethodCallException	a:protected	S:protected BadMethodCallException::line
DomainException		0;"	c	i:LogicException
message		0;"	p	class:DomainException	a:protected	S:protected DomainException::message
code		0;"	p	class:DomainException	a:protected	S:protected DomainException::code
file		0;"	p	class:DomainException	a:protected	S:protected DomainException::file
line		0;"	p	class:DomainException	a:protected	S:protected DomainException::line
InvalidArgumentException		0;"	c	i:LogicException
message		0;"	p	class:InvalidArgumentException	a:protected	S:protected InvalidArgumentException::message
code		0;"	p	class:InvalidArgumentException	a:protected	S:protected InvalidArgumentException::code
file		0;"	p	class:InvalidArgumentException	a:protected	S:protected InvalidArgumentException::file
line		0;"	p	class:InvalidArgumentException	a:protected	S:protected InvalidArgumentException::line
LengthException		0;"	c	i:LogicException
message		0;"	p	class:LengthException	a:protected	S:protected LengthException::message
code		0;"	p	class:LengthException	a:protected	S:protected LengthException::code
file		0;"	p	class:LengthException	a:protected	S:protected LengthException::file
line		0;"	p	class:LengthException	a:protected	S:protected LengthException::line
LogicException		0;"	c	i:Exception
message		0;"	p	class:LogicException	a:protected	S:protected LogicException::message
code		0;"	p	class:LogicException	a:protected	S:protected LogicException::code
file		0;"	p	class:LogicException	a:protected	S:protected LogicException::file
line		0;"	p	class:LogicException	a:protected	S:protected LogicException::line
OutOfBoundsException		0;"	c	i:RuntimeException
message		0;"	p	class:OutOfBoundsException	a:protected	S:protected OutOfBoundsException::message
code		0;"	p	class:OutOfBoundsException	a:protected	S:protected OutOfBoundsException::code
file		0;"	p	class:OutOfBoundsException	a:protected	S:protected OutOfBoundsException::file
line		0;"	p	class:OutOfBoundsException	a:protected	S:protected OutOfBoundsException::line
OutOfRangeException		0;"	c	i:LogicException
message		0;"	p	class:OutOfRangeException	a:protected	S:protected OutOfRangeException::message
code		0;"	p	class:OutOfRangeException	a:protected	S:protected OutOfRangeException::code
file		0;"	p	class:OutOfRangeException	a:protected	S:protected OutOfRangeException::file
line		0;"	p	class:OutOfRangeException	a:protected	S:protected OutOfRangeException::line
OverflowException		0;"	c	i:RuntimeException
message		0;"	p	class:OverflowException	a:protected	S:protected OverflowException::message
code		0;"	p	class:OverflowException	a:protected	S:protected OverflowException::code
file		0;"	p	class:OverflowException	a:protected	S:protected OverflowException::file
line		0;"	p	class:OverflowException	a:protected	S:protected OverflowException::line
RangeException		0;"	c	i:RuntimeException
message		0;"	p	class:RangeException	a:protected	S:protected RangeException::message
code		0;"	p	class:RangeException	a:protected	S:protected RangeException::code
file		0;"	p	class:RangeException	a:protected	S:protected RangeException::file
line		0;"	p	class:RangeException	a:protected	S:protected RangeException::line
RuntimeException		0;"	c	i:Exception
message		0;"	p	class:RuntimeException	a:protected	S:protected RuntimeException::message
code		0;"	p	class:RuntimeException	a:protected	S:protected RuntimeException::code
file		0;"	p	class:RuntimeException	a:protected	S:protected RuntimeException::file
line		0;"	p	class:RuntimeException	a:protected	S:protected RuntimeException::line
UnderflowException		0;"	c	i:RuntimeException
message		0;"	p	class:UnderflowException	a:protected	S:protected UnderflowException::message
code		0;"	p	class:UnderflowException	a:protected	S:protected UnderflowException::code
file		0;"	p	class:UnderflowException	a:protected	S:protected UnderflowException::file
line		0;"	p	class:UnderflowException	a:protected	S:protected UnderflowException::line
UnexpectedValueException		0;"	c	i:RuntimeException
message		0;"	p	class:UnexpectedValueException	a:protected	S:protected UnexpectedValueException::message
code		0;"	p	class:UnexpectedValueException	a:protected	S:protected UnexpectedValueException::code
file		0;"	p	class:UnexpectedValueException	a:protected	S:protected UnexpectedValueException::file
line		0;"	p	class:UnexpectedValueException	a:protected	S:protected UnexpectedValueException::line
class_implements		0;"	f	S:array function class_implements($class, $autoload = true)
class_parents		0;"	f	S:array function class_parents($class, $autoload = true)
class_uses		0;"	f	S:array function class_uses($class, $autoload = true)
iterator_apply		0;"	f	S:int function iterator_apply($iterator, $function, $args)
iterator_count		0;"	f	S:int function iterator_count($iterator)
iterator_to_array		0;"	f	S:array function iterator_to_array($iterator, $use_keys = true)
spl_autoload_call		0;"	f	S:void function spl_autoload_call($class_name)
spl_autoload_extensions		0;"	f	S:string function spl_autoload_extensions($file_extensions)
spl_autoload_functions		0;"	f	S:array function spl_autoload_functions()
spl_autoload_register		0;"	f	S:bool function spl_autoload_register($autoload_function, $throw = true, $prepend = false)
spl_autoload_unregister		0;"	f	S:bool function spl_autoload_unregister($autoload_function)
spl_autoload		0;"	f	S:void function spl_autoload($class_name, $file_extensions = spl_autoload_extensions())
spl_classes		0;"	f	S:array function spl_classes()
spl_object_hash		0;"	f	S:string function spl_object_hash($obj)
SplFileInfo		0;"	c
__construct		0;"	f	S: function __construct($file_name)	class:SplFileInfo
getATime		0;"	f	S:int function getATime()	class:SplFileInfo
getBasename		0;"	f	S:string function getBasename($suffix)	class:SplFileInfo
getCTime		0;"	f	S:int function getCTime()	class:SplFileInfo
getExtension		0;"	f	S:string function getExtension()	class:SplFileInfo
getFileInfo		0;"	f	S:SplFileInfo function getFileInfo($class_name)	class:SplFileInfo
getFilename		0;"	f	S:string function getFilename()	class:SplFileInfo
getGroup		0;"	f	S:int function getGroup()	class:SplFileInfo
getInode		0;"	f	S:int function getInode()	class:SplFileInfo
getLinkTarget		0;"	f	S:string function getLinkTarget()	class:SplFileInfo
getMTime		0;"	f	S:int function getMTime()	class:SplFileInfo
getOwner		0;"	f	S:int function getOwner()	class:SplFileInfo
getPath		0;"	f	S:string function getPath()	class:SplFileInfo
getPathInfo		0;"	f	S:SplFileInfo function getPathInfo($class_name)	class:SplFileInfo
getPathname		0;"	f	S:string function getPathname()	class:SplFileInfo
getPerms		0;"	f	S:int function getPerms()	class:SplFileInfo
getRealPath		0;"	f	S:string function getRealPath()	class:SplFileInfo
getSize		0;"	f	S:int function getSize()	class:SplFileInfo
getType		0;"	f	S:string function getType()	class:SplFileInfo
isDir		0;"	f	S:bool function isDir()	class:SplFileInfo
isExecutable		0;"	f	S:bool function isExecutable()	class:SplFileInfo
isFile		0;"	f	S:bool function isFile()	class:SplFileInfo
isLink		0;"	f	S:bool function isLink()	class:SplFileInfo
isReadable		0;"	f	S:bool function isReadable()	class:SplFileInfo
isWritable		0;"	f	S:bool function isWritable()	class:SplFileInfo
openFile		0;"	f	S:object function openFile($open_mode = "r", $use_include_path = false, $context)	class:SplFileInfo
setFileClass		0;"	f	S:void function setFileClass($class_name)	class:SplFileInfo
setInfoClass		0;"	f	S:void function setInfoClass($class_name)	class:SplFileInfo
__toString		0;"	f	S:void function __toString()	class:SplFileInfo
SplFileObject		0;"	c	i:SplFileInfo
DROP_NEW_LINE		0;"	o	class:SplFileObject	a:const	S:const SplFileObject::DROP_NEW_LINE
READ_AHEAD		0;"	o	class:SplFileObject	a:const	S:const SplFileObject::READ_AHEAD
SKIP_EMPTY		0;"	o	class:SplFileObject	a:const	S:const SplFileObject::SKIP_EMPTY
READ_CSV		0;"	o	class:SplFileObject	a:const	S:const SplFileObject::READ_CSV
__construct		0;"	f	S: function __construct($filename, $open_mode = "r", $use_include_path = false, $context)	class:SplFileObject
current		0;"	f	S:string|array function current()	class:SplFileObject
eof		0;"	f	S:bool function eof()	class:SplFileObject
fflush		0;"	f	S:bool function fflush()	class:SplFileObject
fgetc		0;"	f	S:string function fgetc()	class:SplFileObject
fgetcsv		0;"	f	S:array function fgetcsv($delimiter = ",", $enclosure = "\"", $escape = "\\")	class:SplFileObject
fgets		0;"	f	S:string function fgets()	class:SplFileObject
fgetss		0;"	f	S:string function fgetss($allowable_tags)	class:SplFileObject
flock		0;"	f	S:bool function flock($operation, &$wouldblock)	class:SplFileObject
fpassthru		0;"	f	S:int function fpassthru()	class:SplFileObject
fputcsv		0;"	f	S:int function fputcsv($fields, $delimiter = ",", $enclosure = '"')	class:SplFileObject
fread		0;"	f	S:string function fread($length)	class:SplFileObject
fscanf		0;"	f	S:mixed function fscanf($format, &$...)	class:SplFileObject
fseek		0;"	f	S:int function fseek($offset, $whence = SEEK_SET)	class:SplFileObject
fstat		0;"	f	S:array function fstat()	class:SplFileObject
ftell		0;"	f	S:int function ftell()	class:SplFileObject
ftruncate		0;"	f	S:bool function ftruncate($size)	class:SplFileObject
fwrite		0;"	f	S:int function fwrite($str, $length)	class:SplFileObject
getChildren		0;"	f	S:void function getChildren()	class:SplFileObject
getCsvControl		0;"	f	S:array function getCsvControl()	class:SplFileObject
getCurrentLine		0;"	f	S: function getCurrentLine()	class:SplFileObject
getFlags		0;"	f	S:integer function getFlags()	class:SplFileObject
getMaxLineLen		0;"	f	S:int function getMaxLineLen()	class:SplFileObject
hasChildren		0;"	f	S:bool function hasChildren()	class:SplFileObject
key		0;"	f	S:int function key()	class:SplFileObject
next		0;"	f	S:void function next()	class:SplFileObject
rewind		0;"	f	S:void function rewind()	class:SplFileObject
seek		0;"	f	S:void function seek($line_pos)	class:SplFileObject
setCsvControl		0;"	f	S:void function setCsvControl($delimiter = ",", $enclosure = "\"", $escape = "\\")	class:SplFileObject
setFlags		0;"	f	S:void function setFlags($flags)	class:SplFileObject
setMaxLineLen		0;"	f	S:void function setMaxLineLen($max_len)	class:SplFileObject
__toString		0;"	f	S:void function __toString()	class:SplFileObject
valid		0;"	f	S:bool function valid()	class:SplFileObject
SplTempFileObject		0;"	c	i:SplFileObject
__construct		0;"	f	S: function __construct($max_memory)	class:SplTempFileObject
ArrayObject		0;"	c
STD_PROP_LIST		0;"	o	class:ArrayObject	a:const	S:const ArrayObject::STD_PROP_LIST
ARRAY_AS_PROPS		0;"	o	class:ArrayObject	a:const	S:const ArrayObject::ARRAY_AS_PROPS
append		0;"	f	S:void function append($value)	class:ArrayObject
asort		0;"	f	S:void function asort()	class:ArrayObject
__construct		0;"	f	S:object function __construct($input = [], $flags, $iterator_class = "ArrayIterator")	class:ArrayObject
count		0;"	f	S:int function count()	class:ArrayObject
exchangeArray		0;"	f	S:object function exchangeArray($input)	class:ArrayObject
getArrayCopy		0;"	f	S:array function getArrayCopy()	class:ArrayObject
getFlags		0;"	f	S:int function getFlags()	class:ArrayObject
getIterator		0;"	f	S:ArrayIterator function getIterator()	class:ArrayObject
getIteratorClass		0;"	f	S:string function getIteratorClass()	class:ArrayObject
ksort		0;"	f	S:void function ksort()	class:ArrayObject
natcasesort		0;"	f	S:void function natcasesort()	class:ArrayObject
natsort		0;"	f	S:void function natsort()	class:ArrayObject
offsetExists		0;"	f	S:bool function offsetExists($index)	class:ArrayObject
offsetGet		0;"	f	S:mixed function offsetGet($index)	class:ArrayObject
offsetSet		0;"	f	S:void function offsetSet($index, $newval)	class:ArrayObject
offsetUnset		0;"	f	S:void function offsetUnset($index)	class:ArrayObject
serialize		0;"	f	S:string function serialize()	class:ArrayObject
setFlags		0;"	f	S:void function setFlags($flags)	class:ArrayObject
setIteratorClass		0;"	f	S:void function setIteratorClass($iterator_class)	class:ArrayObject
uasort		0;"	f	S:void function uasort($cmp_function)	class:ArrayObject
uksort		0;"	f	S:void function uksort($cmp_function)	class:ArrayObject
unserialize		0;"	f	S:void function unserialize($serialized)	class:ArrayObject
SplObserver		0;"	c
update		0;"	f	S:void function update($subject)	class:SplObserver	m: abstract
SplSubject		0;"	c
attach		0;"	f	S:void function attach($observer)	class:SplSubject	m: abstract
detach		0;"	f	S:void function detach($observer)	class:SplSubject	m: abstract
notify		0;"	f	S:void function notify()	class:SplSubject	m: abstract
SplType		0;"	c
__default		0;"	o	class:SplType	a:const	S:const SplType::__default
__construct		0;"	f	S: function __construct($initial_value, $strict)	class:SplType
SplInt		0;"	c	i:SplType
__default		0;"	o	class:SplInt	a:const	S:const SplInt::__default
SplFloat		0;"	c	i:SplType
__default		0;"	o	class:SplFloat	a:const	S:const SplFloat::__default
SplEnum		0;"	c	i:SplType
__default		0;"	o	class:SplEnum	a:const	S:const SplEnum::__default
getConstList		0;"	f	S:array function getConstList($include_default = false)	class:SplEnum
SplBool		0;"	c	i:SplEnum
__default		0;"	o	class:SplBool	a:const	S:const SplBool::__default
false		0;"	o	class:SplBool	a:const	S:const SplBool::false
true		0;"	o	class:SplBool	a:const	S:const SplBool::true
SplString		0;"	c	i:SplType
__default		0;"	o	class:SplString	a:const	S:const SplString::__default
php_user_filter		0;"	c
filtername		0;"	p	class:php_user_filter	S: php_user_filter::filtername
params		0;"	p	class:php_user_filter	S: php_user_filter::params
filter		0;"	f	S:int function filter($in, $out, &$consumed, $closing)	class:php_user_filter
onClose		0;"	f	S:void function onClose()	class:php_user_filter
onCreate		0;"	f	S:bool function onCreate()	class:php_user_filter
0;"	c
context		0;"	p	class:	S: ::context
__construct		0;"	f	S: function __construct()	class:streamWrapper
__destruct		0;"	f	S: function __destruct()	class:streamWrapper
dir_closedir		0;"	f	S:bool function dir_closedir()	class:streamWrapper
dir_opendir		0;"	f	S:bool function dir_opendir($path, $options)	class:streamWrapper
dir_readdir		0;"	f	S:string function dir_readdir()	class:streamWrapper
dir_rewinddir		0;"	f	S:bool function dir_rewinddir()	class:streamWrapper
mkdir		0;"	f	S:bool function mkdir($path, $mode, $options)	class:streamWrapper
rename		0;"	f	S:bool function rename($path_from, $path_to)	class:streamWrapper
rmdir		0;"	f	S:bool function rmdir($path, $options)	class:streamWrapper
stream_cast		0;"	f	S:resource function stream_cast($cast_as)	class:streamWrapper
stream_close		0;"	f	S:void function stream_close()	class:streamWrapper
stream_eof		0;"	f	S:bool function stream_eof()	class:streamWrapper
stream_flush		0;"	f	S:bool function stream_flush()	class:streamWrapper
stream_lock		0;"	f	S:bool function stream_lock($operation)	class:streamWrapper
stream_metadata		0;"	f	S:bool function stream_metadata($path, $option, $value)	class:streamWrapper
stream_open		0;"	f	S:bool function stream_open($path, $mode, $options, &$opened_path)	class:streamWrapper
stream_read		0;"	f	S:string function stream_read($count)	class:streamWrapper
stream_seek		0;"	f	S:bool function stream_seek($offset, $whence = SEEK_SET)	class:streamWrapper
stream_set_option		0;"	f	S:bool function stream_set_option($option, $arg1, $arg2)	class:streamWrapper
stream_stat		0;"	f	S:array function stream_stat()	class:streamWrapper
stream_tell		0;"	f	S:int function stream_tell()	class:streamWrapper
stream_truncate		0;"	f	S:bool function stream_truncate($new_size)	class:streamWrapper
stream_write		0;"	f	S:int function stream_write($data)	class:streamWrapper
unlink		0;"	f	S:bool function unlink($path)	class:streamWrapper
url_stat		0;"	f	S:array function url_stat($path, $flags)	class:streamWrapper
set_socket_blocking		0;"	f	S: function set_socket_blocking()
stream_bucket_append		0;"	f	S:void function stream_bucket_append($brigade, $bucket)
stream_bucket_make_writeable		0;"	f	S:object function stream_bucket_make_writeable($brigade)
stream_bucket_new		0;"	f	S:object function stream_bucket_new($stream, $buffer)
stream_bucket_prepend		0;"	f	S:void function stream_bucket_prepend($brigade, $bucket)
stream_context_create		0;"	f	S:resource function stream_context_create($options, $params)
stream_context_get_default		0;"	f	S:resource function stream_context_get_default($options)
stream_context_get_options		0;"	f	S:array function stream_context_get_options($stream_or_context)
stream_context_get_params		0;"	f	S:array function stream_context_get_params($stream_or_context)
stream_context_set_default		0;"	f	S:resource function stream_context_set_default($options)
stream_context_set_option		0;"	f	S:bool function stream_context_set_option($stream_or_context, $wrapper, $option, $value, $options)
stream_context_set_params		0;"	f	S:bool function stream_context_set_params($stream_or_context, $params)
stream_copy_to_stream		0;"	f	S:int function stream_copy_to_stream($source, $dest, $maxlength = -1, $offset)
stream_encoding		0;"	f	S:bool function stream_encoding($stream, $encoding)
stream_filter_append		0;"	f	S:resource function stream_filter_append($stream, $filtername, $read_write, $params)
stream_filter_prepend		0;"	f	S:resource function stream_filter_prepend($stream, $filtername, $read_write, $params)
stream_filter_register		0;"	f	S:bool function stream_filter_register($filtername, $classname)
stream_filter_remove		0;"	f	S:bool function stream_filter_remove($stream_filter)
stream_get_contents		0;"	f	S:string function stream_get_contents($handle, $maxlength = -1, $offset = -1)
stream_get_filters		0;"	f	S:array function stream_get_filters()
stream_get_line		0;"	f	S:string function stream_get_line($handle, $length, $ending)
stream_get_meta_data		0;"	f	S:array function stream_get_meta_data($stream)
stream_get_transports		0;"	f	S:array function stream_get_transports()
stream_get_wrappers		0;"	f	S:array function stream_get_wrappers()
stream_is_local		0;"	f	S:bool function stream_is_local($stream_or_url)
stream_notification_callback		0;"	f	S:callable function stream_notification_callback($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max)
stream_register_wrapper		0;"	f	S: function stream_register_wrapper()
stream_resolve_include_path		0;"	f	S:string function stream_resolve_include_path($filename)
stream_select		0;"	f	S:int function stream_select(&$read, &$write, &$except, $tv_sec, $tv_usec)
stream_set_blocking		0;"	f	S:bool function stream_set_blocking($stream, $mode)
stream_set_chunk_size		0;"	f	S:int function stream_set_chunk_size($fp, $chunk_size)
stream_set_read_buffer		0;"	f	S:int function stream_set_read_buffer($stream, $buffer)
stream_set_timeout		0;"	f	S:bool function stream_set_timeout($stream, $seconds, $microseconds)
stream_set_write_buffer		0;"	f	S:int function stream_set_write_buffer($stream, $buffer)
stream_socket_accept		0;"	f	S:resource function stream_socket_accept($server_socket, $timeout = ini_get("default_socket_timeout"), &$peername)
stream_socket_client		0;"	f	S:resource function stream_socket_client($remote_socket, &$errno, &$errstr, $timeout = ini_get("default_socket_timeout"), $flags = STREAM_CLIENT_CONNECT, $context)
stream_socket_enable_crypto		0;"	f	S:mixed function stream_socket_enable_crypto($stream, $enable, $crypto_type, $session_stream)
stream_socket_get_name		0;"	f	S:string function stream_socket_get_name($handle, $want_peer)
stream_socket_pair		0;"	f	S:array function stream_socket_pair($domain, $type, $protocol)
stream_socket_recvfrom		0;"	f	S:string function stream_socket_recvfrom($socket, $length, $flags, &$address)
stream_socket_sendto		0;"	f	S:int function stream_socket_sendto($socket, $data, $flags, $address)
stream_socket_server		0;"	f	S:resource function stream_socket_server($local_socket, &$errno, &$errstr, $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN, $context)
stream_socket_shutdown		0;"	f	S:bool function stream_socket_shutdown($stream, $how)
stream_supports_lock		0;"	f	S:bool function stream_supports_lock($stream)
stream_wrapper_register		0;"	f	S:bool function stream_wrapper_register($protocol, $classname, $flags)
stream_wrapper_restore		0;"	f	S:bool function stream_wrapper_restore($protocol)
stream_wrapper_unregister		0;"	f	S:bool function stream_wrapper_unregister($protocol)
tidy		0;"	c
tidy->errorBuffer		0;"	p	class:tidy	S: tidy::tidy->errorBuffer
body		0;"	f	S:tidyNode function body($object)	class:tidy
cleanRepair		0;"	f	S:bool function cleanRepair($object)	class:tidy
__construct		0;"	f	S: function __construct($filename, $config, $encoding, $use_include_path)	class:tidy
diagnose		0;"	f	S:bool function diagnose($object)	class:tidy
tidy->errorBuffer		0;"	p	class:tidy	S: tidy::tidy->errorBuffer
$errorBuffer		0;"	f	S:string function $errorBuffer($tidy)	class:tidy
getConfig		0;"	f	S:array function getConfig($object)	class:tidy
getHtmlVer		0;"	f	S:int function getHtmlVer($object)	class:tidy
getOpt		0;"	f	S:mixed function getOpt($option, $object)	class:tidy
getOptDoc		0;"	f	S:string function getOptDoc($optname, $object)	class:tidy
getRelease		0;"	f	S:string function getRelease()	class:tidy
getStatus		0;"	f	S:int function getStatus($object)	class:tidy
head		0;"	f	S:tidyNode function head($object)	class:tidy
html		0;"	f	S:tidyNode function html($object)	class:tidy
isXhtml		0;"	f	S:bool function isXhtml($object)	class:tidy
isXml		0;"	f	S:bool function isXml($object)	class:tidy
parseFile		0;"	f	S:tidy function parseFile($filename, $config, $encoding, $use_include_path = false)	class:tidy
parseString		0;"	f	S:tidy function parseString($input, $config, $encoding)	class:tidy
repairFile		0;"	f	S:string function repairFile($filename, $config, $encoding, $use_include_path = false)	class:tidy
repairString		0;"	f	S:string function repairString($data, $config, $encoding)	class:tidy
root		0;"	f	S:tidyNode function root($object)	class:tidy
tidyNode		0;"	c
value		0;"	p	class:tidyNode	S: tidyNode::value
name		0;"	p	class:tidyNode	S: tidyNode::name
type		0;"	p	class:tidyNode	S: tidyNode::type
line		0;"	p	class:tidyNode	S: tidyNode::line
column		0;"	p	class:tidyNode	S: tidyNode::column
proprietary		0;"	p	class:tidyNode	S: tidyNode::proprietary
id		0;"	p	class:tidyNode	S: tidyNode::id
attribute		0;"	p	class:tidyNode	S: tidyNode::attribute
child		0;"	p	class:tidyNode	S: tidyNode::child
getParent		0;"	f	S:tidyNode function getParent()	class:tidyNode
hasChildren		0;"	f	S:bool function hasChildren()	class:tidyNode
hasSiblings		0;"	f	S:bool function hasSiblings()	class:tidyNode
isAsp		0;"	f	S:bool function isAsp()	class:tidyNode
isComment		0;"	f	S:bool function isComment()	class:tidyNode
isHtml		0;"	f	S:bool function isHtml()	class:tidyNode
isJste		0;"	f	S:bool function isJste()	class:tidyNode
isPhp		0;"	f	S:bool function isPhp()	class:tidyNode
isText		0;"	f	S:bool function isText()	class:tidyNode
ob_tidyhandler		0;"	f	S:string function ob_tidyhandler($input, $mode)
tidy_access_count		0;"	f	S:int function tidy_access_count($object)
tidy_config_count		0;"	f	S:int function tidy_config_count($object)
tidy_error_count		0;"	f	S:int function tidy_error_count($object)
tidy_get_output		0;"	f	S:string function tidy_get_output($object)
tidy_load_config		0;"	f	S:void function tidy_load_config($filename, $encoding)
tidy_reset_config		0;"	f	S:bool function tidy_reset_config()
tidy_save_config		0;"	f	S:bool function tidy_save_config($filename)
tidy_set_encoding		0;"	f	S:bool function tidy_set_encoding($encoding)
tidy_setopt		0;"	f	S:bool function tidy_setopt($option, $value)
tidy_warning_count		0;"	f	S:int function tidy_warning_count($object)
token_get_all		0;"	f	S:array function token_get_all($source)
token_name		0;"	f	S:string function token_name($token)
PHP_URL_SCHEME		0;"	d
PHP_URL_HOST		0;"	d
PHP_URL_PORT		0;"	d
PHP_URL_USER		0;"	d
PHP_URL_PASS		0;"	d
PHP_URL_PATH		0;"	d
PHP_URL_QUERY		0;"	d
PHP_URL_FRAGMENT		0;"	d
PHP_QUERY_RFC1738		0;"	d
PHP_QUERY_RFC3986		0;"	d
base64_decode		0;"	f	S:string function base64_decode($data, $strict = false)
base64_encode		0;"	f	S:string function base64_encode($data)
get_headers		0;"	f	S:array function get_headers($url, $format)
get_meta_tags		0;"	f	S:array function get_meta_tags($filename, $use_include_path = false)
http_build_query		0;"	f	S:string function http_build_query($query_data, $numeric_prefix, $arg_separator, $enc_type)
parse_url		0;"	f	S:mixed function parse_url($url, $component = -1)
rawurldecode		0;"	f	S:string function rawurldecode($str)
rawurlencode		0;"	f	S:string function rawurlencode($str)
urldecode		0;"	f	S:string function urldecode($str)
urlencode		0;"	f	S:string function urlencode($str)
V8Js		0;"	c
V8_VERSION		0;"	o	class:V8Js	a:const	S:const V8Js::V8_VERSION
FLAG_NONE		0;"	o	class:V8Js	a:const	S:const V8Js::FLAG_NONE
FLAG_FORCE_ARRAY		0;"	o	class:V8Js	a:const	S:const V8Js::FLAG_FORCE_ARRAY
__construct		0;"	f	S: function __construct($object_name = "PHP", $variables = array(), $extensions = array(), $report_uncaught_exceptions)	class:V8Js
executeString		0;"	f	S:mixed function executeString($script, $identifier = "V8Js::executeString()", $flags)	class:V8Js
getExtensions		0;"	f	S:array function getExtensions()	class:V8Js	a:static
getPendingException		0;"	f	S:V8JsException function getPendingException()	class:V8Js
registerExtension		0;"	f	S:bool function registerExtension($extension_name, $script, $dependencies = array(), $auto_enable)	class:V8Js	a:static
V8JsException		0;"	c	i:Exception
JsFileName		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::JsFileName
JsLineNumber		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::JsLineNumber
JsSourceLine		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::JsSourceLine
JsTrace		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::JsTrace
message		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::message
code		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::code
file		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::file
line		0;"	p	class:V8JsException	a:protected	S:protected V8JsException::line
getJsFileName		0;"	f	S:string function getJsFileName()	class:V8JsException	a:final
getJsLineNumber		0;"	f	S:int function getJsLineNumber()	class:V8JsException	a:final
getJsSourceLine		0;"	f	S:int function getJsSourceLine()	class:V8JsException	a:final
getJsTrace		0;"	f	S:string function getJsTrace()	class:V8JsException	a:final
YAML_ANY_SCALAR_STYLE		0;"	d
YAML_PLAIN_SCALAR_STYLE		0;"	d
YAML_SINGLE_QUOTED_SCALAR_STYLE		0;"	d
YAML_DOUBLE_QUOTED_SCALAR_STYLE		0;"	d
YAML_LITERAL_SCALAR_STYLE		0;"	d
YAML_FOLDED_SCALAR_STYLE		0;"	d
YAML_NULL_TAG		0;"	d
YAML_BOOL_TAG		0;"	d
YAML_STR_TAG		0;"	d
YAML_INT_TAG		0;"	d
YAML_FLOAT_TAG		0;"	d
YAML_TIMESTAMP_TAG		0;"	d
YAML_SEQ_TAG		0;"	d
YAML_MAP_TAG		0;"	d
YAML_PHP_TAG		0;"	d
YAML_ANY_ENCODING		0;"	d
YAML_UTF8_ENCODING		0;"	d
YAML_UTF16LE_ENCODING		0;"	d
YAML_UTF16BE_ENCODING		0;"	d
YAML_ANY_BREAK		0;"	d
YAML_CR_BREAK		0;"	d
YAML_LN_BREAK		0;"	d
YAML_CRLN_BREAK		0;"	d
yaml_emit_file		0;"	f	S:bool function yaml_emit_file($filename, $data, $encoding = YAML_ANY_ENCODING, $linebreak = YAML_ANY_BREAK, $callbacks)
yaml_emit		0;"	f	S:string function yaml_emit($data, $encoding = YAML_ANY_ENCODING, $linebreak = YAML_ANY_BREAK, $callbacks)
yaml_parse_file		0;"	f	S:mixed function yaml_parse_file($filename, $pos, &$ndocs, $callbacks)
yaml_parse_url		0;"	f	S:mixed function yaml_parse_url($url, $pos, &$ndocs, $callbacks)
yaml_parse		0;"	f	S:mixed function yaml_parse($input, $pos, &$ndocs, $callbacks)
YAF_VERSION		0;"	d
YAF_ENVIRON		0;"	d
YAF_ERR_STARTUP_FAILED		0;"	d
YAF_ERR_ROUTE_FAILED		0;"	d
YAF_ERR_DISPATCH_FAILED		0;"	d
YAF_ERR_AUTOLOAD_FAILED		0;"	d
YAF_ERR_NOTFOUND_MODULE		0;"	d
YAF_ERR_NOTFOUND_CONTROLLER		0;"	d
YAF_ERR_NOTFOUND_ACTION		0;"	d
YAF_ERR_NOTFOUND_VIEW		0;"	d
YAF_ERR_CALL_FAILED		0;"	d
YAF_ERR_TYPE_ERROR		0;"	d
Yaf_Application		0;"	c
config		0;"	p	class:Yaf_Application	a:protected	S:protected Yaf_Application::config
dispatcher		0;"	p	class:Yaf_Application	a:protected	S:protected Yaf_Application::dispatcher
_app		0;"	p	class:Yaf_Application	a:protected,static	S:protected static Yaf_Application::_app
_modules		0;"	p	class:Yaf_Application	a:protected	S:protected Yaf_Application::_modules
_running		0;"	p	class:Yaf_Application	a:protected	S:protected Yaf_Application::_running
_environ		0;"	p	class:Yaf_Application	a:protected	S:protected Yaf_Application::_environ
app		0;"	f	S:void function app()	class:Yaf_Application	a:static
bootstrap		0;"	f	S:void function bootstrap($bootstrap)	class:Yaf_Application
clearLastError		0;"	f	S:Yaf_Application function clearLastError()	class:Yaf_Application
__clone		0;"	f	S:void function __clone()	class:Yaf_Application	a:private
__construct		0;"	f	S: function __construct($config, $envrion)	class:Yaf_Application
__destruct		0;"	f	S:void function __destruct()	class:Yaf_Application
environ		0;"	f	S:void function environ()	class:Yaf_Application
execute		0;"	f	S:void function execute($entry, $...)	class:Yaf_Application
getAppDirectory		0;"	f	S:Yaf_Application function getAppDirectory()	class:Yaf_Application
getConfig		0;"	f	S:Yaf_Config_Abstract function getConfig()	class:Yaf_Application
getDispatcher		0;"	f	S:Yaf_Dispatcher function getDispatcher()	class:Yaf_Application
getLastErrorMsg		0;"	f	S:string function getLastErrorMsg()	class:Yaf_Application
getLastErrorNo		0;"	f	S:int function getLastErrorNo()	class:Yaf_Application
getModules		0;"	f	S:array function getModules()	class:Yaf_Application
run		0;"	f	S:void function run()	class:Yaf_Application
setAppDirectory		0;"	f	S:Yaf_Application function setAppDirectory($directory)	class:Yaf_Application
__sleep		0;"	f	S:void function __sleep()	class:Yaf_Application	a:private
__wakeup		0;"	f	S:void function __wakeup()	class:Yaf_Application	a:private
Yaf_Bootstrap_Abstract		0;"	c
Yaf_Dispatcher		0;"	c
_router		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_router
_view		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_view
_request		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_request
_plugins		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_plugins
_instance		0;"	p	class:Yaf_Dispatcher	a:protected,static	S:protected static Yaf_Dispatcher::_instance
_auto_render		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_auto_render
_return_response		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_return_response
_instantly_flush		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_instantly_flush
_default_module		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_default_module
_default_controller		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_default_controller
_default_action		0;"	p	class:Yaf_Dispatcher	a:protected	S:protected Yaf_Dispatcher::_default_action
autoRender		0;"	f	S:Yaf_Dispatcher function autoRender($flag)	class:Yaf_Dispatcher
catchException		0;"	f	S:Yaf_Dispatcher function catchException($flag)	class:Yaf_Dispatcher
__clone		0;"	f	S:void function __clone()	class:Yaf_Dispatcher	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Dispatcher
disableView		0;"	f	S:bool function disableView()	class:Yaf_Dispatcher
dispatch		0;"	f	S:Yaf_Response_Abstract function dispatch($request)	class:Yaf_Dispatcher
enableView		0;"	f	S:Yaf_Dispatcher function enableView()	class:Yaf_Dispatcher
flushInstantly		0;"	f	S:Yaf_Dispatcher function flushInstantly($flag)	class:Yaf_Dispatcher
getApplication		0;"	f	S:Yaf_Application function getApplication()	class:Yaf_Dispatcher
getInstance		0;"	f	S:Yaf_Dispatcher function getInstance()	class:Yaf_Dispatcher	a:static
getRequest		0;"	f	S:Yaf_Request_Abstract function getRequest()	class:Yaf_Dispatcher
getRouter		0;"	f	S:Yaf_Router function getRouter()	class:Yaf_Dispatcher
initView		0;"	f	S:Yaf_View_Interface function initView($templates_dir, $options)	class:Yaf_Dispatcher
registerPlugin		0;"	f	S:Yaf_Dispatcher function registerPlugin($plugin)	class:Yaf_Dispatcher
returnResponse		0;"	f	S:Yaf_Dispatcher function returnResponse($flag)	class:Yaf_Dispatcher
setDefaultAction		0;"	f	S:Yaf_Dispatcher function setDefaultAction($action)	class:Yaf_Dispatcher
setDefaultController		0;"	f	S:Yaf_Dispatcher function setDefaultController($controller)	class:Yaf_Dispatcher
setDefaultModule		0;"	f	S:Yaf_Dispatcher function setDefaultModule($module)	class:Yaf_Dispatcher
setErrorHandler		0;"	f	S:Yaf_Dispatcher function setErrorHandler($callback, $error_types)	class:Yaf_Dispatcher
setRequest		0;"	f	S:Yaf_Dispatcher function setRequest($request)	class:Yaf_Dispatcher
setView		0;"	f	S:Yaf_Dispatcher function setView($view)	class:Yaf_Dispatcher
__sleep		0;"	f	S:void function __sleep()	class:Yaf_Dispatcher	a:private
throwException		0;"	f	S:Yaf_Dispatcher function throwException($flag)	class:Yaf_Dispatcher
__wakeup		0;"	f	S:void function __wakeup()	class:Yaf_Dispatcher	a:private
Yaf_Config_Abstract		0;"	c
_config		0;"	p	class:Yaf_Config_Abstract	a:protected	S:protected Yaf_Config_Abstract::_config
_readonly		0;"	p	class:Yaf_Config_Abstract	a:protected	S:protected Yaf_Config_Abstract::_readonly
get		0;"	f	S:mixed function get($name, $value)	class:Yaf_Config_Abstract	m: abstract
readonly		0;"	f	S:bool function readonly()	class:Yaf_Config_Abstract	m: abstract
set		0;"	f	S:Yaf_Config_Abstract function set()	class:Yaf_Config_Abstract	m: abstract
toArray		0;"	f	S:array function toArray()	class:Yaf_Config_Abstract	m: abstract
Yaf_Config_Ini		0;"	c	i:Yaf_Config_Abstract
__construct		0;"	f	S: function __construct($config_file, $section)	class:Yaf_Config_Ini
count		0;"	f	S:void function count()	class:Yaf_Config_Ini
current		0;"	f	S:void function current()	class:Yaf_Config_Ini
__get		0;"	f	S:void function __get($name)	class:Yaf_Config_Ini
__isset		0;"	f	S:void function __isset($name)	class:Yaf_Config_Ini
key		0;"	f	S:void function key()	class:Yaf_Config_Ini
next		0;"	f	S:void function next()	class:Yaf_Config_Ini
offsetExists		0;"	f	S:void function offsetExists($name)	class:Yaf_Config_Ini
offsetGet		0;"	f	S:void function offsetGet($name)	class:Yaf_Config_Ini
offsetSet		0;"	f	S:void function offsetSet($name, $value)	class:Yaf_Config_Ini
offsetUnset		0;"	f	S:void function offsetUnset($name)	class:Yaf_Config_Ini
readonly		0;"	f	S:void function readonly()	class:Yaf_Config_Ini
rewind		0;"	f	S:void function rewind()	class:Yaf_Config_Ini
__set		0;"	f	S:void function __set($name, $value)	class:Yaf_Config_Ini
toArray		0;"	f	S:array function toArray()	class:Yaf_Config_Ini
valid		0;"	f	S:void function valid()	class:Yaf_Config_Ini
Yaf_Config_Simple		0;"	c	i:Yaf_Config_Abstract
_readonly		0;"	p	class:Yaf_Config_Simple	a:protected	S:protected Yaf_Config_Simple::_readonly
__construct		0;"	f	S: function __construct($config_file, $section)	class:Yaf_Config_Simple
count		0;"	f	S:void function count()	class:Yaf_Config_Simple
current		0;"	f	S:void function current()	class:Yaf_Config_Simple
__get		0;"	f	S:void function __get($name)	class:Yaf_Config_Simple
__isset		0;"	f	S:void function __isset($name)	class:Yaf_Config_Simple
key		0;"	f	S:void function key()	class:Yaf_Config_Simple
next		0;"	f	S:void function next()	class:Yaf_Config_Simple
offsetExists		0;"	f	S:void function offsetExists($name)	class:Yaf_Config_Simple
offsetGet		0;"	f	S:void function offsetGet($name)	class:Yaf_Config_Simple
offsetSet		0;"	f	S:void function offsetSet($name, $value)	class:Yaf_Config_Simple
offsetUnset		0;"	f	S:void function offsetUnset($name)	class:Yaf_Config_Simple
readonly		0;"	f	S:void function readonly()	class:Yaf_Config_Simple
rewind		0;"	f	S:void function rewind()	class:Yaf_Config_Simple
__set		0;"	f	S:void function __set($name, $value)	class:Yaf_Config_Simple
toArray		0;"	f	S:array function toArray()	class:Yaf_Config_Simple
valid		0;"	f	S:void function valid()	class:Yaf_Config_Simple
Yaf_Controller_Abstract		0;"	c
actions		0;"	p	class:Yaf_Controller_Abstract	S: Yaf_Controller_Abstract::actions
_module		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_module
_name		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_name
_request		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_request
_response		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_response
_invoke_args		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_invoke_args
_view		0;"	p	class:Yaf_Controller_Abstract	a:protected	S:protected Yaf_Controller_Abstract::_view
__clone		0;"	f	S:void function __clone()	class:Yaf_Controller_Abstract	a:final,private
__construct		0;"	f	S: function __construct()	class:Yaf_Controller_Abstract	a:final,private
display		0;"	f	S:bool function display($tpl, $parameters)	class:Yaf_Controller_Abstract	a:protected
forward		0;"	f	S:void function forward($action, $paramters, $controller, $module)	class:Yaf_Controller_Abstract
getInvokeArg		0;"	f	S:void function getInvokeArg($name)	class:Yaf_Controller_Abstract
getInvokeArgs		0;"	f	S:void function getInvokeArgs()	class:Yaf_Controller_Abstract
getModuleName		0;"	f	S:string function getModuleName()	class:Yaf_Controller_Abstract
getRequest		0;"	f	S:Yaf_Request_Abstract function getRequest()	class:Yaf_Controller_Abstract
getResponse		0;"	f	S:Yaf_Response_Abstract function getResponse()	class:Yaf_Controller_Abstract
getView		0;"	f	S:Yaf_View_Interface function getView()	class:Yaf_Controller_Abstract
getViewpath		0;"	f	S:void function getViewpath()	class:Yaf_Controller_Abstract
init		0;"	f	S:void function init()	class:Yaf_Controller_Abstract
initView		0;"	f	S:void function initView($options)	class:Yaf_Controller_Abstract
redirect		0;"	f	S:bool function redirect($url)	class:Yaf_Controller_Abstract
render		0;"	f	S:string function render($tpl, $parameters)	class:Yaf_Controller_Abstract	a:protected
setViewpath		0;"	f	S:void function setViewpath($view_directory)	class:Yaf_Controller_Abstract
Yaf_Action_Abstract		0;"	c	i:Yaf_Controller_Abstract
_controller		0;"	p	class:Yaf_Action_Abstract	a:protected	S:protected Yaf_Action_Abstract::_controller
execute		0;"	f	S:mixed function execute($arg, $...)	class:Yaf_Action_Abstract	m: abstract
getController		0;"	f	S:Yaf_Controller_Abstract function getController()	class:Yaf_Action_Abstract
Yaf_View_Interface		0;"	c
assign		0;"	f	S:bool function assign($name, $value)	class:Yaf_View_Interface	m: abstract
display		0;"	f	S:bool function display($tpl, $tpl_vars)	class:Yaf_View_Interface	m: abstract
getScriptPath		0;"	f	S:void function getScriptPath()	class:Yaf_View_Interface	m: abstract
render		0;"	f	S:string function render($tpl, $tpl_vars)	class:Yaf_View_Interface	m: abstract
setScriptPath		0;"	f	S:void function setScriptPath($template_dir)	class:Yaf_View_Interface	m: abstract
Yaf_View_Simple		0;"	c
_tpl_vars		0;"	p	class:Yaf_View_Simple	a:protected	S:protected Yaf_View_Simple::_tpl_vars
_tpl_dir		0;"	p	class:Yaf_View_Simple	a:protected	S:protected Yaf_View_Simple::_tpl_dir
assign		0;"	f	S:bool function assign($name, $value)	class:Yaf_View_Simple
assignRef		0;"	f	S:bool function assignRef($name, &$value)	class:Yaf_View_Simple
clear		0;"	f	S:bool function clear($name)	class:Yaf_View_Simple
__construct		0;"	f	S: function __construct($tempalte_dir, $options)	class:Yaf_View_Simple	a:final
display		0;"	f	S:bool function display($tpl, $tpl_vars)	class:Yaf_View_Simple
eval		0;"	f	S:string function eval($tpl_content, $tpl_vars)	class:Yaf_View_Simple
__get		0;"	f	S:void function __get($name)	class:Yaf_View_Simple
getScriptPath		0;"	f	S:string function getScriptPath()	class:Yaf_View_Simple
__isset		0;"	f	S:void function __isset($name)	class:Yaf_View_Simple
render		0;"	f	S:string function render($tpl, $tpl_vars)	class:Yaf_View_Simple
__set		0;"	f	S:void function __set($name, $value)	class:Yaf_View_Simple
setScriptPath		0;"	f	S:bool function setScriptPath($template_dir)	class:Yaf_View_Simple
Yaf_Loader		0;"	c
_local_ns		0;"	p	class:Yaf_Loader	a:protected	S:protected Yaf_Loader::_local_ns
_library		0;"	p	class:Yaf_Loader	a:protected	S:protected Yaf_Loader::_library
_global_library		0;"	p	class:Yaf_Loader	a:protected	S:protected Yaf_Loader::_global_library
_instance		0;"	p	class:Yaf_Loader	a:static	S:static Yaf_Loader::_instance
autoload		0;"	f	S:void function autoload()	class:Yaf_Loader
clearLocalNamespace		0;"	f	S:void function clearLocalNamespace()	class:Yaf_Loader
__clone		0;"	f	S:void function __clone()	class:Yaf_Loader	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Loader
getInstance		0;"	f	S:void function getInstance()	class:Yaf_Loader	a:static
getLibraryPath		0;"	f	S:Yaf_Loader function getLibraryPath($is_global = false)	class:Yaf_Loader
getLocalNamespace		0;"	f	S:void function getLocalNamespace()	class:Yaf_Loader
import		0;"	f	S:void function import()	class:Yaf_Loader	a:static
isLocalName		0;"	f	S:void function isLocalName()	class:Yaf_Loader
registerLocalNamespace		0;"	f	S:void function registerLocalNamespace($prefix)	class:Yaf_Loader
setLibraryPath		0;"	f	S:Yaf_Loader function setLibraryPath($directory, $is_global = false)	class:Yaf_Loader
__sleep		0;"	f	S:void function __sleep()	class:Yaf_Loader	a:private
__wakeup		0;"	f	S:void function __wakeup()	class:Yaf_Loader	a:private
Yaf_Plugin_Abstract		0;"	c
dispatchLoopShutdown		0;"	f	S:void function dispatchLoopShutdown($request, $response)	class:Yaf_Plugin_Abstract
dispatchLoopStartup		0;"	f	S:void function dispatchLoopStartup($request, $response)	class:Yaf_Plugin_Abstract
postDispatch		0;"	f	S:void function postDispatch($request, $response)	class:Yaf_Plugin_Abstract
preDispatch		0;"	f	S:void function preDispatch($request, $response)	class:Yaf_Plugin_Abstract
preResponse		0;"	f	S:void function preResponse($request, $response)	class:Yaf_Plugin_Abstract
routerShutdown		0;"	f	S:void function routerShutdown($request, $response)	class:Yaf_Plugin_Abstract
routerStartup		0;"	f	S:void function routerStartup($request, $response)	class:Yaf_Plugin_Abstract
Yaf_Registry		0;"	c
_instance		0;"	p	class:Yaf_Registry	a:static	S:static Yaf_Registry::_instance
_entries		0;"	p	class:Yaf_Registry	a:protected	S:protected Yaf_Registry::_entries
__clone		0;"	f	S:void function __clone()	class:Yaf_Registry	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Registry
del		0;"	f	S:void function del($name)	class:Yaf_Registry	a:static
get		0;"	f	S:mixed function get($name)	class:Yaf_Registry	a:static
has		0;"	f	S:bool function has($name)	class:Yaf_Registry	a:static
set		0;"	f	S:bool function set($name, $value)	class:Yaf_Registry	a:static
Yaf_Request_Abstract		0;"	c
SCHEME_HTTP		0;"	o	class:Yaf_Request_Abstract	a:const	S:const Yaf_Request_Abstract::SCHEME_HTTP
SCHEME_HTTPS		0;"	o	class:Yaf_Request_Abstract	a:const	S:const Yaf_Request_Abstract::SCHEME_HTTPS
module		0;"	p	class:Yaf_Request_Abstract	S: Yaf_Request_Abstract::module
controller		0;"	p	class:Yaf_Request_Abstract	S: Yaf_Request_Abstract::controller
action		0;"	p	class:Yaf_Request_Abstract	S: Yaf_Request_Abstract::action
method		0;"	p	class:Yaf_Request_Abstract	S: Yaf_Request_Abstract::method
params		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::params
language		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::language
_exception		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::_exception
_base_uri		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::_base_uri
uri		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::uri
dispatched		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::dispatched
routed		0;"	p	class:Yaf_Request_Abstract	a:protected	S:protected Yaf_Request_Abstract::routed
getActionName		0;"	f	S:void function getActionName()	class:Yaf_Request_Abstract
getBaseUri		0;"	f	S:void function getBaseUri()	class:Yaf_Request_Abstract
getControllerName		0;"	f	S:void function getControllerName()	class:Yaf_Request_Abstract
getEnv		0;"	f	S:void function getEnv($name, $default)	class:Yaf_Request_Abstract
getException		0;"	f	S:void function getException()	class:Yaf_Request_Abstract
getLanguage		0;"	f	S:void function getLanguage()	class:Yaf_Request_Abstract
getMethod		0;"	f	S:void function getMethod()	class:Yaf_Request_Abstract
getModuleName		0;"	f	S:void function getModuleName()	class:Yaf_Request_Abstract
getParam		0;"	f	S:void function getParam($name, $default)	class:Yaf_Request_Abstract
getParams		0;"	f	S:void function getParams()	class:Yaf_Request_Abstract
getRequestUri		0;"	f	S:void function getRequestUri()	class:Yaf_Request_Abstract
getServer		0;"	f	S:void function getServer($name, $default)	class:Yaf_Request_Abstract
isCli		0;"	f	S:void function isCli()	class:Yaf_Request_Abstract
isDispatched		0;"	f	S:void function isDispatched()	class:Yaf_Request_Abstract
isGet		0;"	f	S:void function isGet()	class:Yaf_Request_Abstract
isHead		0;"	f	S:void function isHead()	class:Yaf_Request_Abstract
isOptions		0;"	f	S:void function isOptions()	class:Yaf_Request_Abstract
isPost		0;"	f	S:void function isPost()	class:Yaf_Request_Abstract
isPut		0;"	f	S:void function isPut()	class:Yaf_Request_Abstract
isRouted		0;"	f	S:void function isRouted()	class:Yaf_Request_Abstract
isXmlHttpRequest		0;"	f	S:void function isXmlHttpRequest()	class:Yaf_Request_Abstract
setActionName		0;"	f	S:void function setActionName($action)	class:Yaf_Request_Abstract
setBaseUri		0;"	f	S:bool function setBaseUri($uir)	class:Yaf_Request_Abstract
setControllerName		0;"	f	S:void function setControllerName($controller)	class:Yaf_Request_Abstract
setDispatched		0;"	f	S:void function setDispatched()	class:Yaf_Request_Abstract
setModuleName		0;"	f	S:void function setModuleName($module)	class:Yaf_Request_Abstract
setParam		0;"	f	S:void function setParam($name, $value)	class:Yaf_Request_Abstract
setRequestUri		0;"	f	S:void function setRequestUri($uir)	class:Yaf_Request_Abstract
setRouted		0;"	f	S:void function setRouted($flag)	class:Yaf_Request_Abstract
Yaf_Request_Http		0;"	c	i:Yaf_Request_Abstract
__clone		0;"	f	S:void function __clone()	class:Yaf_Request_Http	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Request_Http
get		0;"	f	S:mixed function get($name, $default)	class:Yaf_Request_Http
getCookie		0;"	f	S:mixed function getCookie($name, $default)	class:Yaf_Request_Http
getFiles		0;"	f	S:void function getFiles()	class:Yaf_Request_Http
getPost		0;"	f	S:mixed function getPost($name, $default)	class:Yaf_Request_Http
getQuery		0;"	f	S:mixed function getQuery($name, $default)	class:Yaf_Request_Http
getRequest		0;"	f	S:void function getRequest()	class:Yaf_Request_Http
isXmlHttpRequest		0;"	f	S:bool function isXmlHttpRequest()	class:Yaf_Request_Http
Yaf_Request_Simple		0;"	c	i:Yaf_Request_Abstract
SCHEME_HTTP		0;"	o	class:Yaf_Request_Simple	a:const	S:const Yaf_Request_Simple::SCHEME_HTTP
SCHEME_HTTPS		0;"	o	class:Yaf_Request_Simple	a:const	S:const Yaf_Request_Simple::SCHEME_HTTPS
__clone		0;"	f	S:void function __clone()	class:Yaf_Request_Simple	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Request_Simple
get		0;"	f	S:void function get()	class:Yaf_Request_Simple
getCookie		0;"	f	S:void function getCookie()	class:Yaf_Request_Simple
getFiles		0;"	f	S:void function getFiles()	class:Yaf_Request_Simple
getPost		0;"	f	S:void function getPost()	class:Yaf_Request_Simple
getQuery		0;"	f	S:void function getQuery()	class:Yaf_Request_Simple
getRequest		0;"	f	S:void function getRequest()	class:Yaf_Request_Simple
isXmlHttpRequest		0;"	f	S:void function isXmlHttpRequest()	class:Yaf_Request_Simple
Yaf_Response_Abstract		0;"	c
DEFAULT_BODY		0;"	o	class:Yaf_Response_Abstract	a:const	S:const Yaf_Response_Abstract::DEFAULT_BODY
_header		0;"	p	class:Yaf_Response_Abstract	a:protected	S:protected Yaf_Response_Abstract::_header
_body		0;"	p	class:Yaf_Response_Abstract	a:protected	S:protected Yaf_Response_Abstract::_body
_sendheader		0;"	p	class:Yaf_Response_Abstract	a:protected	S:protected Yaf_Response_Abstract::_sendheader
appendBody		0;"	f	S:bool function appendBody($content, $key)	class:Yaf_Response_Abstract
clearBody		0;"	f	S:bool function clearBody($key)	class:Yaf_Response_Abstract
clearHeaders		0;"	f	S:void function clearHeaders()	class:Yaf_Response_Abstract
__clone		0;"	f	S:void function __clone()	class:Yaf_Response_Abstract	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Response_Abstract
__destruct		0;"	f	S:void function __destruct()	class:Yaf_Response_Abstract
getBody		0;"	f	S:mixed function getBody($key)	class:Yaf_Response_Abstract
getHeader		0;"	f	S:void function getHeader()	class:Yaf_Response_Abstract
prependBody		0;"	f	S:bool function prependBody($content, $key)	class:Yaf_Response_Abstract
response		0;"	f	S:void function response()	class:Yaf_Response_Abstract
setAllHeaders		0;"	f	S:void function setAllHeaders()	class:Yaf_Response_Abstract	a:protected
setBody		0;"	f	S:bool function setBody($content, $key)	class:Yaf_Response_Abstract
setHeader		0;"	f	S:void function setHeader()	class:Yaf_Response_Abstract
setRedirect		0;"	f	S:void function setRedirect()	class:Yaf_Response_Abstract
__toString		0;"	f	S:void function __toString()	class:Yaf_Response_Abstract	a:private
Yaf_Route_Interface		0;"	c
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Interface	m: abstract
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Interface	m: abstract
Yaf_Route_Map		0;"	c
_ctl_router		0;"	p	class:Yaf_Route_Map	a:protected	S:protected Yaf_Route_Map::_ctl_router
_delimeter		0;"	p	class:Yaf_Route_Map	a:protected	S:protected Yaf_Route_Map::_delimeter
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Map
__construct		0;"	f	S: function __construct($controller_prefer = false, $delimiter = "")	class:Yaf_Route_Map
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Map
Yaf_Route_Regex		0;"	c	i:Yaf_Route_Interface
_route		0;"	p	class:Yaf_Route_Regex	a:protected	S:protected Yaf_Route_Regex::_route
_default		0;"	p	class:Yaf_Route_Regex	a:protected	S:protected Yaf_Route_Regex::_default
_maps		0;"	p	class:Yaf_Route_Regex	a:protected	S:protected Yaf_Route_Regex::_maps
_verify		0;"	p	class:Yaf_Route_Regex	a:protected	S:protected Yaf_Route_Regex::_verify
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Regex
__construct		0;"	f	S: function __construct($match, $route, $map, $verify, $reverse)	class:Yaf_Route_Regex
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Regex
Yaf_Route_Rewrite		0;"	c	i:Yaf_Route_Interface
_route		0;"	p	class:Yaf_Route_Rewrite	a:protected	S:protected Yaf_Route_Rewrite::_route
_default		0;"	p	class:Yaf_Route_Rewrite	a:protected	S:protected Yaf_Route_Rewrite::_default
_verify		0;"	p	class:Yaf_Route_Rewrite	a:protected	S:protected Yaf_Route_Rewrite::_verify
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Rewrite
__construct		0;"	f	S: function __construct($match, $route, $verify)	class:Yaf_Route_Rewrite
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Rewrite
Yaf_Router		0;"	c
_routes		0;"	p	class:Yaf_Router	a:protected	S:protected Yaf_Router::_routes
_current		0;"	p	class:Yaf_Router	a:protected	S:protected Yaf_Router::_current
addConfig		0;"	f	S:bool function addConfig($config)	class:Yaf_Router
addRoute		0;"	f	S:bool function addRoute($name, $route)	class:Yaf_Router
__construct		0;"	f	S: function __construct()	class:Yaf_Router
getCurrentRoute		0;"	f	S:string function getCurrentRoute()	class:Yaf_Router
getRoute		0;"	f	S:Yaf_Route_Interface function getRoute($name)	class:Yaf_Router
getRoutes		0;"	f	S:mixed function getRoutes()	class:Yaf_Router
route		0;"	f	S:bool function route($request)	class:Yaf_Router
Yaf_Route_Simple		0;"	c
controller		0;"	p	class:Yaf_Route_Simple	a:protected	S:protected Yaf_Route_Simple::controller
module		0;"	p	class:Yaf_Route_Simple	a:protected	S:protected Yaf_Route_Simple::module
action		0;"	p	class:Yaf_Route_Simple	a:protected	S:protected Yaf_Route_Simple::action
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Simple
__construct		0;"	f	S: function __construct($module_name, $controller_name, $action_name)	class:Yaf_Route_Simple
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Simple
Yaf_Route_Static		0;"	c
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Static
match		0;"	f	S:void function match($uri)	class:Yaf_Route_Static
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Static
Yaf_Route_Supervar		0;"	c
_var_name		0;"	p	class:Yaf_Route_Supervar	a:protected	S:protected Yaf_Route_Supervar::_var_name
assemble		0;"	f	S:string function assemble($info, $query)	class:Yaf_Route_Supervar
__construct		0;"	f	S: function __construct($supervar_name)	class:Yaf_Route_Supervar
route		0;"	f	S:bool function route($request)	class:Yaf_Route_Supervar
Yaf_Session		0;"	c
_instance		0;"	p	class:Yaf_Session	a:protected,static	S:protected static Yaf_Session::_instance
_session		0;"	p	class:Yaf_Session	a:protected	S:protected Yaf_Session::_session
_started		0;"	p	class:Yaf_Session	a:protected	S:protected Yaf_Session::_started
__clone		0;"	f	S:void function __clone()	class:Yaf_Session	a:private
__construct		0;"	f	S: function __construct()	class:Yaf_Session
count		0;"	f	S:void function count()	class:Yaf_Session
current		0;"	f	S:void function current()	class:Yaf_Session
del		0;"	f	S:void function del($name)	class:Yaf_Session
__get		0;"	f	S:void function __get($name)	class:Yaf_Session
getInstance		0;"	f	S:void function getInstance()	class:Yaf_Session	a:static
has		0;"	f	S:void function has($name)	class:Yaf_Session
__isset		0;"	f	S:void function __isset($name)	class:Yaf_Session
key		0;"	f	S:void function key()	class:Yaf_Session
next		0;"	f	S:void function next()	class:Yaf_Session
offsetExists		0;"	f	S:void function offsetExists($name)	class:Yaf_Session
offsetGet		0;"	f	S:void function offsetGet($name)	class:Yaf_Session
offsetSet		0;"	f	S:void function offsetSet($name, $value)	class:Yaf_Session
offsetUnset		0;"	f	S:void function offsetUnset($name)	class:Yaf_Session
rewind		0;"	f	S:void function rewind()	class:Yaf_Session
__set		0;"	f	S:void function __set($name, $value)	class:Yaf_Session
__sleep		0;"	f	S:void function __sleep()	class:Yaf_Session	a:private
start		0;"	f	S:void function start()	class:Yaf_Session
__unset		0;"	f	S:void function __unset($name)	class:Yaf_Session
valid		0;"	f	S:void function valid()	class:Yaf_Session
__wakeup		0;"	f	S:void function __wakeup()	class:Yaf_Session	a:private
Yaf_Exception		0;"	c	i:Exception
message		0;"	p	class:Yaf_Exception	a:protected	S:protected Yaf_Exception::message
code		0;"	p	class:Yaf_Exception	a:protected	S:protected Yaf_Exception::code
file		0;"	p	class:Yaf_Exception	a:protected	S:protected Yaf_Exception::file
line		0;"	p	class:Yaf_Exception	a:protected	S:protected Yaf_Exception::line
__construct		0;"	f	S: function __construct()	class:Yaf_Exception
getPrevious		0;"	f	S:void function getPrevious()	class:Yaf_Exception
Yaf_Exception_TypeError		0;"	c	i:Yaf_Exception
Yaf_Exception_StartupError		0;"	c	i:Yaf_Exception
Yaf_Exception_DispatchFailed		0;"	c	i:Yaf_Exception
Yaf_Exception_RouterFailed		0;"	c	i:Yaf_Exception
Yaf_Exception_LoadFailed		0;"	c	i:Yaf_Exception
Yaf_Exception_LoadFailed_Module		0;"	c	i:Yaf_Exception_LoadFailed
Yaf_Exception_LoadFailed_Controller		0;"	c	i:Yaf_Exception_LoadFailed
Yaf_Exception_LoadFailed_Action		0;"	c	i:Yaf_Exception_LoadFailed
Yaf_Exception_LoadFailed_View		0;"	c	i:Yaf_Exception_LoadFailed
is_tainted		0;"	f	S:bool function is_tainted($string)
taint		0;"	f	S:bool function taint(&$string, $...)
untaint		0;"	f	S:bool function untaint(&$string, $...)
chdb		0;"	c
__construct		0;"	f	S: function __construct($pathname)	class:chdb
get		0;"	f	S:string function get($key)	class:chdb
chdb_create		0;"	f	S:bool function chdb_create($pathname, $data)
CURLOPT_AUTOREFERER		0;"	d
CURLOPT_COOKIESESSION		0;"	d
CURLOPT_DNS_USE_GLOBAL_CACHE		0;"	d
CURLOPT_DNS_CACHE_TIMEOUT		0;"	d
CURLOPT_FTP_SSL		0;"	d
CURLFTPSSL_TRY		0;"	d
CURLFTPSSL_ALL		0;"	d
CURLFTPSSL_CONTROL		0;"	d
CURLFTPSSL_NONE		0;"	d
CURLOPT_PRIVATE		0;"	d
CURLOPT_FTPSSLAUTH		0;"	d
CURLOPT_PORT		0;"	d
CURLOPT_FILE		0;"	d
CURLOPT_INFILE		0;"	d
CURLOPT_INFILESIZE		0;"	d
CURLOPT_URL		0;"	d
CURLOPT_PROXY		0;"	d
CURLOPT_VERBOSE		0;"	d
CURLOPT_HEADER		0;"	d
CURLOPT_HTTPHEADER		0;"	d
CURLOPT_NOPROGRESS		0;"	d
CURLOPT_NOBODY		0;"	d
CURLOPT_FAILONERROR		0;"	d
CURLOPT_UPLOAD		0;"	d
CURLOPT_POST		0;"	d
CURLOPT_FTPLISTONLY		0;"	d
CURLOPT_FTPAPPEND		0;"	d
CURLOPT_FTP_CREATE_MISSING_DIRS		0;"	d
CURLOPT_NETRC		0;"	d
CURLOPT_FOLLOWLOCATION		0;"	d
CURLOPT_FTPASCII		0;"	d
CURLOPT_PUT		0;"	d
CURLOPT_MUTE		0;"	d
CURLOPT_USERPWD		0;"	d
CURLOPT_PROXYUSERPWD		0;"	d
CURLOPT_RANGE		0;"	d
CURLOPT_TIMEOUT		0;"	d
CURLOPT_TIMEOUT_MS		0;"	d
CURLOPT_TCP_NODELAY		0;"	d
CURLOPT_POSTFIELDS		0;"	d
CURLOPT_PROGRESSFUNCTION		0;"	d
CURLOPT_REFERER		0;"	d
CURLOPT_USERAGENT		0;"	d
CURLOPT_FTPPORT		0;"	d
CURLOPT_FTP_USE_EPSV		0;"	d
CURLOPT_LOW_SPEED_LIMIT		0;"	d
CURLOPT_LOW_SPEED_TIME		0;"	d
CURLOPT_RESUME_FROM		0;"	d
CURLOPT_COOKIE		0;"	d
CURLOPT_SSLCERT		0;"	d
CURLOPT_SSLCERTPASSWD		0;"	d
CURLOPT_WRITEHEADER		0;"	d
CURLOPT_SSL_VERIFYHOST		0;"	d
CURLOPT_COOKIEFILE		0;"	d
CURLOPT_SSLVERSION		0;"	d
CURL_SSLVERSION_DEFAULT		0;"	d
CURL_SSLVERSION_TLSv1		0;"	d
CURL_SSLVERSION_SSLv2		0;"	d
CURL_SSLVERSION_SSLv3		0;"	d
CURL_SSLVERSION_TLSv1_0		0;"	d
CURL_SSLVERSION_TLSv1_1		0;"	d
CURL_SSLVERSION_TLSv1_2		0;"	d
CURLOPT_TIMECONDITION		0;"	d
CURLOPT_TIMEVALUE		0;"	d
CURLOPT_CUSTOMREQUEST		0;"	d
CURLOPT_STDERR		0;"	d
CURLOPT_TRANSFERTEXT		0;"	d
CURLOPT_RETURNTRANSFER		0;"	d
CURLOPT_QUOTE		0;"	d
CURLOPT_POSTQUOTE		0;"	d
CURLOPT_INTERFACE		0;"	d
CURLOPT_KRB4LEVEL		0;"	d
CURLOPT_HTTPPROXYTUNNEL		0;"	d
CURLOPT_FILETIME		0;"	d
CURLOPT_WRITEFUNCTION		0;"	d
CURLOPT_READFUNCTION		0;"	d
CURLOPT_PASSWDFUNCTION		0;"	d
CURLOPT_HEADERFUNCTION		0;"	d
CURLOPT_MAXREDIRS		0;"	d
CURLOPT_MAXCONNECTS		0;"	d
CURLOPT_CLOSEPOLICY		0;"	d
CURLOPT_FRESH_CONNECT		0;"	d
CURLOPT_FORBID_REUSE		0;"	d
CURLOPT_RANDOM_FILE		0;"	d
CURLOPT_EGDSOCKET		0;"	d
CURLOPT_CONNECTTIMEOUT		0;"	d
CURLOPT_CONNECTTIMEOUT_MS		0;"	d
CURLOPT_SSL_VERIFYPEER		0;"	d
CURLOPT_CAINFO		0;"	d
CURLOPT_CAPATH		0;"	d
CURLOPT_COOKIEJAR		0;"	d
CURLOPT_SSL_CIPHER_LIST		0;"	d
CURLOPT_BINARYTRANSFER		0;"	d
CURLOPT_NOSIGNAL		0;"	d
CURLOPT_PROXYTYPE		0;"	d
CURLOPT_BUFFERSIZE		0;"	d
CURLOPT_HTTPGET		0;"	d
CURLOPT_HTTP_VERSION		0;"	d
CURLOPT_SSLKEY		0;"	d
CURLOPT_SSLKEYTYPE		0;"	d
CURLOPT_SSLKEYPASSWD		0;"	d
CURLOPT_SSLENGINE		0;"	d
CURLOPT_SSLENGINE_DEFAULT		0;"	d
CURLOPT_SSLCERTTYPE		0;"	d
CURLOPT_CRLF		0;"	d
CURLOPT_ENCODING		0;"	d
CURLOPT_PROXYPORT		0;"	d
CURLOPT_UNRESTRICTED_AUTH		0;"	d
CURLOPT_FTP_USE_EPRT		0;"	d
CURLOPT_HTTP200ALIASES		0;"	d
CURLOPT_HTTPAUTH		0;"	d
CURLAUTH_BASIC		0;"	d
CURLAUTH_DIGEST		0;"	d
CURLAUTH_GSSNEGOTIATE		0;"	d
CURLAUTH_NTLM		0;"	d
CURLAUTH_ANY		0;"	d
CURLAUTH_ANYSAFE		0;"	d
CURLOPT_PROXYAUTH		0;"	d
CURLOPT_MAX_RECV_SPEED_LARGE		0;"	d
CURLOPT_MAX_SEND_SPEED_LARGE		0;"	d
CURLCLOSEPOLICY_LEAST_RECENTLY_USED		0;"	d
CURLCLOSEPOLICY_LEAST_TRAFFIC		0;"	d
CURLCLOSEPOLICY_SLOWEST		0;"	d
CURLCLOSEPOLICY_CALLBACK		0;"	d
CURLCLOSEPOLICY_OLDEST		0;"	d
CURLINFO_PRIVATE		0;"	d
CURLINFO_EFFECTIVE_URL		0;"	d
CURLINFO_HTTP_CODE		0;"	d
CURLINFO_HEADER_OUT		0;"	d
CURLINFO_HEADER_SIZE		0;"	d
CURLINFO_REQUEST_SIZE		0;"	d
CURLINFO_TOTAL_TIME		0;"	d
CURLINFO_NAMELOOKUP_TIME		0;"	d
CURLINFO_CONNECT_TIME		0;"	d
CURLINFO_PRETRANSFER_TIME		0;"	d
CURLINFO_SIZE_UPLOAD		0;"	d
CURLINFO_SIZE_DOWNLOAD		0;"	d
CURLINFO_SPEED_DOWNLOAD		0;"	d
CURLINFO_SPEED_UPLOAD		0;"	d
CURLINFO_FILETIME		0;"	d
CURLINFO_SSL_VERIFYRESULT		0;"	d
CURLINFO_CONTENT_LENGTH_DOWNLOAD		0;"	d
CURLINFO_CONTENT_LENGTH_UPLOAD		0;"	d
CURLINFO_STARTTRANSFER_TIME		0;"	d
CURLINFO_CONTENT_TYPE		0;"	d
CURLINFO_REDIRECT_TIME		0;"	d
CURLINFO_REDIRECT_COUNT		0;"	d
CURL_TIMECOND_IFMODSINCE		0;"	d
CURL_TIMECOND_IFUNMODSINCE		0;"	d
CURL_TIMECOND_LASTMOD		0;"	d
CURL_VERSION_IPV6		0;"	d
CURL_VERSION_KERBEROS4		0;"	d
CURL_VERSION_SSL		0;"	d
CURL_VERSION_LIBZ		0;"	d
CURLVERSION_NOW		0;"	d
CURLE_OK		0;"	d
CURLE_UNSUPPORTED_PROTOCOL		0;"	d
CURLE_FAILED_INIT		0;"	d
CURLE_URL_MALFORMAT		0;"	d
CURLE_URL_MALFORMAT_USER		0;"	d
CURLE_COULDNT_RESOLVE_PROXY		0;"	d
CURLE_COULDNT_RESOLVE_HOST		0;"	d
CURLE_COULDNT_CONNECT		0;"	d
CURLE_FTP_WEIRD_SERVER_REPLY		0;"	d
CURLE_FTP_ACCESS_DENIED		0;"	d
CURLE_FTP_USER_PASSWORD_INCORRECT		0;"	d
CURLE_FTP_WEIRD_PASS_REPLY		0;"	d
CURLE_FTP_WEIRD_USER_REPLY		0;"	d
CURLE_FTP_WEIRD_PASV_REPLY		0;"	d
CURLE_FTP_WEIRD_227_FORMAT		0;"	d
CURLE_FTP_CANT_GET_HOST		0;"	d
CURLE_FTP_CANT_RECONNECT		0;"	d
CURLE_FTP_COULDNT_SET_BINARY		0;"	d
CURLE_PARTIAL_FILE		0;"	d
CURLE_FTP_COULDNT_RETR_FILE		0;"	d
CURLE_FTP_WRITE_ERROR		0;"	d
CURLE_FTP_QUOTE_ERROR		0;"	d
CURLE_HTTP_NOT_FOUND		0;"	d
CURLE_WRITE_ERROR		0;"	d
CURLE_MALFORMAT_USER		0;"	d
CURLE_FTP_COULDNT_STOR_FILE		0;"	d
CURLE_READ_ERROR		0;"	d
CURLE_OUT_OF_MEMORY		0;"	d
CURLE_OPERATION_TIMEOUTED		0;"	d
CURLE_FTP_COULDNT_SET_ASCII		0;"	d
CURLE_FTP_PORT_FAILED		0;"	d
CURLE_FTP_COULDNT_USE_REST		0;"	d
CURLE_FTP_COULDNT_GET_SIZE		0;"	d
CURLE_HTTP_RANGE_ERROR		0;"	d
CURLE_HTTP_POST_ERROR		0;"	d
CURLE_SSL_CONNECT_ERROR		0;"	d
CURLE_FTP_BAD_DOWNLOAD_RESUME		0;"	d
CURLE_FILE_COULDNT_READ_FILE		0;"	d
CURLE_LDAP_CANNOT_BIND		0;"	d
CURLE_LDAP_SEARCH_FAILED		0;"	d
CURLE_LIBRARY_NOT_FOUND		0;"	d
CURLE_FUNCTION_NOT_FOUND		0;"	d
CURLE_ABORTED_BY_CALLBACK		0;"	d
CURLE_BAD_FUNCTION_ARGUMENT		0;"	d
CURLE_BAD_CALLING_ORDER		0;"	d
CURLE_HTTP_PORT_FAILED		0;"	d
CURLE_BAD_PASSWORD_ENTERED		0;"	d
CURLE_TOO_MANY_REDIRECTS		0;"	d
CURLE_UNKNOWN_TELNET_OPTION		0;"	d
CURLE_TELNET_OPTION_SYNTAX		0;"	d
CURLE_OBSOLETE		0;"	d
CURLE_SSL_PEER_CERTIFICATE		0;"	d
CURLE_GOT_NOTHING		0;"	d
CURLE_SSL_ENGINE_NOTFOUND		0;"	d
CURLE_SSL_ENGINE_SETFAILED		0;"	d
CURLE_SEND_ERROR		0;"	d
CURLE_RECV_ERROR		0;"	d
CURLE_SHARE_IN_USE		0;"	d
CURLE_SSL_CERTPROBLEM		0;"	d
CURLE_SSL_CIPHER		0;"	d
CURLE_SSL_CACERT		0;"	d
CURLE_BAD_CONTENT_ENCODING		0;"	d
CURLE_LDAP_INVALID_URL		0;"	d
CURLE_FILESIZE_EXCEEDED		0;"	d
CURLE_FTP_SSL_FAILED		0;"	d
CURLFTPAUTH_DEFAULT		0;"	d
CURLFTPAUTH_SSL		0;"	d
CURLFTPAUTH_TLS		0;"	d
CURLPROXY_HTTP		0;"	d
CURLPROXY_SOCKS5		0;"	d
CURL_NETRC_OPTIONAL		0;"	d
CURL_NETRC_IGNORED		0;"	d
CURL_NETRC_REQUIRED		0;"	d
CURL_HTTP_VERSION_NONE		0;"	d
CURL_HTTP_VERSION_1_0		0;"	d
CURL_HTTP_VERSION_1_1		0;"	d
CURLM_CALL_MULTI_PERFORM		0;"	d
CURLM_OK		0;"	d
CURLM_BAD_HANDLE		0;"	d
CURLM_BAD_EASY_HANDLE		0;"	d
CURLM_OUT_OF_MEMORY		0;"	d
CURLM_INTERNAL_ERROR		0;"	d
CURLMSG_DONE		0;"	d
CURLOPT_KEYPASSWD		0;"	d
CURLOPT_SSH_AUTH_TYPES		0;"	d
CURLOPT_SSH_HOST_PUBLIC_KEY_MD5		0;"	d
CURLOPT_SSH_PRIVATE_KEYFILE		0;"	d
CURLOPT_SSH_PUBLIC_KEYFILE		0;"	d
CURLMOPT_PIPELINING		0;"	d
CURLMOPT_MAXCONNECTS		0;"	d
CURLSSH_AUTH_ANY		0;"	d
CURLSSH_AUTH_DEFAULT		0;"	d
CURLSSH_AUTH_HOST		0;"	d
CURLSSH_AUTH_KEYBOARD		0;"	d
CURLSSH_AUTH_NONE		0;"	d
CURLSSH_AUTH_PASSWORD		0;"	d
CURLSSH_AUTH_PUBLICKEY		0;"	d
CURL_WRAPPERS_ENABLED		0;"	d
CURLPAUSE_ALL		0;"	d
CURLPAUSE_CONT		0;"	d
CURLPAUSE_RECV		0;"	d
CURLPAUSE_RECV_CONT		0;"	d
CURLPAUSE_SEND		0;"	d
CURLPAUSE_SEND_CONT		0;"	d
curl_close		0;"	f	S:void function curl_close($ch)
curl_copy_handle		0;"	f	S:resource function curl_copy_handle($ch)
curl_errno		0;"	f	S:int function curl_errno($ch)
curl_error		0;"	f	S:string function curl_error($ch)
curl_escape		0;"	f	S:string function curl_escape($ch, $str)
curl_exec		0;"	f	S:mixed function curl_exec($ch)
curl_file_create		0;"	f	S: function curl_file_create()
curl_getinfo		0;"	f	S:mixed function curl_getinfo($ch, $opt)
curl_init		0;"	f	S:resource function curl_init($url)
curl_multi_add_handle		0;"	f	S:int function curl_multi_add_handle($mh, $ch)
curl_multi_close		0;"	f	S:void function curl_multi_close($mh)
curl_multi_exec		0;"	f	S:int function curl_multi_exec($mh, &$still_running)
curl_multi_getcontent		0;"	f	S:string function curl_multi_getcontent($ch)
curl_multi_info_read		0;"	f	S:array function curl_multi_info_read($mh, &$msgs_in_queue)
curl_multi_init		0;"	f	S:resource function curl_multi_init()
curl_multi_remove_handle		0;"	f	S:int function curl_multi_remove_handle($mh, $ch)
curl_multi_select		0;"	f	S:int function curl_multi_select($mh, $timeout = 1.0)
curl_multi_setopt		0;"	f	S:bool function curl_multi_setopt($mh, $option, $value)
curl_multi_strerror		0;"	f	S:string function curl_multi_strerror($errornum)
curl_pause		0;"	f	S:int function curl_pause($ch, $bitmask)
curl_reset		0;"	f	S:void function curl_reset($ch)
curl_setopt_array		0;"	f	S:bool function curl_setopt_array($ch, $options)
curl_setopt		0;"	f	S:bool function curl_setopt($ch, $option, $value)
curl_share_close		0;"	f	S:void function curl_share_close($sh)
curl_share_init		0;"	f	S:resource function curl_share_init()
curl_share_setopt		0;"	f	S:bool function curl_share_setopt($sh, $option, $value)
curl_strerror		0;"	f	S:string function curl_strerror($errornum)
curl_unescape		0;"	f	S:string function curl_unescape($ch, $str)
curl_version		0;"	f	S:array function curl_version($age = CURLVERSION_NOW)
CURLFile		0;"	c
name		0;"	p	class:CURLFile	S: CURLFile::name
mime		0;"	p	class:CURLFile	S: CURLFile::mime
postname		0;"	p	class:CURLFile	S: CURLFile::postname
__construct		0;"	f	S:CURLFile function __construct($filename, $mimetype, $postname)	class:CURLFile
getFilename		0;"	f	S:string function getFilename()	class:CURLFile
getMimeType		0;"	f	S:string function getMimeType()	class:CURLFile
getPostFilename		0;"	f	S:string function getPostFilename()	class:CURLFile
setMimeType		0;"	f	S:void function setMimeType($mime)	class:CURLFile
setPostFilename		0;"	f	S:void function setPostFilename($postname)	class:CURLFile
__wakeup		0;"	f	S:void function __wakeup()	class:CURLFile
Event		0;"	c
ET		0;"	o	class:Event	a:const	S:const Event::ET
PERSIST		0;"	o	class:Event	a:const	S:const Event::PERSIST
READ		0;"	o	class:Event	a:const	S:const Event::READ
WRITE		0;"	o	class:Event	a:const	S:const Event::WRITE
SIGNAL		0;"	o	class:Event	a:const	S:const Event::SIGNAL
TIMEOUT		0;"	o	class:Event	a:const	S:const Event::TIMEOUT
pending		0;"	p	class:Event	S: Event::pending
add		0;"	f	S:bool function add($timeout)	class:Event
addSignal		0;"	f	S:bool function addSignal($timeout)	class:Event
addTimer		0;"	f	S:bool function addTimer($timeout)	class:Event
__construct		0;"	f	S: function __construct($base, $fd, $what, $cb, $arg = NULL)	class:Event
del		0;"	f	S:bool function del()	class:Event
delSignal		0;"	f	S:bool function delSignal()	class:Event
delTimer		0;"	f	S:bool function delTimer()	class:Event
free		0;"	f	S:void function free()	class:Event
getSupportedMethods		0;"	f	S:array function getSupportedMethods()	class:Event	a:static
pending		0;"	f	S:bool function pending($flags)	class:Event
set		0;"	f	S:bool function set($base, $fd, $what, $cb, $arg)	class:Event
setPriority		0;"	f	S:bool function setPriority($priority)	class:Event
setTimer		0;"	f	S:bool function setTimer($base, $cb, $arg)	class:Event
signal		0;"	f	S:Event function signal($base, $signum, $cb, $arg)	class:Event	a:static
timer		0;"	f	S:Event function timer($base, $cb, $arg)	class:Event	a:static
EventBase		0;"	c
LOOP_ONCE		0;"	o	class:EventBase	a:const	S:const EventBase::LOOP_ONCE
LOOP_NONBLOCK		0;"	o	class:EventBase	a:const	S:const EventBase::LOOP_NONBLOCK
NOLOCK		0;"	o	class:EventBase	a:const	S:const EventBase::NOLOCK
STARTUP_IOCP		0;"	o	class:EventBase	a:const	S:const EventBase::STARTUP_IOCP
NO_CACHE_TIME		0;"	o	class:EventBase	a:const	S:const EventBase::NO_CACHE_TIME
EPOLL_USE_CHANGELIST		0;"	o	class:EventBase	a:const	S:const EventBase::EPOLL_USE_CHANGELIST
__construct		0;"	f	S: function __construct($cfg)	class:EventBase
dispatch		0;"	f	S:void function dispatch()	class:EventBase
exit		0;"	f	S:bool function exit($timeout)	class:EventBase
getFeatures		0;"	f	S:int function getFeatures()	class:EventBase
getMethod		0;"	f	S:string function getMethod($cfg)	class:EventBase
getTimeOfDayCached		0;"	f	S:double function getTimeOfDayCached()	class:EventBase
gotExit		0;"	f	S:bool function gotExit()	class:EventBase
gotStop		0;"	f	S:bool function gotStop()	class:EventBase
loop		0;"	f	S:bool function loop($flags)	class:EventBase
priorityInit		0;"	f	S:bool function priorityInit($n_priorities)	class:EventBase
reInit		0;"	f	S:bool function reInit()	class:EventBase
stop		0;"	f	S:bool function stop()	class:EventBase
EventBuffer		0;"	c
EOL_ANY		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::EOL_ANY
EOL_CRLF		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::EOL_CRLF
EOL_CRLF_STRICT		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::EOL_CRLF_STRICT
EOL_LF		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::EOL_LF
PTR_SET		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::PTR_SET
PTR_ADD		0;"	o	class:EventBuffer	a:const	S:const EventBuffer::PTR_ADD
length		0;"	p	class:EventBuffer	S: EventBuffer::length
contiguous_space		0;"	p	class:EventBuffer	S: EventBuffer::contiguous_space
add		0;"	f	S:bool function add($data)	class:EventBuffer
addBuffer		0;"	f	S:bool function addBuffer($buf)	class:EventBuffer
appendFrom		0;"	f	S:int function appendFrom($buf, $len)	class:EventBuffer
__construct		0;"	f	S: function __construct()	class:EventBuffer
copyout		0;"	f	S:int function copyout(&$data, $max_bytes)	class:EventBuffer
drain		0;"	f	S:bool function drain($len)	class:EventBuffer
enableLocking		0;"	f	S:void function enableLocking()	class:EventBuffer
expand		0;"	f	S:bool function expand($len)	class:EventBuffer
freeze		0;"	f	S:bool function freeze($at_front)	class:EventBuffer
lock		0;"	f	S:void function lock()	class:EventBuffer
prepend		0;"	f	S:bool function prepend($data)	class:EventBuffer
prependBuffer		0;"	f	S:bool function prependBuffer($buf)	class:EventBuffer
pullup		0;"	f	S:string function pullup($size)	class:EventBuffer
read		0;"	f	S:string function read($max_bytes)	class:EventBuffer
readFrom		0;"	f	S:int function readFrom($fd, $howmuch)	class:EventBuffer
readLine		0;"	f	S:string function readLine($eol_style)	class:EventBuffer
search		0;"	f	S:mixed function search($what, $start = -1, $end = -1)	class:EventBuffer
searchEol		0;"	f	S:mixed function searchEol($start = -1, $eol_style)	class:EventBuffer
substr		0;"	f	S:string function substr($start, $length)	class:EventBuffer
unfreeze		0;"	f	S:bool function unfreeze($at_front)	class:EventBuffer
unlock		0;"	f	S:bool function unlock()	class:EventBuffer
write		0;"	f	S:int function write($fd, $howmuch)	class:EventBuffer
EventBufferEvent		0;"	c
READING		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::READING
WRITING		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::WRITING
EOF		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::EOF
ERROR		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::ERROR
TIMEOUT		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::TIMEOUT
CONNECTED		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::CONNECTED
OPT_CLOSE_ON_FREE		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::OPT_CLOSE_ON_FREE
OPT_THREADSAFE		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::OPT_THREADSAFE
OPT_DEFER_CALLBACKS		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::OPT_DEFER_CALLBACKS
OPT_UNLOCK_CALLBACKS		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::OPT_UNLOCK_CALLBACKS
SSL_OPEN		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::SSL_OPEN
SSL_CONNECTING		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::SSL_CONNECTING
SSL_ACCEPTING		0;"	o	class:EventBufferEvent	a:const	S:const EventBufferEvent::SSL_ACCEPTING
fd		0;"	p	class:EventBufferEvent	S: EventBufferEvent::fd
priority		0;"	p	class:EventBufferEvent	S: EventBufferEvent::priority
input		0;"	p	class:EventBufferEvent	S: EventBufferEvent::input
output		0;"	p	class:EventBufferEvent	S: EventBufferEvent::output
connect		0;"	f	S:bool function connect($addr)	class:EventBufferEvent
connectHost		0;"	f	S:bool function connectHost($dns_base, $hostname, $port, $family = EventUtil::AF_UNSPEC)	class:EventBufferEvent
__construct		0;"	f	S: function __construct($base, $socket, $options, $readcb, $writecb, $eventcb)	class:EventBufferEvent
createPair		0;"	f	S:array function createPair($base, $options)	class:EventBufferEvent	a:static
disable		0;"	f	S:bool function disable($events)	class:EventBufferEvent
enable		0;"	f	S:bool function enable($events)	class:EventBufferEvent
free		0;"	f	S:void function free()	class:EventBufferEvent
getDnsErrorString		0;"	f	S:string function getDnsErrorString()	class:EventBufferEvent
getEnabled		0;"	f	S:int function getEnabled()	class:EventBufferEvent
getInput		0;"	f	S:EventBuffer function getInput()	class:EventBufferEvent
getOutput		0;"	f	S:EventBuffer function getOutput()	class:EventBufferEvent
read		0;"	f	S:string function read($size)	class:EventBufferEvent
readBuffer		0;"	f	S:bool function readBuffer($buf)	class:EventBufferEvent
setCallbacks		0;"	f	S:void function setCallbacks($readcb, $writecb, $eventcb, $arg)	class:EventBufferEvent
setPriority		0;"	f	S:bool function setPriority($priority)	class:EventBufferEvent
setTimeouts		0;"	f	S:bool function setTimeouts($timeout_read, $timeout_write)	class:EventBufferEvent
setWatermark		0;"	f	S:void function setWatermark($events, $lowmark, $highmark)	class:EventBufferEvent
sslError		0;"	f	S:string function sslError()	class:EventBufferEvent
sslFilter		0;"	f	S:EventBufferEvent function sslFilter($base, $underlying, $ctx, $state, $options)	class:EventBufferEvent	a:static
sslRenegotiate		0;"	f	S:void function sslRenegotiate()	class:EventBufferEvent
sslSocket		0;"	f	S:EventBufferEvent function sslSocket($base, $socket, $ctx, $state, $options)	class:EventBufferEvent	a:static
write		0;"	f	S:bool function write($data)	class:EventBufferEvent
writeBuffer		0;"	f	S:bool function writeBuffer($buf)	class:EventBufferEvent
EventConfig		0;"	c
FEATURE_ET		0;"	o	class:EventConfig	a:const	S:const EventConfig::FEATURE_ET
FEATURE_O1		0;"	o	class:EventConfig	a:const	S:const EventConfig::FEATURE_O1
FEATURE_FDS		0;"	o	class:EventConfig	a:const	S:const EventConfig::FEATURE_FDS
avoidMethod		0;"	f	S:bool function avoidMethod($method)	class:EventConfig
__construct		0;"	f	S: function __construct()	class:EventConfig
requireFeatures		0;"	f	S:bool function requireFeatures($feature)	class:EventConfig
setMaxDispatchInterval		0;"	f	S:void function setMaxDispatchInterval($max_interval, $max_callbacks, $min_priority)	class:EventConfig
EventDnsBase		0;"	c
OPTION_SEARCH		0;"	o	class:EventDnsBase	a:const	S:const EventDnsBase::OPTION_SEARCH
OPTION_NAMESERVERS		0;"	o	class:EventDnsBase	a:const	S:const EventDnsBase::OPTION_NAMESERVERS
OPTION_MISC		0;"	o	class:EventDnsBase	a:const	S:const EventDnsBase::OPTION_MISC
OPTION_HOSTSFILE		0;"	o	class:EventDnsBase	a:const	S:const EventDnsBase::OPTION_HOSTSFILE
OPTIONS_ALL		0;"	o	class:EventDnsBase	a:const	S:const EventDnsBase::OPTIONS_ALL
addNameserverIp		0;"	f	S:bool function addNameserverIp($ip)	class:EventDnsBase
addSearch		0;"	f	S:void function addSearch($domain)	class:EventDnsBase
clearSearch		0;"	f	S:void function clearSearch()	class:EventDnsBase
__construct		0;"	f	S: function __construct($base, $initialize)	class:EventDnsBase
countNameservers		0;"	f	S:int function countNameservers()	class:EventDnsBase
loadHosts		0;"	f	S:bool function loadHosts($hosts)	class:EventDnsBase
parseResolvConf		0;"	f	S:bool function parseResolvConf($flags, $filename)	class:EventDnsBase
setOption		0;"	f	S:bool function setOption($option, $value)	class:EventDnsBase
setSearchNdots		0;"	f	S:bool function setSearchNdots($ndots)	class:EventDnsBase
EventHttp		0;"	c
accept		0;"	f	S:bool function accept($socket)	class:EventHttp
addServerAlias		0;"	f	S:bool function addServerAlias($alias)	class:EventHttp
bind		0;"	f	S:void function bind($address, $port)	class:EventHttp
__construct		0;"	f	S: function __construct($base, $ctx)	class:EventHttp
removeServerAlias		0;"	f	S:bool function removeServerAlias($alias)	class:EventHttp
setAllowedMethods		0;"	f	S:void function setAllowedMethods($methods)	class:EventHttp
setCallback		0;"	f	S:void function setCallback($path, $cb, $arg)	class:EventHttp
setDefaultCallback		0;"	f	S:void function setDefaultCallback($cb, $arg)	class:EventHttp
setMaxBodySize		0;"	f	S:void function setMaxBodySize($value)	class:EventHttp
setMaxHeadersSize		0;"	f	S:void function setMaxHeadersSize($value)	class:EventHttp
setTimeout		0;"	f	S:void function setTimeout($value)	class:EventHttp
EventHttpConnection		0;"	c
__construct		0;"	f	S: function __construct($base, $dns_base, $address, $port, $ctx)	class:EventHttpConnection
getBase		0;"	f	S:EventBase function getBase()	class:EventHttpConnection
getPeer		0;"	f	S:void function getPeer(&$address, &$port)	class:EventHttpConnection
makeRequest		0;"	f	S:bool function makeRequest($req, $type, $uri)	class:EventHttpConnection
setCloseCallback		0;"	f	S:void function setCloseCallback($callback, $data)	class:EventHttpConnection
setLocalAddress		0;"	f	S:void function setLocalAddress($address)	class:EventHttpConnection
setLocalPort		0;"	f	S:void function setLocalPort($port)	class:EventHttpConnection
setMaxBodySize		0;"	f	S:void function setMaxBodySize($max_size)	class:EventHttpConnection
setMaxHeadersSize		0;"	f	S:void function setMaxHeadersSize($max_size)	class:EventHttpConnection
setRetries		0;"	f	S:void function setRetries($retries)	class:EventHttpConnection
setTimeout		0;"	f	S:void function setTimeout($timeout)	class:EventHttpConnection
EventHttpRequest		0;"	c
CMD_GET		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_GET
CMD_POST		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_POST
CMD_HEAD		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_HEAD
CMD_PUT		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_PUT
CMD_DELETE		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_DELETE
CMD_OPTIONS		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_OPTIONS
CMD_TRACE		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_TRACE
CMD_CONNECT		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_CONNECT
CMD_PATCH		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::CMD_PATCH
INPUT_HEADER		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::INPUT_HEADER
OUTPUT_HEADER		0;"	o	class:EventHttpRequest	a:const	S:const EventHttpRequest::OUTPUT_HEADER
addHeader		0;"	f	S:bool function addHeader($key, $value, $type)	class:EventHttpRequest
cancel		0;"	f	S:void function cancel()	class:EventHttpRequest
clearHeaders		0;"	f	S:void function clearHeaders()	class:EventHttpRequest
closeConnection		0;"	f	S:void function closeConnection()	class:EventHttpRequest
__construct		0;"	f	S: function __construct($callback, $data)	class:EventHttpRequest
findHeader		0;"	f	S:void function findHeader($key, $type)	class:EventHttpRequest
free		0;"	f	S:void function free()	class:EventHttpRequest
getBufferEvent		0;"	f	S:EventBufferEvent function getBufferEvent()	class:EventHttpRequest
getCommand		0;"	f	S:void function getCommand()	class:EventHttpRequest
getConnection		0;"	f	S:EventHttpConnection function getConnection()	class:EventHttpRequest
getHost		0;"	f	S:string function getHost()	class:EventHttpRequest
getInputBuffer		0;"	f	S:EventBuffer function getInputBuffer()	class:EventHttpRequest
getInputHeaders		0;"	f	S:array function getInputHeaders()	class:EventHttpRequest
getOutputBuffer		0;"	f	S:EventBuffer function getOutputBuffer()	class:EventHttpRequest
getOutputHeaders		0;"	f	S:void function getOutputHeaders()	class:EventHttpRequest
getResponseCode		0;"	f	S:int function getResponseCode()	class:EventHttpRequest
getUri		0;"	f	S:string function getUri()	class:EventHttpRequest
removeHeader		0;"	f	S:void function removeHeader($key, $type)	class:EventHttpRequest
sendError		0;"	f	S:void function sendError($error, $reason)	class:EventHttpRequest
sendReply		0;"	f	S:void function sendReply($code, $reason, $buf)	class:EventHttpRequest
sendReplyChunk		0;"	f	S:void function sendReplyChunk($buf)	class:EventHttpRequest
sendReplyEnd		0;"	f	S:void function sendReplyEnd()	class:EventHttpRequest
sendReplyStart		0;"	f	S:void function sendReplyStart($code, $reason)	class:EventHttpRequest
EventListener		0;"	c
OPT_LEAVE_SOCKETS_BLOCKING		0;"	o	class:EventListener	a:const	S:const EventListener::OPT_LEAVE_SOCKETS_BLOCKING
OPT_CLOSE_ON_FREE		0;"	o	class:EventListener	a:const	S:const EventListener::OPT_CLOSE_ON_FREE
OPT_CLOSE_ON_EXEC		0;"	o	class:EventListener	a:const	S:const EventListener::OPT_CLOSE_ON_EXEC
OPT_REUSEABLE		0;"	o	class:EventListener	a:const	S:const EventListener::OPT_REUSEABLE
OPT_THREADSAFE		0;"	o	class:EventListener	a:const	S:const EventListener::OPT_THREADSAFE
fd		0;"	p	class:EventListener	S: EventListener::fd
__construct		0;"	f	S: function __construct($base, $cb, $data, $flags, $backlog, $target)	class:EventListener
disable		0;"	f	S:bool function disable()	class:EventListener
enable		0;"	f	S:bool function enable()	class:EventListener
getBase		0;"	f	S:void function getBase()	class:EventListener
getSocketName		0;"	f	S:bool function getSocketName(&$address, &$port)	class:EventListener	a:static
setCallback		0;"	f	S:void function setCallback($cb, $arg)	class:EventListener
setErrorCallback		0;"	f	S:void function setErrorCallback($cb)	class:EventListener
EventSslContext		0;"	c
SSLv2_CLIENT_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv2_CLIENT_METHOD
SSLv3_CLIENT_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv3_CLIENT_METHOD
SSLv23_CLIENT_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv23_CLIENT_METHOD
TLS_CLIENT_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::TLS_CLIENT_METHOD
SSLv2_SERVER_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv2_SERVER_METHOD
SSLv3_SERVER_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv3_SERVER_METHOD
SSLv23_SERVER_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::SSLv23_SERVER_METHOD
TLS_SERVER_METHOD		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::TLS_SERVER_METHOD
OPT_LOCAL_CERT		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_LOCAL_CERT
OPT_LOCAL_PK		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_LOCAL_PK
OPT_PASSPHRASE		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_PASSPHRASE
OPT_CA_FILE		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_CA_FILE
OPT_CA_PATH		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_CA_PATH
OPT_ALLOW_SELF_SIGNED		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_ALLOW_SELF_SIGNED
OPT_VERIFY_PEER		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_VERIFY_PEER
OPT_VERIFY_DEPTH		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_VERIFY_DEPTH
OPT_CIPHERS		0;"	o	class:EventSslContext	a:const	S:const EventSslContext::OPT_CIPHERS
local_cert		0;"	p	class:EventSslContext	S: EventSslContext::local_cert
local_pk		0;"	p	class:EventSslContext	S: EventSslContext::local_pk
__construct		0;"	f	S: function __construct($method, $options)	class:EventSslContext
EventUtil		0;"	c
AF_INET		0;"	o	class:EventUtil	a:const	S:const EventUtil::AF_INET
AF_INET6		0;"	o	class:EventUtil	a:const	S:const EventUtil::AF_INET6
AF_UNSPEC		0;"	o	class:EventUtil	a:const	S:const EventUtil::AF_UNSPEC
LIBEVENT_VERSION_NUMBER		0;"	o	class:EventUtil	a:const	S:const EventUtil::LIBEVENT_VERSION_NUMBER
SO_DEBUG		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_DEBUG
SO_REUSEADDR		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_REUSEADDR
SO_KEEPALIVE		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_KEEPALIVE
SO_DONTROUTE		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_DONTROUTE
SO_LINGER		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_LINGER
SO_BROADCAST		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_BROADCAST
SO_OOBINLINE		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_OOBINLINE
SO_SNDBUF		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_SNDBUF
SO_RCVBUF		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_RCVBUF
SO_SNDLOWAT		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_SNDLOWAT
SO_RCVLOWAT		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_RCVLOWAT
SO_SNDTIMEO		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_SNDTIMEO
SO_RCVTIMEO		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_RCVTIMEO
SO_TYPE		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_TYPE
SO_ERROR		0;"	o	class:EventUtil	a:const	S:const EventUtil::SO_ERROR
SOL_SOCKET		0;"	o	class:EventUtil	a:const	S:const EventUtil::SOL_SOCKET
SOL_TCP		0;"	o	class:EventUtil	a:const	S:const EventUtil::SOL_TCP
SOL_UDP		0;"	o	class:EventUtil	a:const	S:const EventUtil::SOL_UDP
IPPROTO_IP		0;"	o	class:EventUtil	a:const	S:const EventUtil::IPPROTO_IP
IPPROTO_IPV6		0;"	o	class:EventUtil	a:const	S:const EventUtil::IPPROTO_IPV6
__construct		0;"	f	S: function __construct()	class:EventUtil	m: abstract
getLastSocketErrno		0;"	f	S:int function getLastSocketErrno($socket)	class:EventUtil	a:static
getLastSocketError		0;"	f	S:string function getLastSocketError($socket)	class:EventUtil	a:static
getSocketFd		0;"	f	S:int function getSocketFd($socket)	class:EventUtil	a:static
getSocketName		0;"	f	S:bool function getSocketName($socket, &$address, &$port)	class:EventUtil	a:static
setSocketOption		0;"	f	S:bool function setSocketOption($socket, $level, $optname, $optval)	class:EventUtil	a:static
sslRandPoll		0;"	f	S:void function sslRandPoll()	class:EventUtil	a:static
fam_cancel_monitor		0;"	f	S:bool function fam_cancel_monitor($fam, $fam_monitor)
fam_close		0;"	f	S:void function fam_close($fam)
fam_monitor_collection		0;"	f	S:resource function fam_monitor_collection($fam, $dirname, $depth, $mask)
fam_monitor_directory		0;"	f	S:resource function fam_monitor_directory($fam, $dirname)
fam_monitor_file		0;"	f	S:resource function fam_monitor_file($fam, $filename)
fam_next_event		0;"	f	S:array function fam_next_event($fam)
fam_open		0;"	f	S:resource function fam_open($appname)
fam_pending		0;"	f	S:int function fam_pending($fam)
fam_resume_monitor		0;"	f	S:bool function fam_resume_monitor($fam, $fam_monitor)
fam_suspend_monitor		0;"	f	S:bool function fam_suspend_monitor($fam, $fam_monitor)
FTP_ASCII		0;"	d
FTP_TEXT		0;"	d
FTP_BINARY		0;"	d
FTP_IMAGE		0;"	d
FTP_TIMEOUT_SEC		0;"	d
FTP_AUTOSEEK		0;"	d
FTP_AUTORESUME		0;"	d
FTP_FAILED		0;"	d
FTP_FINISHED		0;"	d
FTP_MOREDATA		0;"	d
ftp_alloc		0;"	f	S:bool function ftp_alloc($ftp_stream, $filesize, &$result)
ftp_cdup		0;"	f	S:bool function ftp_cdup($ftp_stream)
ftp_chdir		0;"	f	S:bool function ftp_chdir($ftp_stream, $directory)
ftp_chmod		0;"	f	S:int function ftp_chmod($ftp_stream, $mode, $filename)
ftp_close		0;"	f	S:resource function ftp_close($ftp_stream)
ftp_connect		0;"	f	S:resource function ftp_connect($host, $port = 21, $timeout = 90)
ftp_delete		0;"	f	S:bool function ftp_delete($ftp_stream, $path)
ftp_exec		0;"	f	S:bool function ftp_exec($ftp_stream, $command)
ftp_fget		0;"	f	S:bool function ftp_fget($ftp_stream, $handle, $remote_file, $mode, $resumepos)
ftp_fput		0;"	f	S:bool function ftp_fput($ftp_stream, $remote_file, $handle, $mode, $startpos)
ftp_get_option		0;"	f	S:mixed function ftp_get_option($ftp_stream, $option)
ftp_get		0;"	f	S:bool function ftp_get($ftp_stream, $local_file, $remote_file, $mode, $resumepos)
ftp_login		0;"	f	S:bool function ftp_login($ftp_stream, $username, $password)
ftp_mdtm		0;"	f	S:int function ftp_mdtm($ftp_stream, $remote_file)
ftp_mkdir		0;"	f	S:string function ftp_mkdir($ftp_stream, $directory)
ftp_nb_continue		0;"	f	S:int function ftp_nb_continue($ftp_stream)
ftp_nb_fget		0;"	f	S:int function ftp_nb_fget($ftp_stream, $handle, $remote_file, $mode, $resumepos)
ftp_nb_fput		0;"	f	S:int function ftp_nb_fput($ftp_stream, $remote_file, $handle, $mode, $startpos)
ftp_nb_get		0;"	f	S:int function ftp_nb_get($ftp_stream, $local_file, $remote_file, $mode, $resumepos)
ftp_nb_put		0;"	f	S:int function ftp_nb_put($ftp_stream, $remote_file, $local_file, $mode, $startpos)
ftp_nlist		0;"	f	S:array function ftp_nlist($ftp_stream, $directory)
ftp_pasv		0;"	f	S:bool function ftp_pasv($ftp_stream, $pasv)
ftp_put		0;"	f	S:bool function ftp_put($ftp_stream, $remote_file, $local_file, $mode, $startpos)
ftp_pwd		0;"	f	S:string function ftp_pwd($ftp_stream)
ftp_quit		0;"	f	S: function ftp_quit()
ftp_raw		0;"	f	S:array function ftp_raw($ftp_stream, $command)
ftp_rawlist		0;"	f	S:mixed function ftp_rawlist($ftp_stream, $directory, $recursive = false)
ftp_rename		0;"	f	S:bool function ftp_rename($ftp_stream, $oldname, $newname)
ftp_rmdir		0;"	f	S:bool function ftp_rmdir($ftp_stream, $directory)
ftp_set_option		0;"	f	S:bool function ftp_set_option($ftp_stream, $option, $value)
ftp_site		0;"	f	S:bool function ftp_site($ftp_stream, $command)
ftp_size		0;"	f	S:int function ftp_size($ftp_stream, $remote_file)
ftp_ssl_connect		0;"	f	S:resource function ftp_ssl_connect($host, $port = 21, $timeout = 90)
ftp_systype		0;"	f	S:string function ftp_systype($ftp_stream)
GEARMAN_SUCCESS		0;"	d
GEARMAN_IO_WAIT		0;"	d
GEARMAN_ERRNO		0;"	d
GEARMAN_NO_ACTIVE_FDS		0;"	d
GEARMAN_UNEXPECTED_PACKET		0;"	d
GEARMAN_GETADDRINFO		0;"	d
GEARMAN_NO_SERVERS		0;"	d
GEARMAN_LOST_CONNECTION		0;"	d
GEARMAN_MEMORY_ALLOCATION_FAILURE		0;"	d
GEARMAN_SERVER_ERROR		0;"	d
GEARMAN_WORK_DATA		0;"	d
GEARMAN_WORK_WARNING		0;"	d
GEARMAN_WORK_STATUS		0;"	d
GEARMAN_WORK_EXCEPTION		0;"	d
GEARMAN_WORK_FAIL		0;"	d
GEARMAN_COULD_NOT_CONNECT		0;"	d
GEARMAN_INVALID_FUNCTION_NAME		0;"	d
GEARMAN_INVALID_WORKER_FUNCTION		0;"	d
GEARMAN_NO_REGISTERED_FUNCTIONS		0;"	d
GEARMAN_NO_JOBS		0;"	d
GEARMAN_ECHO_DATA_CORRUPTION		0;"	d
GEARMAN_NEED_WORKLOAD_FN		0;"	d
GEARMAN_PAUSE		0;"	d
GEARMAN_UNKNOWN_STATE		0;"	d
GEARMAN_SEND_BUFFER_TOO_SMALL		0;"	d
GEARMAN_TIMEOUT		0;"	d
GEARMAN_CLIENT_NON_BLOCKING		0;"	d
GEARMAN_CLIENT_UNBUFFERED_RESULT		0;"	d
GEARMAN_CLIENT_FREE_TASKS		0;"	d
GEARMAN_WORKER_NON_BLOCKING		0;"	d
GEARMAN_WORKER_GRAB_UNIQ		0;"	d
GEARMAN_DEFAULT_TCP_HOST		0;"	d
GEARMAN_DEFAULT_TCP_PORT		0;"	d
GEARMAN_DEFAULT_SOCKET_TIMEOUT		0;"	d
GEARMAN_DEFAULT_SOCKET_SEND_SIZE		0;"	d
GEARMAN_DEFAULT_SOCKET_RECV_SIZE		0;"	d
GEARMAN_MAX_ERROR_SIZE		0;"	d
GEARMAN_PACKET_HEADER_SIZE		0;"	d
GEARMAN_JOB_HANDLE_SIZE		0;"	d
GEARMAN_OPTION_SIZE		0;"	d
GEARMAN_UNIQUE_SIZE		0;"	d
GEARMAN_MAX_COMMAND_ARGS		0;"	d
GEARMAN_ARGS_BUFFER_SIZE		0;"	d
GEARMAN_SEND_BUFFER_SIZE		0;"	d
GEARMAN_RECV_BUFFER_SIZE		0;"	d
GEARMAN_WORKER_WAIT_TIMEOUT		0;"	d
GearmanClient		0;"	c
addOptions		0;"	f	S:bool function addOptions($options)	class:GearmanClient
addServer		0;"	f	S:bool function addServer($host = 127.0.0.1, $port = 4730)	class:GearmanClient
addServers		0;"	f	S:bool function addServers($servers = 127.0.0.1:4730)	class:GearmanClient
addTask		0;"	f	S:GearmanTask function addTask($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskBackground		0;"	f	S:GearmanTask function addTaskBackground($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskHigh		0;"	f	S:GearmanTask function addTaskHigh($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskHighBackground		0;"	f	S:GearmanTask function addTaskHighBackground($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskLow		0;"	f	S:GearmanTask function addTaskLow($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskLowBackground		0;"	f	S:GearmanTask function addTaskLowBackground($function_name, $workload, &$context, $unique)	class:GearmanClient
addTaskStatus		0;"	f	S:GearmanTask function addTaskStatus($job_handle, &$context)	class:GearmanClient
clearCallbacks		0;"	f	S:bool function clearCallbacks()	class:GearmanClient
clone		0;"	f	S:GearmanClient function clone()	class:GearmanClient
__construct		0;"	f	S: function __construct()	class:GearmanClient
context		0;"	f	S:string function context()	class:GearmanClient
data		0;"	f	S:string function data()	class:GearmanClient
do		0;"	f	S:string function do($function_name, $workload, $unique)	class:GearmanClient
doBackground		0;"	f	S:string function doBackground($function_name, $workload, $unique)	class:GearmanClient
doHigh		0;"	f	S:string function doHigh($function_name, $workload, $unique)	class:GearmanClient
doHighBackground		0;"	f	S:string function doHighBackground($function_name, $workload, $unique)	class:GearmanClient
doJobHandle		0;"	f	S:string function doJobHandle()	class:GearmanClient
doLow		0;"	f	S:string function doLow($function_name, $workload, $unique)	class:GearmanClient
doLowBackground		0;"	f	S:string function doLowBackground($function_name, $workload, $unique)	class:GearmanClient
doNormal		0;"	f	S:string function doNormal($function_name, $workload, $unique)	class:GearmanClient
doStatus		0;"	f	S:array function doStatus()	class:GearmanClient
echo		0;"	f	S:bool function echo($workload)	class:GearmanClient
error		0;"	f	S:string function error()	class:GearmanClient
getErrno		0;"	f	S:int function getErrno()	class:GearmanClient
jobStatus		0;"	f	S:array function jobStatus($job_handle)	class:GearmanClient
ping		0;"	f	S:bool function ping($workload)	class:GearmanClient
removeOptions		0;"	f	S:bool function removeOptions($options)	class:GearmanClient
returnCode		0;"	f	S:int function returnCode()	class:GearmanClient
runTasks		0;"	f	S:bool function runTasks()	class:GearmanClient
setClientCallback		0;"	f	S:void function setClientCallback($callback)	class:GearmanClient
setCompleteCallback		0;"	f	S:bool function setCompleteCallback($callback)	class:GearmanClient
setContext		0;"	f	S:bool function setContext($context)	class:GearmanClient
setCreatedCallback		0;"	f	S:bool function setCreatedCallback($callback)	class:GearmanClient
setData		0;"	f	S:bool function setData($data)	class:GearmanClient
setDataCallback		0;"	f	S:bool function setDataCallback($callback)	class:GearmanClient
setExceptionCallback		0;"	f	S:bool function setExceptionCallback($callback)	class:GearmanClient
setFailCallback		0;"	f	S:bool function setFailCallback($callback)	class:GearmanClient
setOptions		0;"	f	S:bool function setOptions($options)	class:GearmanClient
setStatusCallback		0;"	f	S:bool function setStatusCallback($callback)	class:GearmanClient
setTimeout		0;"	f	S:bool function setTimeout($timeout)	class:GearmanClient
setWarningCallback		0;"	f	S:bool function setWarningCallback($callback)	class:GearmanClient
setWorkloadCallback		0;"	f	S:bool function setWorkloadCallback($callback)	class:GearmanClient
timeout		0;"	f	S:int function timeout()	class:GearmanClient
GearmanJob		0;"	c
complete		0;"	f	S:bool function complete($result)	class:GearmanJob
__construct		0;"	f	S: function __construct()	class:GearmanJob
data		0;"	f	S:bool function data($data)	class:GearmanJob
exception		0;"	f	S:bool function exception($exception)	class:GearmanJob
fail		0;"	f	S:bool function fail()	class:GearmanJob
functionName		0;"	f	S:string function functionName()	class:GearmanJob
handle		0;"	f	S:string function handle()	class:GearmanJob
returnCode		0;"	f	S:int function returnCode()	class:GearmanJob
sendComplete		0;"	f	S:bool function sendComplete($result)	class:GearmanJob
sendData		0;"	f	S:bool function sendData($data)	class:GearmanJob
sendException		0;"	f	S:bool function sendException($exception)	class:GearmanJob
sendFail		0;"	f	S:bool function sendFail()	class:GearmanJob
sendStatus		0;"	f	S:bool function sendStatus($numerator, $denominator)	class:GearmanJob
sendWarning		0;"	f	S:bool function sendWarning($warning)	class:GearmanJob
setReturn		0;"	f	S:bool function setReturn($gearman_return_t)	class:GearmanJob
status		0;"	f	S:bool function status($numerator, $denominator)	class:GearmanJob
unique		0;"	f	S:string function unique()	class:GearmanJob
warning		0;"	f	S:bool function warning($warning)	class:GearmanJob
workload		0;"	f	S:string function workload()	class:GearmanJob
workloadSize		0;"	f	S:int function workloadSize()	class:GearmanJob
GearmanTask		0;"	c
__construct		0;"	f	S: function __construct()	class:GearmanTask
create		0;"	f	S:GearmanTask function create()	class:GearmanTask
data		0;"	f	S:string function data()	class:GearmanTask
dataSize		0;"	f	S:int function dataSize()	class:GearmanTask
function		0;"	f	S:string function function()	class:GearmanTask
functionName		0;"	f	S:string function functionName()	class:GearmanTask
isKnown		0;"	f	S:bool function isKnown()	class:GearmanTask
isRunning		0;"	f	S:bool function isRunning()	class:GearmanTask
jobHandle		0;"	f	S:string function jobHandle()	class:GearmanTask
recvData		0;"	f	S:array function recvData($data_len)	class:GearmanTask
returnCode		0;"	f	S:int function returnCode()	class:GearmanTask
sendData		0;"	f	S:int function sendData($data)	class:GearmanTask
sendWorkload		0;"	f	S:int function sendWorkload($data)	class:GearmanTask
taskDenominator		0;"	f	S:int function taskDenominator()	class:GearmanTask
taskNumerator		0;"	f	S:int function taskNumerator()	class:GearmanTask
unique		0;"	f	S:string function unique()	class:GearmanTask
uuid		0;"	f	S:string function uuid()	class:GearmanTask
GearmanWorker		0;"	c
addFunction		0;"	f	S:bool function addFunction($function_name, $function, &$context, $timeout)	class:GearmanWorker
addOptions		0;"	f	S:bool function addOptions($option)	class:GearmanWorker
addServer		0;"	f	S:bool function addServer($host = 127.0.0.1, $port = 4730)	class:GearmanWorker
addServers		0;"	f	S:bool function addServers($servers = 127.0.0.1:4730)	class:GearmanWorker
clone		0;"	f	S:void function clone()	class:GearmanWorker
__construct		0;"	f	S: function __construct()	class:GearmanWorker
echo		0;"	f	S:bool function echo($workload)	class:GearmanWorker
error		0;"	f	S:string function error()	class:GearmanWorker
getErrno		0;"	f	S:int function getErrno()	class:GearmanWorker
options		0;"	f	S:int function options()	class:GearmanWorker
register		0;"	f	S:bool function register($function_name, $timeout)	class:GearmanWorker
removeOptions		0;"	f	S:bool function removeOptions($option)	class:GearmanWorker
returnCode		0;"	f	S:int function returnCode()	class:GearmanWorker
setId		0;"	f	S:bool function setId($id)	class:GearmanWorker
setOptions		0;"	f	S:bool function setOptions($option)	class:GearmanWorker
setTimeout		0;"	f	S:bool function setTimeout($timeout)	class:GearmanWorker
timeout		0;"	f	S:int function timeout()	class:GearmanWorker
unregister		0;"	f	S:bool function unregister($function_name)	class:GearmanWorker
unregisterAll		0;"	f	S:bool function unregisterAll()	class:GearmanWorker
wait		0;"	f	S:bool function wait()	class:GearmanWorker
work		0;"	f	S:bool function work()	class:GearmanWorker
GearmanException		0;"	c	i:Exception
message		0;"	p	class:GearmanException	a:protected	S:protected GearmanException::message
code		0;"	p	class:GearmanException	a:protected	S:protected GearmanException::code
file		0;"	p	class:GearmanException	a:protected	S:protected GearmanException::file
line		0;"	p	class:GearmanException	a:protected	S:protected GearmanException::line
gopher_parsedir		0;"	f	S:array function gopher_parsedir($dirent)
GUPNP_TYPE_BOOLEAN		0;"	d
GUPNP_TYPE_INT		0;"	d
GUPNP_TYPE_LONG		0;"	d
GUPNP_TYPE_DOUBLE		0;"	d
GUPNP_TYPE_FLOAT		0;"	d
GUPNP_TYPE_STRING		0;"	d
GUPNP_SIGNAL_DEVICE_PROXY_AVAILABLE		0;"	d
GUPNP_SIGNAL_DEVICE_PROXY_UNAVAILABLE		0;"	d
GUPNP_SIGNAL_SERVICE_PROXY_AVAILABLE		0;"	d
GUPNP_SIGNAL_SERVICE_PROXY_UNAVAILABLE		0;"	d
GUPNP_SIGNAL_ACTION_INVOKED		0;"	d
GUPNP_SIGNAL_NOTIFY_FAILED		0;"	d
GUPNP_SIGNAL_SUBSCRIPTION_LOST		0;"	d
GUPNP_CONTROL_ERROR_INVALID_ACTION		0;"	d
GUPNP_CONTROL_ERROR_INVALID_ARGS		0;"	d
GUPNP_CONTROL_ERROR_OUT_OF_SYNC		0;"	d
GUPNP_CONTROL_ERROR_ACTION_FAILED		0;"	d
gupnp_context_get_host_ip		0;"	f	S:string function gupnp_context_get_host_ip($context)
gupnp_context_get_port		0;"	f	S:int function gupnp_context_get_port($context)
gupnp_context_get_subscription_timeout		0;"	f	S:int function gupnp_context_get_subscription_timeout($context)
gupnp_context_host_path		0;"	f	S:bool function gupnp_context_host_path($context, $local_path, $server_path)
gupnp_context_new		0;"	f	S:resource function gupnp_context_new($host_ip, $port)
gupnp_context_set_subscription_timeout		0;"	f	S:void function gupnp_context_set_subscription_timeout($context, $timeout)
gupnp_context_timeout_add		0;"	f	S:bool function gupnp_context_timeout_add($context, $timeout, $callback, $arg)
gupnp_context_unhost_path		0;"	f	S:bool function gupnp_context_unhost_path($context, $server_path)
gupnp_control_point_browse_start		0;"	f	S:bool function gupnp_control_point_browse_start($cpoint)
gupnp_control_point_browse_stop		0;"	f	S:bool function gupnp_control_point_browse_stop($cpoint)
gupnp_control_point_callback_set		0;"	f	S:bool function gupnp_control_point_callback_set($cpoint, $signal, $callback, $arg)
gupnp_control_point_new		0;"	f	S:resource function gupnp_control_point_new($context, $target)
gupnp_device_action_callback_set		0;"	f	S:bool function gupnp_device_action_callback_set($root_device, $signal, $action_name, $callback, $arg)
gupnp_device_info_get_service		0;"	f	S:resource function gupnp_device_info_get_service($root_device, $type)
gupnp_device_info_get		0;"	f	S:array function gupnp_device_info_get($root_device)
gupnp_root_device_get_available		0;"	f	S:bool function gupnp_root_device_get_available($root_device)
gupnp_root_device_get_relative_location		0;"	f	S:string function gupnp_root_device_get_relative_location($root_device)
gupnp_root_device_new		0;"	f	S:resource function gupnp_root_device_new($context, $location, $description_dir)
gupnp_root_device_set_available		0;"	f	S:bool function gupnp_root_device_set_available($root_device, $available)
gupnp_root_device_start		0;"	f	S:bool function gupnp_root_device_start($root_device)
gupnp_root_device_stop		0;"	f	S:bool function gupnp_root_device_stop($root_device)
gupnp_service_action_get		0;"	f	S:mixed function gupnp_service_action_get($action, $name, $type)
gupnp_service_action_return_error		0;"	f	S:bool function gupnp_service_action_return_error($action, $error_code, $error_description)
gupnp_service_action_return		0;"	f	S:bool function gupnp_service_action_return($action)
gupnp_service_action_set		0;"	f	S:bool function gupnp_service_action_set($action, $name, $type, $value)
gupnp_service_freeze_notify		0;"	f	S:bool function gupnp_service_freeze_notify($service)
gupnp_service_info_get_introspection		0;"	f	S:mixed function gupnp_service_info_get_introspection($proxy, $callback, $arg)
gupnp_service_info_get		0;"	f	S:array function gupnp_service_info_get($proxy)
gupnp_service_introspection_get_state_variable		0;"	f	S:array function gupnp_service_introspection_get_state_variable($introspection, $variable_name)
gupnp_service_notify		0;"	f	S:bool function gupnp_service_notify($service, $name, $type, $value)
gupnp_service_proxy_action_get		0;"	f	S:mixed function gupnp_service_proxy_action_get($proxy, $action, $name, $type)
gupnp_service_proxy_action_set		0;"	f	S:bool function gupnp_service_proxy_action_set($proxy, $action, $name, $value, $type)
gupnp_service_proxy_add_notify		0;"	f	S:bool function gupnp_service_proxy_add_notify($proxy, $value, $type, $callback, $arg)
gupnp_service_proxy_callback_set		0;"	f	S:bool function gupnp_service_proxy_callback_set($proxy, $signal, $callback, $arg)
gupnp_service_proxy_get_subscribed		0;"	f	S:bool function gupnp_service_proxy_get_subscribed($proxy)
gupnp_service_proxy_remove_notify		0;"	f	S:bool function gupnp_service_proxy_remove_notify($proxy, $value)
gupnp_service_proxy_send_action		0;"	f	S:array function gupnp_service_proxy_send_action($proxy, $action, $in_params, $out_params)
gupnp_service_proxy_set_subscribed		0;"	f	S:bool function gupnp_service_proxy_set_subscribed($proxy, $subscribed)
gupnp_service_thaw_notify		0;"	f	S:bool function gupnp_service_thaw_notify($service)
HTTP_SUPPORT		0;"	d
HTTP_SUPPORT_REQUESTS		0;"	d
HTTP_SUPPORT_MAGICMIME		0;"	d
HTTP_SUPPORT_ENCODINGS		0;"	d
HTTP_SUPPORT_SSLREQUESTS		0;"	d
HTTP_PARAMS_ALLOW_COMMA		0;"	d
HTTP_PARAMS_ALLOW_FAILURE		0;"	d
HTTP_PARAMS_RAISE_ERROR		0;"	d
HTTP_PARAMS_DEFAULT		0;"	d
HTTP_COOKIE_PARSE_RAW		0;"	d
HTTP_COOKIE_SECURE		0;"	d
HTTP_COOKIE_HTTPONLY		0;"	d
HTTP_DEFLATE_LEVEL_DEF		0;"	d
HTTP_DEFLATE_LEVEL_MIN		0;"	d
HTTP_DEFLATE_LEVEL_MAX		0;"	d
HTTP_DEFLATE_TYPE_ZLIB		0;"	d
HTTP_DEFLATE_TYPE_GZIP		0;"	d
HTTP_DEFLATE_TYPE_RAW		0;"	d
HTTP_DEFLATE_STRATEGY_DEF		0;"	d
HTTP_DEFLATE_STRATEGY_FILT		0;"	d
HTTP_DEFLATE_STRATEGY_HUFF		0;"	d
HTTP_DEFLATE_STRATEGY_RLE		0;"	d
HTTP_DEFLATE_STRATEGY_FIXED		0;"	d
HTTP_ENCODING_STREAM_FLUSH_NONE		0;"	d
HTTP_ENCODING_STREAM_FLUSH_SYNC		0;"	d
HTTP_ENCODING_STREAM_FLUSH_FULL		0;"	d
HTTP_E_RUNTIME		0;"	d
HTTP_E_INVALID_PARAM		0;"	d
HTTP_E_HEADER		0;"	d
HTTP_E_MALFORMED_HEADERS		0;"	d
HTTP_E_REQUEST_METHOD		0;"	d
HTTP_E_MESSAGE_TYPE		0;"	d
HTTP_E_ENCODING		0;"	d
HTTP_E_REQUEST		0;"	d
HTTP_E_REQUEST_POOL		0;"	d
HTTP_E_SOCKET		0;"	d
HTTP_E_RESPONSE		0;"	d
HTTP_E_URL		0;"	d
HTTP_E_QUERYSTRING		0;"	d
HTTP_MSG_NONE		0;"	d
HTTP_MSG_REQUEST		0;"	d
HTTP_MSG_RESPONSE		0;"	d
HTTP_QUERYSTRING_TYPE_BOOL		0;"	d
HTTP_QUERYSTRING_TYPE_INT		0;"	d
HTTP_QUERYSTRING_TYPE_FLOAT		0;"	d
HTTP_QUERYSTRING_TYPE_STRING		0;"	d
HTTP_QUERYSTRING_TYPE_ARRAY		0;"	d
HTTP_QUERYSTRING_TYPE_OBJECT		0;"	d
HTTP_AUTH_BASIC		0;"	d
HTTP_AUTH_DIGEST		0;"	d
HTTP_AUTH_NTLM		0;"	d
HTTP_AUTH_GSSNEG		0;"	d
HTTP_AUTH_ANY		0;"	d
HTTP_VERSION_ANY		0;"	d
HTTP_VERSION_1_0		0;"	d
HTTP_VERSION_1_1		0;"	d
HTTP_SSL_VERSION_ANY		0;"	d
HTTP_SSL_VERSION_TLSv1		0;"	d
HTTP_SSL_VERSION_SSLv3		0;"	d
HTTP_SSL_VERSION_SSLv2		0;"	d
HTTP_PROXY_SOCKS4		0;"	d
HTTP_PROXY_SOCKS5		0;"	d
HTTP_PROXY_HTTP		0;"	d
HTTP_IPRESOLVE_V4		0;"	d
HTTP_IPRESOLVE_V6		0;"	d
HTTP_IPRESOLVE_ANY		0;"	d
HTTP_METH_GET		0;"	d
HTTP_METH_HEAD		0;"	d
HTTP_METH_POST		0;"	d
HTTP_METH_PUT		0;"	d
HTTP_METH_DELETE		0;"	d
HTTP_METH_OPTIONS		0;"	d
HTTP_METH_TRACE		0;"	d
HTTP_METH_CONNECT		0;"	d
HTTP_METH_PROPFIND		0;"	d
HTTP_METH_PROPPATCH		0;"	d
HTTP_METH_MKCOL		0;"	d
HTTP_METH_COPY		0;"	d
HTTP_METH_MOVE		0;"	d
HTTP_METH_LOCK		0;"	d
HTTP_METH_UNLOCK		0;"	d
HTTP_METH_VERSION_CONTROL		0;"	d
HTTP_METH_REPORT		0;"	d
HTTP_METH_CHECKOUT		0;"	d
HTTP_METH_CHECKIN		0;"	d
HTTP_METH_UNCHECKOUT		0;"	d
HTTP_METH_MKWORKSPACE		0;"	d
HTTP_METH_UPDATE		0;"	d
HTTP_METH_LABEL		0;"	d
HTTP_METH_MERGE		0;"	d
HTTP_METH_BASELINE_CONTROL		0;"	d
HTTP_METH_MKACTIVITY		0;"	d
HTTP_METH_ACL		0;"	d
HTTP_REDIRECT		0;"	d
HTTP_REDIRECT_PERM		0;"	d
HTTP_REDIRECT_FOUND		0;"	d
HTTP_REDIRECT_POST		0;"	d
HTTP_REDIRECT_PROXY		0;"	d
HTTP_REDIRECT_TEMP		0;"	d
HTTP_URL_REPLACE		0;"	d
HTTP_URL_JOIN_PATH		0;"	d
HTTP_URL_JOIN_QUERY		0;"	d
HTTP_URL_STRIP_USER		0;"	d
HTTP_URL_STRIP_PASS		0;"	d
HTTP_URL_STRIP_AUTH		0;"	d
HTTP_URL_STRIP_PORT		0;"	d
HTTP_URL_STRIP_PATH		0;"	d
HTTP_URL_STRIP_QUERY		0;"	d
HTTP_URL_STRIP_FRAGMENT		0;"	d
HTTP_URL_STRIP_ALL		0;"	d
HttpDeflateStream		0;"	c
__construct		0;"	f	S: function __construct($flags)	class:HttpDeflateStream
factory		0;"	f	S:HttpDeflateStream function factory($flags, $class_name = "HttpDeflateStream")	class:HttpDeflateStream	a:static public
finish		0;"	f	S:string function finish($data)	class:HttpDeflateStream
flush		0;"	f	S:string function flush($data)	class:HttpDeflateStream
update		0;"	f	S:string function update($data)	class:HttpDeflateStream
HttpInflateStream		0;"	c
__construct		0;"	f	S: function __construct($flags)	class:HttpInflateStream
factory		0;"	f	S:HttpInflateStream function factory($flags, $class_name = "HttpInflateStream")	class:HttpInflateStream
finish		0;"	f	S:string function finish($data)	class:HttpInflateStream
flush		0;"	f	S:string function flush($data)	class:HttpInflateStream
update		0;"	f	S:string function update($data)	class:HttpInflateStream
HttpMessage		0;"	c
addHeaders		0;"	f	S:void function addHeaders($headers, $append = false)	class:HttpMessage
__construct		0;"	f	S: function __construct($message)	class:HttpMessage
detach		0;"	f	S:HttpMessage function detach()	class:HttpMessage
factory		0;"	f	S:HttpMessage function factory($raw_message, $class_name = "HttpMessage")	class:HttpMessage	a:static public
fromEnv		0;"	f	S:HttpMessage function fromEnv($message_type, $class_name = "HttpMessage")	class:HttpMessage	a:static public
fromString		0;"	f	S:HttpMessage function fromString($raw_message, $class_name = "HttpMessage")	class:HttpMessage	a:static public
getBody		0;"	f	S:string function getBody()	class:HttpMessage
getHeader		0;"	f	S:string function getHeader($header)	class:HttpMessage
getHeaders		0;"	f	S:array function getHeaders()	class:HttpMessage
getHttpVersion		0;"	f	S:string function getHttpVersion()	class:HttpMessage
getParentMessage		0;"	f	S:HttpMessage function getParentMessage()	class:HttpMessage
getRequestMethod		0;"	f	S:string function getRequestMethod()	class:HttpMessage
getRequestUrl		0;"	f	S:string function getRequestUrl()	class:HttpMessage
getResponseCode		0;"	f	S:int function getResponseCode()	class:HttpMessage
getResponseStatus		0;"	f	S:string function getResponseStatus()	class:HttpMessage
getType		0;"	f	S:int function getType()	class:HttpMessage
guessContentType		0;"	f	S:string function guessContentType($magic_file, $magic_mode = MAGIC_MIME)	class:HttpMessage
prepend		0;"	f	S:void function prepend($message, $top = true)	class:HttpMessage
reverse		0;"	f	S:HttpMessage function reverse()	class:HttpMessage
send		0;"	f	S:bool function send()	class:HttpMessage
setBody		0;"	f	S:void function setBody($body)	class:HttpMessage
setHeaders		0;"	f	S:void function setHeaders($headers)	class:HttpMessage
setHttpVersion		0;"	f	S:bool function setHttpVersion($version)	class:HttpMessage
setRequestMethod		0;"	f	S:bool function setRequestMethod($method)	class:HttpMessage
setRequestUrl		0;"	f	S:bool function setRequestUrl($url)	class:HttpMessage
setResponseCode		0;"	f	S:bool function setResponseCode($code)	class:HttpMessage
setResponseStatus		0;"	f	S:bool function setResponseStatus($status)	class:HttpMessage
setType		0;"	f	S:void function setType($type)	class:HttpMessage
toMessageTypeObject		0;"	f	S:HttpRequest|HttpResponse function toMessageTypeObject()	class:HttpMessage
toString		0;"	f	S:string function toString($include_parent = false)	class:HttpMessage
HttpQueryString		0;"	c
__construct		0;"	f	S: function __construct($global = true, $add)	class:HttpQueryString	a:final public
get		0;"	f	S:mixed function get($key, $type, $defval, $delete = false)	class:HttpQueryString
mod		0;"	f	S:HttpQueryString function mod($params)	class:HttpQueryString
set		0;"	f	S:string function set($params)	class:HttpQueryString
singleton		0;"	f	S:HttpQueryString function singleton($global = true)	class:HttpQueryString	a:static public
toArray		0;"	f	S:array function toArray()	class:HttpQueryString
toString		0;"	f	S:string function toString()	class:HttpQueryString
xlate		0;"	f	S:bool function xlate($ie, $oe)	class:HttpQueryString
HttpRequest		0;"	c
addCookies		0;"	f	S:bool function addCookies($cookies)	class:HttpRequest
addHeaders		0;"	f	S:bool function addHeaders($headers)	class:HttpRequest
addPostFields		0;"	f	S:bool function addPostFields($post_data)	class:HttpRequest
addPostFile		0;"	f	S:bool function addPostFile($name, $file, $content_type = "application/x-octetstream")	class:HttpRequest
addPutData		0;"	f	S:bool function addPutData($put_data)	class:HttpRequest
addQueryData		0;"	f	S:bool function addQueryData($query_params)	class:HttpRequest
addRawPostData		0;"	f	S:bool function addRawPostData($raw_post_data)	class:HttpRequest
addSslOptions		0;"	f	S:bool function addSslOptions($options)	class:HttpRequest
clearHistory		0;"	f	S:void function clearHistory()	class:HttpRequest
__construct		0;"	f	S: function __construct($url, $request_method = HTTP_METH_GET, $options)	class:HttpRequest
enableCookies		0;"	f	S:bool function enableCookies()	class:HttpRequest
getContentType		0;"	f	S:string function getContentType()	class:HttpRequest
getCookies		0;"	f	S:array function getCookies()	class:HttpRequest
getHeaders		0;"	f	S:array function getHeaders()	class:HttpRequest
getHistory		0;"	f	S:HttpMessage function getHistory()	class:HttpRequest
getMethod		0;"	f	S:int function getMethod()	class:HttpRequest
getOptions		0;"	f	S:array function getOptions()	class:HttpRequest
getPostFields		0;"	f	S:array function getPostFields()	class:HttpRequest
getPostFiles		0;"	f	S:array function getPostFiles()	class:HttpRequest
getPutData		0;"	f	S:string function getPutData()	class:HttpRequest
getPutFile		0;"	f	S:string function getPutFile()	class:HttpRequest
getQueryData		0;"	f	S:string function getQueryData()	class:HttpRequest
getRawPostData		0;"	f	S:string function getRawPostData()	class:HttpRequest
getRawRequestMessage		0;"	f	S:string function getRawRequestMessage()	class:HttpRequest
getRawResponseMessage		0;"	f	S:string function getRawResponseMessage()	class:HttpRequest
getRequestMessage		0;"	f	S:HttpMessage function getRequestMessage()	class:HttpRequest
getResponseBody		0;"	f	S:string function getResponseBody()	class:HttpRequest
getResponseCode		0;"	f	S:int function getResponseCode()	class:HttpRequest
getResponseCookies		0;"	f	S:array function getResponseCookies($flags, $allowed_extras)	class:HttpRequest
getResponseData		0;"	f	S:array function getResponseData()	class:HttpRequest
getResponseHeader		0;"	f	S:mixed function getResponseHeader($name)	class:HttpRequest
getResponseInfo		0;"	f	S:mixed function getResponseInfo($name)	class:HttpRequest
getResponseMessage		0;"	f	S:HttpMessage function getResponseMessage()	class:HttpRequest
getResponseStatus		0;"	f	S:string function getResponseStatus()	class:HttpRequest
getSslOptions		0;"	f	S:array function getSslOptions()	class:HttpRequest
getUrl		0;"	f	S:string function getUrl()	class:HttpRequest
resetCookies		0;"	f	S:bool function resetCookies($session_only = false)	class:HttpRequest
send		0;"	f	S:HttpMessage function send()	class:HttpRequest
setBody		0;"	f	S:bool function setBody($request_body_data)	class:HttpRequest
setContentType		0;"	f	S:bool function setContentType($content_type)	class:HttpRequest
setCookies		0;"	f	S:bool function setCookies($cookies)	class:HttpRequest
setHeaders		0;"	f	S:bool function setHeaders($headers)	class:HttpRequest
setMethod		0;"	f	S:bool function setMethod($request_method)	class:HttpRequest
setOptions		0;"	f	S:bool function setOptions($options)	class:HttpRequest
setPostFields		0;"	f	S:bool function setPostFields($post_data)	class:HttpRequest
setPostFiles		0;"	f	S:bool function setPostFiles($post_files)	class:HttpRequest
setPutData		0;"	f	S:bool function setPutData($put_data)	class:HttpRequest
setPutFile		0;"	f	S:bool function setPutFile($file = "")	class:HttpRequest
setQueryData		0;"	f	S:bool function setQueryData($query_data)	class:HttpRequest
setRawPostData		0;"	f	S:bool function setRawPostData($raw_post_data)	class:HttpRequest
setSslOptions		0;"	f	S:bool function setSslOptions($options)	class:HttpRequest
setUrl		0;"	f	S:bool function setUrl($url)	class:HttpRequest
HttpRequestPool		0;"	c
attach		0;"	f	S:bool function attach($request)	class:HttpRequestPool
__construct		0;"	f	S: function __construct($request, $...)	class:HttpRequestPool
__destruct		0;"	f	S:void function __destruct()	class:HttpRequestPool
detach		0;"	f	S:bool function detach($request)	class:HttpRequestPool
getAttachedRequests		0;"	f	S:array function getAttachedRequests()	class:HttpRequestPool
getFinishedRequests		0;"	f	S:array function getFinishedRequests()	class:HttpRequestPool
reset		0;"	f	S:void function reset()	class:HttpRequestPool
send		0;"	f	S:bool function send()	class:HttpRequestPool
socketPerform		0;"	f	S:bool function socketPerform()	class:HttpRequestPool	a:protected
socketSelect		0;"	f	S:bool function socketSelect($timeout)	class:HttpRequestPool	a:protected
HttpResponse		0;"	c
capture		0;"	f	S:void function capture()	class:HttpResponse	a:static
getBufferSize		0;"	f	S:int function getBufferSize()	class:HttpResponse	a:static
getCache		0;"	f	S:bool function getCache()	class:HttpResponse	a:static
getCacheControl		0;"	f	S:string function getCacheControl()	class:HttpResponse	a:static
getContentDisposition		0;"	f	S:string function getContentDisposition()	class:HttpResponse	a:static
getContentType		0;"	f	S:string function getContentType()	class:HttpResponse	a:static
getData		0;"	f	S:string function getData()	class:HttpResponse	a:static
getETag		0;"	f	S:string function getETag()	class:HttpResponse	a:static
getFile		0;"	f	S:string function getFile()	class:HttpResponse	a:static
getGzip		0;"	f	S:bool function getGzip()	class:HttpResponse	a:static
getHeader		0;"	f	S:mixed function getHeader($name)	class:HttpResponse	a:static
getLastModified		0;"	f	S:int function getLastModified()	class:HttpResponse	a:static
getRequestBody		0;"	f	S:string function getRequestBody()	class:HttpResponse	a:static
getRequestBodyStream		0;"	f	S:resource function getRequestBodyStream()	class:HttpResponse	a:static
getRequestHeaders		0;"	f	S:array function getRequestHeaders()	class:HttpResponse	a:static
getStream		0;"	f	S:resource function getStream()	class:HttpResponse	a:static
getThrottleDelay		0;"	f	S:float function getThrottleDelay()	class:HttpResponse	a:static
guessContentType		0;"	f	S:string function guessContentType($magic_file, $magic_mode = MAGIC_MIME)	class:HttpResponse	a:static
redirect		0;"	f	S:void function redirect($url, $params, $session = false, $status)	class:HttpResponse	a:static
send		0;"	f	S:bool function send($clean_ob = true)	class:HttpResponse	a:static
setBufferSize		0;"	f	S:bool function setBufferSize($bytes)	class:HttpResponse	a:static
setCache		0;"	f	S:bool function setCache($cache)	class:HttpResponse	a:static
setCacheControl		0;"	f	S:bool function setCacheControl($control, $max_age, $must_revalidate = true)	class:HttpResponse	a:static
setContentDisposition		0;"	f	S:bool function setContentDisposition($filename, $inline = false)	class:HttpResponse	a:static
setContentType		0;"	f	S:bool function setContentType($content_type)	class:HttpResponse	a:static
setData		0;"	f	S:bool function setData($data)	class:HttpResponse	a:static
setETag		0;"	f	S:bool function setETag($etag)	class:HttpResponse	a:static
setFile		0;"	f	S:bool function setFile($file)	class:HttpResponse	a:static
setGzip		0;"	f	S:bool function setGzip($gzip)	class:HttpResponse	a:static
setHeader		0;"	f	S:bool function setHeader($name, $value, $replace = true)	class:HttpResponse	a:static
setLastModified		0;"	f	S:bool function setLastModified($timestamp)	class:HttpResponse	a:static
setStream		0;"	f	S:bool function setStream($stream)	class:HttpResponse	a:static
setThrottleDelay		0;"	f	S:bool function setThrottleDelay($seconds)	class:HttpResponse	a:static
status		0;"	f	S:bool function status($status)	class:HttpResponse	a:static
http_cache_etag		0;"	f	S:bool function http_cache_etag($etag)
http_cache_last_modified		0;"	f	S:bool function http_cache_last_modified($timestamp_or_expires)
http_chunked_decode		0;"	f	S:string function http_chunked_decode($encoded)
http_deflate		0;"	f	S:string function http_deflate($data, $flags)
http_inflate		0;"	f	S:string function http_inflate($data)
http_build_cookie		0;"	f	S:string function http_build_cookie($cookie)
http_date		0;"	f	S:string function http_date($timestamp)
http_get_request_body_stream		0;"	f	S:resource function http_get_request_body_stream()
http_get_request_body		0;"	f	S:string function http_get_request_body()
http_get_request_headers		0;"	f	S:array function http_get_request_headers()
http_match_etag		0;"	f	S:bool function http_match_etag($etag, $for_range = false)
http_match_modified		0;"	f	S:bool function http_match_modified($timestamp = -1, $for_range = false)
http_match_request_header		0;"	f	S:bool function http_match_request_header($header, $value, $match_case = false)
http_support		0;"	f	S:int function http_support($feature)
http_negotiate_charset		0;"	f	S:string function http_negotiate_charset($supported, &$result)
http_negotiate_content_type		0;"	f	S:string function http_negotiate_content_type($supported, &$result)
http_negotiate_language		0;"	f	S:string function http_negotiate_language($supported, &$result)
ob_deflatehandler		0;"	f	S:string function ob_deflatehandler($data, $mode)
ob_etaghandler		0;"	f	S:string function ob_etaghandler($data, $mode)
ob_inflatehandler		0;"	f	S:string function ob_inflatehandler($data, $mode)
http_parse_cookie		0;"	f	S:object function http_parse_cookie($cookie, $flags, $allowed_extras)
http_parse_headers		0;"	f	S:array function http_parse_headers($header)
http_parse_message		0;"	f	S:object function http_parse_message($message)
http_parse_params		0;"	f	S:object function http_parse_params($param, $flags = HTTP_PARAMS_DEFAULT)
http_persistent_handles_clean		0;"	f	S:string function http_persistent_handles_clean($ident)
http_persistent_handles_count		0;"	f	S:object function http_persistent_handles_count()
http_persistent_handles_ident		0;"	f	S:string function http_persistent_handles_ident($ident)
http_get		0;"	f	S:string function http_get($url, $options, &$info)
http_head		0;"	f	S:string function http_head($url, $options, &$info)
http_post_data		0;"	f	S:string function http_post_data($url, $data, $options, &$info)
http_post_fields		0;"	f	S:string function http_post_fields($url, $data, $files, $options, &$info)
http_put_data		0;"	f	S:string function http_put_data($url, $data, $options, &$info)
http_put_file		0;"	f	S:string function http_put_file($url, $file, $options, &$info)
http_put_stream		0;"	f	S:string function http_put_stream($url, $stream, $options, &$info)
http_request_body_encode		0;"	f	S:string function http_request_body_encode($fields, $files)
http_request_method_exists		0;"	f	S:int function http_request_method_exists($method)
http_request_method_name		0;"	f	S:string function http_request_method_name($method)
http_request_method_register		0;"	f	S:int function http_request_method_register($method)
http_request_method_unregister		0;"	f	S:bool function http_request_method_unregister($method)
http_request		0;"	f	S:string function http_request($method, $url, $body, $options, &$info)
http_redirect		0;"	f	S:bool function http_redirect($url, $params, $session = false, $status)
http_send_content_disposition		0;"	f	S:bool function http_send_content_disposition($filename, $inline = false)
http_send_content_type		0;"	f	S:bool function http_send_content_type($content_type = "application/x-octetstream")
http_send_data		0;"	f	S:bool function http_send_data($data)
http_send_file		0;"	f	S:bool function http_send_file($file)
http_send_last_modified		0;"	f	S:bool function http_send_last_modified($timestamp = time())
http_send_status		0;"	f	S:bool function http_send_status($status)
http_send_stream		0;"	f	S:bool function http_send_stream($stream)
http_throttle		0;"	f	S:void function http_throttle($sec, $bytes = 40960)
http_build_str		0;"	f	S:string function http_build_str($query, $prefix, $arg_separator = ini_get("arg_separator.output"))
http_build_url		0;"	f	S:string function http_build_url($url, $parts, $flags = HTTP_URL_REPLACE, &$new_url)
checkin		0;"	f	S:bool function checkin($parameter)	class:hw_api
checkout		0;"	f	S:bool function checkout($parameter)	class:hw_api
children		0;"	f	S:array function children($parameter)	class:hw_api
content		0;"	f	S:HW_API_Content function content($parameter)	class:hw_api
copy		0;"	f	S:hw_api_content function copy($parameter)	class:hw_api
dbstat		0;"	f	S:hw_api_object function dbstat($parameter)	class:hw_api
dcstat		0;"	f	S:hw_api_object function dcstat($parameter)	class:hw_api
dstanchors		0;"	f	S:array function dstanchors($parameter)	class:hw_api
dstofsrcanchor		0;"	f	S:hw_api_object function dstofsrcanchor($parameter)	class:hw_api
find		0;"	f	S:array function find($parameter)	class:hw_api
ftstat		0;"	f	S:hw_api_object function ftstat($parameter)	class:hw_api
hwstat		0;"	f	S:hw_api_object function hwstat($parameter)	class:hw_api
identify		0;"	f	S:bool function identify($parameter)	class:hw_api
info		0;"	f	S:array function info($parameter)	class:hw_api
insert		0;"	f	S:hw_api_object function insert($parameter)	class:hw_api
insertanchor		0;"	f	S:hw_api_object function insertanchor($parameter)	class:hw_api
insertcollection		0;"	f	S:hw_api_object function insertcollection($parameter)	class:hw_api
insertdocument		0;"	f	S:hw_api_object function insertdocument($parameter)	class:hw_api
link		0;"	f	S:bool function link($parameter)	class:hw_api
lock		0;"	f	S:bool function lock($parameter)	class:hw_api
move		0;"	f	S:bool function move($parameter)	class:hw_api
object		0;"	f	S:hw_api_object function object($parameter)	class:hw_api
objectbyanchor		0;"	f	S:hw_api_object function objectbyanchor($parameter)	class:hw_api
parents		0;"	f	S:array function parents($parameter)	class:hw_api
remove		0;"	f	S:bool function remove($parameter)	class:hw_api
replace		0;"	f	S:hw_api_object function replace($parameter)	class:hw_api
setcommittedversion		0;"	f	S:hw_api_object function setcommittedversion($parameter)	class:hw_api
srcanchors		0;"	f	S:array function srcanchors($parameter)	class:hw_api
srcsofdst		0;"	f	S:array function srcsofdst($parameter)	class:hw_api
unlock		0;"	f	S:bool function unlock($parameter)	class:hw_api
user		0;"	f	S:hw_api_object function user($parameter)	class:hw_api
userlist		0;"	f	S:array function userlist($parameter)	class:hw_api
key		0;"	f	S:string function key()	class:hw_api_attribute
langdepvalue		0;"	f	S:string function langdepvalue($language)	class:hw_api_attribute
value		0;"	f	S:string function value()	class:hw_api_attribute
values		0;"	f	S:array function values()	class:hw_api_attribute
mimetype		0;"	f	S:string function mimetype()	class:hw_api_content
read		0;"	f	S:string function read($buffer, $len)	class:hw_api_content
count		0;"	f	S:int function count()	class:hw_api_error
reason		0;"	f	S:HW_API_Reason function reason()	class:hw_api_error
assign		0;"	f	S:bool function assign($parameter)	class:hw_api_object
attreditable		0;"	f	S:bool function attreditable($parameter)	class:hw_api_object
count		0;"	f	S:int function count($parameter)	class:hw_api_object
insert		0;"	f	S:bool function insert($attribute)	class:hw_api_object
remove		0;"	f	S:bool function remove($name)	class:hw_api_object
title		0;"	f	S:string function title($parameter)	class:hw_api_object
value		0;"	f	S:string function value($name)	class:hw_api_object
description		0;"	f	S:string function description()	class:hw_api_reason
type		0;"	f	S:HW_API_Reason function type()	class:hw_api_reason
hwapi_attribute_new		0;"	f	S:HW_API_Attribute function hwapi_attribute_new($name, $value)
hwapi_content_new		0;"	f	S:HW_API_Content function hwapi_content_new($content, $mimetype)
hwapi_hgcsp		0;"	f	S:HW_API function hwapi_hgcsp($hostname, $port)
hwapi_object_new		0;"	f	S:hw_api_object function hwapi_object_new($parameter)
LDAP_DEREF_NEVER		0;"	d
LDAP_DEREF_SEARCHING		0;"	d
LDAP_DEREF_FINDING		0;"	d
LDAP_DEREF_ALWAYS		0;"	d
LDAP_OPT_DEREF		0;"	d
LDAP_OPT_SIZELIMIT		0;"	d
LDAP_OPT_TIMELIMIT		0;"	d
LDAP_OPT_NETWORK_TIMEOUT		0;"	d
LDAP_OPT_PROTOCOL_VERSION		0;"	d
LDAP_OPT_ERROR_NUMBER		0;"	d
LDAP_OPT_REFERRALS		0;"	d
LDAP_OPT_RESTART		0;"	d
LDAP_OPT_HOST_NAME		0;"	d
LDAP_OPT_ERROR_STRING		0;"	d
LDAP_OPT_MATCHED_DN		0;"	d
LDAP_OPT_SERVER_CONTROLS		0;"	d
LDAP_OPT_CLIENT_CONTROLS		0;"	d
LDAP_OPT_DEBUG_LEVEL		0;"	d
GSLC_SSL_NO_AUTH		0;"	d
GSLC_SSL_ONEWAY_AUTH		0;"	d
GSLC_SSL_TWOWAY_AUTH		0;"	d
ldap_8859_to_t61		0;"	f	S:string function ldap_8859_to_t61($value)
ldap_add		0;"	f	S:bool function ldap_add($link_identifier, $dn, $entry)
ldap_bind		0;"	f	S:bool function ldap_bind($link_identifier, $bind_rdn, $bind_password)
ldap_close		0;"	f	S: function ldap_close()
ldap_compare		0;"	f	S:mixed function ldap_compare($link_identifier, $dn, $attribute, $value)
ldap_connect		0;"	f	S:resource function ldap_connect($hostname, $port = 389)
ldap_control_paged_result_response		0;"	f	S:bool function ldap_control_paged_result_response($link, $result, &$cookie, &$estimated)
ldap_control_paged_result		0;"	f	S:bool function ldap_control_paged_result($link, $pagesize, $iscritical = false, $cookie = "")
ldap_count_entries		0;"	f	S:int function ldap_count_entries($link_identifier, $result_identifier)
ldap_delete		0;"	f	S:bool function ldap_delete($link_identifier, $dn)
ldap_dn2ufn		0;"	f	S:string function ldap_dn2ufn($dn)
ldap_err2str		0;"	f	S:string function ldap_err2str($errno)
ldap_errno		0;"	f	S:int function ldap_errno($link_identifier)
ldap_error		0;"	f	S:string function ldap_error($link_identifier)
ldap_escape		0;"	f	S:string function ldap_escape($value, $ignore, $flags)
ldap_explode_dn		0;"	f	S:array function ldap_explode_dn($dn, $with_attrib)
ldap_first_attribute		0;"	f	S:string function ldap_first_attribute($link_identifier, $result_entry_identifier)
ldap_first_entry		0;"	f	S:resource function ldap_first_entry($link_identifier, $result_identifier)
ldap_first_reference		0;"	f	S:resource function ldap_first_reference($link, $result)
ldap_free_result		0;"	f	S:bool function ldap_free_result($result_identifier)
ldap_get_attributes		0;"	f	S:array function ldap_get_attributes($link_identifier, $result_entry_identifier)
ldap_get_dn		0;"	f	S:string function ldap_get_dn($link_identifier, $result_entry_identifier)
ldap_get_entries		0;"	f	S:array function ldap_get_entries($link_identifier, $result_identifier)
ldap_get_option		0;"	f	S:bool function ldap_get_option($link_identifier, $option, &$retval)
ldap_get_values_len		0;"	f	S:array function ldap_get_values_len($link_identifier, $result_entry_identifier, $attribute)
ldap_get_values		0;"	f	S:array function ldap_get_values($link_identifier, $result_entry_identifier, $attribute)
ldap_list		0;"	f	S:resource function ldap_list($link_identifier, $base_dn, $filter, $attributes, $attrsonly, $sizelimit, $timelimit, $deref)
ldap_mod_add		0;"	f	S:bool function ldap_mod_add($link_identifier, $dn, $entry)
ldap_mod_del		0;"	f	S:bool function ldap_mod_del($link_identifier, $dn, $entry)
ldap_mod_replace		0;"	f	S:bool function ldap_mod_replace($link_identifier, $dn, $entry)
ldap_modify_batch		0;"	f	S:bool function ldap_modify_batch($link_identifier, $dn, $entry)
ldap_modify		0;"	f	S:bool function ldap_modify($link_identifier, $dn, $entry)
ldap_next_attribute		0;"	f	S:string function ldap_next_attribute($link_identifier, $result_entry_identifier)
ldap_next_entry		0;"	f	S:resource function ldap_next_entry($link_identifier, $result_entry_identifier)
ldap_next_reference		0;"	f	S:resource function ldap_next_reference($link, $entry)
ldap_parse_reference		0;"	f	S:bool function ldap_parse_reference($link, $entry, &$referrals)
ldap_parse_result		0;"	f	S:bool function ldap_parse_result($link, $result, &$errcode, &$matcheddn, &$errmsg, &$referrals)
ldap_read		0;"	f	S:resource function ldap_read($link_identifier, $base_dn, $filter, $attributes, $attrsonly, $sizelimit, $timelimit, $deref)
ldap_rename		0;"	f	S:bool function ldap_rename($link_identifier, $dn, $newrdn, $newparent, $deleteoldrdn)
ldap_sasl_bind		0;"	f	S:bool function ldap_sasl_bind($link, $binddn, $password, $sasl_mech, $sasl_realm, $sasl_authc_id, $sasl_authz_id, $props)
ldap_search		0;"	f	S:resource function ldap_search($link_identifier, $base_dn, $filter, $attributes, $attrsonly, $sizelimit, $timelimit, $deref)
ldap_set_option		0;"	f	S:bool function ldap_set_option($link_identifier, $option, $newval)
ldap_set_rebind_proc		0;"	f	S:bool function ldap_set_rebind_proc($link, $callback)
ldap_sort		0;"	f	S:bool function ldap_sort($link, $result, $sortfilter)
ldap_start_tls		0;"	f	S:bool function ldap_start_tls($link)
ldap_t61_to_8859		0;"	f	S:string function ldap_t61_to_8859($value)
ldap_unbind		0;"	f	S:bool function ldap_unbind($link_identifier)
Memcache		0;"	c
add		0;"	f	S:bool function add($key, $var, $flag, $expire)	class:Memcache
addServer		0;"	f	S:bool function addServer($host, $port = 11211, $persistent, $weight, $timeout, $retry_interval, $status, $failure_callback, $timeoutms)	class:Memcache
close		0;"	f	S:bool function close()	class:Memcache
connect		0;"	f	S:bool function connect($host, $port, $timeout)	class:Memcache
decrement		0;"	f	S:int function decrement($key, $value = 1)	class:Memcache
delete		0;"	f	S:bool function delete($key, $timeout)	class:Memcache
flush		0;"	f	S:bool function flush()	class:Memcache
get		0;"	f	S:array function get($key, &$flags, $keys)	class:Memcache
getExtendedStats		0;"	f	S:array function getExtendedStats($type, $slabid, $limit = 100)	class:Memcache
getServerStatus		0;"	f	S:int function getServerStatus($host, $port = 11211)	class:Memcache
getStats		0;"	f	S:array function getStats($type, $slabid, $limit = 100)	class:Memcache
getVersion		0;"	f	S:string function getVersion()	class:Memcache
increment		0;"	f	S:int function increment($key, $value = 1)	class:Memcache
pconnect		0;"	f	S:mixed function pconnect($host, $port, $timeout)	class:Memcache
replace		0;"	f	S:bool function replace($key, $var, $flag, $expire)	class:Memcache
set		0;"	f	S:bool function set($key, $var, $flag, $expire)	class:Memcache
setCompressThreshold		0;"	f	S:bool function setCompressThreshold($threshold, $min_savings)	class:Memcache
setServerParams		0;"	f	S:bool function setServerParams($host, $port = 11211, $timeout, $retry_interval = false, $status, $failure_callback)	class:Memcache
memcache_debug		0;"	f	S:bool function memcache_debug($on_off)
OPT_COMPRESSION		0;"	o	class:Memcached
OPT_SERIALIZER		0;"	o	class:Memcached
SERIALIZER_PHP		0;"	o	class:Memcached
SERIALIZER_IGBINARY		0;"	o	class:Memcached
SERIALIZER_JSON		0;"	o	class:Memcached
OPT_PREFIX_KEY		0;"	o	class:Memcached
OPT_HASH		0;"	o	class:Memcached
HASH_DEFAULT		0;"	o	class:Memcached
HASH_MD5		0;"	o	class:Memcached
HASH_CRC		0;"	o	class:Memcached
HASH_FNV1_64		0;"	o	class:Memcached
HASH_FNV1A_64		0;"	o	class:Memcached
HASH_FNV1_32		0;"	o	class:Memcached
HASH_FNV1A_32		0;"	o	class:Memcached
HASH_HSIEH		0;"	o	class:Memcached
HASH_MURMUR		0;"	o	class:Memcached
OPT_DISTRIBUTION		0;"	o	class:Memcached
DISTRIBUTION_MODULA		0;"	o	class:Memcached
DISTRIBUTION_CONSISTENT		0;"	o	class:Memcached
OPT_LIBKETAMA_COMPATIBLE		0;"	o	class:Memcached
OPT_BUFFER_WRITES		0;"	o	class:Memcached
OPT_BINARY_PROTOCOL		0;"	o	class:Memcached
OPT_NO_BLOCK		0;"	o	class:Memcached
OPT_TCP_NODELAY		0;"	o	class:Memcached
OPT_SOCKET_SEND_SIZE		0;"	o	class:Memcached
OPT_SOCKET_RECV_SIZE		0;"	o	class:Memcached
OPT_CONNECT_TIMEOUT		0;"	o	class:Memcached
OPT_RETRY_TIMEOUT		0;"	o	class:Memcached
OPT_SEND_TIMEOUT		0;"	o	class:Memcached
OPT_RECV_TIMEOUT		0;"	o	class:Memcached
OPT_POLL_TIMEOUT		0;"	o	class:Memcached
OPT_CACHE_LOOKUPS		0;"	o	class:Memcached
OPT_SERVER_FAILURE_LIMIT		0;"	o	class:Memcached
HAVE_IGBINARY		0;"	o	class:Memcached
HAVE_JSON		0;"	o	class:Memcached
GET_PRESERVE_ORDER		0;"	o	class:Memcached
RES_SUCCESS		0;"	o	class:Memcached
RES_FAILURE		0;"	o	class:Memcached
RES_HOST_LOOKUP_FAILURE		0;"	o	class:Memcached
RES_UNKNOWN_READ_FAILURE		0;"	o	class:Memcached
RES_PROTOCOL_ERROR		0;"	o	class:Memcached
RES_CLIENT_ERROR		0;"	o	class:Memcached
RES_SERVER_ERROR		0;"	o	class:Memcached
RES_WRITE_FAILURE		0;"	o	class:Memcached
RES_DATA_EXISTS		0;"	o	class:Memcached
RES_NOTSTORED		0;"	o	class:Memcached
RES_NOTFOUND		0;"	o	class:Memcached
RES_PARTIAL_READ		0;"	o	class:Memcached
RES_SOME_ERRORS		0;"	o	class:Memcached
RES_NO_SERVERS		0;"	o	class:Memcached
RES_END		0;"	o	class:Memcached
RES_ERRNO		0;"	o	class:Memcached
RES_BUFFERED		0;"	o	class:Memcached
RES_TIMEOUT		0;"	o	class:Memcached
RES_BAD_KEY_PROVIDED		0;"	o	class:Memcached
RES_CONNECTION_SOCKET_CREATE_FAILURE		0;"	o	class:Memcached
RES_PAYLOAD_FAILURE		0;"	o	class:Memcached
Memcached		0;"	c
add		0;"	f	S:bool function add($key, $value, $expiration)	class:Memcached
addByKey		0;"	f	S:bool function addByKey($server_key, $key, $value, $expiration)	class:Memcached
addServer		0;"	f	S:bool function addServer($host, $port, $weight)	class:Memcached
addServers		0;"	f	S:bool function addServers($servers)	class:Memcached
append		0;"	f	S:bool function append($key, $value)	class:Memcached
appendByKey		0;"	f	S:bool function appendByKey($server_key, $key, $value)	class:Memcached
cas		0;"	f	S:bool function cas($cas_token, $key, $value, $expiration)	class:Memcached
casByKey		0;"	f	S:bool function casByKey($cas_token, $server_key, $key, $value, $expiration)	class:Memcached
__construct		0;"	f	S: function __construct($persistent_id)	class:Memcached
decrement		0;"	f	S:int function decrement($key, $offset = 1, $initial_value, $expiry)	class:Memcached
decrementByKey		0;"	f	S:int function decrementByKey($server_key, $key, $offset = 1, $initial_value, $expiry)	class:Memcached
delete		0;"	f	S:bool function delete($key, $time)	class:Memcached
deleteByKey		0;"	f	S:bool function deleteByKey($server_key, $key, $time)	class:Memcached
deleteMulti		0;"	f	S:bool function deleteMulti($keys, $time)	class:Memcached
deleteMultiByKey		0;"	f	S:bool function deleteMultiByKey($server_key, $keys, $time)	class:Memcached
fetch		0;"	f	S:array function fetch()	class:Memcached
fetchAll		0;"	f	S:array function fetchAll()	class:Memcached
flush		0;"	f	S:bool function flush($delay)	class:Memcached
get		0;"	f	S:mixed function get($key, $cache_cb, &$cas_token)	class:Memcached
getAllKeys		0;"	f	S:array function getAllKeys()	class:Memcached
getByKey		0;"	f	S:mixed function getByKey($server_key, $key, $cache_cb, &$cas_token)	class:Memcached
getDelayed		0;"	f	S:bool function getDelayed($keys, $with_cas, $value_cb)	class:Memcached
getDelayedByKey		0;"	f	S:bool function getDelayedByKey($server_key, $keys, $with_cas, $value_cb)	class:Memcached
getMulti		0;"	f	S:mixed function getMulti($keys, &$cas_tokens, $flags)	class:Memcached
getMultiByKey		0;"	f	S:array function getMultiByKey($server_key, $keys, &$cas_tokens, $flags)	class:Memcached
getOption		0;"	f	S:mixed function getOption($option)	class:Memcached
getResultCode		0;"	f	S:int function getResultCode()	class:Memcached
getResultMessage		0;"	f	S:string function getResultMessage()	class:Memcached
getServerByKey		0;"	f	S:array function getServerByKey($server_key)	class:Memcached
getServerList		0;"	f	S:array function getServerList()	class:Memcached
getStats		0;"	f	S:array function getStats()	class:Memcached
getVersion		0;"	f	S:array function getVersion()	class:Memcached
increment		0;"	f	S:int function increment($key, $offset = 1, $initial_value, $expiry)	class:Memcached
incrementByKey		0;"	f	S:int function incrementByKey($server_key, $key, $offset = 1, $initial_value, $expiry)	class:Memcached
isPersistent		0;"	f	S:bool function isPersistent()	class:Memcached
isPristine		0;"	f	S:bool function isPristine()	class:Memcached
prepend		0;"	f	S:bool function prepend($key, $value)	class:Memcached
prependByKey		0;"	f	S:bool function prependByKey($server_key, $key, $value)	class:Memcached
quit		0;"	f	S:bool function quit()	class:Memcached
replace		0;"	f	S:bool function replace($key, $value, $expiration)	class:Memcached
replaceByKey		0;"	f	S:bool function replaceByKey($server_key, $key, $value, $expiration)	class:Memcached
resetServerList		0;"	f	S:bool function resetServerList()	class:Memcached
set		0;"	f	S:bool function set($key, $value, $expiration)	class:Memcached
setByKey		0;"	f	S:bool function setByKey($server_key, $key, $value, $expiration)	class:Memcached
setMulti		0;"	f	S:bool function setMulti($items, $expiration)	class:Memcached
setMultiByKey		0;"	f	S:bool function setMultiByKey($server_key, $items, $expiration)	class:Memcached
setOption		0;"	f	S:bool function setOption($option, $value)	class:Memcached
setOptions		0;"	f	S:bool function setOptions($options)	class:Memcached
setSaslAuthData		0;"	f	S:void function setSaslAuthData($username, $password)	class:Memcached
touch		0;"	f	S:bool function touch($key, $expiration)	class:Memcached
touchByKey		0;"	f	S:bool function touchByKey($server_key, $key, $expiration)	class:Memcached
MemcachedException		0;"	c	i:RuntimeException
message		0;"	p	class:MemcachedException	a:protected	S:protected MemcachedException::message
code		0;"	p	class:MemcachedException	a:protected	S:protected MemcachedException::code
file		0;"	p	class:MemcachedException	a:protected	S:protected MemcachedException::file
line		0;"	p	class:MemcachedException	a:protected	S:protected MemcachedException::line
mqseries_back		0;"	f	S:void function mqseries_back($hconn, &$compCode, &$reason)
mqseries_begin		0;"	f	S:void function mqseries_begin($hconn, $beginOptions, &$compCode, &$reason)
mqseries_close		0;"	f	S:void function mqseries_close($hconn, $hobj, $options, &$compCode, &$reason)
mqseries_cmit		0;"	f	S:void function mqseries_cmit($hconn, &$compCode, &$reason)
mqseries_conn		0;"	f	S:void function mqseries_conn($qManagerName, &$hconn, &$compCode, &$reason)
mqseries_connx		0;"	f	S:void function mqseries_connx($qManagerName, &$connOptions, &$hconn, &$compCode, &$reason)
mqseries_disc		0;"	f	S:void function mqseries_disc($hconn, &$compCode, &$reason)
mqseries_get		0;"	f	S:void function mqseries_get($hConn, $hObj, &$md, &$gmo, &$bufferLength, &$msg, &$data_length, &$compCode, &$reason)
mqseries_inq		0;"	f	S:void function mqseries_inq($hconn, $hobj, $selectorCount, $selectors, $intAttrCount, &$intAttr, $charAttrLength, &$charAttr, &$compCode, &$reason)
mqseries_open		0;"	f	S:void function mqseries_open($hconn, &$objDesc, $option, &$hobj, &$compCode, &$reason)
mqseries_put1		0;"	f	S:void function mqseries_put1($hconn, &$objDesc, &$msgDesc, &$pmo, $buffer, &$compCode, &$reason)
mqseries_put		0;"	f	S:void function mqseries_put($hConn, $hObj, &$md, &$pmo, $message, &$compCode, &$reason)
mqseries_set		0;"	f	S:void function mqseries_set($hconn, $hobj, $selectorcount, $selectors, $intattrcount, $intattrs, $charattrlength, $charattrs, &$compCode, &$reason)
mqseries_strerror		0;"	f	S:string function mqseries_strerror($reason)
checkdnsrr		0;"	f	S:bool function checkdnsrr($host, $type = "MX")
closelog		0;"	f	S:bool function closelog()
define_syslog_variables		0;"	f	S:void function define_syslog_variables()
dns_check_record		0;"	f	S: function dns_check_record()
dns_get_mx		0;"	f	S: function dns_get_mx()
dns_get_record		0;"	f	S:array function dns_get_record($hostname, $type = DNS_ANY, &$authns, &$addtl, &$raw = false)
fsockopen		0;"	f	S:resource function fsockopen($hostname, $port = -1, &$errno, &$errstr, $timeout = ini_get("default_socket_timeout"))
gethostbyaddr		0;"	f	S:string function gethostbyaddr($ip_address)
gethostbyname		0;"	f	S:string function gethostbyname($hostname)
gethostbynamel		0;"	f	S:array function gethostbynamel($hostname)
gethostname		0;"	f	S:string function gethostname()
getmxrr		0;"	f	S:bool function getmxrr($hostname, &$mxhosts, &$weight)
getprotobyname		0;"	f	S:int function getprotobyname($name)
getprotobynumber		0;"	f	S:string function getprotobynumber($number)
getservbyname		0;"	f	S:int function getservbyname($service, $protocol)
getservbyport		0;"	f	S:string function getservbyport($port, $protocol)
header_register_callback		0;"	f	S:bool function header_register_callback($callback)
header_remove		0;"	f	S:void function header_remove($name)
header		0;"	f	S:void function header($string, $replace = true, $http_response_code)
headers_list		0;"	f	S:array function headers_list()
headers_sent		0;"	f	S:bool function headers_sent(&$file, &$line)
http_response_code		0;"	f	S:int function http_response_code($response_code)
inet_ntop		0;"	f	S:string function inet_ntop($in_addr)
inet_pton		0;"	f	S:string function inet_pton($address)
ip2long		0;"	f	S:int function ip2long($ip_address)
long2ip		0;"	f	S:string function long2ip($proper_address)
openlog		0;"	f	S:bool function openlog($ident, $option, $facility)
pfsockopen		0;"	f	S:resource function pfsockopen($hostname, $port = -1, &$errno, &$errstr, $timeout = ini_get("default_socket_timeout"))
setcookie		0;"	f	S:bool function setcookie($name, $value, $expire, $path, $domain, $secure = false, $httponly = false)
setrawcookie		0;"	f	S:bool function setrawcookie($name, $value, $expire, $path, $domain, $secure = false, $httponly = false)
socket_get_status		0;"	f	S: function socket_get_status()
socket_set_blocking		0;"	f	S: function socket_set_blocking()
socket_set_timeout		0;"	f	S: function socket_set_timeout()
syslog		0;"	f	S:bool function syslog($priority, $message)
rrd_create		0;"	f	S:bool function rrd_create($filename, $options)
rrd_error		0;"	f	S:string function rrd_error()
rrd_fetch		0;"	f	S:array function rrd_fetch($filename, $options)
rrd_first		0;"	f	S:int function rrd_first($file, $raaindex)
rrd_graph		0;"	f	S:array function rrd_graph($filename, $options)
rrd_info		0;"	f	S:array function rrd_info($filename)
rrd_last		0;"	f	S:int function rrd_last($filename)
rrd_lastupdate		0;"	f	S:array function rrd_lastupdate($filename)
rrd_restore		0;"	f	S:bool function rrd_restore($xml_file, $rrd_file, $options)
rrd_tune		0;"	f	S:bool function rrd_tune($filename, $options)
rrd_update		0;"	f	S:bool function rrd_update($filename, $options)
rrd_version		0;"	f	S:string function rrd_version()
rrd_xport		0;"	f	S:array function rrd_xport($options)
rrdc_disconnect		0;"	f	S:void function rrdc_disconnect()
RRDCreator		0;"	c
addArchive		0;"	f	S:void function addArchive($description)	class:RRDCreator
addDataSource		0;"	f	S:void function addDataSource($description)	class:RRDCreator
__construct		0;"	f	S: function __construct($path, $startTime, $step)	class:RRDCreator
save		0;"	f	S:bool function save()	class:RRDCreator
RRDGraph		0;"	c
__construct		0;"	f	S: function __construct($path)	class:RRDGraph
save		0;"	f	S:array function save()	class:RRDGraph
saveVerbose		0;"	f	S:array function saveVerbose()	class:RRDGraph
setOptions		0;"	f	S:void function setOptions($options)	class:RRDGraph
RRDUpdater		0;"	c
__construct		0;"	f	S: function __construct($path)	class:RRDUpdater
update		0;"	f	S:bool function update($values, $time = time())	class:RRDUpdater
SAM_AUTO		0;"	d
SAM_BOOLEAN		0;"	d
SAM_BUS		0;"	d
SAM_BYTE		0;"	d
SAM_BYTES		0;"	d
SAM_CORRELID		0;"	d
SAM_DELIVERYMODE		0;"	d
SAM_DOUBLE		0;"	d
SAM_ENDPOINTS		0;"	d
SAM_FLOAT		0;"	d
SAM_HOST		0;"	d
SAM_INT		0;"	d
SAM_LONG		0;"	d
SAM_MANUAL		0;"	d
SAM_MESSAGEID		0;"	d
SAM_MQTT		0;"	d
SAM_MQTT_CLEANSTART		0;"	d
SAM_NON_PERSISTENT		0;"	d
SAM_PASSWORD		0;"	d
SAM_PERSISTENT		0;"	d
SAM_PORT		0;"	d
SAM_PRIORITY		0;"	d
SAM_REPLY_TO		0;"	d
SAM_RTT		0;"	d
SAM_STRING		0;"	d
SAM_TARGETCHAIN		0;"	d
SAM_TEXT		0;"	d
SAM_TIMETOLIVE		0;"	d
SAM_TRANSACTIONS		0;"	d
SAM_USERID		0;"	d
SAM_WAIT		0;"	d
SAM_WMQ		0;"	d
SAM_WMQ_BINDINGS		0;"	d
SAM_WMQ_CLIENT		0;"	d
SAM_WMQ_TARGET_CLIENT		0;"	d
SAM_WPM		0;"	d
commit		0;"	f	S:bool function commit()	class:SAMConnection
connect		0;"	f	S:bool function connect($protocol, $properties)	class:SAMConnection
__construct		0;"	f	S: function __construct()	class:SAMConnection
disconnect		0;"	f	S:bool function disconnect()	class:SAMConnection
SAMConnection->errno		0;"	p	class:RRDUpdater	S: RRDUpdater::SAMConnection->errno
errno		0;"	f	S:int function errno()	class:SAMConnection
SAMConnection->error		0;"	p	class:RRDUpdater	S: RRDUpdater::SAMConnection->error
error		0;"	f	S:string function error()	class:SAMConnection
isConnected		0;"	f	S:bool function isConnected()	class:SAMConnection
peek		0;"	f	S:SAMMessage function peek($target, $properties)	class:SAMConnection
peekAll		0;"	f	S:array function peekAll($target, $properties)	class:SAMConnection
receive		0;"	f	S:SAMMessage function receive($target, $properties)	class:SAMConnection
remove		0;"	f	S:SAMMessage function remove($target, $properties)	class:SAMConnection
rollback		0;"	f	S:bool function rollback()	class:SAMConnection
send		0;"	f	S:string function send($target, $msg, $properties)	class:SAMConnection
setDebug		0;"	f	S:void function setDebug($switch)	class:SAMConnection
subscribe		0;"	f	S:string function subscribe($targetTopic)	class:SAMConnection
unsubscribe		0;"	f	S:bool function unsubscribe($subscriptionId, $targetTopic)	class:SAMConnection
SAMMessage->body		0;"	p	class:RRDUpdater	S: RRDUpdater::SAMMessage->body
body		0;"	f	S:string function body()	class:SAMMessage
__construct		0;"	f	S: function __construct($body)	class:SAMMessage
SAMMessage->header		0;"	p	class:RRDUpdater	S: RRDUpdater::SAMMessage->header
header		0;"	f	S:object function header()	class:SAMMessage
SNMP_OID_OUTPUT_SUFFIX		0;"	d
SNMP_OID_OUTPUT_MODULE		0;"	d
SNMP_OID_OUTPUT_FULL		0;"	d
SNMP_OID_OUTPUT_NUMERIC		0;"	d
SNMP_OID_OUTPUT_UCD		0;"	d
SNMP_OID_OUTPUT_NONE		0;"	d
SNMP_VALUE_LIBRARY		0;"	d
SNMP_VALUE_PLAIN		0;"	d
SNMP_VALUE_OBJECT		0;"	d
SNMP_BIT_STR		0;"	d
SNMP_OCTET_STR		0;"	d
SNMP_OPAQUE		0;"	d
SNMP_NULL		0;"	d
SNMP_OBJECT_ID		0;"	d
SNMP_IPADDRESS		0;"	d
SNMP_COUNTER		0;"	d
SNMP_UNSIGNED		0;"	d
SNMP_TIMETICKS		0;"	d
SNMP_UINTEGER		0;"	d
SNMP_INTEGER		0;"	d
SNMP_COUNTER64		0;"	d
snmp_get_quick_print		0;"	f	S:bool function snmp_get_quick_print()
snmp_get_valueretrieval		0;"	f	S:int function snmp_get_valueretrieval()
snmp_read_mib		0;"	f	S:bool function snmp_read_mib($filename)
snmp_set_enum_print		0;"	f	S:bool function snmp_set_enum_print($enum_print)
snmp_set_oid_numeric_print		0;"	f	S:void function snmp_set_oid_numeric_print($oid_format)
snmp_set_oid_output_format		0;"	f	S:bool function snmp_set_oid_output_format($oid_format = SNMP_OID_OUTPUT_MODULE)
snmp_set_quick_print		0;"	f	S:bool function snmp_set_quick_print($quick_print)
snmp_set_valueretrieval		0;"	f	S:bool function snmp_set_valueretrieval($method = SNMP_VALUE_LIBRARY)
snmp2_get		0;"	f	S:string function snmp2_get($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmp2_getnext		0;"	f	S:string function snmp2_getnext($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmp2_real_walk		0;"	f	S:array function snmp2_real_walk($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmp2_set		0;"	f	S:bool function snmp2_set($host, $community, $object_id, $type, $value, $timeout = 1000000, $retries = 5)
snmp2_walk		0;"	f	S:array function snmp2_walk($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmp3_get		0;"	f	S:string function snmp3_get($host, $sec_name, $sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $object_id, $timeout = 1000000, $retries = 5)
snmp3_getnext		0;"	f	S:string function snmp3_getnext($host, $sec_name, $sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $object_id, $timeout = 1000000, $retries = 5)
snmp3_real_walk		0;"	f	S:array function snmp3_real_walk($host, $sec_name, $sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $object_id, $timeout = 1000000, $retries = 5)
snmp3_set		0;"	f	S:bool function snmp3_set($host, $sec_name, $sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $object_id, $type, $value, $timeout = 1000000, $retries = 5)
snmp3_walk		0;"	f	S:array function snmp3_walk($host, $sec_name, $sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $object_id, $timeout = 1000000, $retries = 5)
snmpget		0;"	f	S:string function snmpget($hostname, $community, $object_id, $timeout = 1000000, $retries = 5)
snmpgetnext		0;"	f	S:string function snmpgetnext($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmprealwalk		0;"	f	S:array function snmprealwalk($host, $community, $object_id, $timeout = 1000000, $retries = 5)
snmpset		0;"	f	S:bool function snmpset($host, $community, $object_id, $type, $value, $timeout = 1000000, $retries = 5)
snmpwalk		0;"	f	S:array function snmpwalk($hostname, $community, $object_id, $timeout = 1000000, $retries = 5)
snmpwalkoid		0;"	f	S:array function snmpwalkoid($hostname, $community, $object_id, $timeout = 1000000, $retries = 5)
SNMP		0;"	c
max_oids		0;"	p	class:SNMP	S: SNMP::max_oids
valueretrieval		0;"	p	class:SNMP	S: SNMP::valueretrieval
quick_print		0;"	p	class:SNMP	S: SNMP::quick_print
enum_print		0;"	p	class:SNMP	S: SNMP::enum_print
oid_output_format		0;"	p	class:SNMP	S: SNMP::oid_output_format
oid_increasing_check		0;"	p	class:SNMP	S: SNMP::oid_increasing_check
exceptions_enabled		0;"	p	class:SNMP	S: SNMP::exceptions_enabled
info		0;"	p	class:SNMP	S: SNMP::info
ERRNO_NOERROR		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_NOERROR
ERRNO_GENERIC		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_GENERIC
ERRNO_TIMEOUT		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_TIMEOUT
ERRNO_ERROR_IN_REPLY		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_ERROR_IN_REPLY
ERRNO_OID_NOT_INCREASING		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_OID_NOT_INCREASING
ERRNO_OID_PARSING_ERROR		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_OID_PARSING_ERROR
ERRNO_MULTIPLE_SET_QUERIES		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_MULTIPLE_SET_QUERIES
ERRNO_ANY		0;"	o	class:SNMP	a:const	S:const SNMP::ERRNO_ANY
VERSION_1		0;"	o	class:SNMP	a:const	S:const SNMP::VERSION_1
VERSION_2C		0;"	o	class:SNMP	a:const	S:const SNMP::VERSION_2C
VERSION_2c		0;"	o	class:SNMP	a:const	S:const SNMP::VERSION_2c
VERSION_3		0;"	o	class:SNMP	a:const	S:const SNMP::VERSION_3
close		0;"	f	S:bool function close()	class:SNMP
__construct		0;"	f	S: function __construct($version, $hostname, $community, $timeout = 1000000, $retries = 5)	class:SNMP
get		0;"	f	S:mixed function get($object_id, $preserve_keys = false)	class:SNMP
getErrno		0;"	f	S:int function getErrno()	class:SNMP
getError		0;"	f	S:string function getError()	class:SNMP
getnext		0;"	f	S:mixed function getnext($object_id)	class:SNMP
set		0;"	f	S:bool function set($object_id, $type, $value)	class:SNMP
setSecurity		0;"	f	S:bool function setSecurity($sec_level, $auth_protocol, $auth_passphrase, $priv_protocol, $priv_passphrase, $contextName, $contextEngineID)	class:SNMP
walk		0;"	f	S:array function walk($object_id, $suffix_as_key, $max_repetitions, $non_repeaters)	class:SNMP
SNMPException		0;"	c	i:RuntimeException
code		0;"	p	class:SNMPException	a:protected	S:protected SNMPException::code
message		0;"	p	class:SNMPException	a:protected	S:protected SNMPException::message
code		0;"	p	class:SNMPException	a:protected	S:protected SNMPException::code
file		0;"	p	class:SNMPException	a:protected	S:protected SNMPException::file
line		0;"	p	class:SNMPException	a:protected	S:protected SNMPException::line
AF_UNIX		0;"	d
AF_INET		0;"	d
AF_INET6		0;"	d
SOCK_STREAM		0;"	d
SOCK_DGRAM		0;"	d
SOCK_RAW		0;"	d
SOCK_SEQPACKET		0;"	d
SOCK_RDM		0;"	d
MSG_OOB		0;"	d
MSG_WAITALL		0;"	d
MSG_PEEK		0;"	d
MSG_DONTROUTE		0;"	d
MSG_EOR		0;"	d
MSG_EOF		0;"	d
SO_DEBUG		0;"	d
SO_REUSEADDR		0;"	d
SO_REUSEPORT		0;"	d
SO_KEEPALIVE		0;"	d
SO_DONTROUTE		0;"	d
SO_LINGER		0;"	d
SO_BROADCAST		0;"	d
SO_OOBINLINE		0;"	d
SO_SNDBUF		0;"	d
SO_RCVBUF		0;"	d
SO_SNDLOWAT		0;"	d
SO_RCVLOWAT		0;"	d
SO_SNDTIMEO		0;"	d
SO_RCVTIMEO		0;"	d
SO_TYPE		0;"	d
SO_ERROR		0;"	d
TCP_NODELAY		0;"	d
SOL_SOCKET		0;"	d
PHP_NORMAL_READ		0;"	d
PHP_BINARY_READ		0;"	d
SOL_TCP		0;"	d
SOL_UDP		0;"	d
SOCKET_EINTR		0;"	d
SOCKET_EBADF		0;"	d
SOCKET_EACCES		0;"	d
SOCKET_EFAULT		0;"	d
SOCKET_EINVAL		0;"	d
SOCKET_EMFILE		0;"	d
SOCKET_ENAMETOOLONG		0;"	d
SOCKET_ENOTEMPTY		0;"	d
SOCKET_ELOOP		0;"	d
SOCKET_EWOULDBLOCK		0;"	d
SOCKET_EREMOTE		0;"	d
SOCKET_EUSERS		0;"	d
SOCKET_ENOTSOCK		0;"	d
SOCKET_EDESTADDRREQ		0;"	d
SOCKET_EMSGSIZE		0;"	d
SOCKET_EPROTOTYPE		0;"	d
SOCKET_EPROTONOSUPPORT		0;"	d
SOCKET_ESOCKTNOSUPPORT		0;"	d
SOCKET_EOPNOTSUPP		0;"	d
SOCKET_EPFNOSUPPORT		0;"	d
SOCKET_EAFNOSUPPORT		0;"	d
SOCKET_EADDRNOTAVAIL		0;"	d
SOCKET_ENETDOWN		0;"	d
SOCKET_ENETUNREACH		0;"	d
SOCKET_ENETRESET		0;"	d
SOCKET_ECONNABORTED		0;"	d
SOCKET_ECONNRESET		0;"	d
SOCKET_ENOBUFS		0;"	d
SOCKET_EISCONN		0;"	d
SOCKET_ENOTCONN		0;"	d
SOCKET_ESHUTDOWN		0;"	d
SOCKET_ETIMEDOUT		0;"	d
SOCKET_ECONNREFUSED		0;"	d
SOCKET_EHOSTDOWN		0;"	d
SOCKET_EHOSTUNREACH		0;"	d
SOCKET_EALREADY		0;"	d
SOCKET_EINPROGRESS		0;"	d
SOCKET_ENOPROTOOPT		0;"	d
SOCKET_EADDRINUSE		0;"	d
SOCKET_ETOOMYREFS		0;"	d
SOCKET_EPROCLIM		0;"	d
SOCKET_EDUOT		0;"	d
SOCKET_ESTALE		0;"	d
SOCKET_EDISCON		0;"	d
SOCKET_SYSNOTREADY		0;"	d
SOCKET_VERNOTSUPPORTED		0;"	d
SOCKET_NOTINITIALISED		0;"	d
SOCKET_HOST_NOT_FOUND		0;"	d
SOCKET_TRY_AGAIN		0;"	d
SOCKET_NO_RECOVERY		0;"	d
SOCKET_NO_DATA		0;"	d
SOCKET_NO_ADDRESS		0;"	d
SOCKET_EPERM		0;"	d
SOCKET_ENOENT		0;"	d
SOCKET_EIO		0;"	d
SOCKET_ENXIO		0;"	d
SOCKET_E2BIG		0;"	d
SOCKET_EAGAIN		0;"	d
SOCKET_ENOMEM		0;"	d
SOCKET_ENOTBLK		0;"	d
SOCKET_EBUSY		0;"	d
SOCKET_EEXIST		0;"	d
SOCKET_EXDEV		0;"	d
SOCKET_ENODEV		0;"	d
SOCKET_ENOTDIR		0;"	d
SOCKET_EISDIR		0;"	d
SOCKET_ENFILE		0;"	d
SOCKET_ENOTTY		0;"	d
SOCKET_ENOSPC		0;"	d
SOCKET_ESPIPE		0;"	d
SOCKET_EROFS		0;"	d
SOCKET_EMLINK		0;"	d
SOCKET_EPIPE		0;"	d
SOCKET_ENOLCK		0;"	d
SOCKET_ENOSYS		0;"	d
SOCKET_ENOMSG		0;"	d
SOCKET_EIDRM		0;"	d
SOCKET_ECHRNG		0;"	d
SOCKET_EL2NSYNC		0;"	d
SOCKET_EL3HLT		0;"	d
SOCKET_EL3RST		0;"	d
SOCKET_ELNRNG		0;"	d
SOCKET_EUNATCH		0;"	d
SOCKET_ENOCSI		0;"	d
SOCKET_EL2HLT		0;"	d
SOCKET_EBADE		0;"	d
SOCKET_EBADR		0;"	d
SOCKET_EXFULL		0;"	d
SOCKET_ENOANO		0;"	d
SOCKET_EBADRQC		0;"	d
SOCKET_EBADSLT		0;"	d
SOCKET_ENOSTR		0;"	d
SOCKET_ENODATA		0;"	d
SOCKET_ETIME		0;"	d
SOCKET_ENOSR		0;"	d
SOCKET_ENONET		0;"	d
SOCKET_ENOLINK		0;"	d
SOCKET_EADV		0;"	d
SOCKET_ESRMNT		0;"	d
SOCKET_ECOMM		0;"	d
SOCKET_EPROTO		0;"	d
SOCKET_EMULTIHOP		0;"	d
SOCKET_EBADMSG		0;"	d
SOCKET_ENOTUNIQ		0;"	d
SOCKET_EBADFD		0;"	d
SOCKET_EREMCHG		0;"	d
SOCKET_ERESTART		0;"	d
SOCKET_ESTRPIPE		0;"	d
SOCKET_EPROTOOPT		0;"	d
SOCKET_ADDRINUSE		0;"	d
SOCKET_ETOOMANYREFS		0;"	d
SOCKET_EISNAM		0;"	d
SOCKET_EREMOTEIO		0;"	d
SOCKET_EDQUOT		0;"	d
SOCKET_ENOMEDIUM		0;"	d
SOCKET_EMEDIUMTYPE		0;"	d
socket_accept		0;"	f	S:resource function socket_accept($socket)
socket_bind		0;"	f	S:bool function socket_bind($socket, $address, $port)
socket_clear_error		0;"	f	S:void function socket_clear_error($socket)
socket_close		0;"	f	S:void function socket_close($socket)
socket_cmsg_space		0;"	f	S:int function socket_cmsg_space($level, $type)
socket_connect		0;"	f	S:bool function socket_connect($socket, $address, $port)
socket_create_listen		0;"	f	S:resource function socket_create_listen($port, $backlog = 128)
socket_create_pair		0;"	f	S:bool function socket_create_pair($domain, $type, $protocol, &$fd)
socket_create		0;"	f	S:resource function socket_create($domain, $type, $protocol)
socket_get_option		0;"	f	S:mixed function socket_get_option($socket, $level, $optname)
socket_getpeername		0;"	f	S:bool function socket_getpeername($socket, &$address, &$port)
socket_getsockname		0;"	f	S:bool function socket_getsockname($socket, &$addr, &$port)
socket_import_stream		0;"	f	S:resource function socket_import_stream($stream)
socket_last_error		0;"	f	S:int function socket_last_error($socket)
socket_listen		0;"	f	S:bool function socket_listen($socket, $backlog)
socket_read		0;"	f	S:string function socket_read($socket, $length, $type = PHP_BINARY_READ)
socket_recv		0;"	f	S:int function socket_recv($socket, &$buf, $len, $flags)
socket_recvfrom		0;"	f	S:int function socket_recvfrom($socket, &$buf, $len, $flags, &$name, &$port)
socket_recvmsg		0;"	f	S:int function socket_recvmsg($socket, $message, $flags)
socket_select		0;"	f	S:int function socket_select(&$read, &$write, &$except, $tv_sec, $tv_usec)
socket_send		0;"	f	S:int function socket_send($socket, $buf, $len, $flags)
socket_sendmsg		0;"	f	S:int function socket_sendmsg($socket, $message, $flags)
socket_sendto		0;"	f	S:int function socket_sendto($socket, $buf, $len, $flags, $addr, $port)
socket_set_block		0;"	f	S:bool function socket_set_block($socket)
socket_set_nonblock		0;"	f	S:bool function socket_set_nonblock($socket)
socket_set_option		0;"	f	S:bool function socket_set_option($socket, $level, $optname, $optval)
socket_shutdown		0;"	f	S:bool function socket_shutdown($socket, $how = 2)
socket_strerror		0;"	f	S:string function socket_strerror($errno)
socket_write		0;"	f	S:int function socket_write($socket, $buffer, $length)
SSH2_FINGERPRINT_MD5		0;"	d
SSH2_FINGERPRINT_SHA1		0;"	d
SSH2_FINGERPRINT_HEX		0;"	d
SSH2_FINGERPRINT_RAW		0;"	d
SSH2_TERM_UNIT_CHARS		0;"	d
SSH2_TERM_UNIT_PIXELS		0;"	d
SSH2_DEFAULT_TERM_WIDTH		0;"	d
SSH2_DEFAULT_TERM_HEIGHT		0;"	d
SSH2_DEFAULT_TERM_UNIT		0;"	d
SSH2_STREAM_STDIO		0;"	d
SSH2_STREAM_STDERR		0;"	d
SSH2_DEFAULT_TERMINAL		0;"	d
ssh2_auth_agent		0;"	f	S:bool function ssh2_auth_agent($session, $username)
ssh2_auth_hostbased_file		0;"	f	S:bool function ssh2_auth_hostbased_file($session, $username, $hostname, $pubkeyfile, $privkeyfile, $passphrase, $local_username)
ssh2_auth_none		0;"	f	S:mixed function ssh2_auth_none($session, $username)
ssh2_auth_password		0;"	f	S:bool function ssh2_auth_password($session, $username, $password)
ssh2_auth_pubkey_file		0;"	f	S:bool function ssh2_auth_pubkey_file($session, $username, $pubkeyfile, $privkeyfile, $passphrase)
ssh2_connect		0;"	f	S:resource function ssh2_connect($host, $port = 22, $methods, $callbacks)
ssh2_exec		0;"	f	S:resource function ssh2_exec($session, $command, $pty, $env, $width = 80, $height = 25, $width_height_type = SSH2_TERM_UNIT_CHARS)
ssh2_fetch_stream		0;"	f	S:resource function ssh2_fetch_stream($channel, $streamid)
ssh2_fingerprint		0;"	f	S:string function ssh2_fingerprint($session, $flags = SSH2_FINGERPRINT_MD5 | SSH2_FINGERPRINT_HEX)
ssh2_methods_negotiated		0;"	f	S:array function ssh2_methods_negotiated($session)
ssh2_publickey_add		0;"	f	S:bool function ssh2_publickey_add($pkey, $algoname, $blob, $overwrite = false, $attributes)
ssh2_publickey_init		0;"	f	S:resource function ssh2_publickey_init($session)
ssh2_publickey_list		0;"	f	S:array function ssh2_publickey_list($pkey)
ssh2_publickey_remove		0;"	f	S:bool function ssh2_publickey_remove($pkey, $algoname, $blob)
ssh2_scp_recv		0;"	f	S:bool function ssh2_scp_recv($session, $remote_file, $local_file)
ssh2_scp_send		0;"	f	S:bool function ssh2_scp_send($session, $local_file, $remote_file, $create_mode = 0644)
ssh2_sftp_chmod		0;"	f	S:bool function ssh2_sftp_chmod($sftp, $filename, $mode)
ssh2_sftp_lstat		0;"	f	S:array function ssh2_sftp_lstat($sftp, $path)
ssh2_sftp_mkdir		0;"	f	S:bool function ssh2_sftp_mkdir($sftp, $dirname, $mode = 0777, $recursive = false)
ssh2_sftp_readlink		0;"	f	S:string function ssh2_sftp_readlink($sftp, $link)
ssh2_sftp_realpath		0;"	f	S:string function ssh2_sftp_realpath($sftp, $filename)
ssh2_sftp_rename		0;"	f	S:bool function ssh2_sftp_rename($sftp, $from, $to)
ssh2_sftp_rmdir		0;"	f	S:bool function ssh2_sftp_rmdir($sftp, $dirname)
ssh2_sftp_stat		0;"	f	S:array function ssh2_sftp_stat($sftp, $path)
ssh2_sftp_symlink		0;"	f	S:bool function ssh2_sftp_symlink($sftp, $target, $link)
ssh2_sftp_unlink		0;"	f	S:bool function ssh2_sftp_unlink($sftp, $filename)
ssh2_sftp		0;"	f	S:resource function ssh2_sftp($session)
ssh2_shell		0;"	f	S:resource function ssh2_shell($session, $term_type = "vanilla", $env, $width = 80, $height = 25, $width_height_type = SSH2_TERM_UNIT_CHARS)
ssh2_tunnel		0;"	f	S:resource function ssh2_tunnel($session, $host, $port)
stomp_connect_error		0;"	f	S:string function stomp_connect_error()
stomp_version		0;"	f	S:string function stomp_version()
Stomp		0;"	c
abort		0;"	f	S:bool function abort($transaction_id, $headers, $link)	class:Stomp
ack		0;"	f	S:bool function ack($msg, $headers, $link)	class:Stomp
begin		0;"	f	S:bool function begin($transaction_id, $headers, $link)	class:Stomp
commit		0;"	f	S:bool function commit($transaction_id, $headers, $link)	class:Stomp
__construct		0;"	f	S:resource function __construct($broker = ini_get("stomp.default_broker_uri"), $username, $password, $headers)	class:Stomp
__destruct		0;"	f	S:bool function __destruct($link)	class:Stomp
error		0;"	f	S:string function error($link)	class:Stomp
getReadTimeout		0;"	f	S:array function getReadTimeout($link)	class:Stomp
getSessionId		0;"	f	S:string function getSessionId($link)	class:Stomp
hasFrame		0;"	f	S:bool function hasFrame($link)	class:Stomp
readFrame		0;"	f	S:array function readFrame($class_name = "stompFrame", $link)	class:Stomp
send		0;"	f	S:bool function send($destination, $msg, $headers, $link)	class:Stomp
setReadTimeout		0;"	f	S:void function setReadTimeout($seconds, $microseconds, $link)	class:Stomp
subscribe		0;"	f	S:bool function subscribe($destination, $headers, $link)	class:Stomp
unsubscribe		0;"	f	S:bool function unsubscribe($destination, $headers, $link)	class:Stomp
StompFrame		0;"	c
command		0;"	p	class:StompFrame	S: StompFrame::command
headers		0;"	p	class:StompFrame	S: StompFrame::headers
body		0;"	p	class:StompFrame	S: StompFrame::body
__construct		0;"	f	S: function __construct($command, $headers, $body)	class:StompFrame
StompException		0;"	c	i:Exception
getDetails		0;"	f	S:string function getDetails()	class:StompException
SVM		0;"	c
C_SVC		0;"	o	class:SVM	a:const	S:const SVM::C_SVC
NU_SVC		0;"	o	class:SVM	a:const	S:const SVM::NU_SVC
ONE_CLASS		0;"	o	class:SVM	a:const	S:const SVM::ONE_CLASS
EPSILON_SVR		0;"	o	class:SVM	a:const	S:const SVM::EPSILON_SVR
NU_SVR		0;"	o	class:SVM	a:const	S:const SVM::NU_SVR
KERNEL_LINEAR		0;"	o	class:SVM	a:const	S:const SVM::KERNEL_LINEAR
KERNEL_POLY		0;"	o	class:SVM	a:const	S:const SVM::KERNEL_POLY
KERNEL_RBF		0;"	o	class:SVM	a:const	S:const SVM::KERNEL_RBF
KERNEL_SIGMOID		0;"	o	class:SVM	a:const	S:const SVM::KERNEL_SIGMOID
KERNEL_PRECOMPUTED		0;"	o	class:SVM	a:const	S:const SVM::KERNEL_PRECOMPUTED
OPT_TYPE		0;"	o	class:SVM	a:const	S:const SVM::OPT_TYPE
OPT_KERNEL_TYPE		0;"	o	class:SVM	a:const	S:const SVM::OPT_KERNEL_TYPE
OPT_DEGREE		0;"	o	class:SVM	a:const	S:const SVM::OPT_DEGREE
OPT_SHRINKING		0;"	o	class:SVM	a:const	S:const SVM::OPT_SHRINKING
OPT_PROPABILITY		0;"	o	class:SVM	a:const	S:const SVM::OPT_PROPABILITY
OPT_GAMMA		0;"	o	class:SVM	a:const	S:const SVM::OPT_GAMMA
OPT_NU		0;"	o	class:SVM	a:const	S:const SVM::OPT_NU
OPT_EPS		0;"	o	class:SVM	a:const	S:const SVM::OPT_EPS
OPT_P		0;"	o	class:SVM	a:const	S:const SVM::OPT_P
OPT_COEF_ZERO		0;"	o	class:SVM	a:const	S:const SVM::OPT_COEF_ZERO
OPT_C		0;"	o	class:SVM	a:const	S:const SVM::OPT_C
OPT_CACHE_SIZE		0;"	o	class:SVM	a:const	S:const SVM::OPT_CACHE_SIZE
__construct		0;"	f	S: function __construct()	class:SVM
crossvalidate		0;"	f	S:float function crossvalidate($problem, $number_of_folds)	class:SVM
getOptions		0;"	f	S:array function getOptions()	class:SVM
setOptions		0;"	f	S:bool function setOptions($params)	class:SVM
train		0;"	f	S:SVMModel function train($problem, $weights)	class:SVM
SVMModel		0;"	c
checkProbabilityModel		0;"	f	S:bool function checkProbabilityModel()	class:SVMModel
__construct		0;"	f	S: function __construct($filename)	class:SVMModel
getLabels		0;"	f	S:array function getLabels()	class:SVMModel
getNrClass		0;"	f	S:int function getNrClass()	class:SVMModel
getSvmType		0;"	f	S:int function getSvmType()	class:SVMModel
getSvrProbability		0;"	f	S:float function getSvrProbability()	class:SVMModel
load		0;"	f	S:bool function load($filename)	class:SVMModel
predict_probability		0;"	f	S:float function predict_probability($data)	class:SVMModel
predict		0;"	f	S:float function predict($data)	class:SVMModel
save		0;"	f	S:bool function save($filename)	class:SVMModel
SVN_REVISION_HEAD		0;"	d
SVN_AUTH_PARAM_DEFAULT_USERNAME		0;"	d
SVN_AUTH_PARAM_DEFAULT_PASSWORD		0;"	d
SVN_AUTH_PARAM_NON_INTERACTIVE		0;"	d
SVN_AUTH_PARAM_DONT_STORE_PASSWORDS		0;"	d
SVN_AUTH_PARAM_NO_AUTH_CACHE		0;"	d
SVN_AUTH_PARAM_SSL_SERVER_FAILURES		0;"	d
SVN_AUTH_PARAM_SSL_SERVER_CERT_INFO		0;"	d
SVN_AUTH_PARAM_CONFIG		0;"	d
SVN_AUTH_PARAM_SERVER_GROUP		0;"	d
SVN_AUTH_PARAM_CONFIG_DIR		0;"	d
PHP_SVN_AUTH_PARAM_IGNORE_SSL_VERIFY_ERRORS		0;"	d
SVN_FS_CONFIG_FS_TYPE		0;"	d
SVN_FS_TYPE_BDB		0;"	d
SVN_FS_TYPE_FSFS		0;"	d
SVN_PROP_REVISION_DATE		0;"	d
SVN_PROP_REVISION_ORIG_DATE		0;"	d
SVN_PROP_REVISION_AUTHOR		0;"	d
SVN_PROP_REVISION_LOG		0;"	d
SVN_WC_STATUS_NONE		0;"	d
SVN_WC_STATUS_UNVERSIONED		0;"	d
SVN_WC_STATUS_NORMAL		0;"	d
SVN_WC_STATUS_ADDED		0;"	d
SVN_WC_STATUS_MISSING		0;"	d
SVN_WC_STATUS_DELETED		0;"	d
SVN_WC_STATUS_REPLACED		0;"	d
SVN_WC_STATUS_MODIFIED		0;"	d
SVN_WC_STATUS_MERGED		0;"	d
SVN_WC_STATUS_CONFLICTED		0;"	d
SVN_WC_STATUS_IGNORED		0;"	d
SVN_WC_STATUS_OBSTRUCTED		0;"	d
SVN_WC_STATUS_EXTERNAL		0;"	d
SVN_WC_STATUS_INCOMPLETE		0;"	d
SVN_NODE_NONE		0;"	d
SVN_NODE_FILE		0;"	d
SVN_NODE_DIR		0;"	d
SVN_NODE_UNKNOWN		0;"	d
svn_add		0;"	f	S:bool function svn_add($path, $recursive = true, $force = false)
svn_auth_get_parameter		0;"	f	S:string function svn_auth_get_parameter($key)
svn_auth_set_parameter		0;"	f	S:void function svn_auth_set_parameter($key, $value)
svn_blame		0;"	f	S:array function svn_blame($repository_url, $revision_no = SVN_REVISION_HEAD)
svn_cat		0;"	f	S:string function svn_cat($repos_url, $revision_no)
svn_checkout		0;"	f	S:bool function svn_checkout($repos, $targetpath, $revision, $flags)
svn_cleanup		0;"	f	S:bool function svn_cleanup($workingdir)
svn_client_version		0;"	f	S:string function svn_client_version()
svn_commit		0;"	f	S:array function svn_commit($log, $targets, $recursive = true)
svn_delete		0;"	f	S:bool function svn_delete($path, $force = false)
svn_diff		0;"	f	S:array function svn_diff($path1, $rev1, $path2, $rev2)
svn_export		0;"	f	S:bool function svn_export($frompath, $topath, $working_copy = true, $revision_no = -1)
svn_fs_abort_txn		0;"	f	S:bool function svn_fs_abort_txn($txn)
svn_fs_apply_text		0;"	f	S:resource function svn_fs_apply_text($root, $path)
svn_fs_begin_txn2		0;"	f	S:resource function svn_fs_begin_txn2($repos, $rev)
svn_fs_change_node_prop		0;"	f	S:bool function svn_fs_change_node_prop($root, $path, $name, $value)
svn_fs_check_path		0;"	f	S:int function svn_fs_check_path($fsroot, $path)
svn_fs_contents_changed		0;"	f	S:bool function svn_fs_contents_changed($root1, $path1, $root2, $path2)
svn_fs_copy		0;"	f	S:bool function svn_fs_copy($from_root, $from_path, $to_root, $to_path)
svn_fs_delete		0;"	f	S:bool function svn_fs_delete($root, $path)
svn_fs_dir_entries		0;"	f	S:array function svn_fs_dir_entries($fsroot, $path)
svn_fs_file_contents		0;"	f	S:resource function svn_fs_file_contents($fsroot, $path)
svn_fs_file_length		0;"	f	S:int function svn_fs_file_length($fsroot, $path)
svn_fs_is_dir		0;"	f	S:bool function svn_fs_is_dir($root, $path)
svn_fs_is_file		0;"	f	S:bool function svn_fs_is_file($root, $path)
svn_fs_make_dir		0;"	f	S:bool function svn_fs_make_dir($root, $path)
svn_fs_make_file		0;"	f	S:bool function svn_fs_make_file($root, $path)
svn_fs_node_created_rev		0;"	f	S:int function svn_fs_node_created_rev($fsroot, $path)
svn_fs_node_prop		0;"	f	S:string function svn_fs_node_prop($fsroot, $path, $propname)
svn_fs_props_changed		0;"	f	S:bool function svn_fs_props_changed($root1, $path1, $root2, $path2)
svn_fs_revision_prop		0;"	f	S:string function svn_fs_revision_prop($fs, $revnum, $propname)
svn_fs_revision_root		0;"	f	S:resource function svn_fs_revision_root($fs, $revnum)
svn_fs_txn_root		0;"	f	S:resource function svn_fs_txn_root($txn)
svn_fs_youngest_rev		0;"	f	S:int function svn_fs_youngest_rev($fs)
svn_import		0;"	f	S:bool function svn_import($path, $url, $nonrecursive)
svn_log		0;"	f	S:array function svn_log($repos_url, $start_revision, $end_revision, $limit, $flags = SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY)
svn_ls		0;"	f	S:array function svn_ls($repos_url, $revision_no = SVN_REVISION_HEAD, $recurse = false, $peg = false)
svn_mkdir		0;"	f	S:bool function svn_mkdir($path, $log_message)
svn_repos_create		0;"	f	S:resource function svn_repos_create($path, $config, $fsconfig)
svn_repos_fs_begin_txn_for_commit		0;"	f	S:resource function svn_repos_fs_begin_txn_for_commit($repos, $rev, $author, $log_msg)
svn_repos_fs_commit_txn		0;"	f	S:int function svn_repos_fs_commit_txn($txn)
svn_repos_fs		0;"	f	S:resource function svn_repos_fs($repos)
svn_repos_hotcopy		0;"	f	S:bool function svn_repos_hotcopy($repospath, $destpath, $cleanlogs)
svn_repos_open		0;"	f	S:resource function svn_repos_open($path)
svn_repos_recover		0;"	f	S:bool function svn_repos_recover($path)
svn_revert		0;"	f	S:bool function svn_revert($path, $recursive = false)
svn_status		0;"	f	S:array function svn_status($path, $flags)
svn_update		0;"	f	S:int function svn_update($path, $revno = SVN_REVISION_HEAD, $recurse = true)
tcpwrap_check		0;"	f	S:bool function tcpwrap_check($daemon, $address, $user, $nodns = false)
VARNISH_STATUS_SYNTAX		0;"	d
VARNISH_STATUS_UNKNOWN		0;"	d
VARNISH_STATUS_UNIMPL		0;"	d
VARNISH_STATUS_TOOFEW		0;"	d
VARNISH_STATUS_TOOMANY		0;"	d
VARNISH_STATUS_PARAM		0;"	d
VARNISH_STATUS_AUTH		0;"	d
VARNISH_STATUS_OK		0;"	d
VARNISH_STATUS_CANT		0;"	d
VARNISH_STATUS_COMMS		0;"	d
VARNISH_STATUS_CLOSE		0;"	d
VARNISH_CONFIG_IDENT		0;"	d
VARNISH_CONFIG_HOST		0;"	d
VARNISH_CONFIG_PORT		0;"	d
VARNISH_CONFIG_TIMEOUT		0;"	d
VARNISH_CONFIG_SECRET		0;"	d
VARNISH_CONFIG_COMPAT		0;"	d
VARNISH_COMPAT_2		0;"	d
VARNISH_COMPAT_3		0;"	d
VarnishAdmin		0;"	c
auth		0;"	f	S:bool function auth()	class:VarnishAdmin
ban		0;"	f	S:int function ban($vcl_regex)	class:VarnishAdmin
banUrl		0;"	f	S:int function banUrl($vcl_regex)	class:VarnishAdmin
clearPanic		0;"	f	S:int function clearPanic()	class:VarnishAdmin
connect		0;"	f	S:bool function connect()	class:VarnishAdmin
__construct		0;"	f	S: function __construct($args)	class:VarnishAdmin
disconnect		0;"	f	S:bool function disconnect()	class:VarnishAdmin
getPanic		0;"	f	S:string function getPanic()	class:VarnishAdmin
getParams		0;"	f	S:array function getParams()	class:VarnishAdmin
isRunning		0;"	f	S:bool function isRunning()	class:VarnishAdmin
setCompat		0;"	f	S:void function setCompat($compat)	class:VarnishAdmin
setHost		0;"	f	S:void function setHost($host)	class:VarnishAdmin
setIdent		0;"	f	S:void function setIdent($ident)	class:VarnishAdmin
setParam		0;"	f	S:int function setParam($name, $value)	class:VarnishAdmin
setPort		0;"	f	S:void function setPort($port)	class:VarnishAdmin
setSecret		0;"	f	S:void function setSecret($secret)	class:VarnishAdmin
setTimeout		0;"	f	S:void function setTimeout($timeout)	class:VarnishAdmin
start		0;"	f	S:int function start()	class:VarnishAdmin
stop		0;"	f	S:int function stop()	class:VarnishAdmin
VarnishStat		0;"	c
__construct		0;"	f	S: function __construct($args)	class:VarnishStat
getSnapshot		0;"	f	S:array function getSnapshot()	class:VarnishStat
VarnishLog		0;"	c
TAG_Debug		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Debug
TAG_Error		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Error
TAG_CLI		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_CLI
TAG_StatSess		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_StatSess
TAG_ReqEnd		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ReqEnd
TAG_SessionOpen		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_SessionOpen
TAG_SessionClose		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_SessionClose
TAG_BackendOpen		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_BackendOpen
TAG_BackendXID		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_BackendXID
TAG_BackendReuse		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_BackendReuse
TAG_BackendClose		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_BackendClose
TAG_HttpGarbage		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_HttpGarbage
TAG_Backend		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Backend
TAG_Length		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Length
TAG_FetchError		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_FetchError
TAG_RxRequest		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxRequest
TAG_RxResponse		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxResponse
TAG_RxStatus		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxStatus
TAG_RxURL		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxURL
TAG_RxProtocol		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxProtocol
TAG_RxHeader		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_RxHeader
TAG_TxRequest		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxRequest
TAG_TxResponse		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxResponse
TAG_TxStatus		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxStatus
TAG_TxURL		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxURL
TAG_TxProtocol		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxProtocol
TAG_TxHeader		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TxHeader
TAG_ObjRequest		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjRequest
TAG_ObjResponse		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjResponse
TAG_ObjStatus		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjStatus
TAG_ObjURL		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjURL
TAG_ObjProtocol		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjProtocol
TAG_ObjHeader		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ObjHeader
TAG_LostHeader		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_LostHeader
TAG_TTL		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_TTL
TAG_Fetch_Body		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Fetch_Body
TAG_VCL_acl		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_acl
TAG_VCL_call		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_call
TAG_VCL_trace		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_trace
TAG_VCL_return		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_return
TAG_VCL_error		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_error
TAG_ReqStart		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ReqStart
TAG_Hit		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Hit
TAG_HitPass		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_HitPass
TAG_ExpBan		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ExpBan
TAG_ExpKill		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ExpKill
TAG_WorkThread		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_WorkThread
TAG_ESI_xmlerror		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_ESI_xmlerror
TAG_Hash		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Hash
TAG_Backend_health		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Backend_health
TAG_VCL_Log		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_VCL_Log
TAG_Gzip		0;"	o	class:VarnishLog	a:const	S:const VarnishLog::TAG_Gzip
__construct		0;"	f	S: function __construct($args)	class:VarnishLog
getLine		0;"	f	S:array function getLine()	class:VarnishLog
getTagName		0;"	f	S:string function getTagName($index)	class:VarnishLog	a:static
yaz_addinfo		0;"	f	S:string function yaz_addinfo($id)
yaz_ccl_conf		0;"	f	S:void function yaz_ccl_conf($id, $config)
yaz_ccl_parse		0;"	f	S:bool function yaz_ccl_parse($id, $query, &$result)
yaz_close		0;"	f	S:bool function yaz_close($id)
yaz_connect		0;"	f	S:mixed function yaz_connect($zurl, $options)
yaz_database		0;"	f	S:bool function yaz_database($id, $databases)
yaz_element		0;"	f	S:bool function yaz_element($id, $elementset)
yaz_errno		0;"	f	S:int function yaz_errno($id)
yaz_error		0;"	f	S:string function yaz_error($id)
yaz_es_result		0;"	f	S:array function yaz_es_result($id)
yaz_es		0;"	f	S:void function yaz_es($id, $type, $args)
yaz_get_option		0;"	f	S:string function yaz_get_option($id, $name)
yaz_hits		0;"	f	S:int function yaz_hits($id, &$searchresult)
yaz_itemorder		0;"	f	S:void function yaz_itemorder($id, $args)
yaz_present		0;"	f	S:bool function yaz_present($id)
yaz_range		0;"	f	S:void function yaz_range($id, $start, $number)
yaz_record		0;"	f	S:string function yaz_record($id, $pos, $type)
yaz_scan_result		0;"	f	S:array function yaz_scan_result($id, &$result)
yaz_scan		0;"	f	S:void function yaz_scan($id, $type, $startterm, $flags)
yaz_schema		0;"	f	S:void function yaz_schema($id, $schema)
yaz_search		0;"	f	S:bool function yaz_search($id, $type, $query)
yaz_set_option		0;"	f	S:void function yaz_set_option($id, $name, $value, $options)
yaz_sort		0;"	f	S:void function yaz_sort($id, $criteria)
yaz_syntax		0;"	f	S:void function yaz_syntax($id, $syntax)
yaz_wait		0;"	f	S:mixed function yaz_wait(&$options)
YPERR_ACCESS		0;"	d
YPERR_BADARGS		0;"	d
YPERR_BADDB		0;"	d
YPERR_BUSY		0;"	d
YPERR_DOMAIN		0;"	d
YPERR_KEY		0;"	d
YPERR_MAP		0;"	d
YPERR_NODOM		0;"	d
YPERR_NOMORE		0;"	d
YPERR_PMAP		0;"	d
YPERR_RESRC		0;"	d
YPERR_RPC		0;"	d
YPERR_YPBIND		0;"	d
YPERR_YPERR		0;"	d
YPERR_YPSERV		0;"	d
YPERR_VERS		0;"	d
yp_all		0;"	f	S:void function yp_all($domain, $map, $callback)
yp_cat		0;"	f	S:array function yp_cat($domain, $map)
yp_err_string		0;"	f	S:string function yp_err_string($errorcode)
yp_errno		0;"	f	S:int function yp_errno()
yp_first		0;"	f	S:array function yp_first($domain, $map)
yp_get_default_domain		0;"	f	S:string function yp_get_default_domain()
yp_master		0;"	f	S:string function yp_master($domain, $map)
yp_match		0;"	f	S:string function yp_match($domain, $map, $key)
yp_next		0;"	f	S:array function yp_next($domain, $map, $key)
yp_order		0;"	f	S:int function yp_order($domain, $map)
ZMQ		0;"	c
SOCKET_PAIR		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_PAIR
SOCKET_PUB		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_PUB
SOCKET_SUB		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_SUB
SOCKET_REQ		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_REQ
SOCKET_REP		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_REP
SOCKET_XREQ		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_XREQ
SOCKET_XREP		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_XREP
SOCKET_PUSH		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_PUSH
SOCKET_PULL		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_PULL
SOCKET_ROUTER		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_ROUTER
SOCKET_DEALER		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_DEALER
SOCKET_XPUB		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_XPUB
SOCKET_XSUB		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_XSUB
SOCKET_STREAM		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKET_STREAM
SOCKOPT_HWM		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_HWM
SOCKOPT_SNDHWM		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_SNDHWM
SOCKOPT_RCVHWM		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RCVHWM
SOCKOPT_AFFINITY		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_AFFINITY
SOCKOPT_IDENTITY		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_IDENTITY
SOCKOPT_SUBSCRIBE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_SUBSCRIBE
SOCKOPT_UNSUBSCRIBE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_UNSUBSCRIBE
SOCKOPT_RATE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RATE
SOCKOPT_RECOVERY_IVL		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RECOVERY_IVL
SOCKOPT_RECONNECT_IVL		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RECONNECT_IVL
SOCKOPT_RECONNECT_IVL_MAX		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RECONNECT_IVL_MAX
SOCKOPT_MCAST_LOOP		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_MCAST_LOOP
SOCKOPT_SNDBUF		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_SNDBUF
SOCKOPT_RCVBUF		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RCVBUF
SOCKOPT_RCVMORE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RCVMORE
SOCKOPT_TYPE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TYPE
SOCKOPT_LINGER		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_LINGER
SOCKOPT_BACKLOG		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_BACKLOG
SOCKOPT_MAXMSGSIZE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_MAXMSGSIZE
SOCKOPT_SNDTIMEO		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_SNDTIMEO
SOCKOPT_RCVTIMEO		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_RCVTIMEO
SOCKOPT_IPV4ONLY		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_IPV4ONLY
SOCKOPT_LAST_ENDPOINT		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_LAST_ENDPOINT
SOCKOPT_TCP_KEEPALIVE_IDLE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TCP_KEEPALIVE_IDLE
SOCKOPT_TCP_KEEPALIVE_CNT		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TCP_KEEPALIVE_CNT
SOCKOPT_TCP_KEEPALIVE_INTVL		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TCP_KEEPALIVE_INTVL
SOCKOPT_TCP_ACCEPT_FILTER		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TCP_ACCEPT_FILTER
SOCKOPT_TCP_ACCEPT_FILTER		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_TCP_ACCEPT_FILTER
SOCKOPT_DELAY_ATTACH_ON_CONNECT		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_DELAY_ATTACH_ON_CONNECT
SOCKOPT_XPUB_VERBOSE		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_XPUB_VERBOSE
SOCKOPT_ROUTER_RAW		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_ROUTER_RAW
SOCKOPT_IPV6		0;"	o	class:ZMQ	a:const	S:const ZMQ::SOCKOPT_IPV6
CTXOPT_MAX_SOCKETS		0;"	o	class:ZMQ	a:const	S:const ZMQ::CTXOPT_MAX_SOCKETS
POLL_IN		0;"	o	class:ZMQ	a:const	S:const ZMQ::POLL_IN
POLL_OUT		0;"	o	class:ZMQ	a:const	S:const ZMQ::POLL_OUT
MODE_NOBLOCK		0;"	o	class:ZMQ	a:const	S:const ZMQ::MODE_NOBLOCK
MODE_DONTWAIT		0;"	o	class:ZMQ	a:const	S:const ZMQ::MODE_DONTWAIT
MODE_SNDMORE		0;"	o	class:ZMQ	a:const	S:const ZMQ::MODE_SNDMORE
ERR_INTERNAL		0;"	o	class:ZMQ	a:const	S:const ZMQ::ERR_INTERNAL
ERR_EAGAIN		0;"	o	class:ZMQ	a:const	S:const ZMQ::ERR_EAGAIN
ERR_ENOTSUP		0;"	o	class:ZMQ	a:const	S:const ZMQ::ERR_ENOTSUP
ERR_EFSM		0;"	o	class:ZMQ	a:const	S:const ZMQ::ERR_EFSM
ERR_ETERM		0;"	o	class:ZMQ	a:const	S:const ZMQ::ERR_ETERM
__construct		0;"	f	S: function __construct()	class:ZMQ	a:private
ZMQContext		0;"	c
__construct		0;"	f	S: function __construct($io_threads = 1, $is_persistent = true)	class:ZMQContext
getOpt		0;"	f	S:mixed function getOpt($key)	class:ZMQContext
getSocket		0;"	f	S:ZMQSocket function getSocket($type, $persistent_id = null, $on_new_socket = null)	class:ZMQContext
isPersistent		0;"	f	S:boolean function isPersistent()	class:ZMQContext
setOpt		0;"	f	S:ZMQContext function setOpt($key, $value)	class:ZMQContext
ZMQSocket		0;"	c
bind		0;"	f	S:ZMQSocket function bind($dsn, $force = false)	class:ZMQSocket
connect		0;"	f	S:ZMQSocket function connect($dsn, $force = false)	class:ZMQSocket
__construct		0;"	f	S: function __construct($context, $type, $persistent_id = null, $on_new_socket = null)	class:ZMQSocket
disconnect		0;"	f	S:ZMQSocket function disconnect($dsn)	class:ZMQSocket
getEndpoints		0;"	f	S:array function getEndpoints()	class:ZMQSocket
getPersistentId		0;"	f	S:string function getPersistentId()	class:ZMQSocket
getSocketType		0;"	f	S:integer function getSocketType()	class:ZMQSocket
getSockOpt		0;"	f	S:mixed function getSockOpt($key)	class:ZMQSocket
isPersistent		0;"	f	S:boolean function isPersistent()	class:ZMQSocket
recv		0;"	f	S:string function recv($mode)	class:ZMQSocket
recvMulti		0;"	f	S:string function recvMulti($mode)	class:ZMQSocket
send		0;"	f	S:ZMQSocket function send($message, $mode)	class:ZMQSocket
sendmulti		0;"	f	S:ZMQSocket function sendmulti($message, $mode)	class:ZMQSocket
setSockOpt		0;"	f	S:ZMQSocket function setSockOpt($key, $value)	class:ZMQSocket
unbind		0;"	f	S:ZMQSocket function unbind($dsn)	class:ZMQSocket
ZMQPoll		0;"	c
add		0;"	f	S:string function add($entry, $type)	class:ZMQPoll
clear		0;"	f	S:ZMQPoll function clear()	class:ZMQPoll
count		0;"	f	S:integer function count()	class:ZMQPoll
getLastErrors		0;"	f	S:array function getLastErrors()	class:ZMQPoll
poll		0;"	f	S:integer function poll(&$readable, &$writable, $timeout = -1)	class:ZMQPoll
remove		0;"	f	S:boolean function remove($item)	class:ZMQPoll
ZMQDevice		0;"	c
__construct		0;"	f	S: function __construct($frontend, $backend, $listener)	class:ZMQDevice
getIdleTimeout		0;"	f	S:ZMQDevice function getIdleTimeout()	class:ZMQDevice
getTimerTimeout		0;"	f	S:ZMQDevice function getTimerTimeout()	class:ZMQDevice
run		0;"	f	S:void function run()	class:ZMQDevice
setIdleCallback		0;"	f	S:ZMQDevice function setIdleCallback($cb_func, $timeout, $user_data)	class:ZMQDevice
setIdleTimeout		0;"	f	S:ZMQDevice function setIdleTimeout($timeout)	class:ZMQDevice
setTimerCallback		0;"	f	S:ZMQDevice function setTimerCallback($cb_func, $timeout, $user_data)	class:ZMQDevice
setTimerTimeout		0;"	f	S:ZMQDevice function setTimerTimeout($timeout)	class:ZMQDevice
UDM_FIELD_URLID		0;"	d
UDM_FIELD_URL		0;"	d
UDM_FIELD_CONTENT		0;"	d
UDM_FIELD_TITLE		0;"	d
UDM_FIELD_KEYWORDS		0;"	d
UDM_FIELD_DESC		0;"	d
UDM_FIELD_DESCRIPTION		0;"	d
UDM_FIELD_TEXT		0;"	d
UDM_FIELD_SIZE		0;"	d
UDM_FIELD_RATING		0;"	d
UDM_FIELD_SCORE		0;"	d
UDM_FIELD_MODIFIED		0;"	d
UDM_FIELD_ORDER		0;"	d
UDM_FIELD_CRC		0;"	d
UDM_FIELD_CATEGORY		0;"	d
UDM_FIELD_LANG		0;"	d
UDM_FIELD_CHARSET		0;"	d
UDM_PARAM_PAGE_SIZE		0;"	d
UDM_PARAM_PAGE_NUM		0;"	d
UDM_PARAM_SEARCH_MODE		0;"	d
UDM_PARAM_CACHE_MODE		0;"	d
UDM_PARAM_TRACK_MODE		0;"	d
UDM_PARAM_PHRASE_MODE		0;"	d
UDM_PARAM_CHARSET		0;"	d
UDM_PARAM_LOCAL_CHARSET		0;"	d
UDM_PARAM_BROWSER_CHARSET		0;"	d
UDM_PARAM_STOPTABLE		0;"	d
UDM_PARAM_STOP_TABLE		0;"	d
UDM_PARAM_STOPFILE		0;"	d
UDM_PARAM_STOP_FILE		0;"	d
UDM_PARAM_WEIGHT_FACTOR		0;"	d
UDM_PARAM_WORD_MATCH		0;"	d
UDM_PARAM_MAX_WORD_LEN		0;"	d
UDM_PARAM_MAX_WORDLEN		0;"	d
UDM_PARAM_MIN_WORD_LEN		0;"	d
UDM_PARAM_MIN_WORDLEN		0;"	d
UDM_PARAM_ISPELL_PREFIXES		0;"	d
UDM_PARAM_ISPELL_PREFIX		0;"	d
UDM_PARAM_PREFIXES		0;"	d
UDM_PARAM_PREFIX		0;"	d
UDM_PARAM_CROSS_WORDS		0;"	d
UDM_PARAM_CROSSWORDS		0;"	d
UDM_PARAM_VARDIR		0;"	d
UDM_PARAM_DATADIR		0;"	d
UDM_PARAM_HLBEG		0;"	d
UDM_PARAM_HLEND		0;"	d
UDM_PARAM_SYNONYM		0;"	d
UDM_PARAM_SEARCHD		0;"	d
UDM_PARAM_QSTRING		0;"	d
UDM_PARAM_REMOTE_ADDR		0;"	d
UDM_LIMIT_CAT		0;"	d
UDM_LIMIT_URL		0;"	d
UDM_LIMIT_TAG		0;"	d
UDM_LIMIT_LANG		0;"	d
UDM_LIMIT_DATE		0;"	d
UDM_PARAM_FOUND		0;"	d
UDM_PARAM_NUM_ROWS		0;"	d
UDM_PARAM_WORDINFO		0;"	d
UDM_PARAM_WORD_INFO		0;"	d
UDM_PARAM_SEARCHTIME		0;"	d
UDM_PARAM_SEARCH_TIME		0;"	d
UDM_PARAM_FIRST_DOC		0;"	d
UDM_PARAM_LAST_DOC		0;"	d
UDM_MODE_ALL		0;"	d
UDM_MODE_ANY		0;"	d
UDM_MODE_BOOL		0;"	d
UDM_MODE_PHRASE		0;"	d
UDM_CACHE_ENABLED		0;"	d
UDM_CACHE_DISABLED		0;"	d
UDM_TRACK_ENABLED		0;"	d
UDM_TRACK_DISABLED		0;"	d
UDM_PHRASE_ENABLED		0;"	d
UDM_PHRASE_DISABLED		0;"	d
UDM_CROSS_WORDS_ENABLED		0;"	d
UDM_CROSSWORDS_ENABLED		0;"	d
UDM_CROSS_WORDS_DISABLED		0;"	d
UDM_CROSSWORDS_DISABLED		0;"	d
UDM_PREFIXES_ENABLED		0;"	d
UDM_PREFIX_ENABLED		0;"	d
UDM_ISPELL_PREFIXES_ENABLED		0;"	d
UDM_ISPELL_PREFIX_ENABLED		0;"	d
UDM_PREFIXES_DISABLED		0;"	d
UDM_PREFIX_DISABLED		0;"	d
UDM_ISPELL_PREFIXES_DISABLED		0;"	d
UDM_ISPELL_PREFIX_DISABLED		0;"	d
UDM_ISPELL_TYPE_AFFIX		0;"	d
UDM_ISPELL_TYPE_SPELL		0;"	d
UDM_ISPELL_TYPE_DB		0;"	d
UDM_ISPELL_TYPE_SERVER		0;"	d
UDM_MATCH_WORD		0;"	d
UDM_MATCH_BEGIN		0;"	d
UDM_MATCH_SUBSTR		0;"	d
UDM_MATCH_END		0;"	d
udm_add_search_limit		0;"	f	S:bool function udm_add_search_limit($agent, $var, $val)
udm_alloc_agent_array		0;"	f	S:resource function udm_alloc_agent_array($databases)
udm_alloc_agent		0;"	f	S:resource function udm_alloc_agent($dbaddr, $dbmode)
udm_api_version		0;"	f	S:int function udm_api_version()
udm_cat_list		0;"	f	S:array function udm_cat_list($agent, $category)
udm_cat_path		0;"	f	S:array function udm_cat_path($agent, $category)
udm_check_charset		0;"	f	S:bool function udm_check_charset($agent, $charset)
udm_clear_search_limits		0;"	f	S:bool function udm_clear_search_limits($agent)
udm_crc32		0;"	f	S:int function udm_crc32($agent, $str)
udm_errno		0;"	f	S:int function udm_errno($agent)
udm_error		0;"	f	S:string function udm_error($agent)
udm_find		0;"	f	S:resource function udm_find($agent, $query)
udm_free_agent		0;"	f	S:int function udm_free_agent($agent)
udm_free_ispell_data		0;"	f	S:bool function udm_free_ispell_data($agent)
udm_free_res		0;"	f	S:bool function udm_free_res($res)
udm_get_doc_count		0;"	f	S:int function udm_get_doc_count($agent)
udm_get_res_field		0;"	f	S:string function udm_get_res_field($res, $row, $field)
udm_get_res_param		0;"	f	S:string function udm_get_res_param($res, $param)
udm_hash32		0;"	f	S:int function udm_hash32($agent, $str)
udm_load_ispell_data		0;"	f	S:bool function udm_load_ispell_data($agent, $var, $val1, $val2, $flag)
udm_set_agent_param		0;"	f	S:bool function udm_set_agent_param($agent, $var, $val)
SOLR_MAJOR_VERSION		0;"	d
SOLR_MINOR_VERSION		0;"	d
SOLR_PATCH_VERSION		0;"	d
SOLR_EXTENSION_VERSION		0;"	d
solr_get_version		0;"	f	S:string function solr_get_version()
SolrUtils		0;"	c
digestXmlResponse		0;"	f	S:SolrObject function digestXmlResponse($xmlresponse, $parse_mode)	class:SolrUtils	a:static
escapeQueryChars		0;"	f	S:string function escapeQueryChars($str)	class:SolrUtils	a:static
getSolrVersion		0;"	f	S:string function getSolrVersion()	class:SolrUtils	a:static
queryPhrase		0;"	f	S:string function queryPhrase($str)	class:SolrUtils	a:static
SolrInputDocument		0;"	c
SORT_DEFAULT		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_DEFAULT
SORT_ASC		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_ASC
SORT_DESC		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_DESC
SORT_FIELD_NAME		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_FIELD_NAME
SORT_FIELD_VALUE_COUNT		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_FIELD_VALUE_COUNT
SORT_FIELD_BOOST_VALUE		0;"	o	class:SolrInputDocument	a:const	S:const SolrInputDocument::SORT_FIELD_BOOST_VALUE
addField		0;"	f	S:bool function addField($fieldName, $fieldValue, $fieldBoostValue = 0.0)	class:SolrInputDocument
clear		0;"	f	S:bool function clear()	class:SolrInputDocument
__clone		0;"	f	S:void function __clone()	class:SolrInputDocument
__construct		0;"	f	S: function __construct()	class:SolrInputDocument
deleteField		0;"	f	S:bool function deleteField($fieldName)	class:SolrInputDocument
__destruct		0;"	f	S:void function __destruct()	class:SolrInputDocument
fieldExists		0;"	f	S:bool function fieldExists($fieldName)	class:SolrInputDocument
getBoost		0;"	f	S:float function getBoost()	class:SolrInputDocument
getField		0;"	f	S:SolrDocumentField function getField($fieldName)	class:SolrInputDocument
getFieldBoost		0;"	f	S:float function getFieldBoost($fieldName)	class:SolrInputDocument
getFieldCount		0;"	f	S:int function getFieldCount()	class:SolrInputDocument
getFieldNames		0;"	f	S:array function getFieldNames()	class:SolrInputDocument
merge		0;"	f	S:bool function merge($sourceDoc, $overwrite = true)	class:SolrInputDocument
reset		0;"	f	S:bool function reset()	class:SolrInputDocument
setBoost		0;"	f	S:bool function setBoost($documentBoostValue)	class:SolrInputDocument
setFieldBoost		0;"	f	S:bool function setFieldBoost($fieldName, $fieldBoostValue)	class:SolrInputDocument
sort		0;"	f	S:bool function sort($sortOrderBy, $sortDirection = SolrInputDocument::SORT_ASC)	class:SolrInputDocument
toArray		0;"	f	S:array function toArray()	class:SolrInputDocument
SolrDocument		0;"	c
SORT_DEFAULT		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_DEFAULT
SORT_ASC		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_ASC
SORT_DESC		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_DESC
SORT_FIELD_NAME		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_FIELD_NAME
SORT_FIELD_VALUE_COUNT		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_FIELD_VALUE_COUNT
SORT_FIELD_BOOST_VALUE		0;"	o	class:SolrDocument	a:const	S:const SolrDocument::SORT_FIELD_BOOST_VALUE
addField		0;"	f	S:bool function addField($fieldName, $fieldValue)	class:SolrDocument
clear		0;"	f	S:bool function clear()	class:SolrDocument
__clone		0;"	f	S:void function __clone()	class:SolrDocument
__construct		0;"	f	S: function __construct()	class:SolrDocument
current		0;"	f	S:SolrDocumentField function current()	class:SolrDocument
deleteField		0;"	f	S:bool function deleteField($fieldName)	class:SolrDocument
__destruct		0;"	f	S:void function __destruct()	class:SolrDocument
fieldExists		0;"	f	S:bool function fieldExists($fieldName)	class:SolrDocument
__get		0;"	f	S:SolrDocumentField function __get($fieldName)	class:SolrDocument
getField		0;"	f	S:SolrDocumentField function getField($fieldName)	class:SolrDocument
getFieldCount		0;"	f	S:int function getFieldCount()	class:SolrDocument
getFieldNames		0;"	f	S:array function getFieldNames()	class:SolrDocument
getInputDocument		0;"	f	S:SolrInputDocument function getInputDocument()	class:SolrDocument
__isset		0;"	f	S:bool function __isset($fieldName)	class:SolrDocument
key		0;"	f	S:string function key()	class:SolrDocument
merge		0;"	f	S:bool function merge($sourceDoc, $overwrite = true)	class:SolrDocument
next		0;"	f	S:void function next()	class:SolrDocument
offsetExists		0;"	f	S:bool function offsetExists($fieldName)	class:SolrDocument
offsetGet		0;"	f	S:SolrDocumentField function offsetGet($fieldName)	class:SolrDocument
offsetSet		0;"	f	S:void function offsetSet($fieldName, $fieldValue)	class:SolrDocument
offsetUnset		0;"	f	S:void function offsetUnset($fieldName)	class:SolrDocument
reset		0;"	f	S:bool function reset()	class:SolrDocument
rewind		0;"	f	S:void function rewind()	class:SolrDocument
serialize		0;"	f	S:string function serialize()	class:SolrDocument
__set		0;"	f	S:bool function __set($fieldName, $fieldValue)	class:SolrDocument
sort		0;"	f	S:bool function sort($sortOrderBy, $sortDirection = SolrDocument::SORT_ASC)	class:SolrDocument
toArray		0;"	f	S:array function toArray()	class:SolrDocument
unserialize		0;"	f	S:void function unserialize($serialized)	class:SolrDocument
__unset		0;"	f	S:bool function __unset($fieldName)	class:SolrDocument
valid		0;"	f	S:bool function valid()	class:SolrDocument
SolrDocumentField		0;"	c
name		0;"	p	class:SolrDocumentField	S: SolrDocumentField::name
boost		0;"	p	class:SolrDocumentField	S: SolrDocumentField::boost
values		0;"	p	class:SolrDocumentField	S: SolrDocumentField::values
__construct		0;"	f	S: function __construct()	class:SolrDocumentField
__destruct		0;"	f	S:void function __destruct()	class:SolrDocumentField
SolrObject		0;"	c
__construct		0;"	f	S: function __construct()	class:SolrObject
__destruct		0;"	f	S:void function __destruct()	class:SolrObject
getPropertyNames		0;"	f	S:array function getPropertyNames()	class:SolrObject
offsetExists		0;"	f	S:bool function offsetExists($property_name)	class:SolrObject
offsetGet		0;"	f	S:mixed function offsetGet($property_name)	class:SolrObject
offsetSet		0;"	f	S:void function offsetSet($property_name, $property_value)	class:SolrObject
offsetUnset		0;"	f	S:void function offsetUnset($property_name)	class:SolrObject
SolrClient		0;"	c
SEARCH_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::SEARCH_SERVLET_TYPE
UPDATE_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::UPDATE_SERVLET_TYPE
THREADS_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::THREADS_SERVLET_TYPE
PING_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::PING_SERVLET_TYPE
TERMS_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::TERMS_SERVLET_TYPE
SYSTEM_SERVLET_TYPE		0;"	o	class:SolrClient	a:const	S:const SolrClient::SYSTEM_SERVLET_TYPE
DEFAULT_SEARCH_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_SEARCH_SERVLET
DEFAULT_UPDATE_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_UPDATE_SERVLET
DEFAULT_THREADS_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_THREADS_SERVLET
DEFAULT_PING_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_PING_SERVLET
DEFAULT_TERMS_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_TERMS_SERVLET
DEFAULT_SYSTEM_SERVLET		0;"	o	class:SolrClient	a:const	S:const SolrClient::DEFAULT_SYSTEM_SERVLET
addDocument		0;"	f	S:SolrUpdateResponse function addDocument($doc, $overwrite = true, $commitWithin)	class:SolrClient
addDocuments		0;"	f	S:void function addDocuments($docs, $overwrite = true, $commitWithin)	class:SolrClient
commit		0;"	f	S:SolrUpdateResponse function commit($softCommit = false, $waitSearcher = true, $expungeDeletes = false)	class:SolrClient
__construct		0;"	f	S: function __construct($clientOptions)	class:SolrClient
deleteById		0;"	f	S:SolrUpdateResponse function deleteById($id)	class:SolrClient
deleteByIds		0;"	f	S:SolrUpdateResponse function deleteByIds($ids)	class:SolrClient
deleteByQueries		0;"	f	S:SolrUpdateResponse function deleteByQueries($queries)	class:SolrClient
deleteByQuery		0;"	f	S:SolrUpdateResponse function deleteByQuery($query)	class:SolrClient
__destruct		0;"	f	S:void function __destruct()	class:SolrClient
getDebug		0;"	f	S:string function getDebug()	class:SolrClient
getOptions		0;"	f	S:array function getOptions()	class:SolrClient
optimize		0;"	f	S:SolrUpdateResponse function optimize($maxSegments = 1, $softCommit = true, $waitSearcher = true)	class:SolrClient
ping		0;"	f	S:SolrPingResponse function ping()	class:SolrClient
query		0;"	f	S:SolrQueryResponse function query($query)	class:SolrClient
request		0;"	f	S:void function request($raw_request)	class:SolrClient
rollback		0;"	f	S:SolrUpdateResponse function rollback()	class:SolrClient
setResponseWriter		0;"	f	S:void function setResponseWriter($responseWriter)	class:SolrClient
setServlet		0;"	f	S:bool function setServlet($type, $value)	class:SolrClient
threads		0;"	f	S:void function threads()	class:SolrClient
SolrResponse		0;"	c
PARSE_SOLR_OBJ		0;"	o	class:SolrResponse	a:const	S:const SolrResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrResponse	a:const	S:const SolrResponse::PARSE_SOLR_DOC
http_status		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_status
parser_mode		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::parser_mode
success		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::success
http_status_message		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_status_message
http_request_url		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_request_url
http_raw_request_headers		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_raw_request_headers
http_raw_request		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_raw_request
http_raw_response_headers		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_raw_response_headers
http_raw_response		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_raw_response
http_digested_response		0;"	p	class:SolrResponse	a:protected	S:protected SolrResponse::http_digested_response
getDigestedResponse		0;"	f	S:string function getDigestedResponse()	class:SolrResponse
getHttpStatus		0;"	f	S:int function getHttpStatus()	class:SolrResponse
getHttpStatusMessage		0;"	f	S:string function getHttpStatusMessage()	class:SolrResponse
getRawRequest		0;"	f	S:string function getRawRequest()	class:SolrResponse
getRawRequestHeaders		0;"	f	S:string function getRawRequestHeaders()	class:SolrResponse
getRawResponse		0;"	f	S:string function getRawResponse()	class:SolrResponse
getRawResponseHeaders		0;"	f	S:string function getRawResponseHeaders()	class:SolrResponse
getRequestUrl		0;"	f	S:string function getRequestUrl()	class:SolrResponse
getResponse		0;"	f	S:SolrObject function getResponse()	class:SolrResponse
setParseMode		0;"	f	S:bool function setParseMode($parser_mode)	class:SolrResponse
success		0;"	f	S:bool function success()	class:SolrResponse
SolrQueryResponse		0;"	c	i:SolrResponse
PARSE_SOLR_OBJ		0;"	o	class:SolrQueryResponse	a:const	S:const SolrQueryResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrQueryResponse	a:const	S:const SolrQueryResponse::PARSE_SOLR_DOC
PARSE_SOLR_OBJ		0;"	o	class:SolrQueryResponse	a:const	S:const SolrQueryResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrQueryResponse	a:const	S:const SolrQueryResponse::PARSE_SOLR_DOC
http_status		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_status
parser_mode		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::parser_mode
success		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::success
http_status_message		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_status_message
http_request_url		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_request_url
http_raw_request_headers		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_raw_request_headers
http_raw_request		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_raw_request
http_raw_response_headers		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_raw_response_headers
http_raw_response		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_raw_response
http_digested_response		0;"	p	class:SolrQueryResponse	a:protected	S:protected SolrQueryResponse::http_digested_response
__construct		0;"	f	S: function __construct()	class:SolrQueryResponse
__destruct		0;"	f	S:void function __destruct()	class:SolrQueryResponse
SolrUpdateResponse		0;"	c	i:SolrResponse
PARSE_SOLR_OBJ		0;"	o	class:SolrUpdateResponse	a:const	S:const SolrUpdateResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrUpdateResponse	a:const	S:const SolrUpdateResponse::PARSE_SOLR_DOC
PARSE_SOLR_OBJ		0;"	o	class:SolrUpdateResponse	a:const	S:const SolrUpdateResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrUpdateResponse	a:const	S:const SolrUpdateResponse::PARSE_SOLR_DOC
http_status		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_status
parser_mode		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::parser_mode
success		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::success
http_status_message		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_status_message
http_request_url		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_request_url
http_raw_request_headers		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_raw_request_headers
http_raw_request		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_raw_request
http_raw_response_headers		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_raw_response_headers
http_raw_response		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_raw_response
http_digested_response		0;"	p	class:SolrUpdateResponse	a:protected	S:protected SolrUpdateResponse::http_digested_response
__construct		0;"	f	S: function __construct()	class:SolrUpdateResponse
__destruct		0;"	f	S:void function __destruct()	class:SolrUpdateResponse
SolrPingResponse		0;"	c	i:SolrResponse
PARSE_SOLR_OBJ		0;"	o	class:SolrPingResponse	a:const	S:const SolrPingResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrPingResponse	a:const	S:const SolrPingResponse::PARSE_SOLR_DOC
__construct		0;"	f	S: function __construct()	class:SolrPingResponse
__destruct		0;"	f	S:void function __destruct()	class:SolrPingResponse
getResponse		0;"	f	S:string function getResponse()	class:SolrPingResponse
SolrGenericResponse		0;"	c	i:SolrResponse
PARSE_SOLR_OBJ		0;"	o	class:SolrGenericResponse	a:const	S:const SolrGenericResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrGenericResponse	a:const	S:const SolrGenericResponse::PARSE_SOLR_DOC
PARSE_SOLR_OBJ		0;"	o	class:SolrGenericResponse	a:const	S:const SolrGenericResponse::PARSE_SOLR_OBJ
PARSE_SOLR_DOC		0;"	o	class:SolrGenericResponse	a:const	S:const SolrGenericResponse::PARSE_SOLR_DOC
http_status		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_status
parser_mode		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::parser_mode
success		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::success
http_status_message		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_status_message
http_request_url		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_request_url
http_raw_request_headers		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_raw_request_headers
http_raw_request		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_raw_request
http_raw_response_headers		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_raw_response_headers
http_raw_response		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_raw_response
http_digested_response		0;"	p	class:SolrGenericResponse	a:protected	S:protected SolrGenericResponse::http_digested_response
__construct		0;"	f	S: function __construct()	class:SolrGenericResponse
__destruct		0;"	f	S:void function __destruct()	class:SolrGenericResponse
SolrParams		0;"	c
add		0;"	f	S:SolrParams function add($name, $value)	class:SolrParams	a:final
addParam		0;"	f	S:SolrParams function addParam($name, $value)	class:SolrParams
get		0;"	f	S:mixed function get($param_name)	class:SolrParams	a:final
getParam		0;"	f	S:mixed function getParam($param_name)	class:SolrParams	a:final
getParams		0;"	f	S:array function getParams()	class:SolrParams	a:final
getPreparedParams		0;"	f	S:array function getPreparedParams()	class:SolrParams	a:final
serialize		0;"	f	S:string function serialize()	class:SolrParams	a:final
set		0;"	f	S:void function set($name, $value)	class:SolrParams	a:final
setParam		0;"	f	S:SolrParams function setParam($name, $value)	class:SolrParams
toString		0;"	f	S:string function toString($url_encode = false)	class:SolrParams	a:final
unserialize		0;"	f	S:void function unserialize($serialized)	class:SolrParams	a:final
SolrModifiableParams		0;"	c	i:SolrParams
__construct		0;"	f	S: function __construct()	class:SolrModifiableParams
__destruct		0;"	f	S:void function __destruct()	class:SolrModifiableParams
SolrQuery		0;"	c	i:SolrModifiableParams
ORDER_ASC		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::ORDER_ASC
ORDER_DESC		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::ORDER_DESC
FACET_SORT_INDEX		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::FACET_SORT_INDEX
FACET_SORT_COUNT		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::FACET_SORT_COUNT
TERMS_SORT_INDEX		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::TERMS_SORT_INDEX
TERMS_SORT_COUNT		0;"	o	class:SolrQuery	a:const	S:const SolrQuery::TERMS_SORT_COUNT
addFacetDateField		0;"	f	S:SolrQuery function addFacetDateField($dateField)	class:SolrQuery
addFacetDateOther		0;"	f	S:SolrQuery function addFacetDateOther($value, $field_override)	class:SolrQuery
addFacetField		0;"	f	S:SolrQuery function addFacetField($field)	class:SolrQuery
addFacetQuery		0;"	f	S:SolrQuery function addFacetQuery($facetQuery)	class:SolrQuery
addField		0;"	f	S:SolrQuery function addField($field)	class:SolrQuery
addFilterQuery		0;"	f	S:SolrQuery function addFilterQuery($fq)	class:SolrQuery
addHighlightField		0;"	f	S:SolrQuery function addHighlightField($field)	class:SolrQuery
addMltField		0;"	f	S:SolrQuery function addMltField($field)	class:SolrQuery
addMltQueryField		0;"	f	S:SolrQuery function addMltQueryField($field, $boost)	class:SolrQuery
addSortField		0;"	f	S:SolrQuery function addSortField($field, $order = SolrQuery::ORDER_DESC)	class:SolrQuery
addStatsFacet		0;"	f	S:SolrQuery function addStatsFacet($field)	class:SolrQuery
addStatsField		0;"	f	S:SolrQuery function addStatsField($field)	class:SolrQuery
__construct		0;"	f	S: function __construct($q)	class:SolrQuery
__destruct		0;"	f	S:void function __destruct()	class:SolrQuery
getFacet		0;"	f	S:bool function getFacet()	class:SolrQuery
getFacetDateEnd		0;"	f	S:string function getFacetDateEnd($field_override)	class:SolrQuery
getFacetDateFields		0;"	f	S:array function getFacetDateFields()	class:SolrQuery
getFacetDateGap		0;"	f	S:string function getFacetDateGap($field_override)	class:SolrQuery
getFacetDateHardEnd		0;"	f	S:string function getFacetDateHardEnd($field_override)	class:SolrQuery
getFacetDateOther		0;"	f	S:array function getFacetDateOther($field_override)	class:SolrQuery
getFacetDateStart		0;"	f	S:string function getFacetDateStart($field_override)	class:SolrQuery
getFacetFields		0;"	f	S:array function getFacetFields()	class:SolrQuery
getFacetLimit		0;"	f	S:int function getFacetLimit($field_override)	class:SolrQuery
getFacetMethod		0;"	f	S:string function getFacetMethod($field_override)	class:SolrQuery
getFacetMinCount		0;"	f	S:int function getFacetMinCount($field_override)	class:SolrQuery
getFacetMissing		0;"	f	S:bool function getFacetMissing($field_override)	class:SolrQuery
getFacetOffset		0;"	f	S:int function getFacetOffset($field_override)	class:SolrQuery
getFacetPrefix		0;"	f	S:string function getFacetPrefix($field_override)	class:SolrQuery
getFacetQueries		0;"	f	S:array function getFacetQueries()	class:SolrQuery
getFacetSort		0;"	f	S:int function getFacetSort($field_override)	class:SolrQuery
getFields		0;"	f	S:array function getFields()	class:SolrQuery
getFilterQueries		0;"	f	S:array function getFilterQueries()	class:SolrQuery
getHighlight		0;"	f	S:bool function getHighlight()	class:SolrQuery
getHighlightAlternateField		0;"	f	S:string function getHighlightAlternateField($field_override)	class:SolrQuery
getHighlightFields		0;"	f	S:array function getHighlightFields()	class:SolrQuery
getHighlightFormatter		0;"	f	S:string function getHighlightFormatter($field_override)	class:SolrQuery
getHighlightFragmenter		0;"	f	S:string function getHighlightFragmenter($field_override)	class:SolrQuery
getHighlightFragsize		0;"	f	S:int function getHighlightFragsize($field_override)	class:SolrQuery
getHighlightHighlightMultiTerm		0;"	f	S:bool function getHighlightHighlightMultiTerm()	class:SolrQuery
getHighlightMaxAlternateFieldLength		0;"	f	S:int function getHighlightMaxAlternateFieldLength($field_override)	class:SolrQuery
getHighlightMaxAnalyzedChars		0;"	f	S:int function getHighlightMaxAnalyzedChars()	class:SolrQuery
getHighlightMergeContiguous		0;"	f	S:bool function getHighlightMergeContiguous($field_override)	class:SolrQuery
getHighlightRegexMaxAnalyzedChars		0;"	f	S:int function getHighlightRegexMaxAnalyzedChars()	class:SolrQuery
getHighlightRegexPattern		0;"	f	S:string function getHighlightRegexPattern()	class:SolrQuery
getHighlightRegexSlop		0;"	f	S:float function getHighlightRegexSlop()	class:SolrQuery
getHighlightRequireFieldMatch		0;"	f	S:bool function getHighlightRequireFieldMatch()	class:SolrQuery
getHighlightSimplePost		0;"	f	S:string function getHighlightSimplePost($field_override)	class:SolrQuery
getHighlightSimplePre		0;"	f	S:string function getHighlightSimplePre($field_override)	class:SolrQuery
getHighlightSnippets		0;"	f	S:int function getHighlightSnippets($field_override)	class:SolrQuery
getHighlightUsePhraseHighlighter		0;"	f	S:bool function getHighlightUsePhraseHighlighter()	class:SolrQuery
getMlt		0;"	f	S:bool function getMlt()	class:SolrQuery
getMltBoost		0;"	f	S:bool function getMltBoost()	class:SolrQuery
getMltCount		0;"	f	S:int function getMltCount()	class:SolrQuery
getMltFields		0;"	f	S:array function getMltFields()	class:SolrQuery
getMltMaxNumQueryTerms		0;"	f	S:int function getMltMaxNumQueryTerms()	class:SolrQuery
getMltMaxNumTokens		0;"	f	S:int function getMltMaxNumTokens()	class:SolrQuery
getMltMaxWordLength		0;"	f	S:int function getMltMaxWordLength()	class:SolrQuery
getMltMinDocFrequency		0;"	f	S:int function getMltMinDocFrequency()	class:SolrQuery
getMltMinTermFrequency		0;"	f	S:int function getMltMinTermFrequency()	class:SolrQuery
getMltMinWordLength		0;"	f	S:int function getMltMinWordLength()	class:SolrQuery
getMltQueryFields		0;"	f	S:array function getMltQueryFields()	class:SolrQuery
getQuery		0;"	f	S:string function getQuery()	class:SolrQuery
getRows		0;"	f	S:int function getRows()	class:SolrQuery
getSortFields		0;"	f	S:array function getSortFields()	class:SolrQuery
getStart		0;"	f	S:int function getStart()	class:SolrQuery
getStats		0;"	f	S:bool function getStats()	class:SolrQuery
getStatsFacets		0;"	f	S:array function getStatsFacets()	class:SolrQuery
getStatsFields		0;"	f	S:array function getStatsFields()	class:SolrQuery
getTerms		0;"	f	S:bool function getTerms()	class:SolrQuery
getTermsField		0;"	f	S:string function getTermsField()	class:SolrQuery
getTermsIncludeLowerBound		0;"	f	S:bool function getTermsIncludeLowerBound()	class:SolrQuery
getTermsIncludeUpperBound		0;"	f	S:bool function getTermsIncludeUpperBound()	class:SolrQuery
getTermsLimit		0;"	f	S:int function getTermsLimit()	class:SolrQuery
getTermsLowerBound		0;"	f	S:string function getTermsLowerBound()	class:SolrQuery
getTermsMaxCount		0;"	f	S:int function getTermsMaxCount()	class:SolrQuery
getTermsMinCount		0;"	f	S:int function getTermsMinCount()	class:SolrQuery
getTermsPrefix		0;"	f	S:string function getTermsPrefix()	class:SolrQuery
getTermsReturnRaw		0;"	f	S:bool function getTermsReturnRaw()	class:SolrQuery
getTermsSort		0;"	f	S:int function getTermsSort()	class:SolrQuery
getTermsUpperBound		0;"	f	S:string function getTermsUpperBound()	class:SolrQuery
getTimeAllowed		0;"	f	S:int function getTimeAllowed()	class:SolrQuery
removeFacetDateField		0;"	f	S:SolrQuery function removeFacetDateField($field)	class:SolrQuery
removeFacetDateOther		0;"	f	S:SolrQuery function removeFacetDateOther($value, $field_override)	class:SolrQuery
removeFacetField		0;"	f	S:SolrQuery function removeFacetField($field)	class:SolrQuery
removeFacetQuery		0;"	f	S:SolrQuery function removeFacetQuery($value)	class:SolrQuery
removeField		0;"	f	S:SolrQuery function removeField($field)	class:SolrQuery
removeFilterQuery		0;"	f	S:SolrQuery function removeFilterQuery($fq)	class:SolrQuery
removeHighlightField		0;"	f	S:SolrQuery function removeHighlightField($field)	class:SolrQuery
removeMltField		0;"	f	S:SolrQuery function removeMltField($field)	class:SolrQuery
removeMltQueryField		0;"	f	S:SolrQuery function removeMltQueryField($queryField)	class:SolrQuery
removeSortField		0;"	f	S:SolrQuery function removeSortField($field)	class:SolrQuery
removeStatsFacet		0;"	f	S:SolrQuery function removeStatsFacet($value)	class:SolrQuery
removeStatsField		0;"	f	S:SolrQuery function removeStatsField($field)	class:SolrQuery
setEchoHandler		0;"	f	S:SolrQuery function setEchoHandler($flag)	class:SolrQuery
setEchoParams		0;"	f	S:SolrQuery function setEchoParams($type)	class:SolrQuery
setExplainOther		0;"	f	S:SolrQuery function setExplainOther($query)	class:SolrQuery
setFacet		0;"	f	S:SolrQuery function setFacet($flag)	class:SolrQuery
setFacetDateEnd		0;"	f	S:SolrQuery function setFacetDateEnd($value, $field_override)	class:SolrQuery
setFacetDateGap		0;"	f	S:SolrQuery function setFacetDateGap($value, $field_override)	class:SolrQuery
setFacetDateHardEnd		0;"	f	S:SolrQuery function setFacetDateHardEnd($value, $field_override)	class:SolrQuery
setFacetDateStart		0;"	f	S:SolrQuery function setFacetDateStart($value, $field_override)	class:SolrQuery
setFacetEnumCacheMinDefaultFrequency		0;"	f	S:SolrQuery function setFacetEnumCacheMinDefaultFrequency($frequency, $field_override)	class:SolrQuery
setFacetLimit		0;"	f	S:SolrQuery function setFacetLimit($limit, $field_override)	class:SolrQuery
setFacetMethod		0;"	f	S:SolrQuery function setFacetMethod($method, $field_override)	class:SolrQuery
setFacetMinCount		0;"	f	S:SolrQuery function setFacetMinCount($mincount, $field_override)	class:SolrQuery
setFacetMissing		0;"	f	S:SolrQuery function setFacetMissing($flag, $field_override)	class:SolrQuery
setFacetOffset		0;"	f	S:SolrQuery function setFacetOffset($offset, $field_override)	class:SolrQuery
setFacetPrefix		0;"	f	S:SolrQuery function setFacetPrefix($prefix, $field_override)	class:SolrQuery
setFacetSort		0;"	f	S:SolrQuery function setFacetSort($facetSort, $field_override)	class:SolrQuery
setHighlight		0;"	f	S:SolrQuery function setHighlight($flag)	class:SolrQuery
setHighlightAlternateField		0;"	f	S:SolrQuery function setHighlightAlternateField($field, $field_override)	class:SolrQuery
setHighlightFormatter		0;"	f	S:SolrQuery function setHighlightFormatter($formatter, $field_override)	class:SolrQuery
setHighlightFragmenter		0;"	f	S:SolrQuery function setHighlightFragmenter($fragmenter, $field_override)	class:SolrQuery
setHighlightFragsize		0;"	f	S:SolrQuery function setHighlightFragsize($size, $field_override)	class:SolrQuery
setHighlightHighlightMultiTerm		0;"	f	S:SolrQuery function setHighlightHighlightMultiTerm($flag)	class:SolrQuery
setHighlightMaxAlternateFieldLength		0;"	f	S:SolrQuery function setHighlightMaxAlternateFieldLength($fieldLength, $field_override)	class:SolrQuery
setHighlightMaxAnalyzedChars		0;"	f	S:SolrQuery function setHighlightMaxAnalyzedChars($value)	class:SolrQuery
setHighlightMergeContiguous		0;"	f	S:SolrQuery function setHighlightMergeContiguous($flag, $field_override)	class:SolrQuery
setHighlightRegexMaxAnalyzedChars		0;"	f	S:SolrQuery function setHighlightRegexMaxAnalyzedChars($maxAnalyzedChars)	class:SolrQuery
setHighlightRegexPattern		0;"	f	S:SolrQuery function setHighlightRegexPattern($value)	class:SolrQuery
setHighlightRegexSlop		0;"	f	S:SolrQuery function setHighlightRegexSlop($factor)	class:SolrQuery
setHighlightRequireFieldMatch		0;"	f	S:SolrQuery function setHighlightRequireFieldMatch($flag)	class:SolrQuery
setHighlightSimplePost		0;"	f	S:SolrQuery function setHighlightSimplePost($simplePost, $field_override)	class:SolrQuery
setHighlightSimplePre		0;"	f	S:SolrQuery function setHighlightSimplePre($simplePre, $field_override)	class:SolrQuery
setHighlightSnippets		0;"	f	S:SolrQuery function setHighlightSnippets($value, $field_override)	class:SolrQuery
setHighlightUsePhraseHighlighter		0;"	f	S:SolrQuery function setHighlightUsePhraseHighlighter($flag)	class:SolrQuery
setMlt		0;"	f	S:SolrQuery function setMlt($flag)	class:SolrQuery
setMltBoost		0;"	f	S:SolrQuery function setMltBoost($flag)	class:SolrQuery
setMltCount		0;"	f	S:SolrQuery function setMltCount($count)	class:SolrQuery
setMltMaxNumQueryTerms		0;"	f	S:SolrQuery function setMltMaxNumQueryTerms($value)	class:SolrQuery
setMltMaxNumTokens		0;"	f	S:SolrQuery function setMltMaxNumTokens($value)	class:SolrQuery
setMltMaxWordLength		0;"	f	S:SolrQuery function setMltMaxWordLength($maxWordLength)	class:SolrQuery
setMltMinDocFrequency		0;"	f	S:SolrQuery function setMltMinDocFrequency($minDocFrequency)	class:SolrQuery
setMltMinTermFrequency		0;"	f	S:SolrQuery function setMltMinTermFrequency($minTermFrequency)	class:SolrQuery
setMltMinWordLength		0;"	f	S:SolrQuery function setMltMinWordLength($minWordLength)	class:SolrQuery
setOmitHeader		0;"	f	S:SolrQuery function setOmitHeader($flag)	class:SolrQuery
setQuery		0;"	f	S:SolrQuery function setQuery($query)	class:SolrQuery
setRows		0;"	f	S:SolrQuery function setRows($rows)	class:SolrQuery
setShowDebugInfo		0;"	f	S:SolrQuery function setShowDebugInfo($flag)	class:SolrQuery
setStart		0;"	f	S:SolrQuery function setStart($start)	class:SolrQuery
setStats		0;"	f	S:SolrQuery function setStats($flag)	class:SolrQuery
setTerms		0;"	f	S:SolrQuery function setTerms($flag)	class:SolrQuery
setTermsField		0;"	f	S:SolrQuery function setTermsField($fieldname)	class:SolrQuery
setTermsIncludeLowerBound		0;"	f	S:SolrQuery function setTermsIncludeLowerBound($flag)	class:SolrQuery
setTermsIncludeUpperBound		0;"	f	S:SolrQuery function setTermsIncludeUpperBound($flag)	class:SolrQuery
setTermsLimit		0;"	f	S:SolrQuery function setTermsLimit($limit)	class:SolrQuery
setTermsLowerBound		0;"	f	S:SolrQuery function setTermsLowerBound($lowerBound)	class:SolrQuery
setTermsMaxCount		0;"	f	S:SolrQuery function setTermsMaxCount($frequency)	class:SolrQuery
setTermsMinCount		0;"	f	S:SolrQuery function setTermsMinCount($frequency)	class:SolrQuery
setTermsPrefix		0;"	f	S:SolrQuery function setTermsPrefix($prefix)	class:SolrQuery
setTermsReturnRaw		0;"	f	S:SolrQuery function setTermsReturnRaw($flag)	class:SolrQuery
setTermsSort		0;"	f	S:SolrQuery function setTermsSort($sortType)	class:SolrQuery
setTermsUpperBound		0;"	f	S:SolrQuery function setTermsUpperBound($upperBound)	class:SolrQuery
setTimeAllowed		0;"	f	S:SolrQuery function setTimeAllowed($timeAllowed)	class:SolrQuery
SolrException		0;"	c	i:Exception
sourceline		0;"	p	class:SolrException	a:protected	S:protected SolrException::sourceline
sourcefile		0;"	p	class:SolrException	a:protected	S:protected SolrException::sourcefile
zif_name		0;"	p	class:SolrException	a:protected	S:protected SolrException::zif_name
message		0;"	p	class:SolrException	a:protected	S:protected SolrException::message
code		0;"	p	class:SolrException	a:protected	S:protected SolrException::code
file		0;"	p	class:SolrException	a:protected	S:protected SolrException::file
line		0;"	p	class:SolrException	a:protected	S:protected SolrException::line
getInternalInfo		0;"	f	S:array function getInternalInfo()	class:SolrException
SolrClientException		0;"	c	i:SolrException
message		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::message
code		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::code
file		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::file
line		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::line
sourceline		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::sourceline
sourcefile		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::sourcefile
zif_name		0;"	p	class:SolrClientException	a:protected	S:protected SolrClientException::zif_name
getInternalInfo		0;"	f	S:array function getInternalInfo()	class:SolrClientException
SolrServerException		0;"	c	i:SolrException
message		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::message
code		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::code
file		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::file
line		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::line
sourceline		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::sourceline
sourcefile		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::sourcefile
zif_name		0;"	p	class:SolrServerException	a:protected	S:protected SolrServerException::zif_name
getInternalInfo		0;"	f	S:array function getInternalInfo()	class:SolrServerException
SolrIllegalArgumentException		0;"	c	i:SolrException
message		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::message
code		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::code
file		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::file
line		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::line
sourceline		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::sourceline
sourcefile		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::sourcefile
zif_name		0;"	p	class:SolrIllegalArgumentException	a:protected	S:protected SolrIllegalArgumentException::zif_name
getInternalInfo		0;"	f	S:array function getInternalInfo()	class:SolrIllegalArgumentException
SolrIllegalOperationException		0;"	c	i:SolrException
message		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::message
code		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::code
file		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::file
line		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::line
sourceline		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::sourceline
sourcefile		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::sourcefile
zif_name		0;"	p	class:SolrIllegalOperationException	a:protected	S:protected SolrIllegalOperationException::zif_name
getInternalInfo		0;"	f	S:array function getInternalInfo()	class:SolrIllegalOperationException
SEARCHD_OK		0;"	d
SEARCHD_ERROR		0;"	d
SEARCHD_RETRY		0;"	d
SEARCHD_WARNING		0;"	d
SPH_MATCH_ALL		0;"	d
SPH_MATCH_ANY		0;"	d
SPH_MATCH_PHRASE		0;"	d
SPH_MATCH_BOOLEAN		0;"	d
SPH_MATCH_EXTENDED		0;"	d
SPH_MATCH_FULLSCAN		0;"	d
SPH_MATCH_EXTENDED2		0;"	d
SPH_RANK_PROXIMITY_BM25		0;"	d
SPH_RANK_BM25		0;"	d
SPH_RANK_NONE		0;"	d
SPH_RANK_WORDCOUNT		0;"	d
SPH_SORT_RELEVANCE		0;"	d
SPH_SORT_ATTR_DESC		0;"	d
SPH_SORT_ATTR_ASC		0;"	d
SPH_SORT_TIME_SEGMENTS		0;"	d
SPH_SORT_EXTENDED		0;"	d
SPH_SORT_EXPR		0;"	d
SPH_FILTER_VALUES		0;"	d
SPH_FILTER_RANGE		0;"	d
SPH_FILTER_FLOATRANGE		0;"	d
SPH_ATTR_INTEGER		0;"	d
SPH_ATTR_TIMESTAMP		0;"	d
SPH_ATTR_ORDINAL		0;"	d
SPH_ATTR_BOOL		0;"	d
SPH_ATTR_FLOAT		0;"	d
SPH_ATTR_MULTI		0;"	d
SPH_GROUPBY_DAY		0;"	d
SPH_GROUPBY_WEEK		0;"	d
SPH_GROUPBY_MONTH		0;"	d
SPH_GROUPBY_YEAR		0;"	d
SPH_GROUPBY_ATTR		0;"	d
SPH_GROUPBY_ATTRPAIR		0;"	d
SphinxClient		0;"	c
addQuery		0;"	f	S:int function addQuery($query, $index = "*", $comment = "")	class:SphinxClient
buildExcerpts		0;"	f	S:array function buildExcerpts($docs, $index, $words, $opts)	class:SphinxClient
buildKeywords		0;"	f	S:array function buildKeywords($query, $index, $hits)	class:SphinxClient
close		0;"	f	S:bool function close()	class:SphinxClient
__construct		0;"	f	S: function __construct()	class:SphinxClient
escapeString		0;"	f	S:string function escapeString($string)	class:SphinxClient
getLastError		0;"	f	S:string function getLastError()	class:SphinxClient
getLastWarning		0;"	f	S:string function getLastWarning()	class:SphinxClient
open		0;"	f	S:bool function open()	class:SphinxClient
query		0;"	f	S:array function query($query, $index = "*", $comment = "")	class:SphinxClient
resetFilters		0;"	f	S:void function resetFilters()	class:SphinxClient
resetGroupBy		0;"	f	S:void function resetGroupBy()	class:SphinxClient
runQueries		0;"	f	S:array function runQueries()	class:SphinxClient
setArrayResult		0;"	f	S:bool function setArrayResult($array_result = false)	class:SphinxClient
setConnectTimeout		0;"	f	S:bool function setConnectTimeout($timeout)	class:SphinxClient
setFieldWeights		0;"	f	S:bool function setFieldWeights($weights)	class:SphinxClient
setFilter		0;"	f	S:bool function setFilter($attribute, $values, $exclude = false)	class:SphinxClient
setFilterFloatRange		0;"	f	S:bool function setFilterFloatRange($attribute, $min, $max, $exclude = false)	class:SphinxClient
setFilterRange		0;"	f	S:bool function setFilterRange($attribute, $min, $max, $exclude = false)	class:SphinxClient
setGeoAnchor		0;"	f	S:bool function setGeoAnchor($attrlat, $attrlong, $latitude, $longitude)	class:SphinxClient
setGroupBy		0;"	f	S:bool function setGroupBy($attribute, $func, $groupsort = "@group desc")	class:SphinxClient
setGroupDistinct		0;"	f	S:bool function setGroupDistinct($attribute)	class:SphinxClient
setIDRange		0;"	f	S:bool function setIDRange($min, $max)	class:SphinxClient
setIndexWeights		0;"	f	S:bool function setIndexWeights($weights)	class:SphinxClient
setLimits		0;"	f	S:bool function setLimits($offset, $limit, $max_matches, $cutoff)	class:SphinxClient
setMatchMode		0;"	f	S:bool function setMatchMode($mode)	class:SphinxClient
setMaxQueryTime		0;"	f	S:bool function setMaxQueryTime($qtime)	class:SphinxClient
setOverride		0;"	f	S:bool function setOverride($attribute, $type, $values)	class:SphinxClient
setRankingMode		0;"	f	S:bool function setRankingMode($ranker)	class:SphinxClient
setRetries		0;"	f	S:bool function setRetries($count, $delay)	class:SphinxClient
setSelect		0;"	f	S:bool function setSelect($clause)	class:SphinxClient
setServer		0;"	f	S:bool function setServer($server, $port)	class:SphinxClient
setSortMode		0;"	f	S:bool function setSortMode($mode, $sortby)	class:SphinxClient
status		0;"	f	S:array function status()	class:SphinxClient
updateAttributes		0;"	f	S:int function updateAttributes($index, $attributes, $values, $mva = false)	class:SphinxClient
META_TYPE_UNDEF		0;"	o	class:Swish
META_TYPE_STRING		0;"	o	class:Swish
META_TYPE_ULONG		0;"	o	class:Swish
META_TYPE_DATE		0;"	o	class:Swish
IN_FILE_BIT		0;"	o	class:Swish
IN_TITLE_BIT		0;"	o	class:Swish
IN_HEAD_BIT		0;"	o	class:Swish
IN_BODY_BIT		0;"	o	class:Swish
IN_COMMENTS_BIT		0;"	o	class:Swish
IN_HEADER_BIT		0;"	o	class:Swish
IN_EMPHASIZED_BIT		0;"	o	class:Swish
IN_META_BIT		0;"	o	class:Swish
IN_FILE		0;"	o	class:Swish
IN_TITLE		0;"	o	class:Swish
IN_HEAD		0;"	o	class:Swish
IN_BODY		0;"	o	class:Swish
IN_COMMENTS		0;"	o	class:Swish
IN_HEADER		0;"	o	class:Swish
IN_EMPHASIZED		0;"	o	class:Swish
IN_META		0;"	o	class:Swish
IN_ALL		0;"	o	class:Swish
__construct		0;"	f	S:void function __construct($index_names)	class:Swish
getMetaList		0;"	f	S:array function getMetaList($index_name)	class:Swish
getPropertyList		0;"	f	S:array function getPropertyList($index_name)	class:Swish
prepare		0;"	f	S:object function prepare($query)	class:Swish
query		0;"	f	S:object function query($query)	class:Swish
getMetaList		0;"	f	S:array function getMetaList()	class:SwishResult
stem		0;"	f	S:array function stem($word)	class:SwishResult
getParsedWords		0;"	f	S:array function getParsedWords($index_name)	class:SwishResults
getRemovedStopwords		0;"	f	S:array function getRemovedStopwords($index_name)	class:SwishResults
nextResult		0;"	f	S:object function nextResult()	class:SwishResults
seekResult		0;"	f	S:int function seekResult($position)	class:SwishResults
execute		0;"	f	S:object function execute($query)	class:SwishSearch
resetLimit		0;"	f	S:void function resetLimit()	class:SwishSearch
setLimit		0;"	f	S:void function setLimit($property, $low, $high)	class:SwishSearch
setPhraseDelimiter		0;"	f	S:void function setPhraseDelimiter($delimiter)	class:SwishSearch
setSort		0;"	f	S:void function setSort($sort)	class:SwishSearch
setStructure		0;"	f	S:void function setStructure($structure)	class:SwishSearch
apache_child_terminate		0;"	f	S:bool function apache_child_terminate()
apache_get_modules		0;"	f	S:array function apache_get_modules()
apache_get_version		0;"	f	S:string function apache_get_version()
apache_getenv		0;"	f	S:string function apache_getenv($variable, $walk_to_top = false)
apache_lookup_uri		0;"	f	S:object function apache_lookup_uri($filename)
apache_note		0;"	f	S:string function apache_note($note_name, $note_value = "")
apache_request_headers		0;"	f	S:array function apache_request_headers()
apache_reset_timeout		0;"	f	S:bool function apache_reset_timeout()
apache_response_headers		0;"	f	S:array function apache_response_headers()
apache_setenv		0;"	f	S:bool function apache_setenv($variable, $value, $walk_to_top = false)
getallheaders		0;"	f	S:array function getallheaders()
virtual		0;"	f	S:bool function virtual($filename)
fastcgi_finish_request		0;"	f	S:boolean function fastcgi_finish_request()
IIS_READ		0;"	d
IIS_WRITE		0;"	d
IIS_EXECUTE		0;"	d
IIS_SCRIPT		0;"	d
IIS_ANONYMOUS		0;"	d
IIS_BASIC		0;"	d
IIS_NTLM		0;"	d
IIS_STARTING		0;"	d
IIS_STOPPED		0;"	d
IIS_PAUSED		0;"	d
IIS_RUNNING		0;"	d
iis_add_server		0;"	f	S:int function iis_add_server($path, $comment, $server_ip, $port, $host_name, $rights, $start_server)
iis_get_dir_security		0;"	f	S:int function iis_get_dir_security($server_instance, $virtual_path)
iis_get_script_map		0;"	f	S:string function iis_get_script_map($server_instance, $virtual_path, $script_extension)
iis_get_server_by_comment		0;"	f	S:int function iis_get_server_by_comment($comment)
iis_get_server_by_path		0;"	f	S:int function iis_get_server_by_path($path)
iis_get_server_rights		0;"	f	S:int function iis_get_server_rights($server_instance, $virtual_path)
iis_get_service_state		0;"	f	S:int function iis_get_service_state($service_id)
iis_remove_server		0;"	f	S:int function iis_remove_server($server_instance)
iis_set_app_settings		0;"	f	S:int function iis_set_app_settings($server_instance, $virtual_path, $application_scope)
iis_set_dir_security		0;"	f	S:int function iis_set_dir_security($server_instance, $virtual_path, $directory_flags)
iis_set_script_map		0;"	f	S:int function iis_set_script_map($server_instance, $virtual_path, $script_extension, $engine_path, $allow_scripting)
iis_set_server_rights		0;"	f	S:int function iis_set_server_rights($server_instance, $virtual_path, $directory_flags)
iis_start_server		0;"	f	S:int function iis_start_server($server_instance)
iis_start_service		0;"	f	S:int function iis_start_service($service_id)
iis_stop_server		0;"	f	S:int function iis_stop_server($server_instance)
iis_stop_service		0;"	f	S:int function iis_stop_service($service_id)
nsapi_request_headers		0;"	f	S:array function nsapi_request_headers()
nsapi_response_headers		0;"	f	S:array function nsapi_response_headers()
nsapi_virtual		0;"	f	S:bool function nsapi_virtual($uri)
msession_connect		0;"	f	S:bool function msession_connect($host, $port)
msession_count		0;"	f	S:int function msession_count()
msession_create		0;"	f	S:bool function msession_create($session, $classname, $data)
msession_destroy		0;"	f	S:bool function msession_destroy($name)
msession_disconnect		0;"	f	S:void function msession_disconnect()
msession_find		0;"	f	S:array function msession_find($name, $value)
msession_get_array		0;"	f	S:array function msession_get_array($session)
msession_get_data		0;"	f	S:string function msession_get_data($session)
msession_get		0;"	f	S:string function msession_get($session, $name, $value)
msession_inc		0;"	f	S:string function msession_inc($session, $name)
msession_list		0;"	f	S:array function msession_list()
msession_listvar		0;"	f	S:array function msession_listvar($name)
msession_lock		0;"	f	S:int function msession_lock($name)
msession_plugin		0;"	f	S:string function msession_plugin($session, $val, $param)
msession_randstr		0;"	f	S:string function msession_randstr($param)
msession_set_array		0;"	f	S:void function msession_set_array($session, $tuples)
msession_set_data		0;"	f	S:bool function msession_set_data($session, $value)
msession_set		0;"	f	S:bool function msession_set($session, $name, $value)
msession_timeout		0;"	f	S:int function msession_timeout($session, $param)
msession_uniq		0;"	f	S:string function msession_uniq($param, $classname, $data)
msession_unlock		0;"	f	S:int function msession_unlock($session, $key)
SID		0;"	d
PHP_SESSION_DISABLED		0;"	d
PHP_SESSION_NONE		0;"	d
PHP_SESSION_ACTIVE		0;"	d
session_abort		0;"	f	S:bool function session_abort()
session_cache_expire		0;"	f	S:int function session_cache_expire($new_cache_expire)
session_cache_limiter		0;"	f	S:string function session_cache_limiter($cache_limiter)
session_commit		0;"	f	S: function session_commit()
session_decode		0;"	f	S:bool function session_decode($data)
session_destroy		0;"	f	S:bool function session_destroy()
session_encode		0;"	f	S:string function session_encode()
session_get_cookie_params		0;"	f	S:array function session_get_cookie_params()
session_id		0;"	f	S:string function session_id($id)
session_is_registered		0;"	f	S:bool function session_is_registered($name)
session_module_name		0;"	f	S:string function session_module_name($module)
session_name		0;"	f	S:string function session_name($name)
session_regenerate_id		0;"	f	S:bool function session_regenerate_id($delete_old_session = false)
session_register_shutdown		0;"	f	S:void function session_register_shutdown()
session_register		0;"	f	S:bool function session_register($name, $...)
session_reset		0;"	f	S:bool function session_reset()
session_save_path		0;"	f	S:string function session_save_path($path)
session_set_cookie_params		0;"	f	S:void function session_set_cookie_params($lifetime, $path, $domain, $secure = false, $httponly = false)
session_set_save_handler		0;"	f	S:bool function session_set_save_handler($open, $close, $read, $write, $destroy, $gc, $create_sid, $sessionhandler, $register_shutdown = true)
session_start		0;"	f	S:bool function session_start()
session_status		0;"	f	S:int function session_status()
session_unregister		0;"	f	S:bool function session_unregister($name)
session_unset		0;"	f	S:void function session_unset()
session_write_close		0;"	f	S:void function session_write_close()
SessionHandler		0;"	c
close		0;"	f	S:bool function close()	class:SessionHandler
create_sid		0;"	f	S:string function create_sid()	class:SessionHandler
destroy		0;"	f	S:bool function destroy($session_id)	class:SessionHandler
gc		0;"	f	S:bool function gc($maxlifetime)	class:SessionHandler
open		0;"	f	S:bool function open($save_path, $session_id)	class:SessionHandler
read		0;"	f	S:string function read($session_id)	class:SessionHandler
write		0;"	f	S:bool function write($session_id, $session_data)	class:SessionHandler
SessionHandlerInterface		0;"	c
close		0;"	f	S:bool function close()	class:SessionHandlerInterface	m: abstract
destroy		0;"	f	S:bool function destroy($session_id)	class:SessionHandlerInterface	m: abstract
gc		0;"	f	S:bool function gc($maxlifetime)	class:SessionHandlerInterface	m: abstract
open		0;"	f	S:bool function open($save_path, $name)	class:SessionHandlerInterface	m: abstract
read		0;"	f	S:string function read($session_id)	class:SessionHandlerInterface	m: abstract
write		0;"	f	S:bool function write($session_id, $session_data)	class:SessionHandlerInterface	m: abstract
session_pgsql_add_error		0;"	f	S:bool function session_pgsql_add_error($error_level, $error_message)
session_pgsql_get_error		0;"	f	S:array function session_pgsql_get_error($with_error_message = false)
session_pgsql_get_field		0;"	f	S:string function session_pgsql_get_field()
session_pgsql_reset		0;"	f	S:bool function session_pgsql_reset()
session_pgsql_set_field		0;"	f	S:bool function session_pgsql_set_field($value)
session_pgsql_status		0;"	f	S:array function session_pgsql_status()
BBCODE_TYPE_NOARG		0;"	d
BBCODE_TYPE_SINGLE		0;"	d
BBCODE_TYPE_ARG		0;"	d
BBCODE_TYPE_OPTARG		0;"	d
BBCODE_TYPE_ROOT		0;"	d
BBCODE_FLAGS_ARG_PARSING		0;"	d
BBCODE_FLAGS_CDATA_NOT_ALLOWED		0;"	d
BBCODE_FLAGS_SMILEYS_ON		0;"	d
BBCODE_FLAGS_SMILEYS_OFF		0;"	d
BBCODE_FLAGS_ONE_OPEN_PER_LEVEL		0;"	d
BBCODE_FLAGS_REMOVE_IF_EMPTY		0;"	d
BBCODE_FLAGS_DENY_REOPEN_CHILD		0;"	d
BBCODE_ARG_DOUBLE_QUOTE		0;"	d
BBCODE_ARG_SINGLE_QUOTE		0;"	d
BBCODE_ARG_HTML_QUOTE		0;"	d
BBCODE_ARG_QUOTE_ESCAPING		0;"	d
BBCODE_AUTO_CORRECT		0;"	d
BBCODE_CORRECT_REOPEN_TAGS		0;"	d
BBCODE_DISABLE_TREE_BUILD		0;"	d
BBCODE_DEFAULT_SMILEYS_ON		0;"	d
BBCODE_DEFAULT_SMILEYS_OFF		0;"	d
BBCODE_FORCE_SMILEYS_OFF		0;"	d
BBCODE_SMILEYS_CASE_INSENSITIVE		0;"	d
BBCODE_SET_FLAGS_SET		0;"	d
BBCODE_SET_FLAGS_ADD		0;"	d
BBCODE_SET_FLAGS_REMOVE		0;"	d
bbcode_add_element		0;"	f	S:bool function bbcode_add_element($bbcode_container, $tag_name, $tag_rules)
bbcode_add_smiley		0;"	f	S:bool function bbcode_add_smiley($bbcode_container, $smiley, $replace_by)
bbcode_create		0;"	f	S:resource function bbcode_create($bbcode_initial_tags = NULL)
bbcode_destroy		0;"	f	S:bool function bbcode_destroy($bbcode_container)
bbcode_parse		0;"	f	S:string function bbcode_parse($bbcode_container, $to_parse)
bbcode_set_arg_parser		0;"	f	S:bool function bbcode_set_arg_parser($bbcode_container, $bbcode_arg_parser)
bbcode_set_flags		0;"	f	S:bool function bbcode_set_flags($bbcode_container, $flags, $mode = BBCODE_SET_FLAGS_SET)
preg_filter		0;"	f	S:mixed function preg_filter($pattern, $replacement, $subject, $limit = -1, &$count)
preg_grep		0;"	f	S:array function preg_grep($pattern, $input, $flags)
preg_last_error		0;"	f	S:int function preg_last_error()
preg_match_all		0;"	f	S:int function preg_match_all($pattern, $subject, &$matches, $flags, $offset)
preg_match		0;"	f	S:int function preg_match($pattern, $subject, &$matches, $flags, $offset)
preg_quote		0;"	f	S:string function preg_quote($str, $delimiter)
preg_replace_callback		0;"	f	S:mixed function preg_replace_callback($pattern, $callback, $subject, $limit = -1, &$count)
preg_replace		0;"	f	S:mixed function preg_replace($pattern, $replacement, $subject, $limit = -1, &$count)
preg_split		0;"	f	S:array function preg_split($pattern, $subject, $limit = -1, $flags)
ereg_replace		0;"	f	S:string function ereg_replace($pattern, $replacement, $string)
ereg		0;"	f	S:int function ereg($pattern, $string, &$regs)
eregi_replace		0;"	f	S:string function eregi_replace($pattern, $replacement, $string)
eregi		0;"	f	S:int function eregi($pattern, $string, &$regs)
split		0;"	f	S:array function split($pattern, $string, $limit = -1)
spliti		0;"	f	S:array function spliti($pattern, $string, $limit = -1)
sql_regcase		0;"	f	S:string function sql_regcase($string)
ssdeep_fuzzy_compare		0;"	f	S:int function ssdeep_fuzzy_compare($signature1, $signature2)
ssdeep_fuzzy_hash_filename		0;"	f	S:string function ssdeep_fuzzy_hash_filename($file_name)
ssdeep_fuzzy_hash		0;"	f	S:string function ssdeep_fuzzy_hash($to_hash)
CRYPT_SALT_LENGTH		0;"	d
CRYPT_STD_DES		0;"	d
CRYPT_EXT_DES		0;"	d
CRYPT_MD5		0;"	d
CRYPT_BLOWFISH		0;"	d
HTML_SPECIALCHARS		0;"	d
HTML_ENTITIES		0;"	d
ENT_COMPAT		0;"	d
ENT_QUOTES		0;"	d
ENT_NOQUOTES		0;"	d
ENT_IGNORE		0;"	d
ENT_SUBSTITUTE		0;"	d
ENT_DISALLOWED		0;"	d
ENT_HTML401		0;"	d
ENT_XML1		0;"	d
ENT_XHTML		0;"	d
ENT_HTML5		0;"	d
CHAR_MAX		0;"	d
LC_CTYPE		0;"	d
LC_NUMERIC		0;"	d
LC_TIME		0;"	d
LC_COLLATE		0;"	d
LC_MONETARY		0;"	d
LC_ALL		0;"	d
LC_MESSAGES		0;"	d
STR_PAD_LEFT		0;"	d
STR_PAD_RIGHT		0;"	d
STR_PAD_BOTH		0;"	d
addcslashes		0;"	f	S:string function addcslashes($str, $charlist)
addslashes		0;"	f	S:string function addslashes($str)
bin2hex		0;"	f	S:string function bin2hex($str)
chop		0;"	f	S: function chop()
chr		0;"	f	S:string function chr($ascii)
chunk_split		0;"	f	S:string function chunk_split($body, $chunklen = 76, $end = "\r\n")
convert_cyr_string		0;"	f	S:string function convert_cyr_string($str, $from, $to)
convert_uudecode		0;"	f	S:string function convert_uudecode($data)
convert_uuencode		0;"	f	S:string function convert_uuencode($data)
count_chars		0;"	f	S:mixed function count_chars($string, $mode)
crc32		0;"	f	S:int function crc32($str)
crypt		0;"	f	S:string function crypt($str, $salt)
echo		0;"	f	S:void function echo($arg1, $...)
explode		0;"	f	S:array function explode($delimiter, $string, $limit)
fprintf		0;"	f	S:int function fprintf($handle, $format, $args, $...)
get_html_translation_table		0;"	f	S:array function get_html_translation_table($table = HTML_SPECIALCHARS, $flags = ENT_COMPAT | ENT_HTML401, $encoding = "UTF-8")
hebrev		0;"	f	S:string function hebrev($hebrew_text, $max_chars_per_line)
hebrevc		0;"	f	S:string function hebrevc($hebrew_text, $max_chars_per_line)
hex2bin		0;"	f	S:string function hex2bin($data)
html_entity_decode		0;"	f	S:string function html_entity_decode($string, $flags = ENT_COMPAT | ENT_HTML401, $encoding = ini_get("default_charset"))
htmlentities		0;"	f	S:string function htmlentities($string, $flags = ENT_COMPAT | ENT_HTML401, $encoding = ini_get("default_charset"), $double_encode = true)
htmlspecialchars_decode		0;"	f	S:string function htmlspecialchars_decode($string, $flags = ENT_COMPAT | ENT_HTML401)
htmlspecialchars		0;"	f	S:string function htmlspecialchars($string, $flags = ENT_COMPAT | ENT_HTML401, $encoding = ini_get("default_charset"), $double_encode = true)
implode		0;"	f	S:string function implode($glue, $pieces)
join		0;"	f	S: function join()
lcfirst		0;"	f	S:string function lcfirst($str)
levenshtein		0;"	f	S:int function levenshtein($str1, $str2, $cost_ins, $cost_rep, $cost_del)
localeconv		0;"	f	S:array function localeconv()
ltrim		0;"	f	S:string function ltrim($str, $character_mask)
md5_file		0;"	f	S:string function md5_file($filename, $raw_output = false)
md5		0;"	f	S:string function md5($str, $raw_output = false)
metaphone		0;"	f	S:string function metaphone($str, $phonemes)
money_format		0;"	f	S:string function money_format($format, $number)
nl_langinfo		0;"	f	S:string function nl_langinfo($item)
nl2br		0;"	f	S:string function nl2br($string, $is_xhtml = true)
number_format		0;"	f	S:string function number_format($number, $decimals, $dec_point = ".", $thousands_sep = ",")
ord		0;"	f	S:int function ord($string)
parse_str		0;"	f	S:void function parse_str($str, &$arr)
print		0;"	f	S:int function print($arg)
printf		0;"	f	S:int function printf($format, $args, $...)
quoted_printable_decode		0;"	f	S:string function quoted_printable_decode($str)
quoted_printable_encode		0;"	f	S:string function quoted_printable_encode($str)
quotemeta		0;"	f	S:string function quotemeta($str)
rtrim		0;"	f	S:string function rtrim($str, $character_mask)
setlocale		0;"	f	S:string function setlocale($category, $locale, $...)
sha1_file		0;"	f	S:string function sha1_file($filename, $raw_output = false)
sha1		0;"	f	S:string function sha1($str, $raw_output = false)
similar_text		0;"	f	S:int function similar_text($first, $second, &$percent)
soundex		0;"	f	S:string function soundex($str)
sprintf		0;"	f	S:string function sprintf($format, $args, $...)
sscanf		0;"	f	S:mixed function sscanf($str, $format, &$...)
str_getcsv		0;"	f	S:array function str_getcsv($input, $delimiter = ",", $enclosure = '"', $escape = "\\")
str_ireplace		0;"	f	S:mixed function str_ireplace($search, $replace, $subject, &$count)
str_pad		0;"	f	S:string function str_pad($input, $pad_length, $pad_string = " ", $pad_type = STR_PAD_RIGHT)
str_repeat		0;"	f	S:string function str_repeat($input, $multiplier)
str_replace		0;"	f	S:mixed function str_replace($search, $replace, $subject, &$count)
str_rot13		0;"	f	S:string function str_rot13($str)
str_shuffle		0;"	f	S:string function str_shuffle($str)
str_split		0;"	f	S:array function str_split($string, $split_length = 1)
str_word_count		0;"	f	S:mixed function str_word_count($string, $format, $charlist)
strcasecmp		0;"	f	S:int function strcasecmp($str1, $str2)
strchr		0;"	f	S: function strchr()
strcmp		0;"	f	S:int function strcmp($str1, $str2)
strcoll		0;"	f	S:int function strcoll($str1, $str2)
strcspn		0;"	f	S:int function strcspn($str1, $str2, $start, $length)
strip_tags		0;"	f	S:string function strip_tags($str, $allowable_tags)
stripcslashes		0;"	f	S:string function stripcslashes($str)
stripos		0;"	f	S:int function stripos($haystack, $needle, $offset)
stripslashes		0;"	f	S:string function stripslashes($str)
stristr		0;"	f	S:string function stristr($haystack, $needle, $before_needle = false)
strlen		0;"	f	S:int function strlen($string)
strnatcasecmp		0;"	f	S:int function strnatcasecmp($str1, $str2)
strnatcmp		0;"	f	S:int function strnatcmp($str1, $str2)
strncasecmp		0;"	f	S:int function strncasecmp($str1, $str2, $len)
strncmp		0;"	f	S:int function strncmp($str1, $str2, $len)
strpbrk		0;"	f	S:string function strpbrk($haystack, $char_list)
strpos		0;"	f	S:mixed function strpos($haystack, $needle, $offset)
strrchr		0;"	f	S:string function strrchr($haystack, $needle)
strrev		0;"	f	S:string function strrev($string)
strripos		0;"	f	S:int function strripos($haystack, $needle, $offset)
strrpos		0;"	f	S:int function strrpos($haystack, $needle, $offset)
strspn		0;"	f	S:int function strspn($subject, $mask, $start, $length)
strstr		0;"	f	S:string function strstr($haystack, $needle, $before_needle = false)
strtok		0;"	f	S:string function strtok($str, $token)
strtolower		0;"	f	S:string function strtolower($string)
strtoupper		0;"	f	S:string function strtoupper($string)
strtr		0;"	f	S:string function strtr($str, $from, $to, $replace_pairs)
substr_compare		0;"	f	S:int function substr_compare($main_str, $str, $offset, $length, $case_insensitivity = false)
substr_count		0;"	f	S:int function substr_count($haystack, $needle, $offset, $length)
substr_replace		0;"	f	S:mixed function substr_replace($string, $replacement, $start, $length)
substr		0;"	f	S:string function substr($string, $start, $length)
trim		0;"	f	S:string function trim($str, $character_mask = " \t\n\r\0\x0B")
ucfirst		0;"	f	S:string function ucfirst($str)
ucwords		0;"	f	S:string function ucwords($str)
vfprintf		0;"	f	S:int function vfprintf($handle, $format, $args)
vprintf		0;"	f	S:int function vprintf($format, $args)
vsprintf		0;"	f	S:string function vsprintf($format, $args)
wordwrap		0;"	f	S:string function wordwrap($str, $width = 75, $break = "\n", $cut = false)
CASE_LOWER		0;"	d
CASE_UPPER		0;"	d
SORT_ASC		0;"	d
SORT_DESC		0;"	d
SORT_REGULAR		0;"	d
SORT_NUMERIC		0;"	d
SORT_STRING		0;"	d
SORT_LOCALE_STRING		0;"	d
SORT_NATURAL		0;"	d
SORT_FLAG_CASE		0;"	d
ARRAY_FILTER_USE_KEY		0;"	d
ARRAY_FILTER_USE_BOTH		0;"	d
COUNT_NORMAL		0;"	d
COUNT_RECURSIVE		0;"	d
EXTR_OVERWRITE		0;"	d
EXTR_SKIP		0;"	d
EXTR_PREFIX_SAME		0;"	d
EXTR_PREFIX_ALL		0;"	d
EXTR_PREFIX_INVALID		0;"	d
EXTR_PREFIX_IF_EXISTS		0;"	d
EXTR_IF_EXISTS		0;"	d
EXTR_REFS		0;"	d
array_change_key_case		0;"	f	S:array function array_change_key_case($array, $case = CASE_LOWER)
array_chunk		0;"	f	S:array function array_chunk($array, $size, $preserve_keys = false)
array_column		0;"	f	S:array function array_column($array, $column_key, $index_key = null)
array_combine		0;"	f	S:array function array_combine($keys, $values)
array_count_values		0;"	f	S:array function array_count_values($array)
array_diff_assoc		0;"	f	S:array function array_diff_assoc($array1, $array2, $...)
array_diff_key		0;"	f	S:array function array_diff_key($array1, $array2, $...)
array_diff_uassoc		0;"	f	S:array function array_diff_uassoc($array1, $array2, $..., $key_compare_func)
array_diff_ukey		0;"	f	S:array function array_diff_ukey($array1, $array2, $..., $key_compare_func)
array_diff		0;"	f	S:array function array_diff($array1, $array2, $...)
array_fill_keys		0;"	f	S:array function array_fill_keys($keys, $value)
array_fill		0;"	f	S:array function array_fill($start_index, $num, $value)
array_filter		0;"	f	S:array function array_filter($array, $callback, $flag)
array_flip		0;"	f	S:string function array_flip($array)
array_intersect_assoc		0;"	f	S:array function array_intersect_assoc($array1, $array2, $...)
array_intersect_key		0;"	f	S:array function array_intersect_key($array1, $array2, $...)
array_intersect_uassoc		0;"	f	S:array function array_intersect_uassoc($array1, $array2, $..., $key_compare_func)
array_intersect_ukey		0;"	f	S:array function array_intersect_ukey($array1, $array2, $..., $key_compare_func)
array_intersect		0;"	f	S:array function array_intersect($array1, $array2, $...)
array_key_exists		0;"	f	S:bool function array_key_exists($key, $array)
array_keys		0;"	f	S:array function array_keys($array, $search_value, $strict = false)
array_map		0;"	f	S:array function array_map($callback, $array1, $...)
array_merge_recursive		0;"	f	S:array function array_merge_recursive($array1, $...)
array_merge		0;"	f	S:array function array_merge($array1, $...)
array_multisort		0;"	f	S:string function array_multisort(&$array1, $array1_sort_order = SORT_ASC, $array1_sort_flags = SORT_REGULAR, $...)
array_pad		0;"	f	S:array function array_pad($array, $size, $value)
array_pop		0;"	f	S:array function array_pop(&$array)
array_product		0;"	f	S:number function array_product($array)
array_push		0;"	f	S:int function array_push(&$array, $value1, $...)
array_rand		0;"	f	S:mixed function array_rand($array, $num = 1)
array_reduce		0;"	f	S:mixed function array_reduce($array, $callback, $initial)
array_replace_recursive		0;"	f	S:array function array_replace_recursive($array1, $array2, $...)
array_replace		0;"	f	S:array function array_replace($array1, $array2, $...)
array_reverse		0;"	f	S:array function array_reverse($array, $preserve_keys = false)
array_search		0;"	f	S:mixed function array_search($needle, $haystack, $strict = false)
array_shift		0;"	f	S:array function array_shift(&$array)
array_slice		0;"	f	S:array function array_slice($array, $offset, $length, $preserve_keys = false)
array_splice		0;"	f	S:array function array_splice(&$input, $offset, $length, $replacement = array())
array_sum		0;"	f	S:number function array_sum($array)
array_udiff_assoc		0;"	f	S:array function array_udiff_assoc($array1, $array2, $..., $value_compare_func)
array_udiff_uassoc		0;"	f	S:array function array_udiff_uassoc($array1, $array2, $..., $value_compare_func, $key_compare_func)
array_udiff		0;"	f	S:array function array_udiff($array1, $array2, $..., $value_compare_func)
array_uintersect_assoc		0;"	f	S:array function array_uintersect_assoc($array1, $array2, $..., $value_compare_func)
array_uintersect_uassoc		0;"	f	S:array function array_uintersect_uassoc($array1, $array2, $..., $value_compare_func, $key_compare_func)
array_uintersect		0;"	f	S:array function array_uintersect($array1, $array2, $..., $value_compare_func)
array_unique		0;"	f	S:array function array_unique($array, $sort_flags = SORT_STRING)
array_unshift		0;"	f	S:int function array_unshift(&$array, $value1, $...)
array_values		0;"	f	S:array function array_values($array)
array_walk_recursive		0;"	f	S:bool function array_walk_recursive(&$array, $callback, $userdata)
array_walk		0;"	f	S:bool function array_walk(&$array, $callback, $userdata)
array		0;"	f	S:array function array($...)
arsort		0;"	f	S:bool function arsort(&$array, $sort_flags = SORT_REGULAR)
asort		0;"	f	S:bool function asort(&$array, $sort_flags = SORT_REGULAR)
compact		0;"	f	S:array function compact($varname1, $...)
count		0;"	f	S:int function count($array_or_countable, $mode = COUNT_NORMAL)
current		0;"	f	S:mixed function current(&$array)
each		0;"	f	S:array function each(&$array)
end		0;"	f	S:mixed function end(&$array)
extract		0;"	f	S:int function extract(&$array, $flags = EXTR_OVERWRITE, $prefix)
in_array		0;"	f	S:bool function in_array($needle, $haystack, $strict)
key_exists		0;"	f	S: function key_exists()
key		0;"	f	S:mixed function key(&$array)
krsort		0;"	f	S:bool function krsort(&$array, $sort_flags = SORT_REGULAR)
ksort		0;"	f	S:bool function ksort(&$array, $sort_flags = SORT_REGULAR)
list		0;"	f	S:array function list($var1, $...)
natcasesort		0;"	f	S:bool function natcasesort(&$array)
natsort		0;"	f	S:bool function natsort(&$array)
next		0;"	f	S:mixed function next(&$array)
pos		0;"	f	S: function pos()
prev		0;"	f	S:mixed function prev(&$array)
range		0;"	f	S:array function range($start, $end, $step = 1)
reset		0;"	f	S:mixed function reset(&$array)
rsort		0;"	f	S:bool function rsort(&$array, $sort_flags = SORT_REGULAR)
shuffle		0;"	f	S:bool function shuffle(&$array)
sizeof		0;"	f	S: function sizeof()
sort		0;"	f	S:bool function sort(&$array, $sort_flags = SORT_REGULAR)
uasort		0;"	f	S:bool function uasort(&$array, $value_compare_func)
uksort		0;"	f	S:bool function uksort(&$array, $key_compare_func)
usort		0;"	f	S:bool function usort(&$array, $value_compare_func)
__autoload		0;"	f	S:void function __autoload($class)
call_user_method_array		0;"	f	S:mixed function call_user_method_array($method_name, &$obj, $params)
call_user_method		0;"	f	S:mixed function call_user_method($method_name, &$obj, $parameter, $...)
class_alias		0;"	f	S:bool function class_alias($original, $alias, $autoload)
class_exists		0;"	f	S:bool function class_exists($class_name, $autoload = true)
get_called_class		0;"	f	S:string function get_called_class()
get_class_methods		0;"	f	S:array function get_class_methods($class_name)
get_class_vars		0;"	f	S:array function get_class_vars($class_name)
get_class		0;"	f	S:string function get_class($object)
get_declared_classes		0;"	f	S:array function get_declared_classes()
get_declared_interfaces		0;"	f	S:array function get_declared_interfaces()
get_declared_traits		0;"	f	S:array function get_declared_traits()
get_object_vars		0;"	f	S:array function get_object_vars($object)
get_parent_class		0;"	f	S:string function get_parent_class($object)
interface_exists		0;"	f	S:bool function interface_exists($interface_name, $autoload = true)
is_a		0;"	f	S:bool function is_a($object, $class_name, $allow_string)
is_subclass_of		0;"	f	S:bool function is_subclass_of($object, $class_name, $allow_string)
method_exists		0;"	f	S:bool function method_exists($object, $method_name)
property_exists		0;"	f	S:bool function property_exists($class, $property)
trait_exists		0;"	f	S:bool function trait_exists($traitname, $autoload)
CLASSKIT_ACC_PRIVATE		0;"	d
CLASSKIT_ACC_PROTECTED		0;"	d
CLASSKIT_ACC_PUBLIC		0;"	d
classkit_import		0;"	f	S:array function classkit_import($filename)
classkit_method_add		0;"	f	S:bool function classkit_method_add($classname, $methodname, $args, $code, $flags = CLASSKIT_ACC_PUBLIC)
classkit_method_copy		0;"	f	S:bool function classkit_method_copy($dClass, $dMethod, $sClass, $sMethod)
classkit_method_redefine		0;"	f	S:bool function classkit_method_redefine($classname, $methodname, $args, $code, $flags = CLASSKIT_ACC_PUBLIC)
classkit_method_remove		0;"	f	S:bool function classkit_method_remove($classname, $methodname)
classkit_method_rename		0;"	f	S:bool function classkit_method_rename($classname, $methodname, $newname)
ctype_alnum		0;"	f	S:string function ctype_alnum($text)
ctype_alpha		0;"	f	S:string function ctype_alpha($text)
ctype_cntrl		0;"	f	S:string function ctype_cntrl($text)
ctype_digit		0;"	f	S:string function ctype_digit($text)
ctype_graph		0;"	f	S:string function ctype_graph($text)
ctype_lower		0;"	f	S:string function ctype_lower($text)
ctype_print		0;"	f	S:string function ctype_print($text)
ctype_punct		0;"	f	S:string function ctype_punct($text)
ctype_space		0;"	f	S:string function ctype_space($text)
ctype_upper		0;"	f	S:string function ctype_upper($text)
ctype_xdigit		0;"	f	S:string function ctype_xdigit($text)
INPUT_POST		0;"	d
INPUT_GET		0;"	d
INPUT_COOKIE		0;"	d
INPUT_ENV		0;"	d
INPUT_SERVER		0;"	d
INPUT_SESSION		0;"	d
INPUT_REQUEST		0;"	d
FILTER_FLAG_NONE		0;"	d
FILTER_REQUIRE_SCALAR		0;"	d
FILTER_REQUIRE_ARRAY		0;"	d
FILTER_FORCE_ARRAY		0;"	d
FILTER_NULL_ON_FAILURE		0;"	d
FILTER_VALIDATE_INT		0;"	d
FILTER_VALIDATE_BOOLEAN		0;"	d
FILTER_VALIDATE_FLOAT		0;"	d
FILTER_VALIDATE_REGEXP		0;"	d
FILTER_VALIDATE_URL		0;"	d
FILTER_VALIDATE_EMAIL		0;"	d
FILTER_VALIDATE_IP		0;"	d
FILTER_DEFAULT		0;"	d
FILTER_UNSAFE_RAW		0;"	d
FILTER_SANITIZE_STRING		0;"	d
FILTER_SANITIZE_STRIPPED		0;"	d
FILTER_SANITIZE_ENCODED		0;"	d
FILTER_SANITIZE_SPECIAL_CHARS		0;"	d
FILTER_SANITIZE_EMAIL		0;"	d
FILTER_SANITIZE_URL		0;"	d
FILTER_SANITIZE_NUMBER_INT		0;"	d
FILTER_SANITIZE_NUMBER_FLOAT		0;"	d
FILTER_SANITIZE_MAGIC_QUOTES		0;"	d
FILTER_CALLBACK		0;"	d
FILTER_FLAG_ALLOW_OCTAL		0;"	d
FILTER_FLAG_ALLOW_HEX		0;"	d
FILTER_FLAG_STRIP_LOW		0;"	d
FILTER_FLAG_STRIP_HIGH		0;"	d
FILTER_FLAG_ENCODE_LOW		0;"	d
FILTER_FLAG_ENCODE_HIGH		0;"	d
FILTER_FLAG_ENCODE_AMP		0;"	d
FILTER_FLAG_NO_ENCODE_QUOTES		0;"	d
FILTER_FLAG_EMPTY_STRING_NULL		0;"	d
FILTER_FLAG_ALLOW_FRACTION		0;"	d
FILTER_FLAG_ALLOW_THOUSAND		0;"	d
FILTER_FLAG_ALLOW_SCIENTIFIC		0;"	d
FILTER_FLAG_PATH_REQUIRED		0;"	d
FILTER_FLAG_QUERY_REQUIRED		0;"	d
FILTER_FLAG_IPV4		0;"	d
FILTER_FLAG_IPV6		0;"	d
FILTER_FLAG_NO_RES_RANGE		0;"	d
FILTER_FLAG_NO_PRIV_RANGE		0;"	d
filter_has_var		0;"	f	S:bool function filter_has_var($type, $variable_name)
filter_id		0;"	f	S:int function filter_id($filtername)
filter_input_array		0;"	f	S:mixed function filter_input_array($type, $definition, $add_empty = true)
filter_input		0;"	f	S:mixed function filter_input($type, $variable_name, $filter = FILTER_DEFAULT, $options)
filter_list		0;"	f	S:array function filter_list()
filter_var_array		0;"	f	S:mixed function filter_var_array($data, $definition, $add_empty = true)
filter_var		0;"	f	S:mixed function filter_var($variable, $filter = FILTER_DEFAULT, $options)
call_user_func_array		0;"	f	S:mixed function call_user_func_array($callback, $param_arr)
call_user_func		0;"	f	S:mixed function call_user_func($callback, $parameter, $...)
create_function		0;"	f	S:string function create_function($args, $code)
forward_static_call_array		0;"	f	S:mixed function forward_static_call_array($function, $parameters)
forward_static_call		0;"	f	S:mixed function forward_static_call($function, $parameter, $...)
func_get_arg		0;"	f	S:mixed function func_get_arg($arg_num)
func_get_args		0;"	f	S:array function func_get_args()
func_num_args		0;"	f	S:int function func_num_args()
function_exists		0;"	f	S:bool function function_exists($function_name)
get_defined_functions		0;"	f	S:array function get_defined_functions()
register_shutdown_function		0;"	f	S:void function register_shutdown_function($callback, $parameter, $...)
register_tick_function		0;"	f	S:bool function register_tick_function($function, $arg, $...)
unregister_tick_function		0;"	f	S:void function unregister_tick_function($function_name)
QuickHashIntSet		0;"	c
CHECK_FOR_DUPES		0;"	o	class:QuickHashIntSet	a:const	S:const QuickHashIntSet::CHECK_FOR_DUPES
DO_NOT_USE_ZEND_ALLOC		0;"	o	class:QuickHashIntSet	a:const	S:const QuickHashIntSet::DO_NOT_USE_ZEND_ALLOC
HASHER_NO_HASH		0;"	o	class:QuickHashIntSet	a:const	S:const QuickHashIntSet::HASHER_NO_HASH
HASHER_JENKINS1		0;"	o	class:QuickHashIntSet	a:const	S:const QuickHashIntSet::HASHER_JENKINS1
HASHER_JENKINS2		0;"	o	class:QuickHashIntSet	a:const	S:const QuickHashIntSet::HASHER_JENKINS2
add		0;"	f	S:bool function add($key)	class:QuickHashIntSet
__construct		0;"	f	S: function __construct($size, $options)	class:QuickHashIntSet
delete		0;"	f	S:bool function delete($key)	class:QuickHashIntSet
exists		0;"	f	S:bool function exists($key)	class:QuickHashIntSet
getSize		0;"	f	S:int function getSize()	class:QuickHashIntSet
loadFromFile		0;"	f	S:QuickHashIntSet function loadFromFile($filename, $size, $options)	class:QuickHashIntSet	a:static
loadFromString		0;"	f	S:QuickHashIntSet function loadFromString($contents, $size, $options)	class:QuickHashIntSet	a:static
saveToFile		0;"	f	S:void function saveToFile($filename)	class:QuickHashIntSet
saveToString		0;"	f	S:string function saveToString()	class:QuickHashIntSet
QuickHashIntHash		0;"	c
CHECK_FOR_DUPES		0;"	o	class:QuickHashIntHash	a:const	S:const QuickHashIntHash::CHECK_FOR_DUPES
DO_NOT_USE_ZEND_ALLOC		0;"	o	class:QuickHashIntHash	a:const	S:const QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC
HASHER_NO_HASH		0;"	o	class:QuickHashIntHash	a:const	S:const QuickHashIntHash::HASHER_NO_HASH
HASHER_JENKINS1		0;"	o	class:QuickHashIntHash	a:const	S:const QuickHashIntHash::HASHER_JENKINS1
HASHER_JENKINS2		0;"	o	class:QuickHashIntHash	a:const	S:const QuickHashIntHash::HASHER_JENKINS2
add		0;"	f	S:bool function add($key, $value)	class:QuickHashIntHash
__construct		0;"	f	S: function __construct($size, $options)	class:QuickHashIntHash
delete		0;"	f	S:bool function delete($key)	class:QuickHashIntHash
exists		0;"	f	S:bool function exists($key)	class:QuickHashIntHash
get		0;"	f	S:int function get($key)	class:QuickHashIntHash
getSize		0;"	f	S:int function getSize()	class:QuickHashIntHash
loadFromFile		0;"	f	S:QuickHashIntHash function loadFromFile($filename, $options)	class:QuickHashIntHash	a:static
loadFromString		0;"	f	S:QuickHashIntHash function loadFromString($contents, $options)	class:QuickHashIntHash	a:static
saveToFile		0;"	f	S:void function saveToFile($filename)	class:QuickHashIntHash
saveToString		0;"	f	S:string function saveToString()	class:QuickHashIntHash
set		0;"	f	S:bool function set($key, $value)	class:QuickHashIntHash
update		0;"	f	S:bool function update($key, $value)	class:QuickHashIntHash
QuickHashStringIntHash		0;"	c
CHECK_FOR_DUPES		0;"	o	class:QuickHashStringIntHash	a:const	S:const QuickHashStringIntHash::CHECK_FOR_DUPES
DO_NOT_USE_ZEND_ALLOC		0;"	o	class:QuickHashStringIntHash	a:const	S:const QuickHashStringIntHash::DO_NOT_USE_ZEND_ALLOC
add		0;"	f	S:bool function add($key, $value)	class:QuickHashStringIntHash
__construct		0;"	f	S: function __construct($size, $options)	class:QuickHashStringIntHash
delete		0;"	f	S:bool function delete($key)	class:QuickHashStringIntHash
exists		0;"	f	S:bool function exists($key)	class:QuickHashStringIntHash
get		0;"	f	S:mixed function get($key)	class:QuickHashStringIntHash
getSize		0;"	f	S:int function getSize()	class:QuickHashStringIntHash
loadFromFile		0;"	f	S:QuickHashStringIntHash function loadFromFile($filename, $size, $options)	class:QuickHashStringIntHash	a:static
loadFromString		0;"	f	S:QuickHashStringIntHash function loadFromString($contents, $size, $options)	class:QuickHashStringIntHash	a:static
saveToFile		0;"	f	S:void function saveToFile($filename)	class:QuickHashStringIntHash
saveToString		0;"	f	S:string function saveToString()	class:QuickHashStringIntHash
set		0;"	f	S:int function set($key, $value)	class:QuickHashStringIntHash
update		0;"	f	S:bool function update($key, $value)	class:QuickHashStringIntHash
QuickHashIntStringHash		0;"	c
CHECK_FOR_DUPES		0;"	o	class:QuickHashIntStringHash	a:const	S:const QuickHashIntStringHash::CHECK_FOR_DUPES
DO_NOT_USE_ZEND_ALLOC		0;"	o	class:QuickHashIntStringHash	a:const	S:const QuickHashIntStringHash::DO_NOT_USE_ZEND_ALLOC
HASHER_NO_HASH		0;"	o	class:QuickHashIntStringHash	a:const	S:const QuickHashIntStringHash::HASHER_NO_HASH
HASHER_JENKINS1		0;"	o	class:QuickHashIntStringHash	a:const	S:const QuickHashIntStringHash::HASHER_JENKINS1
HASHER_JENKINS2		0;"	o	class:QuickHashIntStringHash	a:const	S:const QuickHashIntStringHash::HASHER_JENKINS2
add		0;"	f	S:bool function add($key, $value)	class:QuickHashIntStringHash
__construct		0;"	f	S: function __construct($size, $options)	class:QuickHashIntStringHash
delete		0;"	f	S:bool function delete($key)	class:QuickHashIntStringHash
exists		0;"	f	S:bool function exists($key)	class:QuickHashIntStringHash
get		0;"	f	S:mixed function get($key)	class:QuickHashIntStringHash
getSize		0;"	f	S:int function getSize()	class:QuickHashIntStringHash
loadFromFile		0;"	f	S:QuickHashIntStringHash function loadFromFile($filename, $size, $options)	class:QuickHashIntStringHash	a:static
loadFromString		0;"	f	S:QuickHashIntStringHash function loadFromString($contents, $size, $options)	class:QuickHashIntStringHash	a:static
saveToFile		0;"	f	S:void function saveToFile($filename)	class:QuickHashIntStringHash
saveToString		0;"	f	S:string function saveToString()	class:QuickHashIntStringHash
set		0;"	f	S:int function set($key, $value)	class:QuickHashIntStringHash
update		0;"	f	S:bool function update($key, $value)	class:QuickHashIntStringHash
Reflection		0;"	c
export		0;"	f	S:string function export($reflector, $return = false)	class:Reflection	a:static
getModifierNames		0;"	f	S:array function getModifierNames($modifiers)	class:Reflection	a:static
ReflectionClass		0;"	c
IS_IMPLICIT_ABSTRACT		0;"	o	class:ReflectionClass	a:const	S:const ReflectionClass::IS_IMPLICIT_ABSTRACT
IS_EXPLICIT_ABSTRACT		0;"	o	class:ReflectionClass	a:const	S:const ReflectionClass::IS_EXPLICIT_ABSTRACT
IS_FINAL		0;"	o	class:ReflectionClass	a:const	S:const ReflectionClass::IS_FINAL
name		0;"	p	class:ReflectionClass	S: ReflectionClass::name
__construct		0;"	f	S: function __construct($argument)	class:ReflectionClass
export		0;"	f	S:string function export($argument, $return = false)	class:ReflectionClass	a:static
getConstant		0;"	f	S:mixed function getConstant($name)	class:ReflectionClass
getConstants		0;"	f	S:array function getConstants()	class:ReflectionClass
getConstructor		0;"	f	S:ReflectionMethod function getConstructor()	class:ReflectionClass
getDefaultProperties		0;"	f	S:array function getDefaultProperties()	class:ReflectionClass
getDocComment		0;"	f	S:string function getDocComment()	class:ReflectionClass
getEndLine		0;"	f	S:int function getEndLine()	class:ReflectionClass
getExtension		0;"	f	S:ReflectionExtension function getExtension()	class:ReflectionClass
getExtensionName		0;"	f	S:string function getExtensionName()	class:ReflectionClass
getFileName		0;"	f	S:string function getFileName()	class:ReflectionClass
getInterfaceNames		0;"	f	S:array function getInterfaceNames()	class:ReflectionClass
getInterfaces		0;"	f	S:array function getInterfaces()	class:ReflectionClass
getMethod		0;"	f	S:ReflectionMethod function getMethod($name)	class:ReflectionClass
getMethods		0;"	f	S:array function getMethods($filter)	class:ReflectionClass
getModifiers		0;"	f	S:int function getModifiers()	class:ReflectionClass
getName		0;"	f	S:string function getName()	class:ReflectionClass
getNamespaceName		0;"	f	S:string function getNamespaceName()	class:ReflectionClass
getParentClass		0;"	f	S:object function getParentClass()	class:ReflectionClass
getProperties		0;"	f	S:array function getProperties($filter)	class:ReflectionClass
getProperty		0;"	f	S:ReflectionProperty function getProperty($name)	class:ReflectionClass
getShortName		0;"	f	S:string function getShortName()	class:ReflectionClass
getStartLine		0;"	f	S:int function getStartLine()	class:ReflectionClass
getStaticProperties		0;"	f	S:array function getStaticProperties()	class:ReflectionClass
getStaticPropertyValue		0;"	f	S:mixed function getStaticPropertyValue($name, &$def_value)	class:ReflectionClass
getTraitAliases		0;"	f	S:array function getTraitAliases()	class:ReflectionClass
getTraitNames		0;"	f	S:array function getTraitNames()	class:ReflectionClass
getTraits		0;"	f	S:array function getTraits()	class:ReflectionClass
hasConstant		0;"	f	S:bool function hasConstant($name)	class:ReflectionClass
hasMethod		0;"	f	S:bool function hasMethod($name)	class:ReflectionClass
hasProperty		0;"	f	S:bool function hasProperty($name)	class:ReflectionClass
implementsInterface		0;"	f	S:bool function implementsInterface($interface)	class:ReflectionClass
inNamespace		0;"	f	S:bool function inNamespace()	class:ReflectionClass
isAbstract		0;"	f	S:bool function isAbstract()	class:ReflectionClass
isCloneable		0;"	f	S:bool function isCloneable()	class:ReflectionClass
isFinal		0;"	f	S:bool function isFinal()	class:ReflectionClass
isInstance		0;"	f	S:bool function isInstance($object)	class:ReflectionClass
isInstantiable		0;"	f	S:bool function isInstantiable()	class:ReflectionClass
isInterface		0;"	f	S:bool function isInterface()	class:ReflectionClass
isInternal		0;"	f	S:bool function isInternal()	class:ReflectionClass
isIterateable		0;"	f	S:bool function isIterateable()	class:ReflectionClass
isSubclassOf		0;"	f	S:bool function isSubclassOf($class)	class:ReflectionClass
isTrait		0;"	f	S:bool function isTrait()	class:ReflectionClass
isUserDefined		0;"	f	S:bool function isUserDefined()	class:ReflectionClass
newInstance		0;"	f	S:object function newInstance($args, $...)	class:ReflectionClass
newInstanceArgs		0;"	f	S:object function newInstanceArgs($args)	class:ReflectionClass
newInstanceWithoutConstructor		0;"	f	S:object function newInstanceWithoutConstructor()	class:ReflectionClass
setStaticPropertyValue		0;"	f	S:void function setStaticPropertyValue($name, $value)	class:ReflectionClass
__toString		0;"	f	S:string function __toString()	class:ReflectionClass
ReflectionZendExtension		0;"	c
name		0;"	p	class:ReflectionZendExtension	S: ReflectionZendExtension::name
__clone		0;"	f	S:void function __clone()	class:ReflectionZendExtension	a:final,private
__construct		0;"	f	S: function __construct($name)	class:ReflectionZendExtension
export		0;"	f	S:string function export($name, $return)	class:ReflectionZendExtension	a:static
getAuthor		0;"	f	S:string function getAuthor()	class:ReflectionZendExtension
getCopyright		0;"	f	S:string function getCopyright()	class:ReflectionZendExtension
getName		0;"	f	S:string function getName()	class:ReflectionZendExtension
getURL		0;"	f	S:string function getURL()	class:ReflectionZendExtension
getVersion		0;"	f	S:string function getVersion()	class:ReflectionZendExtension
__toString		0;"	f	S:string function __toString()	class:ReflectionZendExtension
ReflectionExtension		0;"	c
name		0;"	p	class:ReflectionExtension	S: ReflectionExtension::name
__clone		0;"	f	S:void function __clone()	class:ReflectionExtension	a:final,private
__construct		0;"	f	S:object function __construct($name)	class:ReflectionExtension
export		0;"	f	S:string function export($name, $return = false)	class:ReflectionExtension	a:static
getClasses		0;"	f	S:array function getClasses()	class:ReflectionExtension
getClassNames		0;"	f	S:array function getClassNames()	class:ReflectionExtension
getConstants		0;"	f	S:array function getConstants()	class:ReflectionExtension
getDependencies		0;"	f	S:array function getDependencies()	class:ReflectionExtension
getFunctions		0;"	f	S:array function getFunctions()	class:ReflectionExtension
getINIEntries		0;"	f	S:array function getINIEntries()	class:ReflectionExtension
getName		0;"	f	S:string function getName()	class:ReflectionExtension
getVersion		0;"	f	S:string function getVersion()	class:ReflectionExtension
info		0;"	f	S:void function info()	class:ReflectionExtension
isPersistent		0;"	f	S:void function isPersistent()	class:ReflectionExtension
isTemporary		0;"	f	S:void function isTemporary()	class:ReflectionExtension
__toString		0;"	f	S:string function __toString()	class:ReflectionExtension
ReflectionFunction		0;"	c	i:ReflectionFunctionAbstract
IS_DEPRECATED		0;"	o	class:ReflectionFunction	a:const	S:const ReflectionFunction::IS_DEPRECATED
name		0;"	p	class:ReflectionFunction	S: ReflectionFunction::name
__construct		0;"	f	S: function __construct($name)	class:ReflectionFunction
export		0;"	f	S:string function export($name, $return)	class:ReflectionFunction	a:static
getClosure		0;"	f	S:Closure function getClosure()	class:ReflectionFunction
invoke		0;"	f	S:mixed function invoke($parameter, $...)	class:ReflectionFunction
invokeArgs		0;"	f	S:mixed function invokeArgs($args)	class:ReflectionFunction
isDisabled		0;"	f	S:bool function isDisabled()	class:ReflectionFunction
__toString		0;"	f	S:string function __toString()	class:ReflectionFunction
ReflectionFunctionAbstract		0;"	c
name		0;"	p	class:ReflectionFunctionAbstract	S: ReflectionFunctionAbstract::name
__clone		0;"	f	S:void function __clone()	class:ReflectionFunctionAbstract	a:final,private
getClosureScopeClass		0;"	f	S:ReflectionClass function getClosureScopeClass()	class:ReflectionFunctionAbstract
getClosureThis		0;"	f	S:object function getClosureThis()	class:ReflectionFunctionAbstract
getDocComment		0;"	f	S:string function getDocComment()	class:ReflectionFunctionAbstract
getEndLine		0;"	f	S:int function getEndLine()	class:ReflectionFunctionAbstract
getExtension		0;"	f	S:ReflectionExtension function getExtension()	class:ReflectionFunctionAbstract
getExtensionName		0;"	f	S:string function getExtensionName()	class:ReflectionFunctionAbstract
getFileName		0;"	f	S:string function getFileName()	class:ReflectionFunctionAbstract
getName		0;"	f	S:string function getName()	class:ReflectionFunctionAbstract
getNamespaceName		0;"	f	S:string function getNamespaceName()	class:ReflectionFunctionAbstract
getNumberOfParameters		0;"	f	S:int function getNumberOfParameters()	class:ReflectionFunctionAbstract
getNumberOfRequiredParameters		0;"	f	S:int function getNumberOfRequiredParameters()	class:ReflectionFunctionAbstract
getParameters		0;"	f	S:ReflectionParameter function getParameters()	class:ReflectionFunctionAbstract
getShortName		0;"	f	S:string function getShortName()	class:ReflectionFunctionAbstract
getStartLine		0;"	f	S:int function getStartLine()	class:ReflectionFunctionAbstract
getStaticVariables		0;"	f	S:array function getStaticVariables()	class:ReflectionFunctionAbstract
inNamespace		0;"	f	S:bool function inNamespace()	class:ReflectionFunctionAbstract
isClosure		0;"	f	S:bool function isClosure()	class:ReflectionFunctionAbstract
isDeprecated		0;"	f	S:bool function isDeprecated()	class:ReflectionFunctionAbstract
isGenerator		0;"	f	S:bool function isGenerator()	class:ReflectionFunctionAbstract
isInternal		0;"	f	S:bool function isInternal()	class:ReflectionFunctionAbstract
isUserDefined		0;"	f	S:bool function isUserDefined()	class:ReflectionFunctionAbstract
returnsReference		0;"	f	S:bool function returnsReference()	class:ReflectionFunctionAbstract
__toString		0;"	f	S:void function __toString()	class:ReflectionFunctionAbstract	m: abstract
ReflectionMethod		0;"	c	i:ReflectionFunctionAbstract
IS_STATIC		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_STATIC
IS_PUBLIC		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_PUBLIC
IS_PROTECTED		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_PROTECTED
IS_PRIVATE		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_PRIVATE
IS_ABSTRACT		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_ABSTRACT
IS_FINAL		0;"	o	class:ReflectionMethod	a:const	S:const ReflectionMethod::IS_FINAL
name		0;"	p	class:ReflectionMethod	S: ReflectionMethod::name
class		0;"	p	class:ReflectionMethod	S: ReflectionMethod::class
__construct		0;"	f	S: function __construct($class, $name, $class_method)	class:ReflectionMethod
export		0;"	f	S:string function export($class, $name, $return = false)	class:ReflectionMethod	a:static
getClosure		0;"	f	S:Closure function getClosure($object)	class:ReflectionMethod
getDeclaringClass		0;"	f	S:ReflectionClass function getDeclaringClass()	class:ReflectionMethod
getModifiers		0;"	f	S:int function getModifiers()	class:ReflectionMethod
getPrototype		0;"	f	S:ReflectionMethod function getPrototype()	class:ReflectionMethod
invoke		0;"	f	S:mixed function invoke($object, $parameter, $...)	class:ReflectionMethod
invokeArgs		0;"	f	S:mixed function invokeArgs($object, $args)	class:ReflectionMethod
isAbstract		0;"	f	S:bool function isAbstract()	class:ReflectionMethod
isConstructor		0;"	f	S:bool function isConstructor()	class:ReflectionMethod
isDestructor		0;"	f	S:bool function isDestructor()	class:ReflectionMethod
isFinal		0;"	f	S:bool function isFinal()	class:ReflectionMethod
isPrivate		0;"	f	S:bool function isPrivate()	class:ReflectionMethod
isProtected		0;"	f	S:bool function isProtected()	class:ReflectionMethod
isPublic		0;"	f	S:bool function isPublic()	class:ReflectionMethod
isStatic		0;"	f	S:bool function isStatic()	class:ReflectionMethod
setAccessible		0;"	f	S:void function setAccessible($accessible)	class:ReflectionMethod
__toString		0;"	f	S:string function __toString()	class:ReflectionMethod
ReflectionObject		0;"	c	i:ReflectionClass
IS_IMPLICIT_ABSTRACT		0;"	o	class:ReflectionObject	a:const	S:const ReflectionObject::IS_IMPLICIT_ABSTRACT
IS_EXPLICIT_ABSTRACT		0;"	o	class:ReflectionObject	a:const	S:const ReflectionObject::IS_EXPLICIT_ABSTRACT
IS_FINAL		0;"	o	class:ReflectionObject	a:const	S:const ReflectionObject::IS_FINAL
name		0;"	p	class:ReflectionObject	S: ReflectionObject::name
__construct		0;"	f	S: function __construct($argument)	class:ReflectionObject
export		0;"	f	S:string function export($argument, $return)	class:ReflectionObject	a:static
ReflectionParameter		0;"	c
name		0;"	p	class:ReflectionParameter	S: ReflectionParameter::name
allowsNull		0;"	f	S:bool function allowsNull()	class:ReflectionParameter
canBePassedByValue		0;"	f	S:bool function canBePassedByValue()	class:ReflectionParameter
__clone		0;"	f	S:void function __clone()	class:ReflectionParameter	a:final,private
__construct		0;"	f	S: function __construct($function, $parameter)	class:ReflectionParameter
export		0;"	f	S:string function export($function, $parameter, $return)	class:ReflectionParameter	a:static
getClass		0;"	f	S:ReflectionClass function getClass()	class:ReflectionParameter
getDeclaringClass		0;"	f	S:ReflectionClass function getDeclaringClass()	class:ReflectionParameter
getDeclaringFunction		0;"	f	S:ReflectionFunctionAbstract function getDeclaringFunction()	class:ReflectionParameter
getDefaultValue		0;"	f	S:mixed function getDefaultValue()	class:ReflectionParameter
getDefaultValueConstantName		0;"	f	S:string function getDefaultValueConstantName()	class:ReflectionParameter
getName		0;"	f	S:string function getName()	class:ReflectionParameter
getPosition		0;"	f	S:int function getPosition()	class:ReflectionParameter
isArray		0;"	f	S:bool function isArray()	class:ReflectionParameter
isCallable		0;"	f	S:bool function isCallable()	class:ReflectionParameter
isDefaultValueAvailable		0;"	f	S:bool function isDefaultValueAvailable()	class:ReflectionParameter
isDefaultValueConstant		0;"	f	S:bool function isDefaultValueConstant()	class:ReflectionParameter
isOptional		0;"	f	S:bool function isOptional()	class:ReflectionParameter
isPassedByReference		0;"	f	S:bool function isPassedByReference()	class:ReflectionParameter
__toString		0;"	f	S:string function __toString()	class:ReflectionParameter
ReflectionProperty		0;"	c
IS_STATIC		0;"	o	class:ReflectionProperty	a:const	S:const ReflectionProperty::IS_STATIC
IS_PUBLIC		0;"	o	class:ReflectionProperty	a:const	S:const ReflectionProperty::IS_PUBLIC
IS_PROTECTED		0;"	o	class:ReflectionProperty	a:const	S:const ReflectionProperty::IS_PROTECTED
IS_PRIVATE		0;"	o	class:ReflectionProperty	a:const	S:const ReflectionProperty::IS_PRIVATE
name		0;"	p	class:ReflectionProperty	S: ReflectionProperty::name
class		0;"	p	class:ReflectionProperty	S: ReflectionProperty::class
__clone		0;"	f	S:void function __clone()	class:ReflectionProperty	a:final,private
__construct		0;"	f	S: function __construct($class, $name)	class:ReflectionProperty
export		0;"	f	S:string function export($class, $name, $return)	class:ReflectionProperty	a:static
getDeclaringClass		0;"	f	S:ReflectionClass function getDeclaringClass()	class:ReflectionProperty
getDocComment		0;"	f	S:string function getDocComment()	class:ReflectionProperty
getModifiers		0;"	f	S:int function getModifiers()	class:ReflectionProperty
getName		0;"	f	S:string function getName()	class:ReflectionProperty
getValue		0;"	f	S:mixed function getValue($object)	class:ReflectionProperty
isDefault		0;"	f	S:bool function isDefault()	class:ReflectionProperty
isPrivate		0;"	f	S:bool function isPrivate()	class:ReflectionProperty
isProtected		0;"	f	S:bool function isProtected()	class:ReflectionProperty
isPublic		0;"	f	S:bool function isPublic()	class:ReflectionProperty
isStatic		0;"	f	S:bool function isStatic()	class:ReflectionProperty
setAccessible		0;"	f	S:void function setAccessible($accessible)	class:ReflectionProperty
setValue		0;"	f	S:void function setValue($object, $value)	class:ReflectionProperty
__toString		0;"	f	S:string function __toString()	class:ReflectionProperty
Reflector		0;"	c
export		0;"	f	S:string function export()	class:Reflector	a:static
__toString		0;"	f	S:string function __toString()	class:Reflector
ReflectionException		0;"	c	i:Exception
message		0;"	p	class:ReflectionException	a:protected	S:protected ReflectionException::message
code		0;"	p	class:ReflectionException	a:protected	S:protected ReflectionException::code
file		0;"	p	class:ReflectionException	a:protected	S:protected ReflectionException::file
line		0;"	p	class:ReflectionException	a:protected	S:protected ReflectionException::line
boolval		0;"	f	S:boolean function boolval($var)
debug_zval_dump		0;"	f	S:void function debug_zval_dump($variable, $...)
doubleval		0;"	f	S: function doubleval()
empty		0;"	f	S:bool function empty($var)
floatval		0;"	f	S:float function floatval($var)
get_defined_vars		0;"	f	S:array function get_defined_vars()
get_resource_type		0;"	f	S:string function get_resource_type($handle)
gettype		0;"	f	S:string function gettype($var)
import_request_variables		0;"	f	S:bool function import_request_variables($types, $prefix)
intval		0;"	f	S:integer function intval($var, $base = 10)
is_array		0;"	f	S:bool function is_array($var)
is_bool		0;"	f	S:bool function is_bool($var)
is_callable		0;"	f	S:bool function is_callable($name, $syntax_only = false, &$callable_name)
is_double		0;"	f	S: function is_double()
is_float		0;"	f	S:bool function is_float($var)
is_int		0;"	f	S:bool function is_int($var)
is_integer		0;"	f	S: function is_integer()
is_long		0;"	f	S: function is_long()
is_null		0;"	f	S:bool function is_null($var)
is_numeric		0;"	f	S:bool function is_numeric($var)
is_object		0;"	f	S:bool function is_object($var)
is_real		0;"	f	S: function is_real()
is_resource		0;"	f	S:bool function is_resource($var)
is_scalar		0;"	f	S:resource function is_scalar($var)
is_string		0;"	f	S:bool function is_string($var)
isset		0;"	f	S:bool function isset($var, $...)
print_r		0;"	f	S:mixed function print_r($expression, $return = false)
serialize		0;"	f	S:string function serialize($value)
settype		0;"	f	S:bool function settype(&$var, $type)
strval		0;"	f	S:string function strval($var)
unserialize		0;"	f	S:mixed function unserialize($str)
unset		0;"	f	S:void function unset($var, $...)
var_dump		0;"	f	S:string function var_dump($expression, $...)
var_export		0;"	f	S:mixed function var_export($expression, $return = false)
OAUTH_SIG_METHOD_RSASHA1		0;"	d
OAUTH_SIG_METHOD_HMACSHA1		0;"	d
OAUTH_SIG_METHOD_HMACSHA256		0;"	d
OAUTH_AUTH_TYPE_AUTHORIZATION		0;"	d
OAUTH_AUTH_TYPE_NONE		0;"	d
OAUTH_AUTH_TYPE_URI		0;"	d
OAUTH_AUTH_TYPE_FORM		0;"	d
OAUTH_HTTP_METHOD_GET		0;"	d
OAUTH_HTTP_METHOD_POST		0;"	d
OAUTH_HTTP_METHOD_PUT		0;"	d
OAUTH_HTTP_METHOD_HEAD		0;"	d
OAUTH_HTTP_METHOD_DELETE		0;"	d
OAUTH_REQENGINE_STREAMS		0;"	d
OAUTH_REQENGINE_CURL		0;"	d
OAUTH_OK		0;"	d
OAUTH_BAD_NONCE		0;"	d
OAUTH_BAD_TIMESTAMP		0;"	d
OAUTH_CONSUMER_KEY_UNKNOWN		0;"	d
OAUTH_CONSUMER_KEY_REFUSED		0;"	d
OAUTH_INVALID_SIGNATURE		0;"	d
OAUTH_TOKEN_USED		0;"	d
OAUTH_TOKEN_EXPIRED		0;"	d
OAUTH_TOKEN_REVOKED		0;"	d
OAUTH_TOKEN_REJECTED		0;"	d
OAUTH_VERIFIER_INVALID		0;"	d
OAUTH_PARAMETER_ABSENT		0;"	d
OAUTH_SIGNATURE_METHOD_REJECTED		0;"	d
oauth_get_sbs		0;"	f	S:string function oauth_get_sbs($http_method, $uri, $request_parameters)
oauth_urlencode		0;"	f	S:string function oauth_urlencode($uri)
OAuth		0;"	c
debug		0;"	p	class:OAuth	S: OAuth::debug
sslChecks		0;"	p	class:OAuth	S: OAuth::sslChecks
debugInfo		0;"	p	class:OAuth	S: OAuth::debugInfo
__construct		0;"	f	S: function __construct($consumer_key, $consumer_secret, $signature_method, $auth_type)	class:OAuth
__destruct		0;"	f	S:void function __destruct()	class:OAuth
disableDebug		0;"	f	S:bool function disableDebug()	class:OAuth
disableRedirects		0;"	f	S:bool function disableRedirects()	class:OAuth
disableSSLChecks		0;"	f	S:bool function disableSSLChecks()	class:OAuth
enableDebug		0;"	f	S:bool function enableDebug()	class:OAuth
enableRedirects		0;"	f	S:bool function enableRedirects()	class:OAuth
enableSSLChecks		0;"	f	S:bool function enableSSLChecks()	class:OAuth
fetch		0;"	f	S:mixed function fetch($protected_resource_url, $extra_parameters, $http_method, $http_headers)	class:OAuth
generateSignature		0;"	f	S:string function generateSignature($http_method, $url, $extra_parameters)	class:OAuth
getAccessToken		0;"	f	S:array function getAccessToken($access_token_url, $auth_session_handle, $verifier_token)	class:OAuth
getCAPath		0;"	f	S:array function getCAPath()	class:OAuth
getLastResponse		0;"	f	S:string function getLastResponse()	class:OAuth
getLastResponseHeaders		0;"	f	S:string function getLastResponseHeaders()	class:OAuth
getLastResponseInfo		0;"	f	S:array function getLastResponseInfo()	class:OAuth
getRequestHeader		0;"	f	S:string function getRequestHeader($http_method, $url, $extra_parameters)	class:OAuth
getRequestToken		0;"	f	S:array function getRequestToken($request_token_url, $callback_url)	class:OAuth
setAuthType		0;"	f	S:mixed function setAuthType($auth_type)	class:OAuth
setCAPath		0;"	f	S:mixed function setCAPath($ca_path, $ca_info)	class:OAuth
setNonce		0;"	f	S:mixed function setNonce($nonce)	class:OAuth
setRequestEngine		0;"	f	S:void function setRequestEngine($reqengine)	class:OAuth
setRSACertificate		0;"	f	S:mixed function setRSACertificate($cert)	class:OAuth
setSSLChecks		0;"	f	S:bool function setSSLChecks($sslcheck)	class:OAuth
setTimestamp		0;"	f	S:mixed function setTimestamp($timestamp)	class:OAuth
setToken		0;"	f	S:bool function setToken($token, $token_secret)	class:OAuth
setVersion		0;"	f	S:bool function setVersion($version)	class:OAuth
OAuthProvider		0;"	c
addRequiredParameter		0;"	f	S:bool function addRequiredParameter($req_params)	class:OAuthProvider	a:final
callconsumerHandler		0;"	f	S:void function callconsumerHandler()	class:OAuthProvider
callTimestampNonceHandler		0;"	f	S:void function callTimestampNonceHandler()	class:OAuthProvider
calltokenHandler		0;"	f	S:void function calltokenHandler()	class:OAuthProvider
checkOAuthRequest		0;"	f	S:void function checkOAuthRequest($uri, $method)	class:OAuthProvider
__construct		0;"	f	S:object function __construct($params_array)	class:OAuthProvider
consumerHandler		0;"	f	S:void function consumerHandler($callback_function)	class:OAuthProvider
generateToken		0;"	f	S:string function generateToken($size, $strong = false)	class:OAuthProvider	a:final,static
is2LeggedEndpoint		0;"	f	S:void function is2LeggedEndpoint($params_array)	class:OAuthProvider
isRequestTokenEndpoint		0;"	f	S:void function isRequestTokenEndpoint($will_issue_request_token)	class:OAuthProvider
removeRequiredParameter		0;"	f	S:bool function removeRequiredParameter($req_params)	class:OAuthProvider	a:final
reportProblem		0;"	f	S:string function reportProblem($oauthexception, $send_headers = true)	class:OAuthProvider	a:final,static
setParam		0;"	f	S:bool function setParam($param_key, $param_val)	class:OAuthProvider	a:final
setRequestTokenPath		0;"	f	S:bool function setRequestTokenPath($path)	class:OAuthProvider	a:final
timestampNonceHandler		0;"	f	S:void function timestampNonceHandler($callback_function)	class:OAuthProvider
tokenHandler		0;"	f	S:void function tokenHandler($callback_function)	class:OAuthProvider
OAuthException		0;"	c	i:Exception
lastResponse		0;"	p	class:OAuthException	S: OAuthException::lastResponse
debugInfo		0;"	p	class:OAuthException	S: OAuthException::debugInfo
message		0;"	p	class:OAuthException	a:protected	S:protected OAuthException::message
code		0;"	p	class:OAuthException	a:protected	S:protected OAuthException::code
file		0;"	p	class:OAuthException	a:protected	S:protected OAuthException::file
line		0;"	p	class:OAuthException	a:protected	S:protected OAuthException::line
createDataObject		0;"	f	S:SDO_DataObject function createDataObject($type_namespace_uri, $type_name)	class:SCA
getService		0;"	f	S:mixed function getService($target, $binding, $config)	class:SCA
createDataObject		0;"	f	S:SDO_DataObject function createDataObject($type_namespace_uri, $type_name)	class:SCA_LocalProxy
createDataObject		0;"	f	S:SDO_DataObject function createDataObject($type_namespace_uri, $type_name)	class:SCA_SoapProxy
is_soap_fault		0;"	f	S:bool function is_soap_fault($object)
use_soap_error_handler		0;"	f	S:bool function use_soap_error_handler($handler = true)
SoapClient		0;"	c
__call		0;"	f	S:mixed function __call($function_name, $arguments)	class:SoapClient
__construct		0;"	f	S: function __construct($wsdl, $options)	class:SoapClient
__doRequest		0;"	f	S:string function __doRequest($request, $location, $action, $version, $one_way)	class:SoapClient
__getFunctions		0;"	f	S:array function __getFunctions()	class:SoapClient
__getLastRequest		0;"	f	S:string function __getLastRequest()	class:SoapClient
__getLastRequestHeaders		0;"	f	S:string function __getLastRequestHeaders()	class:SoapClient
__getLastResponse		0;"	f	S:string function __getLastResponse()	class:SoapClient
__getLastResponseHeaders		0;"	f	S:string function __getLastResponseHeaders()	class:SoapClient
__getTypes		0;"	f	S:array function __getTypes()	class:SoapClient
__setCookie		0;"	f	S:void function __setCookie($name, $value)	class:SoapClient
__setLocation		0;"	f	S:string function __setLocation($new_location)	class:SoapClient
__setSoapHeaders		0;"	f	S:bool function __setSoapHeaders($soapheaders)	class:SoapClient
__soapCall		0;"	f	S:mixed function __soapCall($function_name, $arguments, $options, $input_headers, &$output_headers)	class:SoapClient
SoapClient		0;"	f	S: function SoapClient($wsdl, $options)	class:SoapClient
SoapServer		0;"	c
addFunction		0;"	f	S:void function addFunction($functions)	class:SoapServer
addSoapHeader		0;"	f	S:void function addSoapHeader($object)	class:SoapServer
__construct		0;"	f	S: function __construct($wsdl, $options)	class:SoapServer
fault		0;"	f	S:void function fault($code, $string, $actor, $details, $name)	class:SoapServer
getFunctions		0;"	f	S:array function getFunctions()	class:SoapServer
handle		0;"	f	S:void function handle($soap_request)	class:SoapServer
setClass		0;"	f	S:void function setClass($class_name, $args, $...)	class:SoapServer
setObject		0;"	f	S:void function setObject($object)	class:SoapServer
setPersistence		0;"	f	S:void function setPersistence($mode)	class:SoapServer
SoapServer		0;"	f	S: function SoapServer($wsdl, $options)	class:SoapServer
SoapFault		0;"	c	i:Exception
message		0;"	p	class:SoapFault	a:protected	S:protected SoapFault::message
code		0;"	p	class:SoapFault	a:protected	S:protected SoapFault::code
file		0;"	p	class:SoapFault	a:protected	S:protected SoapFault::file
line		0;"	p	class:SoapFault	a:protected	S:protected SoapFault::line
__construct		0;"	f	S: function __construct($faultcode, $faultstring, $faultactor, $detail, $faultname, $headerfault)	class:SoapFault
SoapFault		0;"	f	S: function SoapFault($faultcode, $faultstring, $faultactor, $detail, $faultname, $headerfault)	class:SoapFault
__toString		0;"	f	S:string function __toString()	class:SoapFault
SoapHeader		0;"	c
__construct		0;"	f	S: function __construct($namespace, $name, $data, $mustunderstand, $actor)	class:SoapHeader
SoapHeader		0;"	f	S: function SoapHeader($namespace, $name, $data, $mustunderstand = false, $actor)	class:SoapHeader
SoapParam		0;"	c
__construct		0;"	f	S: function __construct($data, $name)	class:SoapParam
SoapParam		0;"	f	S: function SoapParam($data, $name)	class:SoapParam
SoapVar		0;"	c
__construct		0;"	f	S: function __construct($data, $encoding, $type_name, $type_namespace, $node_name, $node_namespace)	class:SoapVar
SoapVar		0;"	f	S: function SoapVar($data, $encoding, $type_name, $type_namespace, $node_name, $node_namespace)	class:SoapVar
YAR_VERSION		0;"	d
YAR_CLIENT_PROTOCOL_HTTP		0;"	d
YAR_CLIENT_OPT_PACKAGER		0;"	d
YAR_CLIENT_OPT_TIMEOUT		0;"	d
YAR_CLIENT_OPT_CONNECT_TIMEOUT		0;"	d
YAR_PACKAGER_PHP		0;"	d
YAR_PACKAGER_JSON		0;"	d
YAR_ERR_OKEY		0;"	d
YAR_ERR_OUTPUT		0;"	d
YAR_ERR_TRANSPORT		0;"	d
YAR_ERR_REQUEST		0;"	d
YAR_ERR_PROTOCOL		0;"	d
YAR_ERR_PACKAGER		0;"	d
YAR_ERR_EXCEPTION		0;"	d
Yar_Server		0;"	c
_executor		0;"	p	class:Yar_Server	a:protected	S:protected Yar_Server::_executor
__construct		0;"	f	S: function __construct($obj)	class:Yar_Server	a:final
handle		0;"	f	S:boolean function handle()	class:Yar_Server
Yar_Client		0;"	c
_protocol		0;"	p	class:Yar_Client	a:protected	S:protected Yar_Client::_protocol
_uri		0;"	p	class:Yar_Client	a:protected	S:protected Yar_Client::_uri
_options		0;"	p	class:Yar_Client	a:protected	S:protected Yar_Client::_options
_running		0;"	p	class:Yar_Client	a:protected	S:protected Yar_Client::_running
__call		0;"	f	S:void function __call($method, $parameters)	class:Yar_Client
__construct		0;"	f	S: function __construct($url)	class:Yar_Client	a:final
setOpt		0;"	f	S:boolean function setOpt($name, $value)	class:Yar_Client
Yar_Concurrent_Client		0;"	c
_callstack		0;"	p	class:Yar_Concurrent_Client	a:static	S:static Yar_Concurrent_Client::_callstack
_callback		0;"	p	class:Yar_Concurrent_Client	a:static	S:static Yar_Concurrent_Client::_callback
_error_callback		0;"	p	class:Yar_Concurrent_Client	a:static	S:static Yar_Concurrent_Client::_error_callback
call		0;"	f	S:int function call($uri, $method, $parameters, $callback)	class:Yar_Concurrent_Client	a:static
loop		0;"	f	S:boolean function loop($callback, $error_callback)	class:Yar_Concurrent_Client	a:static
Yar_Server_Exception		0;"	c	i:Exception
_type		0;"	p	class:Yar_Server_Exception	a:protected	S:protected Yar_Server_Exception::_type
getType		0;"	f	S:string function getType()	class:Yar_Server_Exception
Yar_Client_Exception		0;"	c	i:Exception
getType		0;"	f	S:void function getType()	class:Yar_Client_Exception
xmlrpc_decode_request		0;"	f	S:mixed function xmlrpc_decode_request($xml, &$method, $encoding)
xmlrpc_decode		0;"	f	S:mixed function xmlrpc_decode($xml, $encoding = "iso-8859-1")
xmlrpc_encode_request		0;"	f	S:string function xmlrpc_encode_request($method, $params, $output_options)
xmlrpc_encode		0;"	f	S:string function xmlrpc_encode($value)
xmlrpc_get_type		0;"	f	S:string function xmlrpc_get_type($value)
xmlrpc_is_fault		0;"	f	S:bool function xmlrpc_is_fault($arg)
xmlrpc_parse_method_descriptions		0;"	f	S:array function xmlrpc_parse_method_descriptions($xml)
xmlrpc_server_add_introspection_data		0;"	f	S:int function xmlrpc_server_add_introspection_data($server, $desc)
xmlrpc_server_call_method		0;"	f	S:string function xmlrpc_server_call_method($server, $xml, $user_data, $output_options)
xmlrpc_server_create		0;"	f	S:resource function xmlrpc_server_create()
xmlrpc_server_destroy		0;"	f	S:int function xmlrpc_server_destroy($server)
xmlrpc_server_register_introspection_callback		0;"	f	S:bool function xmlrpc_server_register_introspection_callback($server, $function)
xmlrpc_server_register_method		0;"	f	S:bool function xmlrpc_server_register_method($server, $method_name, $function)
xmlrpc_set_type		0;"	f	S:bool function xmlrpc_set_type(&$value, $type)
com_create_guid		0;"	f	S:string function com_create_guid()
com_event_sink		0;"	f	S:bool function com_event_sink($comobject, $sinkobject, $sinkinterface)
com_get_active_object		0;"	f	S:variant function com_get_active_object($progid, $code_page)
com_load_typelib		0;"	f	S:bool function com_load_typelib($typelib_name, $case_insensitive = true)
com_message_pump		0;"	f	S:bool function com_message_pump($timeoutms)
com_print_typeinfo		0;"	f	S:bool function com_print_typeinfo($comobject, $dispinterface, $wantsink = false)
variant_abs		0;"	f	S:mixed function variant_abs($val)
variant_add		0;"	f	S:mixed function variant_add($left, $right)
variant_and		0;"	f	S:mixed function variant_and($left, $right)
variant_cast		0;"	f	S:variant function variant_cast($variant, $type)
variant_cat		0;"	f	S:mixed function variant_cat($left, $right)
variant_cmp		0;"	f	S:int function variant_cmp($left, $right, $lcid, $flags)
variant_date_from_timestamp		0;"	f	S:variant function variant_date_from_timestamp($timestamp)
variant_date_to_timestamp		0;"	f	S:int function variant_date_to_timestamp($variant)
variant_div		0;"	f	S:mixed function variant_div($left, $right)
variant_eqv		0;"	f	S:mixed function variant_eqv($left, $right)
variant_fix		0;"	f	S:mixed function variant_fix($variant)
variant_get_type		0;"	f	S:int function variant_get_type($variant)
variant_idiv		0;"	f	S:mixed function variant_idiv($left, $right)
variant_imp		0;"	f	S:mixed function variant_imp($left, $right)
variant_int		0;"	f	S:mixed function variant_int($variant)
variant_mod		0;"	f	S:mixed function variant_mod($left, $right)
variant_mul		0;"	f	S:mixed function variant_mul($left, $right)
variant_neg		0;"	f	S:mixed function variant_neg($variant)
variant_not		0;"	f	S:mixed function variant_not($variant)
variant_or		0;"	f	S:mixed function variant_or($left, $right)
variant_pow		0;"	f	S:mixed function variant_pow($left, $right)
variant_round		0;"	f	S:mixed function variant_round($variant, $decimals)
variant_set_type		0;"	f	S:void function variant_set_type($variant, $type)
variant_set		0;"	f	S:void function variant_set($variant, $value)
variant_sub		0;"	f	S:mixed function variant_sub($left, $right)
variant_xor		0;"	f	S:mixed function variant_xor($left, $right)
win32_ps_list_procs		0;"	f	S:array function win32_ps_list_procs()
win32_ps_stat_mem		0;"	f	S:array function win32_ps_stat_mem()
win32_ps_stat_proc		0;"	f	S:array function win32_ps_stat_proc($pid)
win32_continue_service		0;"	f	S:int function win32_continue_service($servicename, $machine)
win32_create_service		0;"	f	S:mixed function win32_create_service($details, $machine)
win32_delete_service		0;"	f	S:mixed function win32_delete_service($servicename, $machine)
win32_get_last_control_message		0;"	f	S:int function win32_get_last_control_message()
win32_pause_service		0;"	f	S:int function win32_pause_service($servicename, $machine)
win32_query_service_status		0;"	f	S:mixed function win32_query_service_status($servicename, $machine)
win32_set_service_status		0;"	f	S:bool function win32_set_service_status($status, $checkpoint)
win32_start_service_ctrl_dispatcher		0;"	f	S:mixed function win32_start_service_ctrl_dispatcher($name)
win32_start_service		0;"	f	S:int function win32_start_service($servicename, $machine)
win32_stop_service		0;"	f	S:int function win32_stop_service($servicename, $machine)
DOMAttr		0;"	c	i:DOMNode
name		0;"	p	class:DOMAttr	S: DOMAttr::name
ownerElement		0;"	p	class:DOMAttr	S: DOMAttr::ownerElement
schemaTypeInfo		0;"	p	class:DOMAttr	S: DOMAttr::schemaTypeInfo
specified		0;"	p	class:DOMAttr	S: DOMAttr::specified
value		0;"	p	class:DOMAttr	S: DOMAttr::value
__construct		0;"	f	S: function __construct($name, $value)	class:DOMAttr
isId		0;"	f	S:bool function isId()	class:DOMAttr
DOMCdataSection		0;"	c	i:DOMText
__construct		0;"	f	S: function __construct($value)	class:DOMCdataSection
DOMCharacterData		0;"	c	i:DOMNode
data		0;"	p	class:DOMCharacterData	S: DOMCharacterData::data
length		0;"	p	class:DOMCharacterData	S: DOMCharacterData::length
appendData		0;"	f	S:void function appendData($data)	class:DOMCharacterData
deleteData		0;"	f	S:void function deleteData($offset, $count)	class:DOMCharacterData
insertData		0;"	f	S:void function insertData($offset, $data)	class:DOMCharacterData
replaceData		0;"	f	S:void function replaceData($offset, $count, $data)	class:DOMCharacterData
substringData		0;"	f	S:string function substringData($offset, $count)	class:DOMCharacterData
DOMComment		0;"	c	i:DOMCharacterData
__construct		0;"	f	S: function __construct($value)	class:DOMComment
DOMDocument		0;"	c	i:DOMNode
actualEncoding		0;"	p	class:DOMDocument	S: DOMDocument::actualEncoding
config		0;"	p	class:DOMDocument	S: DOMDocument::config
doctype		0;"	p	class:DOMDocument	S: DOMDocument::doctype
documentElement		0;"	p	class:DOMDocument	S: DOMDocument::documentElement
documentURI		0;"	p	class:DOMDocument	S: DOMDocument::documentURI
encoding		0;"	p	class:DOMDocument	S: DOMDocument::encoding
formatOutput		0;"	p	class:DOMDocument	S: DOMDocument::formatOutput
implementation		0;"	p	class:DOMDocument	S: DOMDocument::implementation
preserveWhiteSpace		0;"	p	class:DOMDocument	S: DOMDocument::preserveWhiteSpace
recover		0;"	p	class:DOMDocument	S: DOMDocument::recover
resolveExternals		0;"	p	class:DOMDocument	S: DOMDocument::resolveExternals
standalone		0;"	p	class:DOMDocument	S: DOMDocument::standalone
strictErrorChecking		0;"	p	class:DOMDocument	S: DOMDocument::strictErrorChecking
substituteEntities		0;"	p	class:DOMDocument	S: DOMDocument::substituteEntities
validateOnParse		0;"	p	class:DOMDocument	S: DOMDocument::validateOnParse
version		0;"	p	class:DOMDocument	S: DOMDocument::version
xmlEncoding		0;"	p	class:DOMDocument	S: DOMDocument::xmlEncoding
xmlStandalone		0;"	p	class:DOMDocument	S: DOMDocument::xmlStandalone
xmlVersion		0;"	p	class:DOMDocument	S: DOMDocument::xmlVersion
__construct		0;"	f	S: function __construct($version, $encoding)	class:DOMDocument
createAttribute		0;"	f	S:DOMAttr function createAttribute($name)	class:DOMDocument
createAttributeNS		0;"	f	S:DOMAttr function createAttributeNS($namespaceURI, $qualifiedName)	class:DOMDocument
createCDATASection		0;"	f	S:DOMCDATASection function createCDATASection($data)	class:DOMDocument
createComment		0;"	f	S:DOMComment function createComment($data)	class:DOMDocument
createDocumentFragment		0;"	f	S:DOMDocumentFragment function createDocumentFragment()	class:DOMDocument
createElement		0;"	f	S:DOMElement function createElement($name, $value)	class:DOMDocument
createElementNS		0;"	f	S:DOMElement function createElementNS($namespaceURI, $qualifiedName, $value)	class:DOMDocument
createEntityReference		0;"	f	S:DOMEntityReference function createEntityReference($name)	class:DOMDocument
createProcessingInstruction		0;"	f	S:DOMProcessingInstruction function createProcessingInstruction($target, $data)	class:DOMDocument
createTextNode		0;"	f	S:DOMText function createTextNode($content)	class:DOMDocument
getElementById		0;"	f	S:DOMElement function getElementById($elementId)	class:DOMDocument
getElementsByTagName		0;"	f	S:DOMNodeList function getElementsByTagName($name)	class:DOMDocument
getElementsByTagNameNS		0;"	f	S:DOMNodeList function getElementsByTagNameNS($namespaceURI, $localName)	class:DOMDocument
importNode		0;"	f	S:DOMNode function importNode($importedNode, $deep)	class:DOMDocument
load		0;"	f	S:mixed function load($filename, $options)	class:DOMDocument
loadHTML		0;"	f	S:bool function loadHTML($source, $options)	class:DOMDocument
loadHTMLFile		0;"	f	S:bool function loadHTMLFile($filename, $options)	class:DOMDocument
loadXML		0;"	f	S:mixed function loadXML($source, $options)	class:DOMDocument
normalizeDocument		0;"	f	S:void function normalizeDocument()	class:DOMDocument
registerNodeClass		0;"	f	S:bool function registerNodeClass($baseclass, $extendedclass)	class:DOMDocument
relaxNGValidate		0;"	f	S:bool function relaxNGValidate($filename)	class:DOMDocument
relaxNGValidateSource		0;"	f	S:bool function relaxNGValidateSource($source)	class:DOMDocument
save		0;"	f	S:int function save($filename, $options)	class:DOMDocument
saveHTML		0;"	f	S:string function saveHTML($node = NULL)	class:DOMDocument
saveHTMLFile		0;"	f	S:int function saveHTMLFile($filename)	class:DOMDocument
saveXML		0;"	f	S:string function saveXML($node, $options)	class:DOMDocument
schemaValidate		0;"	f	S:bool function schemaValidate($filename, $flags)	class:DOMDocument
schemaValidateSource		0;"	f	S:bool function schemaValidateSource($source, $flags)	class:DOMDocument
validate		0;"	f	S:bool function validate()	class:DOMDocument
xinclude		0;"	f	S:int function xinclude($options)	class:DOMDocument
DOMDocumentFragment		0;"	c	i:DOMNode
appendXML		0;"	f	S:bool function appendXML($data)	class:DOMDocumentFragment
DOMDocumentType		0;"	c	i:DOMNode
publicId		0;"	p	class:DOMDocumentType	S: DOMDocumentType::publicId
systemId		0;"	p	class:DOMDocumentType	S: DOMDocumentType::systemId
name		0;"	p	class:DOMDocumentType	S: DOMDocumentType::name
entities		0;"	p	class:DOMDocumentType	S: DOMDocumentType::entities
notations		0;"	p	class:DOMDocumentType	S: DOMDocumentType::notations
internalSubset		0;"	p	class:DOMDocumentType	S: DOMDocumentType::internalSubset
DOMElement		0;"	c	i:DOMNode
schemaTypeInfo		0;"	p	class:DOMElement	S: DOMElement::schemaTypeInfo
tagName		0;"	p	class:DOMElement	S: DOMElement::tagName
__construct		0;"	f	S: function __construct($name, $value, $namespaceURI)	class:DOMElement
getAttribute		0;"	f	S:string function getAttribute($name)	class:DOMElement
getAttributeNode		0;"	f	S:DOMAttr function getAttributeNode($name)	class:DOMElement
getAttributeNodeNS		0;"	f	S:DOMAttr function getAttributeNodeNS($namespaceURI, $localName)	class:DOMElement
getAttributeNS		0;"	f	S:string function getAttributeNS($namespaceURI, $localName)	class:DOMElement
getElementsByTagName		0;"	f	S:DOMNodeList function getElementsByTagName($name)	class:DOMElement
getElementsByTagNameNS		0;"	f	S:DOMNodeList function getElementsByTagNameNS($namespaceURI, $localName)	class:DOMElement
hasAttribute		0;"	f	S:bool function hasAttribute($name)	class:DOMElement
hasAttributeNS		0;"	f	S:bool function hasAttributeNS($namespaceURI, $localName)	class:DOMElement
removeAttribute		0;"	f	S:bool function removeAttribute($name)	class:DOMElement
removeAttributeNode		0;"	f	S:bool function removeAttributeNode($oldnode)	class:DOMElement
removeAttributeNS		0;"	f	S:bool function removeAttributeNS($namespaceURI, $localName)	class:DOMElement
setAttribute		0;"	f	S:DOMAttr function setAttribute($name, $value)	class:DOMElement
setAttributeNode		0;"	f	S:DOMAttr function setAttributeNode($attr)	class:DOMElement
setAttributeNodeNS		0;"	f	S:DOMAttr function setAttributeNodeNS($attr)	class:DOMElement
setAttributeNS		0;"	f	S:void function setAttributeNS($namespaceURI, $qualifiedName, $value)	class:DOMElement
setIdAttribute		0;"	f	S:void function setIdAttribute($name, $isId)	class:DOMElement
setIdAttributeNode		0;"	f	S:void function setIdAttributeNode($attr, $isId)	class:DOMElement
setIdAttributeNS		0;"	f	S:void function setIdAttributeNS($namespaceURI, $localName, $isId)	class:DOMElement
DOMEntity		0;"	c	i:DOMNode
publicId		0;"	p	class:DOMEntity	S: DOMEntity::publicId
systemId		0;"	p	class:DOMEntity	S: DOMEntity::systemId
notationName		0;"	p	class:DOMEntity	S: DOMEntity::notationName
actualEncoding		0;"	p	class:DOMEntity	S: DOMEntity::actualEncoding
encoding		0;"	p	class:DOMEntity	S: DOMEntity::encoding
version		0;"	p	class:DOMEntity	S: DOMEntity::version
DOMEntityReference		0;"	c	i:DOMNode
__construct		0;"	f	S: function __construct($name)	class:DOMEntityReference
DOMException		0;"	c	i:Exception
code		0;"	p	class:DOMException	S: DOMException::code
DOMImplementation		0;"	c
__construct		0;"	f	S: function __construct()	class:DOMImplementation
createDocument		0;"	f	S:DOMDocument function createDocument($namespaceURI, $qualifiedName, $doctype)	class:DOMImplementation
createDocumentType		0;"	f	S:DOMDocumentType function createDocumentType($qualifiedName, $publicId, $systemId)	class:DOMImplementation
hasFeature		0;"	f	S:bool function hasFeature($feature, $version)	class:DOMImplementation
DOMNamedNodeMap		0;"	c
length		0;"	p	class:DOMNamedNodeMap	S: DOMNamedNodeMap::length
getNamedItem		0;"	f	S:DOMNode function getNamedItem($name)	class:DOMNamedNodeMap
getNamedItemNS		0;"	f	S:DOMNode function getNamedItemNS($namespaceURI, $localName)	class:DOMNamedNodeMap
item		0;"	f	S:DOMNode function item($index)	class:DOMNamedNodeMap
DOMNode		0;"	c
nodeName		0;"	p	class:DOMNode	S: DOMNode::nodeName
nodeValue		0;"	p	class:DOMNode	S: DOMNode::nodeValue
nodeType		0;"	p	class:DOMNode	S: DOMNode::nodeType
parentNode		0;"	p	class:DOMNode	S: DOMNode::parentNode
childNodes		0;"	p	class:DOMNode	S: DOMNode::childNodes
firstChild		0;"	p	class:DOMNode	S: DOMNode::firstChild
lastChild		0;"	p	class:DOMNode	S: DOMNode::lastChild
previousSibling		0;"	p	class:DOMNode	S: DOMNode::previousSibling
nextSibling		0;"	p	class:DOMNode	S: DOMNode::nextSibling
attributes		0;"	p	class:DOMNode	S: DOMNode::attributes
ownerDocument		0;"	p	class:DOMNode	S: DOMNode::ownerDocument
namespaceURI		0;"	p	class:DOMNode	S: DOMNode::namespaceURI
prefix		0;"	p	class:DOMNode	S: DOMNode::prefix
localName		0;"	p	class:DOMNode	S: DOMNode::localName
baseURI		0;"	p	class:DOMNode	S: DOMNode::baseURI
textContent		0;"	p	class:DOMNode	S: DOMNode::textContent
appendChild		0;"	f	S:DOMNode function appendChild($newnode)	class:DOMNode
C14N		0;"	f	S:string function C14N($exclusive, $with_comments, $xpath, $ns_prefixes)	class:DOMNode
C14NFile		0;"	f	S:int function C14NFile($uri, $exclusive, $with_comments, $xpath, $ns_prefixes)	class:DOMNode
cloneNode		0;"	f	S:DOMNode function cloneNode($deep)	class:DOMNode
getLineNo		0;"	f	S:int function getLineNo()	class:DOMNode
getNodePath		0;"	f	S:string function getNodePath()	class:DOMNode
hasAttributes		0;"	f	S:bool function hasAttributes()	class:DOMNode
hasChildNodes		0;"	f	S:bool function hasChildNodes()	class:DOMNode
insertBefore		0;"	f	S:DOMNode function insertBefore($newnode, $refnode)	class:DOMNode
isDefaultNamespace		0;"	f	S:bool function isDefaultNamespace($namespaceURI)	class:DOMNode
isSameNode		0;"	f	S:bool function isSameNode($node)	class:DOMNode
isSupported		0;"	f	S:bool function isSupported($feature, $version)	class:DOMNode
lookupNamespaceURI		0;"	f	S:string function lookupNamespaceURI($prefix)	class:DOMNode
lookupPrefix		0;"	f	S:string function lookupPrefix($namespaceURI)	class:DOMNode
normalize		0;"	f	S:void function normalize()	class:DOMNode
removeChild		0;"	f	S:DOMNode function removeChild($oldnode)	class:DOMNode
replaceChild		0;"	f	S:DOMNode function replaceChild($newnode, $oldnode)	class:DOMNode
DOMNodeList		0;"	c
length		0;"	p	class:DOMNodeList	S: DOMNodeList::length
item		0;"	f	S:DOMNode function item($index)	class:DOMNodelist
DOMNotation		0;"	c	i:DOMNode
publicId		0;"	p	class:DOMNotation	S: DOMNotation::publicId
systemId		0;"	p	class:DOMNotation	S: DOMNotation::systemId
DOMProcessingInstruction		0;"	c	i:DOMNode
target		0;"	p	class:DOMProcessingInstruction	S: DOMProcessingInstruction::target
data		0;"	p	class:DOMProcessingInstruction	S: DOMProcessingInstruction::data
__construct		0;"	f	S: function __construct($name, $value)	class:DOMProcessingInstruction
DOMText		0;"	c	i:DOMCharacterData
wholeText		0;"	p	class:DOMText	S: DOMText::wholeText
__construct		0;"	f	S: function __construct($value)	class:DOMText
isWhitespaceInElementContent		0;"	f	S:bool function isWhitespaceInElementContent()	class:DOMText
splitText		0;"	f	S:DOMText function splitText($offset)	class:DOMText
DOMXPath		0;"	c
document		0;"	p	class:DOMXPath	S: DOMXPath::document
__construct		0;"	f	S: function __construct($doc)	class:DOMXPath
evaluate		0;"	f	S:mixed function evaluate($expression, $contextnode, $registerNodeNS = true)	class:DOMXPath
query		0;"	f	S:DOMNodeList function query($expression, $contextnode, $registerNodeNS = true)	class:DOMXPath
registerNamespace		0;"	f	S:bool function registerNamespace($prefix, $namespaceURI)	class:DOMXPath
registerPhpFunctions		0;"	f	S:void function registerPhpFunctions($restrict)	class:DOMXPath
dom_import_simplexml		0;"	f	S:DOMElement function dom_import_simplexml($node)
LIBXML_COMPACT		0;"	d
LIBXML_DTDATTR		0;"	d
LIBXML_DTDLOAD		0;"	d
LIBXML_DTDVALID		0;"	d
LIBXML_HTML_NOIMPLIED		0;"	d
LIBXML_HTML_NODEFDTD		0;"	d
LIBXML_NOBLANKS		0;"	d
LIBXML_NOCDATA		0;"	d
LIBXML_NOEMPTYTAG		0;"	d
LIBXML_NOENT		0;"	d
LIBXML_NOERROR		0;"	d
LIBXML_NONET		0;"	d
LIBXML_NOWARNING		0;"	d
LIBXML_NOXMLDECL		0;"	d
LIBXML_NSCLEAN		0;"	d
LIBXML_PARSEHUGE		0;"	d
LIBXML_PEDANTIC		0;"	d
LIBXML_XINCLUDE		0;"	d
LIBXML_ERR_ERROR		0;"	d
LIBXML_ERR_FATAL		0;"	d
LIBXML_ERR_NONE		0;"	d
LIBXML_ERR_WARNING		0;"	d
LIBXML_VERSION		0;"	d
LIBXML_DOTTED_VERSION		0;"	d
LIBXML_SCHEMA_CREATE		0;"	d
libXMLError		0;"	c
level		0;"	p	class:libXMLError	S: libXMLError::level
code		0;"	p	class:libXMLError	S: libXMLError::code
column		0;"	p	class:libXMLError	S: libXMLError::column
message		0;"	p	class:libXMLError	S: libXMLError::message
file		0;"	p	class:libXMLError	S: libXMLError::file
line		0;"	p	class:libXMLError	S: libXMLError::line
libxml_clear_errors		0;"	f	S:void function libxml_clear_errors()
libxml_disable_entity_loader		0;"	f	S:bool function libxml_disable_entity_loader($disable = true)
libxml_get_errors		0;"	f	S:array function libxml_get_errors()
libxml_get_last_error		0;"	f	S:LibXMLError function libxml_get_last_error()
libxml_set_external_entity_loader		0;"	f	S:void function libxml_set_external_entity_loader($resolver_function)
libxml_set_streams_context		0;"	f	S:void function libxml_set_streams_context($streams_context)
libxml_use_internal_errors		0;"	f	S:bool function libxml_use_internal_errors($use_errors = false)
NONE		0;"	o	class:SDO_DAS_ChangeSummary
MODIFICATION		0;"	o	class:SDO_DAS_ChangeSummary
ADDITION		0;"	o	class:SDO_DAS_ChangeSummary
DELETION		0;"	o	class:SDO_DAS_ChangeSummary
beginLogging		0;"	f	S:void function beginLogging()	class:SDO_DAS_ChangeSummary
endLogging		0;"	f	S:void function endLogging()	class:SDO_DAS_ChangeSummary
getChangeType		0;"	f	S:int function getChangeType($dataObject)	class:SDO_DAS_ChangeSummary
getChangedDataObjects		0;"	f	S:SDO_List function getChangedDataObjects()	class:SDO_DAS_ChangeSummary
getOldContainer		0;"	f	S:SDO_DataObject function getOldContainer($data_object)	class:SDO_DAS_ChangeSummary
getOldValues		0;"	f	S:SDO_List function getOldValues($data_object)	class:SDO_DAS_ChangeSummary
isLogging		0;"	f	S:bool function isLogging()	class:SDO_DAS_ChangeSummary
addPropertyToType		0;"	f	S:void function addPropertyToType($parent_type_namespace_uri, $parent_type_name, $property_name, $type_namespace_uri, $type_name, $options)	class:SDO_DAS_DataFactory
addType		0;"	f	S:void function addType($type_namespace_uri, $type_name, $options)	class:SDO_DAS_DataFactory
getDataFactory		0;"	f	S:SDO_DAS_DataFactory function getDataFactory()	class:SDO_DAS_DataFactory
getChangeSummary		0;"	f	S:SDO_DAS_ChangeSummary function getChangeSummary()	class:SDO_DAS_DataObject
getListIndex		0;"	f	S:int function getListIndex()	class:SDO_DAS_Setting
getPropertyIndex		0;"	f	S:int function getPropertyIndex()	class:SDO_DAS_Setting
getPropertyName		0;"	f	S:string function getPropertyName()	class:SDO_DAS_Setting
getValue		0;"	f	S:mixed function getValue()	class:SDO_DAS_Setting
isSet		0;"	f	S:bool function isSet()	class:SDO_DAS_Setting
create		0;"	f	S:void function create($type_namespace_uri, $type_name)	class:SDO_DataFactory
clear		0;"	f	S:void function clear()	class:SDO_DataObject
createDataObject		0;"	f	S:SDO_DataObject function createDataObject($identifier)	class:SDO_DataObject
getContainer		0;"	f	S:SDO_DataObject function getContainer()	class:SDO_DataObject
getSequence		0;"	f	S:SDO_Sequence function getSequence()	class:SDO_DataObject
getTypeName		0;"	f	S:string function getTypeName()	class:SDO_DataObject
getTypeNamespaceURI		0;"	f	S:string function getTypeNamespaceURI()	class:SDO_DataObject
getCause		0;"	f	S:mixed function getCause()	class:SDO_Exception
insert		0;"	f	S:void function insert($value, $index)	class:SDO_List
getContainingType		0;"	f	S:SDO_Model_Type function getContainingType()	class:SDO_Model_Property
getDefault		0;"	f	S:mixed function getDefault()	class:SDO_Model_Property
getName		0;"	f	S:string function getName()	class:SDO_Model_Property
getType		0;"	f	S:SDO_Model_Type function getType()	class:SDO_Model_Property
isContainment		0;"	f	S:bool function isContainment()	class:SDO_Model_Property
isMany		0;"	f	S:bool function isMany()	class:SDO_Model_Property
__construct		0;"	f	S: function __construct($data_object)	class:SDO_Model_ReflectionDataObject
export		0;"	f	S:mixed function export($rdo, $return)	class:SDO_Model_ReflectionDataObject
getContainmentProperty		0;"	f	S:SDO_Model_Property function getContainmentProperty()	class:SDO_Model_ReflectionDataObject
getInstanceProperties		0;"	f	S:array function getInstanceProperties()	class:SDO_Model_ReflectionDataObject
getType		0;"	f	S:SDO_Model_Type function getType()	class:SDO_Model_ReflectionDataObject
getBaseType		0;"	f	S:SDO_Model_Type function getBaseType()	class:SDO_Model_Type
getName		0;"	f	S:string function getName()	class:SDO_Model_Type
getNamespaceURI		0;"	f	S:string function getNamespaceURI()	class:SDO_Model_Type
getProperties		0;"	f	S:array function getProperties()	class:SDO_Model_Type
getProperty		0;"	f	S:SDO_Model_Property function getProperty($identifier)	class:SDO_Model_Type
isAbstractType		0;"	f	S:bool function isAbstractType()	class:SDO_Model_Type
isDataType		0;"	f	S:bool function isDataType()	class:SDO_Model_Type
isInstance		0;"	f	S:bool function isInstance($data_object)	class:SDO_Model_Type
isOpenType		0;"	f	S:bool function isOpenType()	class:SDO_Model_Type
isSequencedType		0;"	f	S:bool function isSequencedType()	class:SDO_Model_Type
getProperty		0;"	f	S:SDO_Model_Property function getProperty($sequence_index)	class:SDO_Sequence
insert		0;"	f	S:void function insert($value, $sequenceIndex, $propertyIdentifier)	class:SDO_Sequence
move		0;"	f	S:void function move($toIndex, $fromIndex)	class:SDO_Sequence
applyChanges		0;"	f	S:void function applyChanges($database_handle, $root_data_object)	class:SDO_DAS_Relational
__construct		0;"	f	S: function __construct($database_metadata, $application_root_type, $SDO_containment_references_metadata)	class:SDO_DAS_Relational
createRootDataObject		0;"	f	S:SDODataObject function createRootDataObject()	class:SDO_DAS_Relational
executePreparedQuery		0;"	f	S:SDODataObject function executePreparedQuery($database_handle, $prepared_statement, $value_list, $column_specifier)	class:SDO_DAS_Relational
executeQuery		0;"	f	S:SDODataObject function executeQuery($database_handle, $SQL_statement, $column_specifier)	class:SDO_DAS_Relational
addTypes		0;"	f	S:void function addTypes($xsd_file)	class:SDO_DAS_XML
create		0;"	f	S:SDO_DAS_XML function create($xsd_file, $key)	class:SDO_DAS_XML
createDataObject		0;"	f	S:SDO_DataObject function createDataObject($namespace_uri, $type_name)	class:SDO_DAS_XML
createDocument		0;"	f	S:SDO_DAS_XML_Document function createDocument($document_element_name, $document_element_namespace_URI, $dataobject)	class:SDO_DAS_XML
loadFile		0;"	f	S:SDO_XMLDocument function loadFile($xml_file)	class:SDO_DAS_XML
loadString		0;"	f	S:SDO_DAS_XML_Document function loadString($xml_string)	class:SDO_DAS_XML
saveFile		0;"	f	S:void function saveFile($xdoc, $xml_file, $indent)	class:SDO_DAS_XML
saveString		0;"	f	S:string function saveString($xdoc, $indent)	class:SDO_DAS_XML
getRootDataObject		0;"	f	S:SDO_DataObject function getRootDataObject()	class:SDO_DAS_XML_Document
getRootElementName		0;"	f	S:string function getRootElementName()	class:SDO_DAS_XML_Document
getRootElementURI		0;"	f	S:string function getRootElementURI()	class:SDO_DAS_XML_Document
setEncoding		0;"	f	S:void function setEncoding($encoding)	class:SDO_DAS_XML_Document
setXMLDeclaration		0;"	f	S:void function setXMLDeclaration($xmlDeclatation)	class:SDO_DAS_XML_Document
setXMLVersion		0;"	f	S:void function setXMLVersion($xmlVersion)	class:SDO_DAS_XML_Document
SimpleXMLElement		0;"	c
addAttribute		0;"	f	S:void function addAttribute($name, $value, $namespace)	class:SimpleXMLElement
addChild		0;"	f	S:SimpleXMLElement function addChild($name, $value, $namespace)	class:SimpleXMLElement
asXML		0;"	f	S:mixed function asXML($filename)	class:SimpleXMLElement
attributes		0;"	f	S:SimpleXMLElement function attributes($ns, $is_prefix = false)	class:SimpleXMLElement
children		0;"	f	S:SimpleXMLElement function children($ns, $is_prefix = false)	class:SimpleXMLElement
__construct		0;"	f	S: function __construct($data, $options, $data_is_url = false, $ns = "", $is_prefix = false)	class:SimpleXMLElement
count		0;"	f	S:int function count()	class:SimpleXMLElement
getDocNamespaces		0;"	f	S:array function getDocNamespaces($recursive = false, $from_root = true)	class:SimpleXMLElement
getName		0;"	f	S:string function getName()	class:SimpleXMLElement
getNamespaces		0;"	f	S:array function getNamespaces($recursive = false)	class:SimpleXMLElement
registerXPathNamespace		0;"	f	S:bool function registerXPathNamespace($prefix, $ns)	class:SimpleXMLElement
saveXML		0;"	f	S: function saveXML()	class:SimpleXMLElement
__toString		0;"	f	S:string function __toString()	class:SimpleXMLElement
xpath		0;"	f	S:array function xpath($path)	class:SimpleXMLElement
SimpleXMLIterator		0;"	c	i:SimpleXMLElement
current		0;"	f	S:mixed function current()	class:SimpleXMLIterator
getChildren		0;"	f	S:SimpleXMLIterator function getChildren()	class:SimpleXMLIterator
hasChildren		0;"	f	S:bool function hasChildren()	class:SimpleXMLIterator
key		0;"	f	S:mixed function key()	class:SimpleXMLIterator
next		0;"	f	S:void function next()	class:SimpleXMLIterator
rewind		0;"	f	S:void function rewind()	class:SimpleXMLIterator
valid		0;"	f	S:bool function valid()	class:SimpleXMLIterator
simplexml_import_dom		0;"	f	S:SimpleXMLElement function simplexml_import_dom($node, $class_name = "SimpleXMLElement")
simplexml_load_file		0;"	f	S:SimpleXMLElement function simplexml_load_file($filename, $class_name = "SimpleXMLElement", $options, $ns = "", $is_prefix = false)
simplexml_load_string		0;"	f	S:SimpleXMLElement function simplexml_load_string($data, $class_name = "SimpleXMLElement", $options, $ns = "", $is_prefix = false)
wddx_add_vars		0;"	f	S:bool function wddx_add_vars($packet_id, $var_name, $...)
wddx_deserialize		0;"	f	S:mixed function wddx_deserialize($packet)
wddx_packet_end		0;"	f	S:string function wddx_packet_end($packet_id)
wddx_packet_start		0;"	f	S:resource function wddx_packet_start($comment)
wddx_serialize_value		0;"	f	S:string function wddx_serialize_value($var, $comment)
wddx_serialize_vars		0;"	f	S:string function wddx_serialize_vars($var_name, $...)
XMLDiff\Base		0;"	c
__construct		0;"	f	S: function __construct($nsname)	class:XMLDiff\Base
diff		0;"	f	S:mixed function diff($from, $to)	class:XMLDiff\Base	m: abstract
merge		0;"	f	S:mixed function merge($src, $diff)	class:XMLDiff\Base	m: abstract
XMLDiff\DOM		0;"	c	i:XMLDiff\Base
diff		0;"	f	S:DOMDocument function diff($from, $to)	class:XMLDiff\DOM
merge		0;"	f	S:DOMDocument function merge($src, $diff)	class:XMLDiff\DOM
XMLDiff\Memory		0;"	c	i:XMLDiff\Base
diff		0;"	f	S:string function diff($from, $to)	class:XMLDiff\Memory
merge		0;"	f	S:string function merge($src, $diff)	class:XMLDiff\Memory
XMLDiff\File		0;"	c	i:XMLDiff\Base
diff		0;"	f	S:string function diff($from, $to)	class:XMLDiff\File
merge		0;"	f	S:string function merge($src, $diff)	class:XMLDiff\File
XML_ERROR_NONE		0;"	d
XML_ERROR_NO_MEMORY		0;"	d
XML_ERROR_SYNTAX		0;"	d
XML_ERROR_NO_ELEMENTS		0;"	d
XML_ERROR_INVALID_TOKEN		0;"	d
XML_ERROR_UNCLOSED_TOKEN		0;"	d
XML_ERROR_PARTIAL_CHAR		0;"	d
XML_ERROR_TAG_MISMATCH		0;"	d
XML_ERROR_DUPLICATE_ATTRIBUTE		0;"	d
XML_ERROR_JUNK_AFTER_DOC_ELEMENT		0;"	d
XML_ERROR_PARAM_ENTITY_REF		0;"	d
XML_ERROR_UNDEFINED_ENTITY		0;"	d
XML_ERROR_RECURSIVE_ENTITY_REF		0;"	d
XML_ERROR_ASYNC_ENTITY		0;"	d
XML_ERROR_BAD_CHAR_REF		0;"	d
XML_ERROR_BINARY_ENTITY_REF		0;"	d
XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF		0;"	d
XML_ERROR_MISPLACED_XML_PI		0;"	d
XML_ERROR_UNKNOWN_ENCODING		0;"	d
XML_ERROR_INCORRECT_ENCODING		0;"	d
XML_ERROR_UNCLOSED_CDATA_SECTION		0;"	d
XML_ERROR_EXTERNAL_ENTITY_HANDLING		0;"	d
XML_OPTION_CASE_FOLDING		0;"	d
XML_OPTION_TARGET_ENCODING		0;"	d
XML_OPTION_SKIP_TAGSTART		0;"	d
XML_OPTION_SKIP_WHITE		0;"	d
XML_SAX_IMPL		0;"	d
utf8_decode		0;"	f	S:string function utf8_decode($data)
utf8_encode		0;"	f	S:string function utf8_encode($data)
xml_error_string		0;"	f	S:string function xml_error_string($code)
xml_get_current_byte_index		0;"	f	S:int function xml_get_current_byte_index($parser)
xml_get_current_column_number		0;"	f	S:int function xml_get_current_column_number($parser)
xml_get_current_line_number		0;"	f	S:int function xml_get_current_line_number($parser)
xml_get_error_code		0;"	f	S:int function xml_get_error_code($parser)
xml_parse_into_struct		0;"	f	S:int function xml_parse_into_struct($parser, $data, &$values, &$index)
xml_parse		0;"	f	S:int function xml_parse($parser, $data, $is_final = false)
xml_parser_create_ns		0;"	f	S:resource function xml_parser_create_ns($encoding, $separator = ":")
xml_parser_create		0;"	f	S:resource function xml_parser_create($encoding)
xml_parser_free		0;"	f	S:bool function xml_parser_free($parser)
xml_parser_get_option		0;"	f	S:mixed function xml_parser_get_option($parser, $option)
xml_parser_set_option		0;"	f	S:bool function xml_parser_set_option($parser, $option, $value)
xml_set_character_data_handler		0;"	f	S:bool function xml_set_character_data_handler($parser, $handler)
xml_set_default_handler		0;"	f	S:bool function xml_set_default_handler($parser, $handler)
xml_set_element_handler		0;"	f	S:bool function xml_set_element_handler($parser, $start_element_handler, $end_element_handler)
xml_set_end_namespace_decl_handler		0;"	f	S:bool function xml_set_end_namespace_decl_handler($parser, $handler)
xml_set_external_entity_ref_handler		0;"	f	S:bool function xml_set_external_entity_ref_handler($parser, $handler)
xml_set_notation_decl_handler		0;"	f	S:bool function xml_set_notation_decl_handler($parser, $handler)
xml_set_object		0;"	f	S:bool function xml_set_object($parser, &$object)
xml_set_processing_instruction_handler		0;"	f	S:bool function xml_set_processing_instruction_handler($parser, $handler)
xml_set_start_namespace_decl_handler		0;"	f	S:bool function xml_set_start_namespace_decl_handler($parser, $handler)
xml_set_unparsed_entity_decl_handler		0;"	f	S:bool function xml_set_unparsed_entity_decl_handler($parser, $handler)
XMLReader		0;"	c
NONE		0;"	o	class:XMLReader	a:const	S:const XMLReader::NONE
ELEMENT		0;"	o	class:XMLReader	a:const	S:const XMLReader::ELEMENT
ATTRIBUTE		0;"	o	class:XMLReader	a:const	S:const XMLReader::ATTRIBUTE
TEXT		0;"	o	class:XMLReader	a:const	S:const XMLReader::TEXT
CDATA		0;"	o	class:XMLReader	a:const	S:const XMLReader::CDATA
ENTITY_REF		0;"	o	class:XMLReader	a:const	S:const XMLReader::ENTITY_REF
ENTITY		0;"	o	class:XMLReader	a:const	S:const XMLReader::ENTITY
PI		0;"	o	class:XMLReader	a:const	S:const XMLReader::PI
COMMENT		0;"	o	class:XMLReader	a:const	S:const XMLReader::COMMENT
DOC		0;"	o	class:XMLReader	a:const	S:const XMLReader::DOC
DOC_TYPE		0;"	o	class:XMLReader	a:const	S:const XMLReader::DOC_TYPE
DOC_FRAGMENT		0;"	o	class:XMLReader	a:const	S:const XMLReader::DOC_FRAGMENT
NOTATION		0;"	o	class:XMLReader	a:const	S:const XMLReader::NOTATION
WHITESPACE		0;"	o	class:XMLReader	a:const	S:const XMLReader::WHITESPACE
SIGNIFICANT_WHITESPACE		0;"	o	class:XMLReader	a:const	S:const XMLReader::SIGNIFICANT_WHITESPACE
END_ELEMENT		0;"	o	class:XMLReader	a:const	S:const XMLReader::END_ELEMENT
END_ENTITY		0;"	o	class:XMLReader	a:const	S:const XMLReader::END_ENTITY
XML_DECLARATION		0;"	o	class:XMLReader	a:const	S:const XMLReader::XML_DECLARATION
LOADDTD		0;"	o	class:XMLReader	a:const	S:const XMLReader::LOADDTD
DEFAULTATTRS		0;"	o	class:XMLReader	a:const	S:const XMLReader::DEFAULTATTRS
VALIDATE		0;"	o	class:XMLReader	a:const	S:const XMLReader::VALIDATE
SUBST_ENTITIES		0;"	o	class:XMLReader	a:const	S:const XMLReader::SUBST_ENTITIES
attributeCount		0;"	p	class:XMLReader	S: XMLReader::attributeCount
baseURI		0;"	p	class:XMLReader	S: XMLReader::baseURI
depth		0;"	p	class:XMLReader	S: XMLReader::depth
hasAttributes		0;"	p	class:XMLReader	S: XMLReader::hasAttributes
hasValue		0;"	p	class:XMLReader	S: XMLReader::hasValue
isDefault		0;"	p	class:XMLReader	S: XMLReader::isDefault
isEmptyElement		0;"	p	class:XMLReader	S: XMLReader::isEmptyElement
localName		0;"	p	class:XMLReader	S: XMLReader::localName
name		0;"	p	class:XMLReader	S: XMLReader::name
namespaceURI		0;"	p	class:XMLReader	S: XMLReader::namespaceURI
nodeType		0;"	p	class:XMLReader	S: XMLReader::nodeType
prefix		0;"	p	class:XMLReader	S: XMLReader::prefix
value		0;"	p	class:XMLReader	S: XMLReader::value
xmlLang		0;"	p	class:XMLReader	S: XMLReader::xmlLang
close		0;"	f	S:bool function close()	class:XMLReader
expand		0;"	f	S:DOMNode function expand($basenode)	class:XMLReader
getAttribute		0;"	f	S:string function getAttribute($name)	class:XMLReader
getAttributeNo		0;"	f	S:string function getAttributeNo($index)	class:XMLReader
getAttributeNs		0;"	f	S:string function getAttributeNs($localName, $namespaceURI)	class:XMLReader
getParserProperty		0;"	f	S:bool function getParserProperty($property)	class:XMLReader
isValid		0;"	f	S:bool function isValid()	class:XMLReader
lookupNamespace		0;"	f	S:bool function lookupNamespace($prefix)	class:XMLReader
moveToAttribute		0;"	f	S:bool function moveToAttribute($name)	class:XMLReader
moveToAttributeNo		0;"	f	S:bool function moveToAttributeNo($index)	class:XMLReader
moveToAttributeNs		0;"	f	S:bool function moveToAttributeNs($localName, $namespaceURI)	class:XMLReader
moveToElement		0;"	f	S:bool function moveToElement()	class:XMLReader
moveToFirstAttribute		0;"	f	S:bool function moveToFirstAttribute()	class:XMLReader
moveToNextAttribute		0;"	f	S:bool function moveToNextAttribute()	class:XMLReader
next		0;"	f	S:bool function next($localname)	class:XMLReader
open		0;"	f	S:bool function open($URI, $encoding, $options)	class:XMLReader
read		0;"	f	S:bool function read()	class:XMLReader
readInnerXML		0;"	f	S:string function readInnerXML()	class:XMLReader
readOuterXML		0;"	f	S:string function readOuterXML()	class:XMLReader
readString		0;"	f	S:string function readString()	class:XMLReader
setParserProperty		0;"	f	S:bool function setParserProperty($property, $value)	class:XMLReader
setRelaxNGSchema		0;"	f	S:bool function setRelaxNGSchema($filename)	class:XMLReader
setRelaxNGSchemaSource		0;"	f	S:bool function setRelaxNGSchemaSource($source)	class:XMLReader
setSchema		0;"	f	S:bool function setSchema($filename)	class:XMLReader
XML		0;"	f	S:bool function XML($source, $encoding, $options)	class:XMLReader
endAttribute		0;"	f	S:bool function endAttribute($xmlwriter)	class:XMLWriter
endCData		0;"	f	S:bool function endCData($xmlwriter)	class:XMLWriter
endComment		0;"	f	S:bool function endComment($xmlwriter)	class:XMLWriter
endDocument		0;"	f	S:bool function endDocument($xmlwriter)	class:XMLWriter
endDTDAttlist		0;"	f	S:bool function endDTDAttlist($xmlwriter)	class:XMLWriter
endDTDElement		0;"	f	S:bool function endDTDElement($xmlwriter)	class:XMLWriter
endDTDEntity		0;"	f	S:bool function endDTDEntity($xmlwriter)	class:XMLWriter
endDTD		0;"	f	S:bool function endDTD($xmlwriter)	class:XMLWriter
endElement		0;"	f	S:bool function endElement($xmlwriter)	class:XMLWriter
endPI		0;"	f	S:bool function endPI($xmlwriter)	class:XMLWriter
flush		0;"	f	S:mixed function flush($empty = true, $xmlwriter)	class:XMLWriter
fullEndElement		0;"	f	S:bool function fullEndElement($xmlwriter)	class:XMLWriter
openMemory		0;"	f	S:resource function openMemory()	class:XMLWriter
openURI		0;"	f	S:resource function openURI($uri)	class:XMLWriter
outputMemory		0;"	f	S:string function outputMemory($flush = true, $xmlwriter)	class:XMLWriter
setIndentString		0;"	f	S:bool function setIndentString($indentString, $xmlwriter)	class:XMLWriter
setIndent		0;"	f	S:bool function setIndent($indent, $xmlwriter)	class:XMLWriter
startAttributeNS		0;"	f	S:bool function startAttributeNS($prefix, $name, $uri, $xmlwriter)	class:XMLWriter
startAttribute		0;"	f	S:bool function startAttribute($name, $xmlwriter)	class:XMLWriter
startCData		0;"	f	S:bool function startCData($xmlwriter)	class:XMLWriter
startComment		0;"	f	S:bool function startComment($xmlwriter)	class:XMLWriter
startDocument		0;"	f	S:bool function startDocument($version = 1.0, $encoding, $standalone, $xmlwriter)	class:XMLWriter
startDTDAttlist		0;"	f	S:bool function startDTDAttlist($name, $xmlwriter)	class:XMLWriter
startDTDElement		0;"	f	S:bool function startDTDElement($qualifiedName, $xmlwriter)	class:XMLWriter
startDTDEntity		0;"	f	S:bool function startDTDEntity($name, $isparam, $xmlwriter)	class:XMLWriter
startDTD		0;"	f	S:bool function startDTD($qualifiedName, $publicId, $systemId, $xmlwriter)	class:XMLWriter
startElementNS		0;"	f	S:bool function startElementNS($prefix, $name, $uri, $xmlwriter)	class:XMLWriter
startElement		0;"	f	S:bool function startElement($name, $xmlwriter)	class:XMLWriter
startPI		0;"	f	S:bool function startPI($target, $xmlwriter)	class:XMLWriter
text		0;"	f	S:bool function text($content, $xmlwriter)	class:XMLWriter
writeAttributeNS		0;"	f	S:bool function writeAttributeNS($prefix, $name, $uri, $content, $xmlwriter)	class:XMLWriter
writeAttribute		0;"	f	S:bool function writeAttribute($name, $value, $xmlwriter)	class:XMLWriter
writeCData		0;"	f	S:bool function writeCData($content, $xmlwriter)	class:XMLWriter
writeComment		0;"	f	S:bool function writeComment($content, $xmlwriter)	class:XMLWriter
writeDTDAttlist		0;"	f	S:bool function writeDTDAttlist($name, $content, $xmlwriter)	class:XMLWriter
writeDTDElement		0;"	f	S:bool function writeDTDElement($name, $content, $xmlwriter)	class:XMLWriter
writeDTDEntity		0;"	f	S:bool function writeDTDEntity($name, $content, $pe, $pubid, $sysid, $ndataid, $xmlwriter)	class:XMLWriter
writeDTD		0;"	f	S:bool function writeDTD($name, $publicId, $systemId, $subset, $xmlwriter)	class:XMLWriter
writeElementNS		0;"	f	S:bool function writeElementNS($prefix, $name, $uri, $content, $xmlwriter)	class:XMLWriter
writeElement		0;"	f	S:bool function writeElement($name, $content, $xmlwriter)	class:XMLWriter
writePI		0;"	f	S:bool function writePI($target, $content, $xmlwriter)	class:XMLWriter
writeRaw		0;"	f	S:bool function writeRaw($content, $xmlwriter)	class:XMLWriter
XSL_CLONE_AUTO		0;"	d
XSL_CLONE_NEVER		0;"	d
XSL_CLONE_ALWAYS		0;"	d
LIBXSLT_VERSION		0;"	d
LIBXSLT_DOTTED_VERSION		0;"	d
LIBEXSLT_VERSION		0;"	d
LIBEXSLT_DOTTED_VERSION		0;"	d
XSL_SECPREF_READ_FILE		0;"	d
XSL_SECPREF_WRITE_FILE		0;"	d
XSL_SECPREF_CREATE_DIRECTORY		0;"	d
XSL_SECPREF_READ_NETWORK		0;"	d
XSL_SECPREF_WRITE_NETWORK		0;"	d
XSLTProcessor		0;"	c
__construct		0;"	f	S: function __construct()	class:XSLTProcessor
getParameter		0;"	f	S:string function getParameter($namespaceURI, $localName)	class:XSLTProcessor
getSecurityPrefs		0;"	f	S:int function getSecurityPrefs()	class:XsltProcessor
hasExsltSupport		0;"	f	S:bool function hasExsltSupport()	class:XSLTProcessor
importStylesheet		0;"	f	S:void function importStylesheet($stylesheet)	class:XSLTProcessor
registerPHPFunctions		0;"	f	S:void function registerPHPFunctions($restrict)	class:XSLTProcessor
removeParameter		0;"	f	S:bool function removeParameter($namespaceURI, $localName)	class:XSLTProcessor
setParameter		0;"	f	S:bool function setParameter($namespace, $name, $value, $options)	class:XSLTProcessor
setProfiling		0;"	f	S:bool function setProfiling($filename)	class:XSLTProcessor
setSecurityPrefs		0;"	f	S:int function setSecurityPrefs($securityPrefs)	class:XsltProcessor
transformToDoc		0;"	f	S:DOMDocument function transformToDoc($doc)	class:XSLTProcessor
transformToUri		0;"	f	S:int function transformToUri($doc, $uri)	class:XSLTProcessor
transformToXML		0;"	f	S:string function transformToXML($doc)	class:XSLTProcessor
COUNTER_FLAG_PERSIST		0;"	d
COUNTER_FLAG_SAVE		0;"	d
COUNTER_FLAG_NO_OVERWRITE		0;"	d
COUNTER_META_NAME		0;"	d
COUNTER_META_IS_PERISTENT		0;"	d
COUNTER_RESET_NEVER		0;"	d
COUNTER_RESET_PER_LOAD		0;"	d
COUNTER_RESET_PER_REQUEST		0;"	d
Counter		0;"	c
PHP_VERSION		0;"	d
PHP_MAJOR_VERSION		0;"	d
PHP_MINOR_VERSION		0;"	d
PHP_RELEASE_VERSION		0;"	d
PHP_VERSION_ID		0;"	d
PHP_EXTRA_VERSION		0;"	d
PHP_ZTS		0;"	d
PHP_DEBUG		0;"	d
PHP_MAXPATHLEN		0;"	d
PHP_OS		0;"	d
PHP_SAPI		0;"	d
PHP_EOL		0;"	d
PHP_INT_MAX		0;"	d
PHP_INT_SIZE		0;"	d
DEFAULT_INCLUDE_PATH		0;"	d
PEAR_INSTALL_DIR		0;"	d
PEAR_EXTENSION_DIR		0;"	d
PHP_EXTENSION_DIR		0;"	d
PHP_PREFIX		0;"	d
PHP_BINDIR		0;"	d
PHP_BINARY		0;"	d
PHP_MANDIR		0;"	d
PHP_LIBDIR		0;"	d
PHP_DATADIR		0;"	d
PHP_SYSCONFDIR		0;"	d
PHP_LOCALSTATEDIR		0;"	d
PHP_CONFIG_FILE_PATH		0;"	d
PHP_CONFIG_FILE_SCAN_DIR		0;"	d
PHP_SHLIB_SUFFIX		0;"	d
E_ERROR		0;"	d
E_WARNING		0;"	d
E_PARSE		0;"	d
E_NOTICE		0;"	d
E_CORE_ERROR		0;"	d
E_CORE_WARNING		0;"	d
E_COMPILE_ERROR		0;"	d
E_COMPILE_WARNING		0;"	d
E_USER_ERROR		0;"	d
E_USER_WARNING		0;"	d
E_USER_NOTICE		0;"	d
E_DEPRECATED		0;"	d
E_USER_DEPRECATED		0;"	d
E_ALL		0;"	d
E_STRICT		0;"	d
__COMPILER_HALT_OFFSET__		0;"	d
TRUE		0;"	d
FALSE		0;"	d
NULL		0;"	d
