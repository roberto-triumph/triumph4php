/**
 * @copyright  2012 Roberto Perpuly
 * @license    http://www.opensource.org/licenses/mit-license.php The MIT License
 *
 * The MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
#include "code_control/CodeControlStyles.h"
#include <wx/stc/stc.h>
#include <vector>

static void NewStyle(std::vector<t4p::StylePreferenceClass>& styles, int stcId, const char* label) {
    t4p::StylePreferenceClass pref;
    pref.Control(stcId, label);
    styles.push_back(pref);
}

// NOLINT (readability/fn_size) these are a bunch of hard-coded values
void t4p::CodeControlStylesInit(t4p::CodeControlOptionsClass& options) {
    wxOperatingSystemId os = wxGetOsVersion();
    if (wxOS_WINDOWS == os) {
        options.LineEndingMode = wxSTC_EOL_CRLF;
    } else if (wxOS_MAC == os) {
        options.LineEndingMode = wxSTC_EOL_CR;
    } else {
        options.LineEndingMode = wxSTC_EOL_LF;
    }

    NewStyle(options.PhpStyles, wxSTC_HPHP_DEFAULT, "PHP Default");
    NewStyle(options.PhpStyles, wxSTC_HPHP_HSTRING, "PHP Double Quoted String");
    NewStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING, "PHP Single Quoted String");
    NewStyle(options.PhpStyles, wxSTC_HPHP_WORD, "PHP Keyword");
    NewStyle(options.PhpStyles, wxSTC_HPHP_NUMBER, "PHP Number Constant");
    NewStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE, "PHP Variable");
    NewStyle(options.PhpStyles, wxSTC_HPHP_COMMENT, "PHP Multi Line Comment");
    NewStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE, "PHP Line Comment");
    NewStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE, "PHP Variable Inside Double Quoted String");
    NewStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE, "PHP Complex Variable");
    NewStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR, "PHP Operator");
    NewStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT, "PHP Matching Brace");
    NewStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD, "PHP Mismatched Brace");
    NewStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER, "PHP Line Number Margin");
    NewStyle(options.PhpStyles, wxSTC_STYLE_INDENTGUIDE, "PHP Indentation Guides");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "PHP Caret");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "PHP Current Line");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "PHP Selection");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "PHP Code Fold Margin");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "PHP Right Margin");
    NewStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "PHP Highlight Matches");

    NewStyle(options.PhpStyles, wxSTC_H_DEFAULT, "HTML Default");
    NewStyle(options.PhpStyles, wxSTC_H_TAG, "HTML Known Tag");
    NewStyle(options.PhpStyles, wxSTC_H_TAGUNKNOWN, "HTML Unknown Tag");
    NewStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE, "HTML Attribute");
    NewStyle(options.PhpStyles, wxSTC_H_ATTRIBUTEUNKNOWN, "HTML Unknown Attribute");
    NewStyle(options.PhpStyles, wxSTC_H_NUMBER, "HTML Number");
    NewStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING, "HTML Double Quoted String");
    NewStyle(options.PhpStyles, wxSTC_H_SINGLESTRING, "HTML Single Quoted String");
    NewStyle(options.PhpStyles, wxSTC_H_OTHER, "HTML Other");
    NewStyle(options.PhpStyles, wxSTC_H_COMMENT, "HTML Comment");
    NewStyle(options.PhpStyles, wxSTC_H_ENTITY, "HTML Entity");
    NewStyle(options.PhpStyles, wxSTC_H_VALUE, "HTML Value");
    NewStyle(options.PhpStyles, wxSTC_H_QUESTION,  "HTML Embedded Script Start");  // <?php start tag
    NewStyle(options.PhpStyles, wxSTC_H_TAGEND, "HTML Embedded Script End");  // script end tag ?>

    NewStyle(options.PhpStyles, wxSTC_HJ_DEFAULT, "Embedded Javascript Default");
    NewStyle(options.PhpStyles, wxSTC_HJ_COMMENT, "Embedded Javascript Multi Line Comment");
    NewStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC, "Embedded Javascript Doc Comment");
    NewStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE, "Embedded Javascript Line Comment");
    NewStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING, "Embedded Javascript Double Quoted String");
    NewStyle(options.PhpStyles, wxSTC_HJ_KEYWORD, "Embedded Javascript Keyword");
    NewStyle(options.PhpStyles, wxSTC_HJ_NUMBER, "Embedded Javascript Number");
    NewStyle(options.PhpStyles, wxSTC_HJ_REGEX, "Embedded Javascript Regular Expression");
    NewStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING, "Embedded Javascript Single Quoted String");
    NewStyle(options.PhpStyles, wxSTC_HJ_START, "Embedded Javascript Start");
    NewStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL, "Embedded Javascript End-Of-Line");
    NewStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS, "Embedded Javascript Symbols");
    NewStyle(options.PhpStyles, wxSTC_HJ_WORD, "Embedded Javascript Variable");

    // extra HTML / XML styles for the HTML lexer
    NewStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT, "XML Default");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM, "XML First Parameter");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT, "XML First Parameter Comment");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT, "XML Block");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND, "XML Command");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT, "XML Comment");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING, "XML Double Quoted String");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY, "XML Entity");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_ERROR, "XML Error");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING, "XML String");
    NewStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL, "XML Special");
    NewStyle(options.PhpStyles, wxSTC_H_XCCOMMENT, "XML C Comment");
    NewStyle(options.PhpStyles, wxSTC_H_XMLEND, "XML End");
    NewStyle(options.PhpStyles, wxSTC_H_XMLSTART, "XML Start");

    // javascript lexer
    // note that scintilla the CPP lexer is also the Javascript lexer
    NewStyle(options.JsStyles, wxSTC_C_DEFAULT, "Javascript Start");
    NewStyle(options.JsStyles, wxSTC_C_COMMENT, "Javascript Multi Line Comment");
    NewStyle(options.JsStyles, wxSTC_C_COMMENTLINE, "Javascript Line Comment");
    NewStyle(options.JsStyles, wxSTC_C_COMMENTDOC, "Javascript Doc Comment");
    NewStyle(options.JsStyles, wxSTC_C_NUMBER, "Javascript Number");
    NewStyle(options.JsStyles, wxSTC_C_WORD, "Javascript Keyword");
    NewStyle(options.JsStyles, wxSTC_C_IDENTIFIER, "Javascript Identifier");
    NewStyle(options.JsStyles, wxSTC_C_STRING, "Javascript Double Quoted String");
    NewStyle(options.JsStyles, wxSTC_C_CHARACTER, "Javascript Single Quoted String");
    NewStyle(options.JsStyles, wxSTC_C_OPERATOR, "Javascript Operators");
    NewStyle(options.JsStyles, wxSTC_C_STRINGEOL, "Javascript End-Of-Line");
    NewStyle(options.JsStyles, wxSTC_C_REGEX, "Javascript Regular Expression");
    NewStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC, "Javascript Singe Line Doc Comment");
    NewStyle(options.JsStyles, wxSTC_C_WORD2, "Javascript Keyword 2");
    NewStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT, "Javascript Matching Brace");
    NewStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD, "Javascript Mismatched Brace");
    NewStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER, "Javascript Line Number Margin");
    NewStyle(options.JsStyles, wxSTC_STYLE_INDENTGUIDE, "Javascript Indentation Guides");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Javascript Caret");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Javascript Current Line");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Javascript Selection");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Javascript Code Fold Margin");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Javascript Right Margin");
    NewStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Javascript Highlight Matches");


    NewStyle(options.SqlStyles, wxSTC_SQL_DEFAULT, "SQL Default");
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENT, "SQL Comment");  // starts with "/*"
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE, "SQL Single Line Comment");  // starts with "--"
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC, "SQL Doc Comment");  // starts with or '/**' or '/*!' (doxygen)
    NewStyle(options.SqlStyles, wxSTC_SQL_NUMBER, "SQL Number");
    NewStyle(options.SqlStyles, wxSTC_SQL_WORD, "SQL Keyword");
    NewStyle(options.SqlStyles, wxSTC_SQL_STRING, "SQL String");
    NewStyle(options.SqlStyles, wxSTC_SQL_CHARACTER, "SQL Character");
    NewStyle(options.SqlStyles, wxSTC_SQL_OPERATOR, "SQL Operator");
    NewStyle(options.SqlStyles, wxSTC_SQL_IDENTIFIER, "SQL Identifier");
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC, "SQL Single Line Doc Comment");  // starts with '#'
    NewStyle(options.SqlStyles, wxSTC_SQL_WORD2, "SQL Database Objects");  // table, column names that match the DB
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOCKEYWORD, "SQL Stored Procedure Keyword");  // keyword on stored procedure
    NewStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOCKEYWORDERROR, "SQL Doxygen Comment Error");  // doxygen error
    NewStyle(options.SqlStyles, wxSTC_SQL_USER1, "SQL User Keywords 1");
    NewStyle(options.SqlStyles, wxSTC_SQL_USER2, "SQL User Keywords 2");
    NewStyle(options.SqlStyles, wxSTC_SQL_USER3, "SQL User Keywords 3");
    NewStyle(options.SqlStyles, wxSTC_SQL_USER4, "SQL User Keywords 4");
    NewStyle(options.SqlStyles, wxSTC_SQL_QUOTEDIDENTIFIER, "SQL Quoted Identifier");
    NewStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT, "SQL Matching Brace");
    NewStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD, "SQL Mismatched Brace");
    NewStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER, "SQL Line Number Margin");
    NewStyle(options.SqlStyles, wxSTC_STYLE_INDENTGUIDE, "SQL Indentation Guides");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "SQL Caret");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "SQL Current Line");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "SQL Selection");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "SQL Code Fold Margin");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "SQL Right Margin");
    NewStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "SQL Highlight Matches");

    NewStyle(options.CssStyles, wxSTC_CSS_DEFAULT, "CSS Default");
    NewStyle(options.CssStyles, wxSTC_CSS_TAG, "CSS Tag Selector");
    NewStyle(options.CssStyles, wxSTC_CSS_CLASS, "CSS Class Selector");
    NewStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS, "CSS Pseudo Class Selector");
    NewStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS, "CSS Unknown Pseudo Class Selector");
    NewStyle(options.CssStyles, wxSTC_CSS_OPERATOR, "CSS Operator");
    NewStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER, "CSS Property");
    NewStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER, "CSS Unknown Property");
    NewStyle(options.CssStyles, wxSTC_CSS_VALUE, "CSS Value");
    NewStyle(options.CssStyles, wxSTC_CSS_COMMENT, "CSS Comment");
    NewStyle(options.CssStyles, wxSTC_CSS_ID, "CSS ID Selector");
    NewStyle(options.CssStyles, wxSTC_CSS_IMPORTANT, "CSS Important");
    NewStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE, "CSS Directive");
    NewStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING, "CSS Double Quoted String");
    NewStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING, "CSS Single Quoted String");
    NewStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2, "CSS 2 Property");
    NewStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE, "CSS Attribute Selector");
    NewStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT, "CSS Matching Brace");
    NewStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD, "CSS Mismatched Brace");
    NewStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER, "CSS Line Number Margin");
    NewStyle(options.CssStyles, wxSTC_STYLE_INDENTGUIDE, "CSS Indentation Guides");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "CSS Caret");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "CSS Current Line");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "CSS Selection");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "CSS Code Fold Margin");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "CSS Right Margin");
    NewStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "CSS Highlight Matches");

    NewStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT, "Config Default");
    NewStyle(options.ConfigStyles, wxSTC_CONF_COMMENT, "Config Comment");
    NewStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE, "Config Directive");
    NewStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION, "Config Extension");
    NewStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER, "Config Identifier");
    NewStyle(options.ConfigStyles, wxSTC_CONF_IP, "Config IP Address");
    NewStyle(options.ConfigStyles, wxSTC_CONF_NUMBER, "Config Number");
    NewStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR, "Config Operator");
    NewStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER, "Config Parameter");
    NewStyle(options.ConfigStyles, wxSTC_CONF_STRING, "Config String");
    NewStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT, "Matching Brace");
    NewStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD, "Mismatched Brace");
    NewStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER, "Line Number Margin");
    NewStyle(options.ConfigStyles, wxSTC_STYLE_INDENTGUIDE, "Indentation Guides");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Config Caret");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Config Current Line");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Config Selection");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Config Code Fold Margin");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Config Right Margin");
    NewStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Config Highlight Matches");

    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT, "Crontab Default");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK, "Crontab Asterisk");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT, "Crontab Comment");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT, "Crontab Environment");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER, "Crontab Identifier");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD, "Crontab Keyword");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER, "Crontab Modifier");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER, "Crontab Number");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION, "Crontab Section");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING, "Crontab String");
    NewStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK, "Crontab Task");
    NewStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT, "Crontab Matching Brace");
    NewStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD, "Crontab Mismatched Brace");
    NewStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER, "Crontab Line Number Margin");
    NewStyle(options.CrontabStyles, wxSTC_STYLE_INDENTGUIDE, "Crontab Indentation Guides");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Crontab Caret");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Crontab Current Line");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Crontab Selection");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Crontab Code Fold Margin");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Crontab Right Margin");
    NewStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Crontab Highlight Matches");

    NewStyle(options.YamlStyles, wxSTC_YAML_DEFAULT, "YAML Default");
    NewStyle(options.YamlStyles, wxSTC_YAML_COMMENT, "YAML Comment");
    NewStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT, "YAML Document");
    NewStyle(options.YamlStyles, wxSTC_YAML_ERROR, "YAML Error");
    NewStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER, "YAML Identifier");
    NewStyle(options.YamlStyles, wxSTC_YAML_KEYWORD, "YAML Keyword");
    NewStyle(options.YamlStyles, wxSTC_YAML_NUMBER, "YAML Number");
    NewStyle(options.YamlStyles, wxSTC_YAML_OPERATOR, "YAML Ooerator");
    NewStyle(options.YamlStyles, wxSTC_YAML_REFERENCE, "YAML Reference");
    NewStyle(options.YamlStyles, wxSTC_YAML_TEXT, "YAML Text");
    NewStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT, "YAML Matching Brace");
    NewStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD, "YAML Mismatched Brace");
    NewStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER, "YAML Line Number Margin");
    NewStyle(options.YamlStyles, wxSTC_STYLE_INDENTGUIDE, "YAML Indentation Guides");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "YAML Caret");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "YAML Current Line");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "YAML Selection");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "YAML Code Fold Margin");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "YAML Right Margin");
    NewStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "YAML Highlight Matches");

    NewStyle(options.RubyStyles, wxSTC_RB_DEFAULT, "Ruby Default");
    NewStyle(options.RubyStyles, wxSTC_RB_BACKTICKS, "Ruby Backticks");
    NewStyle(options.RubyStyles, wxSTC_RB_CHARACTER, "Ruby Character");
    NewStyle(options.RubyStyles, wxSTC_RB_CLASSNAME, "Ruby ClassName");
    NewStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR, "Ruby Class Variable");
    NewStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE, "Ruby Single Line Comment");
    NewStyle(options.RubyStyles, wxSTC_RB_DATASECTION, "Ruby Data Section");
    NewStyle(options.RubyStyles, wxSTC_RB_DEFNAME, "Ruby Defined Name");
    NewStyle(options.RubyStyles, wxSTC_RB_ERROR, "Ruby Error");
    NewStyle(options.RubyStyles, wxSTC_RB_GLOBAL, "Ruby Global");
    NewStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM, "Ruby Heredoc Delimiter");
    NewStyle(options.RubyStyles, wxSTC_RB_HERE_Q, "Ruby Here Q");
    NewStyle(options.RubyStyles, wxSTC_RB_HERE_QQ, "Ruby Here QQ");
    NewStyle(options.RubyStyles, wxSTC_RB_HERE_QX, "Ruby Here QX");
    NewStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER, "Ruby Identifier");
    NewStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR, "Ruby Instance Variable");
    NewStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME, "Ruby Module Name");
    NewStyle(options.RubyStyles, wxSTC_RB_NUMBER, "Ruby Number");
    NewStyle(options.RubyStyles, wxSTC_RB_OPERATOR, "Ruby Operator");
    NewStyle(options.RubyStyles, wxSTC_RB_POD, "Ruby POD");
    NewStyle(options.RubyStyles, wxSTC_RB_REGEX, "Ruby Regular Expression");
    NewStyle(options.RubyStyles, wxSTC_RB_STDERR, "Ruby STD Error");
    NewStyle(options.RubyStyles, wxSTC_RB_STDIN, "Ruby STD In");
    NewStyle(options.RubyStyles, wxSTC_RB_STDOUT, "Ruby STD Out");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING, "Ruby String");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING_Q, "Ruby String Q");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING_QQ, "Ruby String QQ");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING_QR, "Ruby String QR");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING_QW, "Ruby String QW");
    NewStyle(options.RubyStyles, wxSTC_RB_STRING_QX, "Ruby String QX");
    NewStyle(options.RubyStyles, wxSTC_RB_SYMBOL, "Ruby Symbol");
    NewStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND, "Ruby Upper bound");
    NewStyle(options.RubyStyles, wxSTC_RB_WORD, "Ruby Keyword");
    NewStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED, "Ruby Keyword Demoted");
    NewStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT, "Ruby Matching Brace");
    NewStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD, "Ruby Mismatched Brace");
    NewStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER, "Ruby Line Number Margin");
    NewStyle(options.RubyStyles, wxSTC_STYLE_INDENTGUIDE, "Ruby Indentation Guides");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Ruby Caret");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Ruby Current Line");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Ruby Selection");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Ruby Code Fold Margin");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Ruby Right Margin");
    NewStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Ruby Highlight Matches");

    NewStyle(options.LuaStyles, wxSTC_LUA_DEFAULT, "Lua Default");
    NewStyle(options.LuaStyles, wxSTC_LUA_CHARACTER, "Lua Character");
    NewStyle(options.LuaStyles, wxSTC_LUA_COMMENT, "Lua Multi line Comment");
    NewStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC, "Lua Doc Comment");
    NewStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE, "Lua Single Line Comment");
    NewStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER, "Lua Identifier");
    NewStyle(options.LuaStyles, wxSTC_LUA_LABEL, "Lua Label");
    NewStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING, "Lua String Literal");
    NewStyle(options.LuaStyles, wxSTC_LUA_NUMBER, "Lua Number");
    NewStyle(options.LuaStyles, wxSTC_LUA_OPERATOR, "Lua Operator");
    NewStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR, "Lua Preprocessor");
    NewStyle(options.LuaStyles, wxSTC_LUA_STRING, "Lua String");
    NewStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL, "Lua String EOL");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD, "Lua Keywords");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD2, "Lua Keywords 2");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD3, "Lua Keywords 3");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD4, "Lua Keywords 4");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD5, "Lua Keywords 5");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD6, "Lua Keywords 6");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD7, "Lua Keywords 7");
    NewStyle(options.LuaStyles, wxSTC_LUA_WORD8, "Lua Keywords 8");
    NewStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT, "Lua Matching Brace");
    NewStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD, "Lua Mismatched Brace");
    NewStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER, "Lua Line Number Margin");
    NewStyle(options.LuaStyles, wxSTC_STYLE_INDENTGUIDE, "Lua Indentation Guides");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Lua Caret");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Lua Current Line");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Lua Selection");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Lua Code Fold Margin");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Lua Right Margin");
    NewStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Lua Highlight Matches");

    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT, "Markdown Default");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE, "Markdown Block quote");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE, "Markdown Code");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2, "Markdown Code 2");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK, "Markdown Code BK");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1, "Markdown Em1");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2, "Markdown Em2");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1, "Markdown Header 1");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2, "Markdown Header 2");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3, "Markdown Header 3");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4, "Markdown Header 4");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5, "Markdown Header 5");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6, "Markdown Header 6");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE, "Markdown HRule");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN, "Markdown Line Begin");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK, "Markdown Link");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM, "Markdown Ordered List Item");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR, "Markdown Prechar");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT, "Markdown Strikeout");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1, "Markdown Strong 1");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2, "Markdown Strong 2");
    NewStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM, "Markdown Unordered List Item");
    NewStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT, "Markdown Matching Brace");
    NewStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD, "Markdown Mismatched Brace");
    NewStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER, "Markdown Line Number Margin");
    NewStyle(options.MarkdownStyles, wxSTC_STYLE_INDENTGUIDE, "Markdown Indentation Guides");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Markdown Caret");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Markdown Current Line");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Markdown Selection");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Markdown Code Fold Margin");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Markdown Right Margin");
    NewStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Markdown Highlight Matches");

    NewStyle(options.BashStyles, wxSTC_SH_DEFAULT, "Bash Default");
    NewStyle(options.BashStyles, wxSTC_SH_BACKTICKS, "Bash Backticks");
    NewStyle(options.BashStyles, wxSTC_SH_CHARACTER, "Bash Character");
    NewStyle(options.BashStyles, wxSTC_SH_COMMENTLINE, "Bash Single line Comment");
    NewStyle(options.BashStyles, wxSTC_SH_ERROR, "Bash Error");
    NewStyle(options.BashStyles, wxSTC_SH_HERE_DELIM, "Bash Heredoc Delimiter");
    NewStyle(options.BashStyles, wxSTC_SH_IDENTIFIER, "Bash Identifier");
    NewStyle(options.BashStyles, wxSTC_SH_NUMBER, "Bash Number");
    NewStyle(options.BashStyles, wxSTC_SH_OPERATOR, "Bash Operator");
    NewStyle(options.BashStyles, wxSTC_SH_PARAM, "Bash Parameter");
    NewStyle(options.BashStyles, wxSTC_SH_SCALAR, "Bash Scalar");
    NewStyle(options.BashStyles, wxSTC_SH_STRING, "Bash String");
    NewStyle(options.BashStyles, wxSTC_SH_WORD, "Bash Keyword");
    NewStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT, "Bash Matching Brace");
    NewStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD, "Bash Mismatched Brace");
    NewStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER, "Bash Line Number Margin");
    NewStyle(options.BashStyles, wxSTC_STYLE_INDENTGUIDE, "Bash Indentation Guides");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Bash Caret");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Bash Current Line");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Bash Selection");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Bash Code Fold Margin");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Bash Right Margin");
    NewStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Bash Highlight Matches");

    NewStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT, "Diff Default");
    NewStyle(options.DiffStyles, wxSTC_DIFF_ADDED, "Diff Added");
    NewStyle(options.DiffStyles, wxSTC_DIFF_CHANGED, "Diff Changed");
    NewStyle(options.DiffStyles, wxSTC_DIFF_COMMAND, "Diff Command");
    NewStyle(options.DiffStyles, wxSTC_DIFF_COMMENT, "Diff Comment");
    NewStyle(options.DiffStyles, wxSTC_DIFF_DELETED, "Diff Deleted");
    NewStyle(options.DiffStyles, wxSTC_DIFF_HEADER, "Diff Header");
    NewStyle(options.DiffStyles, wxSTC_DIFF_POSITION, "Diff Position");
    NewStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT, "Diff Matching Brace");
    NewStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD, "Diff Mismatched Brace");
    NewStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER, "Diff Line Number Margin");
    NewStyle(options.DiffStyles, wxSTC_STYLE_INDENTGUIDE, "Diff Indentation Guides");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET, "Diff Caret");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE, "Diff Current Line");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION, "Diff Selection");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CODE_FOLDING, "Diff Code Fold Margin");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_RIGHT_MARGIN, "Diff Right Margin");
    NewStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT, "Diff Highlight Matches");

    t4p::CodeControlStylesSetTheme(options, t4p::CodeControlStylesGetThemes()[0]);
}


















// *** ALL CODE BELOW IS GENERATED AUTOMATICALLY BY resources/color_themes/color-theme-parser.cpp *** //


static void SetToOblivionThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToOblivionThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToOblivionTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#D8D8D8"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToOblivionThemePhp(options);
    SetToOblivionThemeSql(options);
    SetToOblivionThemeCss(options);
    SetToOblivionThemeJs(options);
    SetToOblivionThemeConfig(options);
    SetToOblivionThemeCrontab(options);
    SetToOblivionThemeYaml(options);
    SetToOblivionThemeRuby(options);
    SetToOblivionThemeLua(options);
    SetToOblivionThemeMarkdown(options);
    SetToOblivionThemeBash(options);
    SetToOblivionThemeDiff(options);
}

static void SetToOblivionThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#D8D8D8"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#FFC600"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#D8D8D8"));
}

static void SetToOblivionThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#FFC600"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#FFC600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToOblivionThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#C7DD0C"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToRettaThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToRettaTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#F8E1AA"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToRettaThemePhp(options);
    SetToRettaThemeSql(options);
    SetToRettaThemeCss(options);
    SetToRettaThemeJs(options);
    SetToRettaThemeConfig(options);
    SetToRettaThemeCrontab(options);
    SetToRettaThemeYaml(options);
    SetToRettaThemeRuby(options);
    SetToRettaThemeLua(options);
    SetToRettaThemeMarkdown(options);
    SetToRettaThemeBash(options);
    SetToRettaThemeDiff(options);
}

static void SetToRettaThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#F8E1AA"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#D6C248"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#F8E1AA"));
}

static void SetToRettaThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#D6C248"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#D6C248"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#E79E3C"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRettaThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#83786E"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#F8E1A3"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C97138"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8E1AA"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2A2A2A"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#527D5D"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_lightThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToSolarized_lightTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#657A81"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#657A81"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#657A81"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#657A81"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#657A81"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#657A81"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#657A81"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#657A81"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#657A81"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#657A81"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#657A81"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#657A81"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FDF6E3"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToSolarized_lightThemePhp(options);
    SetToSolarized_lightThemeSql(options);
    SetToSolarized_lightThemeCss(options);
    SetToSolarized_lightThemeJs(options);
    SetToSolarized_lightThemeConfig(options);
    SetToSolarized_lightThemeCrontab(options);
    SetToSolarized_lightThemeYaml(options);
    SetToSolarized_lightThemeRuby(options);
    SetToSolarized_lightThemeLua(options);
    SetToSolarized_lightThemeMarkdown(options);
    SetToSolarized_lightThemeBash(options);
    SetToSolarized_lightThemeDiff(options);
}

static void SetToSolarized_lightThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#93A1A1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#657A81"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#93A1A1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#2AA198"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#657A81"));
}

static void SetToSolarized_lightThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#93A1A1"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#93A1A1"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#2AA198"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_lightThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#657A81"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#FDF6E3"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#ECE7D5"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToSolarized_darkThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToSolarized_darkTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#839496"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#839496"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#839496"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#839496"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#839496"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#839496"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#839496"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#839496"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#839496"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#839496"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#839496"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#839496"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#002B36"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToSolarized_darkThemePhp(options);
    SetToSolarized_darkThemeSql(options);
    SetToSolarized_darkThemeCss(options);
    SetToSolarized_darkThemeJs(options);
    SetToSolarized_darkThemeConfig(options);
    SetToSolarized_darkThemeCrontab(options);
    SetToSolarized_darkThemeYaml(options);
    SetToSolarized_darkThemeRuby(options);
    SetToSolarized_darkThemeLua(options);
    SetToSolarized_darkThemeMarkdown(options);
    SetToSolarized_darkThemeBash(options);
    SetToSolarized_darkThemeDiff(options);
}

static void SetToSolarized_darkThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#839496"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#2AA198"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#839496"));
}

static void SetToSolarized_darkThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#2AA198"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#268BD2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#2AA198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#B58900"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSolarized_darkThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#586E75"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#657B83"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#839496"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#002B36"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#073642"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToGedit_original_oblivionThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToGedit_original_oblivionTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#d3d7cf"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#2e3436"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToGedit_original_oblivionThemePhp(options);
    SetToGedit_original_oblivionThemeSql(options);
    SetToGedit_original_oblivionThemeCss(options);
    SetToGedit_original_oblivionThemeJs(options);
    SetToGedit_original_oblivionThemeConfig(options);
    SetToGedit_original_oblivionThemeCrontab(options);
    SetToGedit_original_oblivionThemeYaml(options);
    SetToGedit_original_oblivionThemeRuby(options);
    SetToGedit_original_oblivionThemeLua(options);
    SetToGedit_original_oblivionThemeMarkdown(options);
    SetToGedit_original_oblivionThemeBash(options);
    SetToGedit_original_oblivionThemeDiff(options);
}

static void SetToGedit_original_oblivionThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#d3d7cf"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#edd400"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#d3d7cf"));
}

static void SetToGedit_original_oblivionThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#edd400"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#ce5c00"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#729fcf"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#edd400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToGedit_original_oblivionThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2e3436"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#d3d7cf"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#555753"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#888a85"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToWombatThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToWombatTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#f6f3e8"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#242424"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToWombatThemePhp(options);
    SetToWombatThemeSql(options);
    SetToWombatThemeCss(options);
    SetToWombatThemeJs(options);
    SetToWombatThemeConfig(options);
    SetToWombatThemeCrontab(options);
    SetToWombatThemeYaml(options);
    SetToWombatThemeRuby(options);
    SetToWombatThemeLua(options);
    SetToWombatThemeMarkdown(options);
    SetToWombatThemeBash(options);
    SetToWombatThemeDiff(options);
}

static void SetToWombatThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#f6f3e8"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#95e454"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#f6f3e8"));
}

static void SetToWombatThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#95e454"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#f08080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#f3f6ee"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#95e454"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#8ac6f2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToWombatThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#99968b"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#242424"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#f6f3e8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#656565"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#898941"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToBlack_pastelThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToBlack_pastelTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#C0C0C0"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToBlack_pastelThemePhp(options);
    SetToBlack_pastelThemeSql(options);
    SetToBlack_pastelThemeCss(options);
    SetToBlack_pastelThemeJs(options);
    SetToBlack_pastelThemeConfig(options);
    SetToBlack_pastelThemeCrontab(options);
    SetToBlack_pastelThemeYaml(options);
    SetToBlack_pastelThemeRuby(options);
    SetToBlack_pastelThemeLua(options);
    SetToBlack_pastelThemeMarkdown(options);
    SetToBlack_pastelThemeBash(options);
    SetToBlack_pastelThemeDiff(options);
}

static void SetToBlack_pastelThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#C0C0C0"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#c78d9b"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#C0C0C0"));
}

static void SetToBlack_pastelThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#c78d9b"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#82677E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToBlack_pastelThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToVisual_studioThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToVisual_studioTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToVisual_studioThemePhp(options);
    SetToVisual_studioThemeSql(options);
    SetToVisual_studioThemeCss(options);
    SetToVisual_studioThemeJs(options);
    SetToVisual_studioThemeConfig(options);
    SetToVisual_studioThemeCrontab(options);
    SetToVisual_studioThemeYaml(options);
    SetToVisual_studioThemeRuby(options);
    SetToVisual_studioThemeLua(options);
    SetToVisual_studioThemeMarkdown(options);
    SetToVisual_studioThemeBash(options);
    SetToVisual_studioThemeDiff(options);
}

static void SetToVisual_studioThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#FFFFFF"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#990000"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#FFFFFF"));
}

static void SetToVisual_studioThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#990000"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#990000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#3333ff"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVisual_studioThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#00cc00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#807575"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToObsidianThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToObsidianTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#293134"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToObsidianThemePhp(options);
    SetToObsidianThemeSql(options);
    SetToObsidianThemeCss(options);
    SetToObsidianThemeJs(options);
    SetToObsidianThemeConfig(options);
    SetToObsidianThemeCrontab(options);
    SetToObsidianThemeYaml(options);
    SetToObsidianThemeRuby(options);
    SetToObsidianThemeLua(options);
    SetToObsidianThemeMarkdown(options);
    SetToObsidianThemeBash(options);
    SetToObsidianThemeDiff(options);
}

static void SetToObsidianThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#E0E2E4"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#EC7600"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#E0E2E4"));
}

static void SetToObsidianThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#EC7600"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#FFCD22"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#EC7600"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#93C763"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToObsidianThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#293134"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#804000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToAs_visual_studio_2010ThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToAs_visual_studio_2010Theme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#000000"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#000000"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#000000"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#000000"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#000000"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#000000"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#000000"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#000000"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#000000"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#000000"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#000000"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToAs_visual_studio_2010ThemePhp(options);
    SetToAs_visual_studio_2010ThemeSql(options);
    SetToAs_visual_studio_2010ThemeCss(options);
    SetToAs_visual_studio_2010ThemeJs(options);
    SetToAs_visual_studio_2010ThemeConfig(options);
    SetToAs_visual_studio_2010ThemeCrontab(options);
    SetToAs_visual_studio_2010ThemeYaml(options);
    SetToAs_visual_studio_2010ThemeRuby(options);
    SetToAs_visual_studio_2010ThemeLua(options);
    SetToAs_visual_studio_2010ThemeMarkdown(options);
    SetToAs_visual_studio_2010ThemeBash(options);
    SetToAs_visual_studio_2010ThemeDiff(options);
}

static void SetToAs_visual_studio_2010ThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#000000"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#A31515"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#000000"));
}

static void SetToAs_visual_studio_2010ThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#A31515"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#A31515"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToAs_visual_studio_2010ThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#3399FF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToHavenjarkThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToHavenjarkTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#C0B6A8"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#2D3639"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToHavenjarkThemePhp(options);
    SetToHavenjarkThemeSql(options);
    SetToHavenjarkThemeCss(options);
    SetToHavenjarkThemeJs(options);
    SetToHavenjarkThemeConfig(options);
    SetToHavenjarkThemeCrontab(options);
    SetToHavenjarkThemeYaml(options);
    SetToHavenjarkThemeRuby(options);
    SetToHavenjarkThemeLua(options);
    SetToHavenjarkThemeMarkdown(options);
    SetToHavenjarkThemeBash(options);
    SetToHavenjarkThemeDiff(options);
}

static void SetToHavenjarkThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#C0B6A8"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#CC9393"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#C0B6A8"));
}

static void SetToHavenjarkThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#CC9393"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#B9A185"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#A19A83"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#A38474"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToHavenjarkThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#AEAEAE"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#2D3639"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#C0B6A8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#00001F"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#2A4750"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToTangoThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToTangoTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#000000"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#000000"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#000000"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#000000"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#000000"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#000000"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#000000"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#000000"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#000000"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#000000"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#000000"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToTangoThemePhp(options);
    SetToTangoThemeSql(options);
    SetToTangoThemeCss(options);
    SetToTangoThemeJs(options);
    SetToTangoThemeConfig(options);
    SetToTangoThemeCrontab(options);
    SetToTangoThemeYaml(options);
    SetToTangoThemeRuby(options);
    SetToTangoThemeLua(options);
    SetToTangoThemeMarkdown(options);
    SetToTangoThemeBash(options);
    SetToTangoThemeDiff(options);
}

static void SetToTangoThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#000000"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#92679a"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#000000"));
}

static void SetToTangoThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#92679a"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#801f91"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#92679a"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#688046"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToTangoThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#17608f"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885d3b"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToSchussThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToSchussTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#430400"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#430400"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#430400"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#430400"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#430400"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#430400"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#430400"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#430400"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#430400"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#430400"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#430400"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#430400"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToSchussThemePhp(options);
    SetToSchussThemeSql(options);
    SetToSchussThemeCss(options);
    SetToSchussThemeJs(options);
    SetToSchussThemeConfig(options);
    SetToSchussThemeCrontab(options);
    SetToSchussThemeYaml(options);
    SetToSchussThemeRuby(options);
    SetToSchussThemeLua(options);
    SetToSchussThemeMarkdown(options);
    SetToSchussThemeBash(options);
    SetToSchussThemeDiff(options);
}

static void SetToSchussThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#d7d3cc"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#430400"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#d7d3cc"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#585545"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#430400"));
}

static void SetToSchussThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#d7d3cc"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#d7d3cc"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#585545"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#d0321f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#5f97a9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#2b6488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#585545"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#606060"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSchussThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#d5d9e5"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#464646"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#430400"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#fff7cd"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#f4fdff"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToNotepad_defaultThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToNotepad_defaultTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#000000"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#000000"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#000000"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#000000"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#000000"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#000000"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#000000"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#000000"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#000000"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#000000"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#000000"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FEFCF5"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToNotepad_defaultThemePhp(options);
    SetToNotepad_defaultThemeSql(options);
    SetToNotepad_defaultThemeCss(options);
    SetToNotepad_defaultThemeJs(options);
    SetToNotepad_defaultThemeConfig(options);
    SetToNotepad_defaultThemeCrontab(options);
    SetToNotepad_defaultThemeYaml(options);
    SetToNotepad_defaultThemeRuby(options);
    SetToNotepad_defaultThemeLua(options);
    SetToNotepad_defaultThemeMarkdown(options);
    SetToNotepad_defaultThemeBash(options);
    SetToNotepad_defaultThemeDiff(options);
}

static void SetToNotepad_defaultThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#000000"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#808080"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#000000"));
}

static void SetToNotepad_defaultThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#808080"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#FF8000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#8000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#000080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNotepad_defaultThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#008000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#800040"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#808080"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FEFCF5"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#EEEEEE"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToVibrant_inkThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToVibrant_inkTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#191919"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToVibrant_inkThemePhp(options);
    SetToVibrant_inkThemeSql(options);
    SetToVibrant_inkThemeCss(options);
    SetToVibrant_inkThemeJs(options);
    SetToVibrant_inkThemeConfig(options);
    SetToVibrant_inkThemeCrontab(options);
    SetToVibrant_inkThemeYaml(options);
    SetToVibrant_inkThemeRuby(options);
    SetToVibrant_inkThemeLua(options);
    SetToVibrant_inkThemeMarkdown(options);
    SetToVibrant_inkThemeBash(options);
    SetToVibrant_inkThemeDiff(options);
}

static void SetToVibrant_inkThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#8146A2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#FFFFFF"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#8146A2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#477488"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#FFFFFF"));
}

static void SetToVibrant_inkThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#8146A2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#8146A2"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#477488"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#3C758D"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#477488"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#EC691E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToVibrant_inkThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#8C3FC8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#191919"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#414C3B"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToRecogneyesThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToRecogneyesTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#D0D0D0"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#101020"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToRecogneyesThemePhp(options);
    SetToRecogneyesThemeSql(options);
    SetToRecogneyesThemeCss(options);
    SetToRecogneyesThemeJs(options);
    SetToRecogneyesThemeConfig(options);
    SetToRecogneyesThemeCrontab(options);
    SetToRecogneyesThemeYaml(options);
    SetToRecogneyesThemeRuby(options);
    SetToRecogneyesThemeLua(options);
    SetToRecogneyesThemeMarkdown(options);
    SetToRecogneyesThemeBash(options);
    SetToRecogneyesThemeDiff(options);
}

static void SetToRecogneyesThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#D0D0D0"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#DC78DC"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#D0D0D0"));
}

static void SetToRecogneyesThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#DC78DC"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#FFFF00"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#DC78DC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#00D0D0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRecogneyesThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#00E000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#101020"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#D0D0D0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#202030"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToMrThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToMrTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#333333"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#333333"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#333333"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#333333"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#333333"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#333333"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#333333"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#333333"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#333333"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#333333"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#333333"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#333333"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToMrThemePhp(options);
    SetToMrThemeSql(options);
    SetToMrThemeCss(options);
    SetToMrThemeJs(options);
    SetToMrThemeConfig(options);
    SetToMrThemeCrontab(options);
    SetToMrThemeYaml(options);
    SetToMrThemeRuby(options);
    SetToMrThemeLua(options);
    SetToMrThemeMarkdown(options);
    SetToMrThemeBash(options);
    SetToMrThemeDiff(options);
}

static void SetToMrThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#333333"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#CC0000"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#333333"));
}

static void SetToMrThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#CC0000"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#0066FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#CC0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMrThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#FF9900"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#552200"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToSunburstThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToSunburstTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#F9F9F9"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToSunburstThemePhp(options);
    SetToSunburstThemeSql(options);
    SetToSunburstThemeCss(options);
    SetToSunburstThemeJs(options);
    SetToSunburstThemeConfig(options);
    SetToSunburstThemeCrontab(options);
    SetToSunburstThemeYaml(options);
    SetToSunburstThemeRuby(options);
    SetToSunburstThemeLua(options);
    SetToSunburstThemeMarkdown(options);
    SetToSunburstThemeBash(options);
    SetToSunburstThemeDiff(options);
}

static void SetToSunburstThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#F9F9F9"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#76BA53"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#F9F9F9"));
}

static void SetToSunburstThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#76BA53"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#76BA53"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#EA9C77"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSunburstThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#A8A8A8"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#4B9CE9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F9F9F9"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F2F2F"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#DDF0FF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToInkpotThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToInkpotTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#1F1F27"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToInkpotThemePhp(options);
    SetToInkpotThemeSql(options);
    SetToInkpotThemeCss(options);
    SetToInkpotThemeJs(options);
    SetToInkpotThemeConfig(options);
    SetToInkpotThemeCrontab(options);
    SetToInkpotThemeYaml(options);
    SetToInkpotThemeRuby(options);
    SetToInkpotThemeLua(options);
    SetToInkpotThemeMarkdown(options);
    SetToInkpotThemeBash(options);
    SetToInkpotThemeDiff(options);
}

static void SetToInkpotThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#CFBFAD"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#FFCD8B"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#CFBFAD"));
}

static void SetToInkpotThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#FFCD8B"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#FFCD8B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#808BED"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToInkpotThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#CD8B00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#2B91AF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F27"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2D2D44"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#8B8BFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToMinimalThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToMinimalTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#000000"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#000000"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#000000"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#000000"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#000000"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#000000"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#000000"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#000000"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#000000"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#000000"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#000000"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#ffffff"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToMinimalThemePhp(options);
    SetToMinimalThemeSql(options);
    SetToMinimalThemeCss(options);
    SetToMinimalThemeJs(options);
    SetToMinimalThemeConfig(options);
    SetToMinimalThemeCrontab(options);
    SetToMinimalThemeYaml(options);
    SetToMinimalThemeRuby(options);
    SetToMinimalThemeLua(options);
    SetToMinimalThemeMarkdown(options);
    SetToMinimalThemeBash(options);
    SetToMinimalThemeDiff(options);
}

static void SetToMinimalThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#000000"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#333333"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#000000"));
}

static void SetToMinimalThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#333333"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#5c8198"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMinimalThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#334466"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#05314d"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#ffffff"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#aaccff"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToNightlion_aptana_themeThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToNightlion_aptana_themeTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#E2E2E2"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#1E1E1E"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToNightlion_aptana_themeThemePhp(options);
    SetToNightlion_aptana_themeThemeSql(options);
    SetToNightlion_aptana_themeThemeCss(options);
    SetToNightlion_aptana_themeThemeJs(options);
    SetToNightlion_aptana_themeThemeConfig(options);
    SetToNightlion_aptana_themeThemeCrontab(options);
    SetToNightlion_aptana_themeThemeYaml(options);
    SetToNightlion_aptana_themeThemeRuby(options);
    SetToNightlion_aptana_themeThemeLua(options);
    SetToNightlion_aptana_themeThemeMarkdown(options);
    SetToNightlion_aptana_themeThemeBash(options);
    SetToNightlion_aptana_themeThemeDiff(options);
}

static void SetToNightlion_aptana_themeThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#E2E2E2"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#CC9393"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#E2E2E2"));
}

static void SetToNightlion_aptana_themeThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#CC9393"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#EAB882"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#8DCBE2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToNightlion_aptana_themeThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#73879B"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#C0C0C0"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1E1E1E"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E2E2E2"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#364656"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToMonokaiThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToMonokaiTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#F8F8F2"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToMonokaiThemePhp(options);
    SetToMonokaiThemeSql(options);
    SetToMonokaiThemeCss(options);
    SetToMonokaiThemeJs(options);
    SetToMonokaiThemeConfig(options);
    SetToMonokaiThemeCrontab(options);
    SetToMonokaiThemeYaml(options);
    SetToMonokaiThemeRuby(options);
    SetToMonokaiThemeLua(options);
    SetToMonokaiThemeMarkdown(options);
    SetToMonokaiThemeBash(options);
    SetToMonokaiThemeDiff(options);
}

static void SetToMonokaiThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#75715E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#F8F8F2"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#75715E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#E6DB74"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#F8F8F2"));
}

static void SetToMonokaiThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#75715E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#75715E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#E6DB74"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#7FB347"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#D8D8D8"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#79ABFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#E6DB74"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#66CCB3"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToMonokaiThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#75715e"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#EFC090"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#F8F8F2"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#3E3D32"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#757575"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToSublime_text_2ThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToSublime_text_2Theme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#CFBFAD"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#272822"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToSublime_text_2ThemePhp(options);
    SetToSublime_text_2ThemeSql(options);
    SetToSublime_text_2ThemeCss(options);
    SetToSublime_text_2ThemeJs(options);
    SetToSublime_text_2ThemeConfig(options);
    SetToSublime_text_2ThemeCrontab(options);
    SetToSublime_text_2ThemeYaml(options);
    SetToSublime_text_2ThemeRuby(options);
    SetToSublime_text_2ThemeLua(options);
    SetToSublime_text_2ThemeMarkdown(options);
    SetToSublime_text_2ThemeBash(options);
    SetToSublime_text_2ThemeDiff(options);
}

static void SetToSublime_text_2ThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#CFBFAD"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#ECE47E"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#CFBFAD"));
}

static void SetToSublime_text_2ThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#ECE47E"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#C48CFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#ECE47E"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#FF007F"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToSublime_text_2ThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#272822"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#CFBFAD"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#5B5A4E"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#CC9900"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToPastelThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToPastelTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#E0E2E4"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#1f2223"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToPastelThemePhp(options);
    SetToPastelThemeSql(options);
    SetToPastelThemeCss(options);
    SetToPastelThemeJs(options);
    SetToPastelThemeConfig(options);
    SetToPastelThemeCrontab(options);
    SetToPastelThemeYaml(options);
    SetToPastelThemeRuby(options);
    SetToPastelThemeLua(options);
    SetToPastelThemeMarkdown(options);
    SetToPastelThemeBash(options);
    SetToPastelThemeDiff(options);
}

static void SetToPastelThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#E0E2E4"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#c78d9b"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#E0E2E4"));
}

static void SetToPastelThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#c78d9b"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#E8E2B7"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#c78d9b"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#a57b61"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToPastelThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#7D8C93"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#678CB1"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#81969A"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1f2223"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#E0E2E4"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#2F393C"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#95bed8"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToZenburn_highcontrastThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToZenburn_highcontrastTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#DCDCCC"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#1F1F1F"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToZenburn_highcontrastThemePhp(options);
    SetToZenburn_highcontrastThemeSql(options);
    SetToZenburn_highcontrastThemeCss(options);
    SetToZenburn_highcontrastThemeJs(options);
    SetToZenburn_highcontrastThemeConfig(options);
    SetToZenburn_highcontrastThemeCrontab(options);
    SetToZenburn_highcontrastThemeYaml(options);
    SetToZenburn_highcontrastThemeRuby(options);
    SetToZenburn_highcontrastThemeLua(options);
    SetToZenburn_highcontrastThemeMarkdown(options);
    SetToZenburn_highcontrastThemeBash(options);
    SetToZenburn_highcontrastThemeDiff(options);
}

static void SetToZenburn_highcontrastThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#DCDCCC"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#CC9393"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#DCDCCC"));
}

static void SetToZenburn_highcontrastThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#CC9393"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#8CD0D3"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#F0EFD0"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#D4C4A9"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#CC9393"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#F0DFAF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToZenburn_highcontrastThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#7F9F7F"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#93A2CC"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#9FAFAF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#1F1F1F"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#DCDCCC"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#505050"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#71D3B4"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToFrontenddevThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToFrontenddevTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#FFFFFF"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#000000"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToFrontenddevThemePhp(options);
    SetToFrontenddevThemeSql(options);
    SetToFrontenddevThemeCss(options);
    SetToFrontenddevThemeJs(options);
    SetToFrontenddevThemeConfig(options);
    SetToFrontenddevThemeCrontab(options);
    SetToFrontenddevThemeYaml(options);
    SetToFrontenddevThemeRuby(options);
    SetToFrontenddevThemeLua(options);
    SetToFrontenddevThemeMarkdown(options);
    SetToFrontenddevThemeBash(options);
    SetToFrontenddevThemeDiff(options);
}

static void SetToFrontenddevThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#FFFFFF"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#00a40f"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#FFFFFF"));
}

static void SetToFrontenddevThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#00a40f"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#F7C527"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#00a40f"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToFrontenddevThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#666666"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#999999"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#FFFFFF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#222220"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#333333"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemePhp(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeSql(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeCss(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeJs(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeConfig(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeCrontab(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeYaml(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeRuby(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeLua(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeMarkdown(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeBash(t4p::CodeControlOptionsClass& options);
static void SetToRoboticketThemeDiff(t4p::CodeControlOptionsClass& options);

static void SetToRoboticketTheme(t4p::CodeControlOptionsClass& options) {
    wxPlatformInfo platform;
    wxString fontName;
    int os = platform.GetOperatingSystemId();
    int fontSize = 10;

    // ATTN: different OSs have different fonts
    if (os == wxOS_WINDOWS_NT) {
        fontName = wxT("Courier New");
        fontSize = 10;
    } else if (os == wxOS_UNIX_LINUX) {
        // default font: some websites say Monospace is a good programming font
        fontName = wxT("Monospace");
        fontSize = 10;
    } else if (os == wxOS_MAC_OSX_DARWIN) {
        fontName = wxT("Monaco");
        fontSize = 12;
    }
    wxFont font(wxFontInfo(fontSize).AntiAliased(true).FaceName(fontName));

    for (size_t i = 0; i < options.PhpStyles.size(); ++i) {
        options.PhpStyles[i].Font = font;
        options.PhpStyles[i].Color = wxColour(wxT("#585858"));
        options.PhpStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.PhpStyles[i].IsBold = false;
        options.PhpStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.SqlStyles.size(); ++i) {
        options.SqlStyles[i].Font = font;
        options.SqlStyles[i].Color = wxColour(wxT("#585858"));
        options.SqlStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.SqlStyles[i].IsBold = false;
        options.SqlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CssStyles.size(); ++i) {
        options.CssStyles[i].Font = font;
        options.CssStyles[i].Color = wxColour(wxT("#585858"));
        options.CssStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.CssStyles[i].IsBold = false;
        options.CssStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.JsStyles.size(); ++i) {
        options.JsStyles[i].Font = font;
        options.JsStyles[i].Color = wxColour(wxT("#585858"));
        options.JsStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.JsStyles[i].IsBold = false;
        options.JsStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.ConfigStyles.size(); ++i) {
        options.ConfigStyles[i].Font = font;
        options.ConfigStyles[i].Color = wxColour(wxT("#585858"));
        options.ConfigStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.ConfigStyles[i].IsBold = false;
        options.ConfigStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.CrontabStyles.size(); ++i) {
        options.CrontabStyles[i].Font = font;
        options.CrontabStyles[i].Color = wxColour(wxT("#585858"));
        options.CrontabStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.CrontabStyles[i].IsBold = false;
        options.CrontabStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.YamlStyles.size(); ++i) {
        options.YamlStyles[i].Font = font;
        options.YamlStyles[i].Color = wxColour(wxT("#585858"));
        options.YamlStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.YamlStyles[i].IsBold = false;
        options.YamlStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.RubyStyles.size(); ++i) {
        options.RubyStyles[i].Font = font;
        options.RubyStyles[i].Color = wxColour(wxT("#585858"));
        options.RubyStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.RubyStyles[i].IsBold = false;
        options.RubyStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.LuaStyles.size(); ++i) {
        options.LuaStyles[i].Font = font;
        options.LuaStyles[i].Color = wxColour(wxT("#585858"));
        options.LuaStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.LuaStyles[i].IsBold = false;
        options.LuaStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.MarkdownStyles.size(); ++i) {
        options.MarkdownStyles[i].Font = font;
        options.MarkdownStyles[i].Color = wxColour(wxT("#585858"));
        options.MarkdownStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.MarkdownStyles[i].IsBold = false;
        options.MarkdownStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.BashStyles.size(); ++i) {
        options.BashStyles[i].Font = font;
        options.BashStyles[i].Color = wxColour(wxT("#585858"));
        options.BashStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.BashStyles[i].IsBold = false;
        options.BashStyles[i].IsItalic = false;
    }

    for (size_t i = 0; i < options.DiffStyles.size(); ++i) {
        options.DiffStyles[i].Font = font;
        options.DiffStyles[i].Color = wxColour(wxT("#585858"));
        options.DiffStyles[i].BackgroundColor = wxColour(wxT("#F5F5F5"));
        options.DiffStyles[i].IsBold = false;
        options.DiffStyles[i].IsItalic = false;
    }


    SetToRoboticketThemePhp(options);
    SetToRoboticketThemeSql(options);
    SetToRoboticketThemeCss(options);
    SetToRoboticketThemeJs(options);
    SetToRoboticketThemeConfig(options);
    SetToRoboticketThemeCrontab(options);
    SetToRoboticketThemeYaml(options);
    SetToRoboticketThemeRuby(options);
    SetToRoboticketThemeLua(options);
    SetToRoboticketThemeMarkdown(options);
    SetToRoboticketThemeBash(options);
    SetToRoboticketThemeDiff(options);
}

static void SetToRoboticketThemePhp(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_SIMPLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_VARIABLE).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMPLEX_VARIABLE).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_HSTRING_VARIABLE).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HPHP_OPERATOR).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.PhpStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));

    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAG).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_ATTRIBUTE).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_DOUBLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SINGLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_QUESTION).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_TAGEND).Color = wxColour(wxT("#585858"));

    // javascript embedded inside HTML
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_START).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_COMMENTDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_KEYWORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_WORD).IsBold = true;
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_DOUBLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SINGLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_SYMBOLS).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_REGEX).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_HJ_STRINGEOL).Color = wxColour(wxT("#317ECC"));

    // extra HTML / XML styles for the HTML lexer
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_1ST_PARAM_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_BLOCK_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMAND).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_DOUBLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ENTITY).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_ERROR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SIMPLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_SGML_SPECIAL).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XCCOMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLEND).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.PhpStyles, wxSTC_H_XMLSTART).Color = wxColour(wxT("#585858"));
}

static void SetToRoboticketThemeJs(t4p::CodeControlOptionsClass& options) {
    // javascript (in its own file) scintilla c lexer is used of c,c++, java, and javascript
    options.FindByStcStyle(options.JsStyles, wxSTC_C_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_C_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_CHARACTER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_STRINGEOL).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_REGEX).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_COMMENTLINEDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.JsStyles, wxSTC_C_WORD2).IsBold = true;
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.JsStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.JsStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeSql(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD).IsBold = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_STRING).Color = wxColour(wxT("#317ECC"));;
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_CHARACTER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_COMMENTLINEDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_SQL_WORD2).IsItalic = true;
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.SqlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.SqlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeCss(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ATTRIBUTE).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_CLASS).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DIRECTIVE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_DOUBLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_ID).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IDENTIFIER2).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_IMPORTANT).IsBold = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_PSEUDOCLASS).IsItalic = true;
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_SINGLESTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_IDENTIFIER).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_CSS_UNKNOWN_PSEUDOCLASS).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.CssStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.CssStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeConfig(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_DIRECTIVE).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_EXTENSION).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_IP).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_PARAMETER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_CONF_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.ConfigStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.ConfigStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeCrontab(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ASTERISK).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_ENVIRONMENT).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_KEYWORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_MODIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_SECTION).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_NNCRONTAB_TASK).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.CrontabStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.CrontabStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeYaml(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_DOCUMENT).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_ERROR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_KEYWORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_REFERENCE).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_YAML_TEXT).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.YamlStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.YamlStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeRuby(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_BACKTICKS).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CHARACTER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASSNAME).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_CLASS_VAR).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DATASECTION).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_DEFNAME).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_ERROR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_GLOBAL).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_DELIM).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_Q).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QQ).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_HERE_QX).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_INSTANCE_VAR).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_MODULE_NAME).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_POD).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_REGEX).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDERR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDIN).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STDOUT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_Q).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QQ).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QR).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QW).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_STRING_QX).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_SYMBOL).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_UPPER_BOUND).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_RB_WORD_DEMOTED).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.RubyStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.RubyStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeLua(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_CHARACTER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTDOC).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LABEL).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_LITERALSTRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_PREPROCESSOR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_STRINGEOL).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD2).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD3).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD4).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD5).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD6).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD7).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_LUA_WORD8).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.LuaStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.LuaStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeMarkdown(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_BLOCKQUOTE).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODE2).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_CODEBK).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM1).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_EM2).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER1).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER2).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER3).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER4).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER5).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HEADER6).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_HRULE).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINE_BEGIN).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_LINK).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_OLIST_ITEM).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_PRECHAR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRIKEOUT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG1).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_STRONG2).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_MARKDOWN_ULIST_ITEM).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.MarkdownStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.MarkdownStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeBash(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_BACKTICKS).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_CHARACTER).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_COMMENTLINE).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_ERROR).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_HERE_DELIM).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_IDENTIFIER).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_NUMBER).Color = wxColour(wxT("#AF0F91"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_OPERATOR).Color = wxColour(wxT("#000000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_PARAM).Color = wxColour(wxT("#55aa55"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_SCALAR).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_STRING).Color = wxColour(wxT("#317ECC"));
    options.FindByStcStyle(options.BashStyles, wxSTC_SH_WORD).Color = wxColour(wxT("#295F94"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.BashStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.BashStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

static void SetToRoboticketThemeDiff(t4p::CodeControlOptionsClass& options) {
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DEFAULT).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_ADDED).Color = wxColour(wxT("#0000FF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_CHANGED).Color = wxColour(wxT("#00FF00"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMAND).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_COMMENT).Color = wxColour(wxT("#AD95AF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_DELETED).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_HEADER).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_DIFF_POSITION).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACELIGHT).Color = wxColour(wxT("#885D3B"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_BRACEBAD).Color = wxColour(wxT("#FF0000"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.DiffStyles, wxSTC_STYLE_LINENUMBER).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).Color = wxColour(wxT("#AFBFCF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET).BackgroundColor = wxColour(wxT("#F5F5F5"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).Color = wxColour(wxT("#585858"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_CARET_LINE).BackgroundColor = wxColour(wxT("#E0E0FF"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_SELECTION).BackgroundColor = wxColour(wxT("#BDD8F2"));
    options.FindByStcStyle(options.DiffStyles, t4p::CodeControlOptionsClass::T4P_STYLE_MATCH_HIGHLIGHT).Color = wxColour(wxT("#FFFF00"));
}

void t4p::CodeControlStylesSetTheme(t4p::CodeControlOptionsClass& options, const wxString& theme) {
    if (theme == wxT("Oblivion")) {
        SetToOblivionTheme(options);
    } else if (theme == wxT("Retta")) {
        SetToRettaTheme(options);
    } else if (theme == wxT("Solarized light")) {
        SetToSolarized_lightTheme(options);
    } else if (theme == wxT("Solarized dark.")) {
        SetToSolarized_darkTheme(options);
    } else if (theme == wxT("Gedit original oblivion")) {
        SetToGedit_original_oblivionTheme(options);
    } else if (theme == wxT("Wombat")) {
        SetToWombatTheme(options);
    } else if (theme == wxT("Black pastel")) {
        SetToBlack_pastelTheme(options);
    } else if (theme == wxT("Visual studio")) {
        SetToVisual_studioTheme(options);
    } else if (theme == wxT("Obsidian")) {
        SetToObsidianTheme(options);
    } else if (theme == wxT("As visual studio 2010")) {
        SetToAs_visual_studio_2010Theme(options);
    } else if (theme == wxT("Havenjark")) {
        SetToHavenjarkTheme(options);
    } else if (theme == wxT("Tango")) {
        SetToTangoTheme(options);
    } else if (theme == wxT("Schuss")) {
        SetToSchussTheme(options);
    } else if (theme == wxT("Notepad++ default")) {
        SetToNotepad_defaultTheme(options);
    } else if (theme == wxT("Vibrant ink")) {
        SetToVibrant_inkTheme(options);
    } else if (theme == wxT("Recogneyes")) {
        SetToRecogneyesTheme(options);
    } else if (theme == wxT("Mr")) {
        SetToMrTheme(options);
    } else if (theme == wxT("Sunburst")) {
        SetToSunburstTheme(options);
    } else if (theme == wxT("Inkpot")) {
        SetToInkpotTheme(options);
    } else if (theme == wxT("Minimal")) {
        SetToMinimalTheme(options);
    } else if (theme == wxT("Nightlion aptana theme")) {
        SetToNightlion_aptana_themeTheme(options);
    } else if (theme == wxT("Monokai")) {
        SetToMonokaiTheme(options);
    } else if (theme == wxT("Sublime text 2")) {
        SetToSublime_text_2Theme(options);
    } else if (theme == wxT("Pastel")) {
        SetToPastelTheme(options);
    } else if (theme == wxT("Zenburn high-contrast")) {
        SetToZenburn_highcontrastTheme(options);
    } else if (theme == wxT("Frontenddev")) {
        SetToFrontenddevTheme(options);
    } else if (theme == wxT("Roboticket")) {
        SetToRoboticketTheme(options);
    }
}
wxArrayString t4p::CodeControlStylesGetThemes() {
    wxArrayString themes;
    themes.Add(wxT("Oblivion"));
    themes.Add(wxT("Retta"));
    themes.Add(wxT("Solarized light"));
    themes.Add(wxT("Solarized dark."));
    themes.Add(wxT("Gedit original oblivion"));
    themes.Add(wxT("Wombat"));
    themes.Add(wxT("Black pastel"));
    themes.Add(wxT("Visual studio"));
    themes.Add(wxT("Obsidian"));
    themes.Add(wxT("As visual studio 2010"));
    themes.Add(wxT("Havenjark"));
    themes.Add(wxT("Tango"));
    themes.Add(wxT("Schuss"));
    themes.Add(wxT("Notepad++ default"));
    themes.Add(wxT("Vibrant ink"));
    themes.Add(wxT("Recogneyes"));
    themes.Add(wxT("Mr"));
    themes.Add(wxT("Sunburst"));
    themes.Add(wxT("Inkpot"));
    themes.Add(wxT("Minimal"));
    themes.Add(wxT("Nightlion aptana theme"));
    themes.Add(wxT("Monokai"));
    themes.Add(wxT("Sublime text 2"));
    themes.Add(wxT("Pastel"));
    themes.Add(wxT("Zenburn high-contrast"));
    themes.Add(wxT("Frontenddev"));
    themes.Add(wxT("Roboticket"));
    return themes;
}
